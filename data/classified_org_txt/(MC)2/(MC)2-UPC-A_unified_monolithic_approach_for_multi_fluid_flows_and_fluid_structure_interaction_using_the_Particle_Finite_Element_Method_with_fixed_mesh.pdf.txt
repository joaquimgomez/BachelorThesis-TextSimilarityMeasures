











































Noname manuscript No.
(will be inserted by the editor)

A monolithic unified approach for FSI and multi-fluid flow
problems using the Particle Finite Element Method with fixed
mesh

P. Becker1, S.R Idelsohn1,2, E. Oñate1,3

Received: date / Accepted: date

Abstract This paper describes a strategy to solve mul-

tifluid and Fluid Structure Interaction (FSI) problems

using Lagrangian particles combined with a fixed Finite

Element (FE) mesh . The method is an extension from

the fluid-only PFEM-2 [14][15], which uses explicit inte-

gration over the streamlines to improve accuracy. As a

result, the convective term does not appear in the set of

equations solved in the fixed mesh. Enrichments in the

pressure and field are used to improve the description

of the interface between phases.

Keywords Multifluids · FSI · Fixed mesh · Lagrangian
particles · Unified approach

1 Introduction

The simulation of Fluid Structure Interaction (FSI) prob-

lems is an area of growing interest due to the several

application fields in which it is required. Nowadays all

structures, from buildings to airplanes and boats are

optimized to minimize costs, leading to a more flexible

behaviour in air or water. Furthermore, new areas are

always being explored, being biomedical research a fast

growing and stimulating field.

Correspondence to: Pablo Becker
CIMNE, Edificio C1, Campus Nord UPC,
Carrer Gran Capità s/n, 08034, Barcelona, Spain
Tel.: +34 934 016 038
Fax: +34 934 016 517
E-mail: pbecker@cimne.upc.edu

1Centre Internacional de Mètodes Numèrics en En-
ginyieria (CIMNE)
2Institució Catalana de Recerca i Estudis Avanats (ICREA)
3Departament de Resistència de Materials i Estructures a
l’Engenyeria (RMEE), Universitat Politècnica de Catalunya
(UPC)

Leaving aside one-way FSI methods, the staggered

or weakly coupled algorithm is the most common ap-

proach to treat FSI problems. This method consists on

computing separately the fluid and the solid domain,

without ensuring force balance at each time step. The

popularity of this method lies in its speed and possibil-

ity to use specialized solvers for the structure and fluid,

a desired property since both subdomains are generally

treated in different frameworks. While for the structural

solver most algorithms employ a Lagrangian reference

framework, for the fluid either Eulerian or Arbitrary

Lagrangian Eulerian (ALE) frameworks are normally

used.

On the other hand, in strongly coupled algorithms

the solution is considered converged only when force

balance is achieved at the interfaces. To couple the

fluid and structural subdomains, the so called mono-

lithic and partitioned strategies have been developed.

While the first one consists on assembling and solving

all the equations in a single system, the partitioned al-

gorithm splits the fluid and solid domain, relying on an

iterative process to achieve convergence.

In [16] a strongly coupled monolithic strategy is

proposed to treat simultaneously the fluid and solids

within the same framework. Using a Lagrangian ap-

proach, it was possible to write the momentum equa-

tions for both solids and fluids together and seamlessly

with only minor differences due to the stress memory of

solids. This allowed to solve al the equations within a

unified computational frame, highly improving the ac-

curacy. On the other hand, to deal with the large defor-

mations experimented by the fluid phase, a remeshing

algorithm was implemented. This allowed to avoid dis-

torted meshes, but with the extra computational cost

associated to the Delaunay triangulation meshing stage.



2 P. Becker1, S.R Idelsohn1,2, E. Oñate1,3

Following the same line, in this work we propose

a new method which uses the same discretization and

solving technique for all the phases present in the do-

main. This strategy is an extension of the Particle Fi-

nite Element Method-second generation (PFEM-2) de-

veloped for multifluids in [15]. The PFEM-2 is based on

the use of Lagrangian particles with no connectivities

to convect all the material properties combined with a

fixed mesh, leading to a Lagrangian formulation with-

out the need of deforming the spatial mesh nor remesh-

ing.

Since all the material points of the domain are rep-

resented using lagrangian particles, it is possible to con-

vect an unlimited number of variables at almost no cost.

Furthermore, the convection stage is greatly improved

by following the streamlines of the velocity in an explicit

way, therefore improving accuracy over first order ex-

plicit methods but keeping the computational costs low.

Once the particles have been convected, the variables

are projected into the mesh, boundaries are identified

where material properties change and the lagrangian

system is solved in the fixed mesh. Furthermore, by im-

proving the definition of the interface using enrichment

shape functions, the physics of the problems are ex-

actly simulated despite that the mesh does not match

the interfaces.

This paper is structured as follows. First, the mono-

lithic strategy of the PFEM-2 is described, in the next

sections the strategy for the treatment of the FSI prob-

lem is described and finally validation examples are pre-

sented.

2 Monolithic strategy for multi-fluids and FSI

2.1 Mixed Framework: The PFEM-2

A starting point to reduce the complexity of the prob-

lem is selecting the right reference framework. An ap-

propriate choice leads to the simplification of complex

terms and higher accuracy in the results due to bet-

ter approximations. Following this line, the Lagrangian

framework offers important advantages due to the sim-

plicity of the equations. However, since material points

move and the configuration changes continuously in

time, it is necessary to couple this set of equations with

a strategy that solves for the movement of the material

points.

The current model is based on a mixed Eulerian-

Lagrangian framework, combining advantages of both

methods. This is achieved by using a set of particles

combined with a fixed FEM mesh in a solving strat-

egy known as PFEM-2 [14]. The method is obtained by

writing, for a given particle p, the following definition

for the position and velocity in a given timestep n+ 1,

where V is the velocity and a is the acceleration.

xn+1p = x
n
p +

∫ n+1
n

Vtdt (1a)

Vn+1p = V
n
p +

∫ n+1
n

atdt (1b)

By using an explicit strategy in (1a), the convec-

tive term is completely uncoupled from the momen-

tum equations and Lagrangian equations are obtained.

The main advantage of using the Lagrangian particles

is that the convection is obtained by simply moving the

particles across the space and therefore the system to

be solved does not include the convective term. This

set of equations is calculated on the mesh, although it

is possible to include partial contribution from the par-

ticles to improve the accuracy [14]. Then the complete

scheme required to solve a step becomes:

Particle
Stage
Convect particles

→ Project
info

→
Mesh
Stage
Solve eqs

→ Update
particles

The particles used in the scheme do not represent a

fixed amount of mass, but rather material points with

certain properties and velocity. This allows for different

amount of particles to be used depending on the zone

to ensure a better accuracy on those areas. It must be

noted that in the algorithm presented in this paper,

the particles are only used to transport the information

(solve the convective term). However, in certain cases

where the viscosity is low and there is a single fluid, it

is possible to solve partially the momentum equation

(1b) in the particles, as explained in [14]. Despite this

strategy leads to higher accuracy in the cases analysed

in the article, however it lacks the generality that is

required for the simulation of FSI problems.

Figure 1 shows the streamline integration for a sin-

gle particle. This step is purely explicit , which is achieved

by convecting the particles using the velocity from the

previous time step, in a Picard [9] iteration fashion. As

for the force integration (if added), information is also

gathered from the last step, so the Lagrangian particle

step remains purely explicit, allowing for a fast com-

putation on each particle that is trivially parallelizable

and hence fast.

Remark: It is possible to imagine this explicit con-

vection as the first step of a non linear iteration pro-

cess. If an iterative process would be to follow, once the

new velocity has been calculated, each particle should

have its coordinates resetted to the initial position and

the streamline integration will be performed again to

repeat all the tasks. However, practical experience sug-

gests that the first iteration provides results that are



Title Suppressed Due to Excessive Length 3

Fig. 1: PFEM-2 streamline integration

accurate enough, since numerical data matches the ex-

perimental results even with very large time steps.

Once all the particles have been convected, informa-

tion is projected into the mesh. The interface is drawn

by determining the exact place where the properties

change. This is defined in the mesh by an auxiliary

scalar function ϕ that is valued zero in theses lines(2D)

or surfaces (3D). A correct location of the interface is

critical, since the finite element mesh is enriched at the

interface as explained later, which allows for a more

accurate solution. Figure 2 shows the position of the

interface for a given distribution of particles. The pro-

jection kernel to transfer the information from the par-

ticles to the mesh is a critical part of the strategy. Since

no information is stored in the mesh, this kernel must

be accurate enough as to guarantee that the projected

field of the variables(in the mesh) resembles the field of

the original domain (particles). Failing to do so would

mean that a different problem is being solved at each

domain and therefore accuracy is lost.

Fig. 2: Interface detection using the particles.

At the red line ϕ = 0

Having detected the interface, the system of equa-

tion is assembled and solved implicitly. Since the sound

speed is infinite in incompressible fluids, the complete

set of equations cannot be calculated explicitly [17].

Finally, once the full system of equations has been

solved, corrections are passed to the particles and the

cycle is restarted. Details of the convection stage and

the procedure for solving the system of equations will

be explained in the following sections.

2.2 Continuum equations

As explained in the last section, the use of particles al-

lows to omit the convective term. The system of equa-

tion to be solved is obtained by coupling the momentum

balance for a general material with a compressibility

equation. Together, these two equations provide exact

solutions for problems at which thermal terms are con-

sidered uncoupled from the mechanical equations.

ρ
D(V)

Dt
= ∇σ + ρg (2)

Dp

Dt
+ κ∇.V = 0

Equations (2) hold for any material, both fluids and

solids, where ρ is the density, κ the compressibility mod-

ulus, V the velocity, σ the stresses and g the mass

forces.

2.2.1 Continuum equations for fluids

For the particular case of fluids, the stress tensor de-

pends only on the current strain rate and the pres-

sure: σf = 2µ
(
∇VS

)
− ∇p. Since the aim of this

work is to deal with problems of relatively low veloci-

ties ‖V‖ < 0.3c (where c is speed of sound), the fluid
will be considered incompressible. Replacing into (2),

the equations for fluids become (3).

ρ
D(V)

Dt
= ∇

[
2µ

(
∇V + (∇V)T

2

)]
−∇p+ ρg (3)

∇.(V) = 0

It must be noted that this set of equations must be
stabilized due to the infinite sound speed caused by the

incompressibility condition.

2.2.2 Continuum equations for solids

The hypoelastic model provides an excellent constitu-

tive model for solids due to its simplicity and direct

application for velocity formulations. Hypoelastic mate-

rials are those whose stress can be defined simply using

the rate of deformation as:

σ̇ = f(σ,d) where dij =
1

2

(
∂vi
∂xj

+
∂vj
∂xi

)
(4)

The definition of hypoelastic materials return the

rate of stress rather than the stress itself. This is partic-

ularly useful in the velocity formulation since the rate

stress function f depends on the rate of deformation

d (related to the velocity) instead of the deformation.

However, the Cauchy stress tensor is not objective (it

is affected by rigid body rotations). Therefore, another



4 P. Becker1, S.R Idelsohn1,2, E. Oñate1,3

stress measure is required. Using the Truesdell stress

rate σ∇ and eliminating the stress dependency of the

model for simplicity, the stress rate becomes:

σ∇ = f(d) (5)

The Truesdell rate is related to the PK2 Stress S and

provides the exact stress rate for a given deformation.

σ∇ = J−1F(n+1)Ṡ(n+1)FT (n+1) (6)

Using the tensor of elastic moduli for the Truesdell

stress rate CT :

σ∇ = CT : d

σ∇ = (λI⊗ I + 2µI) : d− d·σ − σ · d + σ ⊗ I (7)

Where λ and µ are the Lamè parameters. As it can

be seen in equation (7) it is not linear since C depends

on σ. To override this inconvenience, the Jaumann [1]

stress rate is used, which simplifies the stress rate into a

deformation σ∇J plus a rotation, avoiding all the non-

linear terms.

σ∇J = (λI⊗ I + 2µI) : d (8)

Using the approximation of the stress rate (9) in-

stead of the exact Truesdell stress, equation 6 can be

written as:

J (n+1) (λI⊗ I + 2µI) : dn+1 = F(n+1)Ṡ(n+1)FT (n+1)
(9)

We use finite differences in time to obtain Ṡ

J (n+1) (λI⊗ I + 2µI) : dn+1 =

F(n+1)
S(n+1) − S(n)

∆t
FT (n+1) (10)

F(n+1)
S(n+1)

∆t
FT (n+1) = J (n+1) (λI⊗ I + 2µI) : dn+1+

F(n+1)
S(n)

∆t
FT (n+1)

Recalling the relation between the second PK stress

and the Cauchy stress Jσ = FSFT , the LHS becomes:

J (n+1)
σ(n+1)

∆t
= J (n+1) (λI⊗ I + 2µI) : dn+1+

F(n+1)
S(n)

∆t
FT (n+1) (11)

Resetting the reference framework at each time step

as the last known configuration x(n+1) := X(n), the

Cauchy stress of the previous time step directly be-

comes the PK2 stress S(n) := σ(n). Finally the stress in

the new configuration becomes (13), where the subindex

n+1 implies that the old stresses have been updated to

the new configuration.

σ(n+1) = J−1(n+1)F(n+1)σ(n)FT (n+1)+

∆t (λI ⊗ I + 2µI) : dn+1 (12)

σ(n+1) = σ
(n)
n+1 +∆t (λ tr(d

n+1)I + 2µ dn+1) (13)

To mimic the formulation of velocities and pressure

used in fluids, it is useful to decompose the stresses into

the pressure p = − 1
3
tr(σ) caused by the volumetric

deformation �v =
1
3
tr(D) and deviatoric part σ′ caused

by the deviatoric stress d′ = d− �v .

σ(n+1) = σ
(n)
n+1 +∆t

[
λ tr(dn+1)I + 2µ(d′n+1 + �v)

]
(14)

σ(n+1) = σ
(n)
n+1 +∆t

[
(λ+

2

3
µ) tr(dn+1)I + 2µ(d′n+1)

]
(15)

σ(n+1) = σ
(n)
n+1 +∆pI +∆σ

′ (16)

where

∆p = ∆t (λ+
2

3
µ) tr(dn+1) (17)

∆σ′ = 2∆t µ (d′n+1)

Equations (16) and (17) provide the strategy to up-

date the stresses at each time step. A more detailed

explanation of the derivation can be found in [16] and

[18].

3 Fixed mesh domain

3.1 Spatial discretization

The chosen spatial discretization is the Finite Element

Method [23]. It consists on dividing the domain into

elements, whose geometry is defined by nodes. The un-

knowns variables are the values at the nodes and the so-

lution is interpolated from the nodal values inside each

element. In this work linear shape functions will be used

for all the variables.

Using the FE discretization and the test functions

w for the velocity and q for the pressure, the weak form

[24] of the system (2) becomes (18). Note that the stress

term is integrated by parts to avoid second derivatives

on the shape functions.(
w, ρ

D(V)

Dt

)
Ω

= (w, ρg)Ω − (∇w,σ)Ω(
q,∇.(Vn+1)

)
Ω

= 0 (18)



Title Suppressed Due to Excessive Length 5

In the first equation of (18) we have omitted the

boundary terms that appear due to the integration by

parts. These terms are the boundary traction terms

that appear at the edges of all the finite elements used

in the discretization: (∇w,n σ)Γ , where Γ are the
boundaries of the elements and n normal vectors point-

ing outwards. Ommiting this term ensures that the stress

continuity is guaranteed on the inter-element bound-

aries, where Γ1 and Γ2 are the boundaries of two adja-

cent elements.

(∇w,n1 σ1)Γ1 − (∇w,n1 σ2)Γ2 = 0 (19)

Ensuring that (19) is satisfied is of particular inter-

est in this work since the pressure field has to be discon-

tinous between interfaces due to the different material

properties. Fullfilling this requirement by ommiting this

term provides a straightforward yet accurate approach,

even if discontinuities occur in the pressure field.

3.2 Stabilized matrix form for the fluid phase

A finite element discretization directly implemented in

the form (18) using the same shape functions for the

velocity and the pressure would be unstable for fluids

in the pressure since it does not stand the inf-sup condi-

tion [6]. Moreover, even if different functions were to be

used to avoid this restriction, the system would not be

suitable for several solvers since it contains zeros in the

diagonal terms of the pressure equation as seen in the

matrix form (20). In these equations, first order finite

differences are used in the acceleration term to advance

in time.

[
K(µ) +

M(ρ)
∆t

B

BT 0

] [
Vn+1

pn+1

]
=

[
1
∆t

MVn + Mg

0

]
(20)

In order to raise the limitation of the original prob-

lem, stabilization terms can be added to the set of equa-

tions (18). As stated before, it is necessary to stabilize

the pressure equation for the fluid problem only. While

there are several methods to do so, only two will be

mentioned in this work: the Pressure-Stabilizing/Petrov-

Galerkin (PSPG) method [11] and the Orthogonal Sub-

grid Scale (OSS) stabilization [4]. The reason behind

this is that both methods only add a laplacian on the

LHS, holding the symmetry of the system.

In (21) the final shape of the matrix system is pre-

sented for the PSPG method. Using the OSS method

with an explicit projection stage would lead to a similar

expression but with the projecion of the pressure in the

RHS.

[
K(µ) + 1

∆t
M(ρ) B

BT τL( 1
ρ
)

] [
Vn+1

pn+1

]
=

[
1
∆t

MVn + Mg

τBTg

]
(21)

where L( 1
ρ
) is the laplacian of the pressure. An en-

hanced stabilization procedure based on the Finite In-

crement Calculus (FIC) avoids the need to presuppose

the pressure in free surface solvers using staggered schemes.

An extended updated mixed finite element lagrangian

formulation for treating both quasi and fully incom-

pressible fluids as well as FSI problems is presented in

[19].

The system (21) can be solved as it is by choosing

an appropriate stabilization parameter τ . In this work

it is set to τ =
(
1/∆t + 4µ/h

2 + 2V n/h
)−1

following

the work by [5]. The dependency on ∆t was added to

avoid τ → ∞ when the velocity and the viscosity are
zero, following the work of [2].

3.3 Matrix form for the solid phase

Unlike fluids, solids will not be considered incompress-

ible. The spatial discretization and variables will be the

same as the one used in the fluids formulation: linear el-

ements for both the pressure and the velocity (3 noded

triangles in 2D and 4 noded tetrahedrons in 3D). As

for the deviatoric stress, it will not be an independent

variable, but a state variable depending on the velocity

unknowns.

Recalling the general system of equations (2) and

splitting the stresses into its deviatoric and volumetric

components, the system reads:

ρ

(
D(V)

Dt

)
= ∇ (σ′ − p I) + ρg (22)

Dp

Dt
+ κ∇.V = 0

Writing the weak form of the problem and integrat-

ing by parts the gradient of the stresses in order to

avoid second derivatives on the velocities and to con-

vert the gradient of the pressure into the transpose of

the divergence, the system becomes:(
w, ρ

D(V)

Dt

)
= − (∇w, (σ′ − p I)) + (w, ρg) (23)(

q,
Dp

Dt
+ κ∇.V

)
= 0

A first approximation in time for the velocity would

lead to an stable but too diffusive algorithm. To avoid

this shortcoming, the Newmark’s Beta method was se-

lected. Parameters were set for constant acceleration.



6 P. Becker1, S.R Idelsohn1,2, E. Oñate1,3

The resulting expression for the velocity integration be-

comes:

2ρ
Vn+1

∆t
= 2ρ

Vn

∆t
− ρV̇n

Using finite differences in time for the pressure, di-

viding the second equation by the compressibility mod-

ulus κ and recalling the definition of the stresses (16)

gives:(
w, ρ

Vn+1

∆t

)
− (∇w, (∆σ′ −∆p I)) =(

w,
Vn

∆t
+ ρg

)
−
(
∇w,

(
∆σ′nn+1 − (p

n) I
)) (24)

(
q,
pn+1

κ∆t
+∇.V

)
=

(
q,

pn

κ∆t

)
To account for the increase in the deviatoric stresses

∆σ′, an implicit scheme is used to avoid instabilities:

d = S Vn+1 (25)

where S is the standard strain-rate velocity matrix.

Finally, writing the equations in matrix form, the sys-

tem can be expressed as:
( 2∆tM(ρ) +∆tK) B

BT 1
∆t

M( 1
κ

)




Vn+1
pn+1


 =


M(ρ)( 2∆tVn − V̇n + g) + Bσ′nn+1

1
∆t

M( 1
κ

)pn




(26)

In general all the matrices have the same form as

in the fluid elements, except for the stiffness matrix K.

Since it has to account for deviatoric stresses only, it
is constructed modifying the constitutive matrix in the

following way:

K =

∫
Ω

STD S (27)

where D is the constitutive matrix. It must be noted

that even for 2D simulations, the coefficients in D do

not change. The only modification is the elimination of

the strains in the third dimension, meaning that a plain

strain state is considered in 2D cases.

S =




∂N
∂x

0 0

0 ∂N
∂y

0

0 0 ∂N
∂z

∂N
∂y

∂N
∂x

0

0 ∂N
∂z

∂N
∂y

∂N
∂z

0 ∂N
∂x




; D = µ




4/3 −2/3 −2/3 0 0 0
−2/3 4/3 −2/3 0 0 0
−2/3 −2/3 4/3 0 0 0

0 0 0 1 0 0

0 0 0 0 1 0

0 0 0 0 0 1




The system of equations (26) can be solved without

the use of stabilized formulations as long as the solid

material is not incompressible. Otherwise, the pressure

mass matrix becomes zero and therefore stabilization

is required. However this would not be a complication

since the same simple stabilization technique used in

the fluid elements could be used.

Finally an additional hypothesis has to be taken in

order to linearise the system. The transformation of the

stresses in the previous configuration to the new con-

figuration requires the updated velocity Vn+1, making

the system non-linear. The simplification used in this

work consists on using the previous step velocity, there-

fore assuming small accelerations for the solids. This

hypothesis is similar to the one used for the convec-

tive term, which showed good accuracy in all the cases

tested.

3.4 Special considerations on the interface

Despite the advantages that the FE discretization pro-

vides, it bears a severe limitation when the variables

require abrupt changes that the chosen FE space is not

able to reproduce. As an example,when there is a sharp

change of the density in a two fluid problem, the hy-

drostatic condition under the gravitational force leads

to two different values for the pressure gradient. This is

specially critical when the fluids have very different den-

sities (i.e. air-water), where the term ∇p = ρg changes
abruptly on the interface.

Fig. 3: Pressure distribution for the hydro-

static case

Figure 3 shows the exact pressure distribution for

the hydrostatic case of water and air and the one ob-

tained by three linear elements. It is clear that this

solution is very poor and in practice it would lead to

an incorrect behavior of the interface and mass losses

[7].

When dealing with FSI problems, this issue is even

more critical. The reason for this is again the strong dis-

continuity in the material properties, in particular the

stiffness (or viscosity). A simple example to illustrate



Title Suppressed Due to Excessive Length 7

this is a box of a dense solid material surrounded by

air under gravitational force. In this case the pressure

distribution would take the shape illustrated in Figure

4.

Fig. 4: Pressure distribution of a solid body

surrounded by air under gravitational force

The fulfillment of the transmission conditions re-

quires that the tractions along the interface must be

continuous. Neglecting air pressure, this condition is

satisfied by σxx = 0 in the boundaries of the solid.

However the implemented solid model makes use of the

mean solid pressure, which means that (taking σzz = 0)

the pressure in the solid becomes (28):

psolid =
1

3
σyy 6= pair (28)

The pressure (28) is clearly discontinuous along the

interface. If a linear (or any continuous) element was

located over the sharp boundary, the discrete pressure

field would detect a non-existent gradient that would

create normal velocities in the fluid, as seen in Fig-

ure 5. Since this would violate fluid incompressibility,

the solver usually converges to a solution where the

last solid node has very low pressure and therefore the

structure is more flexible than it should be.

3.5 Raising the limitations: pressure enrichments

To overcome the problems of the standard Finite Ele-

ments, the space must be modified to allow for a more

accurate reproduction of the solution. A first alternative

would be remeshing the zone where the interface passes

through. This would lead to the exact solution but

would require adding new degrees of freedom (DoFs) in

the new nodes. This strategy, despite possible, is com-

putationally expensive since the system must be resized

and new space must be allocated in the memory, task

Fig. 5: Close-up of a linear element located

at the interface showing the interpolated pres-

sure field

that is likely to be slower than the solution of the sys-

tem itself.

An alternative to a new mesh is enrichening the FE

space. Enriching consist on creating new DoFs on each

side of the interface elements and then statically con-

densing the new unknowns [10].

To account for the gradient discontinuity in the pres-

sure, the shape functions proposed by [?] are used. In

Figure 6 it can be seen that a total of 6 functions are

used, with the objective of uncoupling completely the

pressure from both sides. To do so, first the standard

shape functions in the interface elements are replaced.

These functions are basically the same as the original

ones, but the integrals are calculated only with the con-

tribution of the partitions whose sign matches the sign

of the node. When partitions and nodes have different

the same sign, the contribution is added to the enrich-

ments functions i∗, j∗ or k∗. In other words, the original

shape functions are split in two across the interface, al-

lowing more freedom in the pressure field while retain-

ing the partition of unity.

Fig. 6: Pressure Shape Functions: Top: Re-

placement Functions. Bottom: Enrichments



8 P. Becker1, S.R Idelsohn1,2, E. Oñate1,3

Stabilizing the pressure equation is equivalent to

adding artificial diffusion to this variable. Therefore

adding stabilization to the interface elements would in-

evitably lead to an innacurate behavior of the solid

phase due to dissipation of the stresses. For this rea-

son no stabilization is used in these elements. However,

as stated in the previous sections, doing so would cause

instabilities due to the non-fulfiliment of the inf-sup [4]

condition. To override this problem, both sides of the

interface are considered to be compressible (using the

compressibility modulus of the solid phase). While this

hypothesis is not correct, it leads to small errors only

since the fluid volume is changed only when there is a

sharp change in the pressure from one timestep to the

next. This strategy yields almost exact results, avoid-

ing pressure diffusion across the interface with minimal

errors.

Remark: One of the advantages of this set of func-

tions is that the partition of unity is conserved. But

most importantly, this also implies that reconstruct-

ing the pressure pn after convection is easier to per-

form accurately. The strategy currently implemented

consists on the following steps: First, a standard nodal

projection algorithm is used and, therefore, the values

of the replacement shape functions are set. Having done

this, the enrichments shape functions are defined as the

mean of the real nodal values for the previous timestep

n. This ensures that the prediction for the gradient in

the normal direction is minimized, reducing spurious

velocities.

3.5.1 Adding the new DoFs to the system of equations

The described enrichment functions can be added in the

Monolithic strategy following the standard condensing

procedure [10]. Defining the notation N for the stan-

dard shape functions and ∗ for the enrichments, the
extended system becomes (29). The ρ is not written in

the velocity mass matrices due to lack of space. Also,

since all mass matrices (both velocity and pressure) are

multiplied by 1
∆t

, it is also omitted for the same reason.
KNN + MN BNN BN∗BNNT MN ( 1κ ) 0

BN∗
T 0 M∗(

1
κ

)




VNn+1pn+1N

pn+1∗




=


 1∆tMNVNn + MNgMN ( 1κ )pnN

M∗(
1
κ

)pn∗


 (29)

To simplify notation, the system is written as:[
ANN AN∗

A∗N A∗∗

][
XN

X∗

]
=

[
FN

F∗

]
(30)

Condensing the enrichment DoFs the initial size of

the system is recovered, as:

ÃXN = F̃ (31)

where

Ã = ANN −AN∗A−1∗∗ A∗N (32)

F̃ = FN −AN∗A−1∗∗ F∗F̃ (33)

4 Lagrangian particles domain

4.1 Streamline integration

The solving strategy described in the previous section

requires an accurate and robust tool to account for

the convective term. Since the aim of the PFEM-2 is

to achieve large time steps with small errors, it is not

enough to simply move the particles with the last ve-

locity multiplied by the time step (δx = Vn · δt).
The main objective is to obtain as much informa-

tion as possible from the previous time step to calculate

the new state of the particles. The method chosen, fol-

lowing the same strategy of [14] for single fluids, is the

streamline integration. For a particle p, the exact posi-

tion at time n+ 1 is defined as (34):

xn+1p = x
n
p +

∫ n+1
n

Vtdt (34)

Unfortunately, the velocity is not known at contin-

uously in the time t but only at the discrete time steps(

n − 1,n, n + 1 ... ). Approximating now the trajectory
using the velocity of the previous time step, the new

position becomes:

xn+1p ≈ x
n
p +

∫ n+1
n

Vndt (35)

While this approximation may be valid for quasi-

stationary problems, it can lead to severe errors in tran-

sient phenomena. In [14] it was shown that for single

fluids this strategy is valid. However in multi-fluids and

FSI problems the difference in the properties, in partic-

ular the density, makes this approximation unsuitable

for some cases. When the density jump is important,

one fluid dominates over the other and their behaviour

is completely different (ie: air and water). As an exam-

ple, a breaking wave is represented in Figure 7. Follow-

ing the streamlines to predict the water particle trajec-

tory would lead to incorrect results.

To overcome this problem, the streamline integra-

tion must be deactivated when a particle of the heavier

fluid transits across a region of the lighter fluid. In this

case, the gravity will be taken as the only acting force,



Title Suppressed Due to Excessive Length 9

Fig. 7: Breaking wave with two fluids. Blue

line: Streamline at tn; Green line: Actual

particle trajectory

leading to parabolic (projectile) motion, where the last

known velocity of the particle is taken as the starting

data. Setting the distance functionϕ ≤ 0 for the denser
fluid regions and ϕ > 0 for the lighter fluid regions, the

updated position of the denser fluid particles become

(36):

xn+1p ≈

{
xnp +

∫ n+1
n

Vndt if ϕxtp ≤ 0
xnp +

∫ n+1
n

Vnp + g · t dt if ϕxtp > 0
(36)

It is important to notice that this method is purely

explicit and therefore no further corrections are done

for computating the convective term. Even though an

iterative process could be performed to improve the ac-

curacy, in all the examples solved with this strategy the

results were correct, despite the large time steps cho-

sen. This is specially interesting since the PFEM-2 was

compared against other codes that make use of implicit

strategies and yet they have to rely on smaller time

steps to obtain similar results. Based on these tests it

was decided to keep only the explicit computation of

the convective term, since it provides an excellent bal-

ance between computation time and accuracy.

4.2 Projection kernel

Once the particles have been convected to their new

position x
p
n+1 it is necessary to project the information

into the mesh in order to solve the Lagrangian system

of equations. The simplest projection kernel consists

on directly using the shape functions of the elements.

As an example, the definition of the interface for two

materials is explained.

Each particle has an associated material and the

interface should be located where the material prop-

erties change. The distribution of particles inside each

element can define complicated curves that become im-

possible to manage with simple shape functions due to

the large number of particles. As an example, in Figure

8 some particles are in the ”wrong” side of the interface.

For this reason the instantaneous local interface inside

each element is simply defined by a line (or a plane in

3D) taking into account a weighted average using the

shape functions. Assuming that only two materials are

present (ie: air and water), the lighter one is given a pos-

itive sign and the denser one a negative sign. A pseudo,

instantaneous, ϕ level-set function is created that de-

fines the interface where it is valued zero. To calculate

the value of ϕ at each the jth node, all the i particles in

the neighbour elements to j will be used. The weight-

ing function is defined as the standard shape function

of the element for the node j in the position of each i

particle. Once the contribution of all the particles has

been added, the location of the interface is trivial using

(37).

Fig. 8: Contribution of i particle to the j node

ϕj =

∑n
i signiN

j
i∑n

i N
j
i

(37)

The same procedure is extended for all the variables,

replacing the signi of the particle with the desired vari-

able, either scalar, vectorial or tensorial. Using this ker-

nel, the projected velocity can be written as (38). The
ˆ̂

(.) in the notation implies that it is the first approx-

imation of the velocity, taking into account only the

convecting term and neglecting all the other contribu-

tions. This velocity will be used as the starting point

for the finite element fixed mesh solver.

ˆ̂
Vn+1j =

∑n
i ViN

j
i∑n

i N
j
i

(38)

It is worth noting that the elemental shape functions

Ni are not the only possible kernel. As an example,

the function proposed in [22] assigns a higher weight to

those particles that are closer to the node. Setting h as



10 P. Becker1, S.R Idelsohn1,2, E. Oñate1,3

the element size and u = R/h, where R is the distance

from the particle to the node, the Wendland kernel is

written as (39).

W
j
i =

7

4πh2
(1 + 2u)(1− u/2)4; (39)

After the information of the Lagrangian domain has

been projected and the mesh computations have been

performed, the velocity of the particles has to be up-

dated. At this stage it is important not to replace the

particle velocity with the new, updated velocity but

only a correction. The reason for this is simple; no mat-

ter how good the kernel algorithm may be, it is never

exact. Replacing the unknowns in the particles would

destroy valuable data, leading to excessive artificial dif-

fusion of the strategy. Based on this, the update stage

on the particle will only transfer the variation in the

velocity (or any other variable) calculated in the mesh,

that is:

δVn+1j = V
n+1
j −

ˆ̂
Vn+1j (40)

4.3 Computational issues and code speed

The code used in this work was developed in the C++

programming environment KRATOS [8]. KRATOS is

an open source multi-physics framework specifically de-

signed for finite elements, which eases the tasks that are

common to all FE codes, such as the assembly of the

system of equations or finding an efficient solver. Ensur-

ing low execution times at the particles convection stage

is critical since the number of particles is 10 to 20 times

larger than the number of elements in the mesh for a

given domain, meaning that millions of particles have

to be displaced at each time step. The optimization and

Parallelization of this stage lead to a code that spends

approximately half of the execution time on particle

tasks and the other half on the solution of the implicit

system of equations in the mesh.

The current implementation is capable of solving

two phase flows accurately and with execution times

similar or even faster than industry standard codes such

as OpenFoam, as shown in [14] for one phase flows and

in [15] for multi-fluids.

5 Complete PFEM-2 algorithm

Coupling the strategy described in the previous sec-

tions, the PFEM-2 solver for multi-fluids and FSI is

obtained. The steps can be summarized as follows:

Step 1) Convect the particles using the streamlines

Step 2) Project information on the mesh,

with q fluid particles and r solid particles

Common variables Solid V ariables

ˆ̂
Vn+1j =

∑r+q
i ViN

j
i∑r+q

i N
j
i

pnj =

∑r
i piN

j
i∑r

i N
j
i

Fluid variables νsolid =

∑r
i nui∑r
i 1

µfluid =

∑q
i µi∑q
i 1

σ′nsolid =

∑r
i σ
′n
i∑r

i 1

ρfluid =

∑q
i ρi∑q
i 1

Esolid =

∑r
i Ei∑r
i 1

ρsolid =

∑r
i ρi∑r
i 1

Step 3) Detect interface elements

Step 4) Estimate pressure enrichments

Step 5) Assemble system of equations with enrichments

Step 6) Solve the system of equations

Step 7) Recover condensed DoFs

Step 8) Update the velocity at the particles, pressure and stress

6 Numerical Examples

6.1 Rayleigh-Taylor instability

The classical benchmark for multi-fluids was tested to

verify the solver. Despite there are no analytical results

or experimental data in 2D to check the error, it is

possible to compare against other numerical results. He

et al. [13] presented results for Reynolds number Re =

256 using a Lattice Boltzmann scheme. With the same

initial conditions, results for Re = 1000 can be found

in [12]. The geometry can be seen Figure 9, discretized

by 163000 elements. The parameters of the simulation

are:

ρq = 3 kg/m
3 νq =

√
g · d3/2
Re

m2/s

ρp = 1 kg/m
3 νp =

√
g · d3/2
Re

m2/s

gy = −10 m/s2
δt = 0.01 s

Initial conditions:

V = 0 in Ω

ϕ = −y − δ0(cos(2π(x)− π) + 1) + 2.0
δ0 = 0.1

In Figure 11, snapshots at different time steps can

be seen. For the Reynolds number analysed, the results

obtained match the ones found in [13],[12]. The adimen-

sionalized time tadim = t
√
g/2 is used. Finally the po-



Title Suppressed Due to Excessive Length 11

Fig. 9: Rayleigh-Taylor instability configura-

tion

sition of the advancing front of the denser fluid (centre)

and the rising of the bubbles (sides) are compared with

the results of [12]. Again good matching is observed.

0,0 0,2 0,5 0,8 1,0 1,2 1,5 1,8 2,0 2,2

time

−1,50

−1,25

−1,00

−0,75

−0,50

−0,25

0,00

0,25

0,50

0,75

1,00

p
os
it
io
n

Guermond
PFEM-2

Fig. 10: Vertical position of the advancing

front and bubbles in the Rayleigh-Taylor in-

stability for Re = 1000

Fig. 11: Snapshots for the Rayleigh-

Taylor instability problem at tadim =

1.0 , 1.5 , 1.75 , 2.0 , 2.25 , 2.5. Re = 256

6.2 Static cantilever beam immersed in fluid

To test the accuracy of the solver and the potential of

the enrichment functions to uncouple the pressure, the

following numerical example was designed. A beam un-

der small deformations is surrounded by a very light

fluid. Inertial terms are neglected to test the static so-

lution, leading to a Stokes problem in the fluid. The

viscosity is set as small as possible to allow for a faster

convergence to the statical solution while maintaining

stability. The geometry is observed in Figure 12. The

material properties are:

ρq = 1 kg/m
3 ρp = 0.001 kg/m

3

E = 107Pa µp = 0.01Pa.s

ν = 0

Fig. 12: Cantilever beam with fluid geometry

The beam dimensions are L = 10 and H = 1. A ver-

tical mass force of q = 1[m/s2] is applied to the whole

domain. According to the Timoshenko beam theory and

correcting the force to account for the buoyancy effect,

the vertical displacement w at the tip should be

wmax = (ρq − ρp)
(
q L4

8 E I
+

1

2

q L2

10/12 h µ

)
= 0.001511

(41)

Structured meshes with decreasing element size were

created to check convergence. Mesh sizes from h = 1 to

h = 0.01 were used. To test the influence of the projec-

tion algorithm, the simulation was run with and with-

out projection. In the latter case, the nodal pressure is

kept instead of being obtained from the particles.

In order to test the behaviour of the splitted ele-

ments, in all the meshes the interface between the solid

phase and the fluid phase is located at approximately

the middle of the elements, as shown in Figure 13. In

this case the enrichment shape functions in the pressure

are imperative due to the strong discontinuity of the

material properties, leading to a jump in the pressure

field. If this variable was not enriched to allow for dis-

continuities, a strong pressure gradient would appear

at the interface and, therefore, the resulting velocity

field would be inaccurate. It must be noticed that Fig-

ure 13 does not correctly represent the pressure at the

interface elements, since the field is printed with linear

interpolation, while in reality it is discontinuous due to

the enrichments.

From Figure 14 it is clear the detrimental effect of

the projection stage. While the algorithm without pro-

jection is able to maintain the quadratic convergence of



12 P. Becker1, S.R Idelsohn1,2, E. Oñate1,3

Fig. 13: Beam interface and pressure distribu-

tion

the solid-only case, the results with projection show a

convergence slope of only 3/2.

Fig. 14: Convergence for the cantilever beam

in fluid

Despite the solver with the projection stage provides

a less accurate solution, it leads to acceptable errors for

all the mesh sizes chosen. Even for coarse meshes of only

three elements along the thickness, the errors are still

low (at around 10 % ).

6.3 Turek FSI benchmark

To test the strategy in a fully coupled scenario, the

Turek FSI benchmark [20] was simulated. This prob-

lem typically used as a reference to validate new FSI

strategies and it is particularly challenging for stag-

gered schemes due to the similar properties of the fluid

and the solid. On the other hand, the monolithic solver

used in this work does not have any particular difficul-

ties.

The problem consists on a 2D rigid cylinder at-

tached to an elastic beam immersed in a fluid current.

The complete dimensions and probem parameters can

be found in [20]. In this paper a fixed mesh of 48500

triangles was used. The frequency and amplitude of the

oscilations are analyzed to test the accuracy. The case

tested in this work is for Re = 200, with a parabolic

inlet velocity profile and the following parameters:

ρfluid = 1000 kg/m
3 µfluid = 1Pa.s

ρsolid = 1000 kg/m
3 Esolid = 1.4MPas

νsolid = 0.4 δt = 0.005 s

In Figure 15 the velocity contour is observed after

the stationary regime has been achieved. Finally, in Fig-

ure 16 the vertical displacement of the tip can be ob-

served. In Table 1 the results are analyzed. Compared

to Turek’s solution, both the amplitude and frequency

are 10 % below the reference value. This result is con-

sidered acceptable considering that only ten triangular

elements are present in the thickness of the beam.

Frequency Amplitude
Turek 5.3 0.0707
PFEM2 4.8 0.0610

Table 1: PFEM2 and Turek results

Fig. 15: Turek FSI velocity contour

Fig. 16: Tip displacement of the Turek FSI

6.4 3D benchmark: dynamic cantilever beam

As the last example case to test the solver in dynamic

tridimensional problems, the same geometry of the pre-

vious 2D cantilever beam was selected but restoring the

inertial terms and taking the width b = 1 to obtain a

square section. The geometry can be seen in Figure 17,

with a vertical mass force to initiate the movement.

Chosen mesh size is h = 0.125 in the surroundings of

the beam and h = 0.6 in the distant fluid areas, for a

total of 283500 tetrahedrons and more than 4 million

particles. The time step is set to ∆t = 0.001 and the

properties of the solid are the same as the 2D case:

ρ = 1 kg/m3 E = 107Pa ν = 0



Title Suppressed Due to Excessive Length 13

Fig. 17: Tridimensional Cantilever geometry

For cases in which the density of the fluid is negli-

gible, it is possible to calculate the analytical vibration

frequency in vacuum with the following expression:

ωvac =

√
C4n E I

L4 ρ
(42)

where the subscript n denotes the mode and Cn and

the positive roots of equation (43)

1 + cos(Cn) cosh(Cn) = 0. (43)

Taking the first vibration mode, C1 = 1.8751 and

the frequency of the beam becomes:

ωvac =

√
C41 E I

L4 ρ
= 32.097 rad/s → 5.108 Hz (44)

The frequency observed in the simulation for low

fluid densities (< 0.001kg/m3) is 5.175Hz, in good agree-

ment with the theoretical value. The slightly higher

value is caused by the low number of elements in the

thickness, which leads to a stiffer behavior.

To test the influence of the fluid density, accord-

ing to Van Eysden [21] it is possible to estimate the

lower vibration modes for rectangular section beams

immersed in a fluid using the following formula:

ωfluid = ωvac

(
1 +

πρpb

4ρqH
Γf

)−1/2
(45)

where Γf is the hydrodynamic function which de-

pends on the viscosity and the cross section of the beam.

For inviscid flows and square sections Γf = 1.513 [3].

Fluid densities from 0.0001kg/m3 to 0.99kg/m3 were

selected to validate the code. The results can be seen

in Figure 18, toghether with the comparison against

(45). Analyzing this graph, it is clear that the numer-

ical solution diverges from the expected curve as the

fluid density increases. This is caused by the limita-

tions of the standard linear elements used for the ve-

locity field, which lead to interface elements that are

assembled with averaged (based on volumes) stiffness

properties between the fluid and the solid and there-

fore the added mass effect is larger than it should be.

Fig. 18: Oscillation frequency of the 3D can-

tillever beam for different fluid densities

To analyze the convergence of the method with mesh

size, the case with a fluid density ρf = 0.5kg/m
3 was

selected. Mesh sizes from h = 0.33 to h = 0.08 were

used (3 to 12 elements in the thickness of the beam).

In all the cases the interface was located splitting the

elements in the middle to test the worst case scenario.

Fig. 19: Mesh convergence for the oscillation

frequency of the 3D cantilever beam

Quadratic convergence on mesh size can be observed

in Figure 19, indicating that the interaction between the

fluid and the beam is accurately simulated.

7 Conclusions and future work

A tool to solve monolithically multi-fluids and FSI prob-

lems was developed. The strategy is based on the PFEM-

2 originally formulated in [14] for homogeneous fluids,

which allows for fast computations while maintaining

accuracy.



14 P. Becker1, S.R Idelsohn1,2, E. Oñate1,3

The developed model makes use of Lagrangian par-

ticles and a fixed mesh. In this mesh, several enrichment

degrees of freedom (DoFs) are added to improve the

pressure field at the interfaces. Adding extra DoFs al-

lows for a more accurate capturing of the solution where

the material properties change abruptly since this leads

to discontinuities of the pressure or its gradients. On the

other hand, to avoid resizing the system of equations,

the new variables are statically condensed and therefore

computation times are not significantly increased.

The last example shows that the standard velocity

field might not be accurate for coarse meshes due to

the artificial added mass effect caused by the FE linear

shape functions. As a next step, enrichening the velocity

variables to improve the definition of the interface will

reduce errors without the need of refining the mesh.

Finally, a major improvement in the capabilities of

the solver will be adding more advanced constitutive

models to account for a more realistic behavior of com-

plex phenomena such as debris flows, both at the solid

stage and the rheological model of the flow. This will al-

low for the simulation of the complete phenomena, from

initiation to deposition of the eroded material using a

single and accurate tool. Currently, there are almost no

strategies which can simulate the whole process using

a unified frame.

8 Acknowledgements

The research leading to these results has received fund-

ing from the People Programme (Marie Curie Actions)

of the European Union’s Seventh Framework Programme

FP7/2007-2013/ under REA grant agreement n 289911.

This work was also supported by the ERC Advanced

Grant REALTIME, project AdG-2009325, by the ERC

Advance Grant SAFECON, project AdG-26752 and by

the HFLUIDS project of the National RTD Plan of

the Spanish Ministry of Science and Innovation I+D

BIA2010-15880.

References

1. Belytschko, T., Liu, W.K., Moran, B., Elkhodary,

K.: Nonlinear finite elements for continua and

structures. John Wiley & Sons (2013)

2. Bochev, P.B., Gunzburger, M.D., Lehoucq, R.B.:

On stabilized finite element methods for the stokes

problem in the small time step limit. International

Journal for Numerical Methods in Fluids 53(4),

573–597 (2007)

3. Brumley, D.R., Willcox, M., Sader, J.E.: Oscillation

of cylinders of rectangular cross section immersed

in fluid. Physics of Fluids (1994-present) 22(5),

052,001 (2010)

4. Codina, R.: Stabilization of incompressibility and

convection through orthogonal sub-scales in fi-

nite element methods. Computer methods in ap-

plied mechanics and engineering 190(13), 1579–

1599 (2000)

5. Codina, R.: Stabilized finite element approximation

of transient incompressible flows using orthogonal

subscales. Computer Methods in Applied Mechan-

ics and Engineering 191(39), 4295–4321 (2002)

6. Codina, R., Badia, S.: On some pressure segrega-

tion methods of fractional-step type for the finite

element approximation of incompressible flow prob-

lems. Computer Methods in Applied Mechanics

and Engineering 195(23), 2900–2918 (2006)

7. Coppola, H.: A finite element model for free surface

and two fluid flows on fixed meshes. Ph.D. thesis,

Universitat Politècnica de Catalunya (2009)

8. Dadvand, P., Rossi, R., Oñate, E.: An object-

oriented environment for developing finite element

codes for multi-disciplinary applications. Archives

of computational methods in engineering 17(3),

253–297 (2010)

9. DeBlois, B.M.: Linearizing convection terms in the

navier-stokes equations. Computer methods in ap-

plied mechanics and engineering 143(3), 289–297

(1997)

10. Felippa, C.A.: Introduction to finite element meth-

ods. University of Colorado, Boulder, http://www.

colorado. edu/engineering/CAS/courses. d/IFEM.

d (2004)

11. Fries, T.P., Matthies, H.G.: A review of petrov–

galerkin stabilization approaches and an extension

to meshfree methods. Institute of Scientific Com-

puting, Univ. of Braunschweig–Inst. of Technology,

TR-2004-01, Brunswick, Germany (2004)

12. Guermond, J.L., Quartapelle, L.: A projection fem

for variable density incompressible flows. Journal

of Computational Physics 165(1), 167–188 (2000)

13. He, X., Chen, S., Zhang, R.: A lattice boltzmann

scheme for incompressible multiphase flow and its

application in simulation of rayleigh–taylor insta-

bility. Journal of Computational Physics 152(2),

642–663 (1999)

14. Idelsohn, S., Nigro, N., Gimenez, J., Rossi, R.,

Marti, J.: A fast and accurate method to solve the

incompressible navier-stokes equations. Engineer-

ing Computations 30(2), 2–2 (2013)

15. Idelsohn, S.R., Marti, J., Becker, P., Oñate, E.:

Analysis of multifluid flows with large time steps

using the particle finite element method. Inter-

national Journal for Numerical Methods in Fluids



Title Suppressed Due to Excessive Length 15

(2014)

16. Idelsohn, S.R., Marti, J., Limache, A., Oñate, E.:

Unified lagrangian formulation for elastic solids and

incompressible fluids: application to fluid–structure

interaction problems via the pfem. Computer

Methods in Applied Mechanics and Engineering

197(19), 1762–1776 (2008)

17. Muneer, T.T., Kubie, J., Grassie, T.: Heat trans-

fer: a problem solving approach. Taylor & Francis

(2003)

18. Oñate, E., Franci, A., Carbonell, J.M.: A particle fi-

nite element method for analysis of industrial form-

ing processes. Computational Mechanics pp. 1–23

(2014)

19. Oñate, E., Franci, A., Carbonell, J.M.: A parti-

cle finite element method (pfem) for coupled ther-

mal analysis of quasi and fully incompressible flows

and fluid-structure interaction problems pp. 129–

156 (2014)

20. Turek, S., Hron, J.: Proposal for numerical bench-

marking of fluid-structure interaction between an

elastic object and laminar incompressible flow.

Springer (2006)

21. Van Eysden, C.A., Sader, J.E.: Resonant frequen-

cies of a rectangular cantilever beam immersed in a

fluid. Journal of applied physics 100(11), 114,916

(2006)

22. Wendland, H.: Piecewise polynomial, positive def-

inite and compactly supported radial functions of

minimal degree. Advances in computational Math-

ematics 4(1), 389–396 (1995)

23. Zienkiewicz, O., Taylor, R.: The Finite Element

Method: The Basis, vol. 1. Butterworth-heinemann

(2000)

24. Zienkiewicz, O., Taylor, R., Zhu, J.Z.: The Fi-

nite Element Method: Its Basic and Fundamentals,

vol. 1, 6th edn. Elsevier (2006)


