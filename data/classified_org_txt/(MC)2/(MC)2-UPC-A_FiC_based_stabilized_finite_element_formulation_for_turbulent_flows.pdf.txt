



















































()


A FIC-based stabilized finite element formulation for turbulent flows

Jordi Cotela-Dalmau, Riccardo Rossi, Eugenio Oñate
CIMNE - Centre Internacional de Metodes Numerics en Enginyeria,
Campus Nord UPC, c/Gran Capità s.n. 08034 Barcelona, Spain.

Universitat Politècnica de Catalunya, UPC Barcelona Tech,
c/Gran Capità s.n. 08034 Barcelona, Spain.

December 2, 2016

Abstract

We present a new stabilized finite element (FEM) formulation for incompressible flows based on the Finite
Increment Calculus (FIC) framework [1]. In comparison to existing FIC approaches for fluids, this formulation
involves a new term in the momentum equation, which introduces non-isotropic dissipation in the direction of
velocity gradients. We also follow a new approach to the derivation of the stabilized mass equation, inspired by
recent developments for quasi-incompressible flows [2]. The presented FIC-FEM formulation is used to simulate
turbulent flows, using the dissipation introduced by the method to account for turbulent dissipation in the style
of implicit large eddy simulation.

Keywords

Finite Increment Calculus; Turbulence modeling; Stabilized finite elements

1 Introduction

Simulation of turbulent flows represents one of the most challenging problems in computational fluid dynamics,
due to the inherent difficulty in describing the flow and the wide range of spatial and temporal scales involved.
In practice, the smallest flow features that can be captured in a numerical simulation are comparable in size
to the mesh resolution and in duration to the time step. For turbulent problems, these are typically orders of
magnitude larger than the smallest scales involved in the flow [3]. The effect of these unresolved motions on
the large scale flow is typically incorporated in the simulation through the use of a turbulence model. Since,
in turbulent flows, viscous dissipation predominantly occurs on the smallest scales, small scale motions tend to
extract energy from the large scale flow. As a result, turbulence models are mostly dissipative in nature.

In finite element formulations for flow problems, numerical dissipation is often required to obtain a stable
solution. The variational form of the Navier-Stokes equations has well-known numerical stability problems
and a common way to prevent them is to modifying the equations to obtain a stable problem. Such stabi-
lized formulations typically involve additional terms that are dissipative in nature. The interaction between
numerically motivated dissipation from stabilized formulations and physically motivated dissipation from tur-
bulence modeling requires careful consideration. This has driven research to verify that the results produced
by stabilized finite element models of turbulent flow are physically relevant (e.g. [4, 5, 6]). In particular, in the
context of variational multiscale (VMS) stabilized formulations [7, 8], an analogy has been proposed between
the concept of scale separation and projection onto the finite element mesh that motivates VMS formulations
and the spatial filters used in Large Eddy Simulation (LES) turbulence models [9, 10, 11]. This, providing a
theoretical justification for the use of VMS stabilized formulations as the only source of dissipation in turbulent
flow problems. This strategy is in the same vein as implicit LES formulations, such as monotonically-integrated
LES (MILES) [12], which rely on numerically induced dissipation to achieve physically relevant results. This
approach to turbulence modeling has been tested numerically in multiple studies (e.g. [13, 14, 15, 16]).

Finite Increment Calculus (FIC), sometimes called Finite Calculus in short, is a stabilization technique based
on writing the balance equations of the problem for an arbitrarily small, but finite-sized, domain [1, 17, 18].
The expression obtained in this way can be used as the starting point to obtain the weak form of the problem,
in place of the original point-wise equation, and results in a variational problem with additional terms that
have a stabilizing effect in the numerical solution. The FIC approach has been used in conjunction with the
finite element method (FEM) to simulate incompressible flows at a range of Reynolds numbers [19, 20, 21] in

1



the past. In this paper we present a new FIC-FEM formulation for the incompressible Navier-Stokes equations
and explore the possibility of using it to simulate turbulent flows.

Compared to previous FIC-based approaches, the main novelties of the presented formulation are a new
dissipative term in the momentum equation and a new approach to the derivation of the stabilized mass
conservation equation. The new term in the momentum equation acts as a source of non-isotropic dissipation
in the direction of velocity gradients. The stabilized mass equation is based on stating the second order FIC
balance in space [22] for mass conservation and follows similar ideas to those recently used to derive a Lagrangian
formulation for quasi-incompressible flows [2].

The paper is organized as follows: Section 2 presents the governing equations and the notation we use to
describe them, Section 3 presents the derivation of the FIC-stabilized momentum equation and Section 4 does
the same for mass conservation equation. Both equations are used in Section 5 to derive a stabilized FIC-FEM
formulation, which is then applied to turbulent flow problems in Sections 6 and 7. Finally, Section 8 presents
the main conclusions of the work.

2 Governing equations

The flow of an incompressible fluid within a domain of interest Ω is described by the Navier-Stokes equations,
which state the balance of linear momentum and mass within Ω as

ρ ∂tui + ρuk
∂ui
∂xk

−
∂σij
∂xj

= fi in Ω× [0, T ) i, j, k ∈ {1, nd} (1)

∂uk
∂xk

= 0 in Ω× [0, T ) (2)

where u = {ui} represents the fluid velocity field, ρ is the density and σ = {σij} is the stress tensor, f = {fi}
are the volume forces acting on the domain and nd represents the number of spatial dimensions (nd = 3 for 3D
problems).

The problem is completed by an initial condition

ui = u0 i in Ω, t = 0 (3)

where u0 = {u0 i} is an initial velocity field verifying Eq. (2), and boundary conditions

ui = uD i in ΓD × [0, T ) (4)

σijnj = ti in ΓN × [0, T ) (5)

ΓD and ΓN represent the Dirichlet and Neumann parts of the boundary ∂Ω of the domain Ω, and verify
ΓD ∪ΓN = ∂Ω and ΓD ∩ΓN = ∅. uD = {uD i} is the given velocity on the Dirichlet boundary and t = {ti} the
imposed traction on the Neumann boundary. Finally, n = {ni} denotes a unit vector normal to the boundary
(pointing outwards).

If the fluid is assumed to be Newtonian, the stress tensor σ can be expressed in terms of the fluid pressure
p and the rate of strain tensor ε as

σij = 2µ
(

εij −
εkk
3

δij

)

− p δij (6)

εij =
1

2

(

∂ui
∂xj

+
∂uj
∂xi

)

(7)

Eqs. (1) and (2), combined with initial and boundary conditions given by Eqs. (3)–(5), represent the complete
Navier-Stokes problem. However, we use a modified version of the problem in the following. We replace the
advective form of the convective term used in Eq. (1) with the skew-symmetric form, that is

uk
∂ui
∂xk

=
1

2

(

uk
∂ui
∂xk

+
∂

∂xk
(uiuk)

)

(8)

Both forms of the convective term presented in Eq. (8) are identical when the differential form of the problem
is considered, but yield different variational problems due to the fact that the velocity solution of the weak
problem is only required to be divergence-free in an integral sense. As noted by Codina et al. in [23], only the
skew-symmetric form of the convective term results in a variational problem that conserves kinetic energy.

It is well known that the variational form resulting from the Navier-Stokes problem has inherent stability
issues, both due to the presence of the convective term and to the incompressibilty constraint that gives rise to
the inf-sup or LBB condition on the acceptable interpolation spaces where the solution can be sought (see for
example [24]). To solve these issues, we propose a stabilized formulation based on the FIC framework [17, 18].
We devote the following sections to present, in turn, the FIC balance equations for linear momentum and mass
conservation that will be used to write a stabilized weak form of the problem.

2



3 Stabilized momentum equation

We start by writing the linear momentum equation in residual form. Introducing Eq. (6) in Eq. (1) and using
the skew-symmetric convective form of Eq. (8), the linear momentum residual is defined as

rmi := ρ∂tui + ρ

(

1

2
uk

∂ui
∂xk

+
1

2

∂

∂xk
(uiuk)

)

− 2µ
∂

∂xj

(

εij −
εkk
3

δij

)

+
∂p

∂xi
− fi (9)

The first order FIC balance equation in space [18] can be used to obtain a stabilized formulation for the
momentum equation. For a vector equation such as Eq. (9), this results in [17]

rmi −
hij
2

∂rmi
∂xj

= 0 i, j ∈ {1, nd} No sum on i. (10)

where hij represents a tensor of characteristic lengths, which is related to the dimensions of the finite-sized
domain used to write the FIC balance equation. Specifically, for each component of the momentum residual
rmi , the i-th row of hij defines the characteristic lengths along coordinate directions j of the domain used to
write the i-th FIC balance equation. Note that, if the same domain is used to obtain a FIC balance for every
component of the linear momentum equation, the rows of hij will be identical. In this particular case, index
i can be dropped and we can speak of a vector of characteristic lengths h = {hj}, which corresponds to the
notation used in [1, 17].

We consider different possibilities to design hij . The first one is to define the characteristic lengths based on
the mesh size along the streamlines of the flow. This results in a method similar to the SUPG formulation [25].
A second option is to base the characteristic length on the size of the element along the direction of the gradient
of velocity. This acts as a source of additional diffusion, although the resulting formulation is not stable by
itself. Finally, we will also consider the possibility of combining both approaches.

3.1 Streamline diffusion formulation

As a first approach we consider characteristic lengths aligned with the streamlines of the flow for all components
of the momentum residual rmi , i. e.

hij := hu
uj
‖u‖

∀i (11)

where hu is the projected length of a given element along the direction of the flow, defined by the unit vector
u/ ‖u‖. Using this expression, we can rewrite Eq. (10) as

rmi −
hu

2 ‖u‖
uj

∂rmi
∂xj

(12)

Eq. (12) can be used as the starting point to write a stabilized formulation for the momentum equation.
Multiplying by a test function wi and integrating over the fluid domain we obtain

∫

Ω

(

wi r
m
i − wi

hu
2 ‖u‖

uk
∂rmi
∂xk

)

dΩ = 0 (13)

It is convenient to integrate by parts the second term in the left hand side of Eq. (13). Note that, as the
length hu will be defined as a constant quantity within each element, the boundary integral that appears in the
integration by parts should be understood as an integral over all elemental boundaries. This operation produces

∫

Ω

wi r
m
i dΩ +

∫

Ω

hu
2 ‖u‖

uk
∂wi
∂xk

rmi dΩ−
∑

(e)

∫

Γe

hu
2 ‖u‖

wi (uknk) r
m
i dΓ = 0 (14)

We have neglected the elemental boundary integrals that appear in Eq. (14) in the present work, which can be
understood as assuming that rmi vanishes on the element boundaries. At this point, we introduce in Eq. (14)
the definition of the residual, given by Eq. (9), and its gradient in Eq. (14). Integrating by parts the viscous
and pressure terms within the residual in the first integral of Eq. (14) gives

∫

Ω

wi ρ

(

∂tui +
1

2
uk

∂ui
∂xk

)

dΩ−

∫

Ω

1

2
uk

∂wi
∂xk

ρui dΩ +

∫

Ω

2µ
∂wi
∂xj

(

εij −
εkk
3

δij

)

dΩ−

∫

Ω

∂wi
∂xi

p dΩ

+

∫

Ω

hu
2 ‖u‖

uk
∂wi
∂xk

(

ρ∂tui + ρ

(

1

2
uk

∂ui
∂xk

+
1

2

∂

∂xk
(uiuk)

)

+
∂p

∂xi
− 2µ

∂

∂xj

(

εij −
εkk
3

δij

)

− fi

)

dΩ =

∫

Ω

wi fi dΩ +

∫

ΓN

wi ti dΓ−

∫

ΓN

1

2
ρwi (uknk)ui dΓ

(15)

3



where ti represents the i-th component of the tractions imposed on the Neumann boundary ΓN .
Note that, although Eq. (15) has been developed using a FIC based approach, the final expression is analogous

to a SUPG stabilized formulation, with hu/2 ‖u‖ (which has dimensions of time) playing the role of the SUPG
stabilization parameter τ [25].

Next, we need to provide a definition for hu to complete the formulation. In the present approach, we
calculate the characteristic element length using the size of the element in the direction of velocity u. Defining
the unit vector in the direction of velocity as eu and representing the element edge joining nodes a and b with
the vector lab, the element length is given by

hu = max
edges

{eu · lab} with eu =
u

‖u‖
(16)

This is shown graphically for triangles and quadrilaterals in Fig. 1, but the same procedure is applied in 3D to
obtain the elemental length using the edges of tetrahedra and hexahedra.

1

2

3

hu

u

1
2

3
4

u
hu

Figure 1: Definition of the element lenght hu for triangles and quadrilaterals.

In practice, Eq. (16) is evaluated at the integration points of each element. In the case that velocity is (close
to) zero on a given point for a given time step, eu is undefined and this expression cannot be used. If this
happens, an average element length can be used instead. The characteristic length we use in this case is the
one corresponding to the stabilized mass equation, which will be introduced in Eq. (38).

3.2 Gradient diffusion formulation

An alternate approach to closing Eq. (11) is to measure the characteristic length in the direction of the gradient
of the i-th component of the velocity, ∇ui = ∂ui/∂xj , given by

hij := hgi
1

‖∇ui‖

∂ui
∂xj

No sum on i. (17)

which, as before, can be used to write a FIC balance statement for each component of the momentum equation,
resulting in

rmi −
hgi

2 ‖∇ui‖

∂ui
∂xj

∂rmi
∂xj

No sum on i. (18)

We can obtain a variational form of the FIC momentum balance equation defined by Eq. (18) by following the
same procedure as for the streamline formulation in Section 3.1. Multiplying Eq. (18) by a test function wi and
integrating over the fluid domain we obtain

∫

Ω

wi r
m
i dΩ−

∫

Ω

wi
hgi

2 ‖∇ui‖

∂ui
∂xj

∂rmi
∂xj

dΩ = 0 (19)

The first integral in Eq. (19) is identical to the first term of Eq. (14) and can be developed as in the previous
section. We direct our attention towards the second term in Eq. (19), which can be integrated by parts as
follows

−

∫

Ω

wi
hgi

2 ‖∇ui‖

∂ui
∂xj

∂rmi
∂xj

dΩ =

∫

Ω

∂

∂xj

(

wi
hgi

2 ‖∇ui‖

∂ui
∂xj

)

rmi −

∫

Ω

∂

∂xj

(

wi
hgi

2 ‖∇ui‖

∂ui
∂xj

rmi

)

dΩ =

∫

Ω

∂wi
∂xj

hgi
2 ‖∇ui‖

∂ui
∂xj

rmi dΩ +

∫

Ω

wi
∂

∂xj

(

hgi
2 ‖∇ui‖

∂ui
∂xj

)

rmi dΩ−

∫

Ω

∂

∂xj

(

wi
hgi

2 ‖∇ui‖

∂ui
∂xj

rmi

)

dΩ

(20)

From the three terms in the last equality of Eq. (20), only the first is retained. The second one is neglected
as it involves either spatial derivatives of the characteristic length or second derivatives of velocity. The last

4



term can be transformed into a boundary integral using the divergence theorem, and is dropped for the same
reasons we neglected the boundary terms in the streamline formulation. Finally, it is convenient to rewrite the
remaining term as

∫

Ω

∂wi
∂xj

(

hgir
m
i

2 ‖∇ui‖
δik

)

∂uk
∂xj

dΩ (21)

If we choose the characteristic length such that hgir
m
i > 0, Eq. (21) describes the discrete version of a non-

isotropic Laplacian, where the diffusivity for each coordinate direction is different. The diffusivity coefficient
in this case is proportional to the magnitude of the finite element residual on each coordinate direction and
exhibits a similar structure to that of a shock-capturing formulation, such as the ones analyzed in [26]. The
numerical diffusion added on each direction is defined by the diagonal tensor D

g
ij as

D
g
ij =

hgir
m
i

2 ‖∇ui‖
δij No sum on i. (22)

Returning to Eq. (19), this reasoning allows us to rewrite the weak form for the gradient diffusion formulation
as

∫

Ω

wi r
m
i dΩ +

∫

Ω

∂wi
∂xj

D
g
ik

∂uk
∂xj

dΩ = 0 (23)

As in the streamline diffusion case, we need to provide a definition for the characteristic lengths to close
the formulation. We follow an analogous procedure to do so, now using the gradient of the i-th component of
velocity to define the direction of projection. The characteristic element length for the i-th coordinate direction
is therefore defined as

hgi = max
edges

{egi · lab} with egi =
∇ui

‖∇ui‖
No sum on i. (24)

It must be noted that the formulation of Eq. (23) by itself is not sufficient to stabilize convection-dominated
flows in general. A possible solution, which is presented in the following section, is to combine the gradient-
diffusion formulation with the streamline based one.

3.3 Combined streamline-gradient diffusion approach

We consider a combined approach that blends the stabilizing terms of the streamline-diffusion formulation and
the additional diffusion provided by the gradient formulation. In this case, the FIC expression for the momentum
equation reads

rmi − βi
hu

2 ‖u‖
uj

∂rmi
∂xj

− (1− βi)
hgi

2 ‖∇ui‖

∂ui
∂xk

∂rmi
∂xk

No sum on i. (25)

where βi ∈ [0, 1] is a combination parameter, which, in principle, can be different for each component of the
momentum equation.

The combined variational formulation can be derived following the same steps as each of its components,
which has been presented in the previous pages. Therefore, the final expression for the weak form, obtained by
multiplying Eq. (15) by βi and Eq. (23) by 1− βi and adding the result, is given as

∫

Ω

wi ρ

(

∂tui +
1

2
uk

∂ui
∂xk

)

dΩ−

∫

Ω

1

2
uk

∂wi
∂xk

ρui dΩ +

∫

Ω

2µ
∂wi
∂xj

(

εij −
εkk
3

δij

)

dΩ−

∫

Ω

∂wi
∂xi

p dΩ

+

∫

Ω

βi
hu

2 ‖u‖
uk

∂wi
∂xk

(

ρ∂tui + ρ

(

1

2
uk

∂ui
∂xk

+
1

2

∂

∂xk
(uiuk)

)

+
∂p

∂xi
− 2µ

∂

∂xj

(

εij −
εkk
3

δij

)

− fi

)

dΩ

+

∫

Ω

∂wi
∂xj

(1− βi)D
g
ik

∂uk
∂xj

dΩ =

∫

Ω

wi fi dΩ +

∫

ΓN

wi ti dΓ−

∫

ΓN

1

2
ρwi (uknk)ui dΓ

(26)

with D
g
ik as defined by Eq. (22).

In principle, the combination parameter βi can take any value in the range βi ∈ [0, 1]. The limit case βi = 1
results in the classical FIC streamline formulation for the momentum equations, used for example in [18] or [20].
This formulation is very close to the SUPG stabilization procedure, but uses the stabilization parameter of
Eq. (13), derived from FIC principles. On the other end of the range, βi = 0 implies using the gradient diffusion
term exclusively and results in a formulation that is not numerically stable for convection-dominated problems.
In the present work, we have experimented using a constant value βi = β for all components of the momentum
equation. Numerical results have evidenced that values of β ≥ 0.5 are typically needed for the problem to be
stable for all flow regimes, while values of β in the range 0.7 ∼ 0.9 typically give the best results.

5



In addition to defining the value of βi as a fixed quantity for the entire simulation, we have also experimented
with the possibility of using the local features of the flow to derive a value for βi. In these simulations we have
set a local value for βi depending on the directions of velocity and its gradient:

βi = max

{

1−
uk (∂ui/∂xk)

‖u‖ ‖∇ui‖
, βm

}

No sum on i. (27)

where βm is a minimum value to prevent the loss of stability if the velocity becomes parallel to ∇ui in some
point. Note that the value of βi that is obtained using Eq. (27) is different for each coordinate direction i.
This means that, if this expression is used, both the streamline terms and the gradient terms in Eq. (26) are
non-isotropic.

4 Stabilized mass balance equation

We follow the approach presented in [22, 21] to obtain a stabilized formulation for the mass balance equation
given by Eq. (2). A similiar strategy was used in [2] to for a quasi-incompressible fluid formulation. We introduce
the following notation for the mass balance residual:

rc :=
∂uk
∂xk

= εkk (28)

which can be used to derive the second order FIC balance in space as (see [22])

rc +
h2j
12

∂2rc

∂x2j
= εkk +

h2j
12

∂2εkk
∂x2j

= 0 (29)

The expression of second order mass balance was originally introduced to obtain a stabilized formulation
for incompressible flows in [22], where it was derived by expressing the balance of mass within a rectangular
domain. This reference shows that Eq. (29) can be obtained by writing the velocities along the boundaries of
the rectangle as a Taylor series expansion of the velocity on its center and retaining terms up to third order.

Now the problem consists in evaluating ∂2εkk/∂x
2
j , ideally without requiring higher-order continuity in our

velocity field. To do so, we return to the momentum balance equation as stated in Eq. (9). Assuming we have
an equilibrium solution, which implies rmi = 0, and using the identity

∂

∂xk
(uiuk) = uk

∂ui
∂xk

+ ui
∂xk
∂xk

= uk
∂ui
∂xk

+ ui εkk (30)

we can rearrange the terms in the momentum balance equation to read

ρ ∂tui + ρ uk
∂ui
∂xk

+
1

2
ρ εkkui − 2µ

∂

∂xj

(

εij −
εkk
3

δij

)

+
∂p

∂xi
− fi = 0 (31)

Grouping all terms involving εkk we obtain

−
ρ ui
2

εkk −
2µ

3

∂εkk
∂xi

= ρ ∂tui + ρ uk
∂ui
∂xk

− 2µ
∂εij
∂xj

+
∂p

∂xi
− fi = r̂

m
i (32)

where we introduced the notation of r̂mi for the right hand side of Eq. (32) for compactness. At this point it is
helpful to write the first order FIC balance for the continuity equation [17]

εkk −
hi
2

∂εkk
∂xi

= 0 (33)

and use it to express εkk in terms of its derivative in Eq. (32). This gives

−

(

ρ ujhj
4

+
2µ

3

)

∂εkk
∂xi

= r̂mi (34)

Next we introduce Eq. (34) in Eq. (29) to write

rc +
h2i
12

∂

∂xi

(

∂εkk
∂xi

)

= rc −
h2i
12

∂

∂xi

(

(

ρ ujhj
4

+
2µ

3

)

−1

r̂mi

)

= 0 (35)

Neglecting the spatial variation of the product hjuj, we take the coefficient that multiplies r̂
m
i out of the

derivative, obtaining

rc −
h2i
12

(

ρ ujhj
4

+
2µ

3

)

−1
∂r̂mi
∂xi

= 0 (36)

6



Eq. (36) expresses the basic FIC mass balance statement used in the present work. In our computation we use
however a slightly modified version of Eq. (36), following the ideas of [2]

rc − τc
∂r̂mi
∂xi

= 0 (37)

where τc is an isotropic stabilization parameter defined as

τc :=

(

3ρ ‖u‖

h
+

8µ

h2

)

−1

(38)

In the expression of τc we use the norm of the velocity and the average element length h, which is calculated as
the square root of the elemental area in 2D or the cubic root of the elemental volume in 3D.

Next we multiply Eq. (37) by a test function q and integrate over the fluid domain Ω to obtain the weak
form of the FIC mass balance equation

∫

Ω

q rc dΩ−

∫

Ω

qτc
∂

∂xi

(

ρ∂tui + ρuk
∂ui
∂xk

− 2µ
∂

∂xj
εij +

∂p

∂xi
− fi

)

dΩ = 0 (39)

It is convenient to integrate by parts the second integral in Eq. (39) to reduce the order of the derivatives
involved. As in the momentum equation, the boundary terms resulting from this operation are neglected in the
present work, obtaining the expression

∫

Ω

q
∂ui
∂xi

dΩ +

∫

Ω

∂q

∂xi
τc

(

ρ∂tui + ρuk
∂ui
∂xk

− 2µ
∂

∂xj
εij +

∂p

∂xi
− fi

)

dΩ = 0 (40)

Eq. (40) represents a FIC-based stabilized formulation for the continuity equation, similar to that obtained in
Galerkin-Least squares (GLS) formulations [27]. Note that the stabilization parameter τc, defined in Eq. (38),
has the same structure as the classical SUPG or GLS characteristic time τ .

In addition to the formulation given by Eq. (40), we have also tested a variant involving the projection of
r̂mi onto the finite element mesh. Consider the following modified version of Eq. (37)

∂ui
∂xi

+ τc
∂

∂xi
(r̂mi − πi) = 0 (41)

where π represents the L2 projection onto the finite element mesh of r̂
m, that is to say, the solution of

∫

Ω

wiπi dΩ =

∫

Ω

wir̂
m
i dΩ (42)

This formulation results in the following weak form, again neglecting boundary terms, which substitutes Eq. (40).
∫

Ω

q
∂ui
∂xi

dΩ +

∫

Ω

∂q

∂xi
τc

(

ρ∂tui + ρuk
∂ui
∂xk

− 2µ
∂

∂xj
εij +

∂p

∂xi
− fi + πi

)

dΩ = 0 (43)

We use Eq. (43) as the reference formulation in the following, with the understanding that any terms involving
πi can be dropped to recover the formulation without projections.

5 Finite element formulation

Combining the stabilized momentum equation given by Eq. (26) and that of Eq. (43) for the continuity equation
we write the complete stabilized weak form of the problem, which can be used to obtain a finite element
formulation.

In the present work we restrict ourselves to linear finite elements, using triangular and quadrilateral elements
in 2D or tetrahedra and hexahedra in 3D. This means that all terms involving second derivatives of velocity
in Eqs. (26) and (43) can be neglected, as they are identically zero when using linear interpolations. The full
formulation, without second order terms, is given by

Momentum

∫

Ω

wi ρ

(

∂tui +
1

2
uk

∂ui
∂xk

)

dΩ−

∫

Ω

1

2
uk

∂wi
∂xk

ρui dΩ +

∫

Ω

2µ
∂wi
∂xj

(

εij −
εkk
3

δij

)

dΩ−

∫

Ω

∂wi
∂xi

p dΩ

+

∫

Ω

βi
hu

2 ‖u‖
uk

∂wi
∂xk

(

ρ∂tui + ρ

(

1

2
uk

∂ui
∂xk

+
1

2

∂

∂xk
(uiuk)

)

∂p

∂xi
− fi

)

dΩ +

∫

Ω

∂wi
∂xj

(1− βi)D
g
ik

∂uk
∂xj

dΩ =

∫

Ω

wi fi dΩ +

∫

ΓN

wi ti dΓ−

∫

ΓN

1

2
ρwi (uknk)ui dΓ

(44)

7



Mass balance

∫

Ω

q
∂ui
∂xi

dΩ +

∫

Ω

∂q

∂xi
τc

(

ρ∂tui + ρuk
∂ui
∂xk

+
∂p

∂xi
− fi + πi

)

dΩ = 0 (45)

with

D
g
ik =

hgir
m
i

2 ‖∇ui‖
δik τc =

(

3ρ ‖u‖

h
+

8µ

h2

)

−1

βi ∈ [0, 1]

5.1 Spatial discretization

We introduce a finite element discretization Ωh of the problem domain Ω. The problem variables u and p can
be then approximated with the usual finite element interpolation as

uh i =

nn
∑

a

Na (x)ua i ph =

nn
∑

a

Na (x) pa (46)

where nn represents the number of nodes in the finite element mesh, ua and pa are the variables evaluated at node
a and Na (x) is the standard linear finite element function associated to node a. Furthermore, we introduce the
notation U , U̇ and P to indicate the vectors of nodal values for velocity, acceleration and pressure, respectively.
Introducing the finite element interpolation of Eq. (46) in Eqs. (44) and (45) and taking in turn each each nodal
shape function Na as test functions wi, q, we obtain a system of nn equations that can be expressed in matrix
form as

[

M +MK 0
MD 0

] [

U̇

0

]

+

[

C +K + SK +DG G+ SG
D + SD L

] [

U

P

]

=

[

F + SF
SQ + SΠ

]

(47)

The different matrices in Eq. (47) represent the discrete form of the terms in Eqs. (44) and (45). Each one of
them can be built by finite element assembly of elemental contributions. Using a and b to denote node indices
and i, j, k to denote coordinate directions, the block matrices in Eq. (47) that correspond to standard Galerkin
terms can be defined as

M
ab
ij =

∫

Ωe

ρNaNbδij dΩ

G
ab
i = −

∫

Ωe

∂Na
∂xi

Nb dΩ

D
ab
j =

∫

Ωe

Na
∂Nb
∂xj

dΩ

C
ab
ij =

∫

Ωe

ρ
1

2

(

Na uh k
∂Nb
∂xk

− uh k
∂Na
∂xk

Nb

)

δij dΩ

K
ab =

∫

Ωe

B
T
aCµBb dΩ

F
a
i =

∫

Ωe

Na fi dΩ +

∫

ΓN

Na

(

ti − ρ
1

2
(uh k nk)Nb

)

dΓ

(48)

where, to define the viscous matrix Kab, we have introduced the elemental strain rate-velocity matrix Ba,
corresponding to the contribution from node a, and the constitutive matrix Cµ. For 3D problems, these are
defined by

B
T
a =



















∂Na
∂x

0 0
∂Na
∂y

0
∂Na
∂z

0
∂Na
∂y

0
∂Na
∂x

∂Na
∂z

0

0 0
∂Na
∂z

0
∂Na
∂y

∂Na
∂x



















Cµ =

















4µ/3 −2µ/3 −2µ/3 0 0 0
−2µ/3 4µ/3 −2µ/3 0 0 0
−2µ/3 −2µ/3 4µ/3 0 0 0

0 0 0 µ 0 0
0 0 0 0 µ 0
0 0 0 0 0 µ

















(49)

Similarly, the stabilization terms in Eq. (44) and Eq. (45) give rise to the following block matrices

MK
ab
ij =

∫

Ωe

ρβi
hu

2 ‖u‖

(

uh k
∂Na
∂xk

)

Nbδij dΩ

MD
ab
i =

∫

Ωe

ρτc
∂Na
∂xi

Nb dΩ

SK
ab
ij =

∫

Ωe

ρβi
hu

2 ‖u‖

(

uh k
∂Na
∂xk

)(

uh l
∂Nb
∂xl

)

dΩ

SG
ab
i =

∫

Ωe

βi
hu

2 ‖u‖

(

uh k
∂Na
∂xk

)

∂Nb
∂xi

dΩ

DG
ab
ij =

∫

Ωe

(1− βi)

(

∂Na
∂xk

)

D
g
ij

(

∂Nb
∂xk

)

dΩ

SD
ab
i =

∫

Ωe

τcNa
∂Nb
∂xi

dΩ

L
ab =

∫

Ωe

τc

(

∂Na
∂xk

)T
∂Nb
∂xk

dΩ

SF
a
i =

∫

Ωe

βi
hu

2 ‖u‖

(

uh k
∂Na
∂xk

)

fi dΩ

SQ
a =

∫

Ωe

τc
∂Na
∂xi

fi dΩ

SΠ
a = −

∫

Ωe

τc
∂Na
∂xi

πi dΩ

(50)

8



Eq. (47) can be written using a compact notation as

M̃

[

U̇

0

]

+ C̃

[

U

P

]

= F̃ (51)

If projections are used in the stabilization of the incompressibility equation, an additional system has to be
solved to determine the nodal values of the projection variables π. The equations for the projection can be
obtained from the discrete version of Eq. (42), resulting in

MΠΠ = RΠ (52)

where Π is the array of nodal values for the projection variables and

MΠ
ab
ij =

∫

Ωe

NaNbδij dΩ (53)

RΠ
a
i =

∫

Ωe

Nar̂
m
i dΩ (54)

Note that the assembly of elemental contributions given by Eq. (53) results in a dense matrix. In practice,
the system matrix MΠ in Eq. (52) can be approximated by a diagonal mass matrix for efficiency.

5.2 Time integration and linearization

The problem described by Eqs. (44) and (45) involves the acceleration of the fluid. We need to introduce a time
discretization to write the accelerations in terms the velocities. For this we have used the Bossak time scheme
(see [28]). The Bossak method is a generalization of the Newmark method based on introducing a relaxation
factor αB for the acceleration of the system

(1− αB)M̃

[

U̇n+1
0

]

+ αBM̃

[

U̇n
0

]

+ C̃

[

Un+1
P n+1

]

= F̃ (55)

where n and n + 1 denote two consecutive time steps. A common choice for the relaxation parameter is
αB = −0.3, which provides maximum damping of high-frequency oscillations.

In the Bossak scheme, the acceleration is obtained through the Newmark update formula, which can be
expressed in terms of the nodal fluid velocities as

u̇n+1 =
1

γN∆t
(un+1 − un)−

(

1

γN
− 1

)

u̇n (56)

where the Newmark parameter γN is given by

γN =
1

2
− αB (57)

Introducing Eq. (56) in Eq. (55) we obtain the following time-discrete problem, where the velocities and
pressures at the new time step are the only unknowns

(

1− αB
γN∆t

M̃ + C̃

)[

Un+1
P n+1

]

= F̃ −
1− αB
γN∆t

M̃

[

Un
0

]

+

{

(1− αB)

(

1

γN
− 1

)

+ αB

}

M̃

[

U̇n
0

]

(58)

Eq. (58) describes a system of non-linear equations in terms of the nodal values of velocity and pressure at
time t = (n+ 1)∆t. The non-linearity arises from the fact that both the system matrix and the right-hand
side term contain terms which depend on the current values of the variables, namely all terms involving the
convective term uk∂ui/∂xk, stabilization terms due to the dependence of the different stabilization coefficients
on the local velocity ui and the gradient diffusion term, which involves both the momentum residual r

m
i and

the velocity gradients ∇ui. To obtain a linearized problem, we rewrite Eq. (58) in residual form. Defining the
value of the unknowns at time step n+ 1 after i non-linear iterations as U in+1, the linearized problem can be
written as

R
i
n+1

(

U
i
n+1,P

i
n+1

)

=F̃
i
−

1− αB
γN∆t

M̃
i
[

Un
0

]

+

{

(1− αB)

(

1

γN
− 1

)

+ αB

}

M̃
i
[

U̇n
0

]

−

(

1− αB
γN∆t

M̃
i
+ C̃

i
)[

U
i
n+1

P
i
n+1

] (59)

9



where the index i is used to denote that a quantity was computed using the values of velocity and pressure of
iteration i.

Defining the increments between two successive iterations as δU i = U i+1n+1−U
i
n+1 and δP

i = P i+1n+1−P
i
n+1,

we can obtain a fixed point scheme to solve Eq. (59) by imposing that Rin+1
(

U
i
n+1 + δU

i,P in+1 + δP
i
)

= 0.
Assuming that all matrices are evaluated at step i, this yields

−

(

1− αB
γN∆t

M̃ + C̃

)[

δU i

δP i

]

= Rin+1
(

U
i
n+1,P

i
n+1

)

(60)

The problem given by Eq. (60) is solved iteratively until the increments δU i and δP i or the residual vector
R

i
n+1

(

U
i
n+1,P

i
n+1

)

are smaller than a predefined tolerance.

5.3 Summary of the FIC-FEM solution scheme

Starting from the weak form described by Eq. (44) and Eq. (45), we have introduced a finite element discretiza-
tion in space and a time discretization based on the Bossak method. Additionally, a Picard linearization has
been used to obtain a linear system of equations to be solved iteratively, given by Eq. (60). To summarize, the
complete FIC-FEM solution procedure is presented in compact form in Box 1.

1: for n in {0, 1, ..., nsteps} do
2: n = n+ 1, t = t+∆t
3: while

∥

∥R
i
n+1

∥

∥ ≤ tolerance do
4: i = i+ 1
5: for all elements do
6: if Using dynamic procedure for β then
7: Compute βi according to Eq. (27)
8: end if

9: Evaluate local contributions using Eqs. (48)–(50).
10: Assemble local contributions to the linear system of Eq. (60).
11: end for

12: Solve Eq. (60) for δU i, δP i.
13: Update variables U i+1n+1,P

i+1
n+1.

14: if Using projections then
15: for all elements do
16: Assemble projection problem using Eqs. (53) and (54).
17: end for

18: Obtain new values for the projection by solving Eq. (52).
19: end if

20: end while

21: Calculate U̇
i+1

n+1 according to Eq. (56).
22: end for

Box 1: FIC-FEM incompressible flow solver.

This formulation has been implemented within the Kratos Multiphysics code [29], a software framework for
the development of finite element solvers.

6 Example 1. Turbulent channel flow

The flow in a plane turbulent channel is a classic turbulence benchmark and represents a challenging problem
for LES formulations, due to the dependence of the vortex size to the distance to the wall [30]. It has been
studied for a wide range of Reynolds numbers, but we direct our attention to the moderate value of Reτ = 395.
There is an extensive bibliography regarding this case, with a comprehensive set of statistical data obtained
from direct numerical simulations by Moser and co-authors [31]. In particular, this problem has been simulated
using a variety of stabilized formulations, both using classical finite elements [4, 5, 6, 16] and isogeometric
elements [14, 13].

This Reynolds number is very convenient because it allows us to use a mesh with enough resolution close
to the wall while keeping the computational cost under control. At higher Reynolds numbers, the number of
elements required to have a mesh fine enough for LES-type models close to the wall increases prohibitively and
some type of wall model is usually preferable (see for example [32] or [33]).

10



The plane turbulent channel problem simulates a flow driven by a fixed pressure gradient between two
parallel infinite walls. Defining the distance between the two walls as 2δ, the problem is formulated in terms of
the wall friction τw and the friction velocity uτ

τw = −δ
dP

dx
= ρu2τ or uτ =

(

−
δ

ρ

dP

dx

)
1

2

(61)

where dP/dx is the imposed pressure gradient. Using the definitions of Eq. (61), the turbulent channel problem
can be characterized by the friction Reynolds number Reτ , defined as

Reτ =
uτδ

ν
(62)

which is set to Reτ = 395 for the present simulation. The results are presented in terms of the dimensionless
distance to the wall y+ = uτy/ν.

To perform the simulation at the desired Reynolds number, we have selected the following parameters:

ρ = 1Kg/m3 ν = 1.472× 10−4m2/s

δ = 1m
dP

dx
= −3.372040× 10−3N/m2

(63)

6.1 Problem definition

We model a domain defined by [0, 2π] × [−δ, δ] × [0, 2π/3] in the stream-wise, wall-normal and cross-stream
directions respectively, using the same domain as in [14]. Zero velocity Dirichlet conditions are assigned on the
wall sides and periodic boundary conditions are used in the remaining directions.

The problem has been modeled using linear hexahedral or tetrahedral elements. Mesh nodes are placed
regularly along the stream-wise and cross-stream directions, while a weighting function is used in the wall-
normal direction to move the nodes closer to the wall. The location yi of the i-th node in the wall-normal
direction is chosen as

yi = δ

tanh

(

w

(

2i

nel
− 1

))

tanh (w)
i ∈ [0, nel] (64)

with w = 2.432 for nel = 64 and w = 2.927 for nel = 32, chosen so that the first layer of internal nodes is
at a dimensionless distance to the wall y+ = 1. For the tetrahedral meshes, the hexahedral space defined by
successive nodes along each direction is split into six tetrahedra.

The time step for the simulation is chosen as ∆t = 0.04 s which, according to the analysis in [34], is sufficient
to reproduce the features of the flow. We use the expected average velocity profile as the initial condition,
adding a random fluctuation in the wall-normal direction to destabilize the flow. Once an unsteady solution
develops, the flow is left to evolve until it reaches a statistically homogeneous regime. Statistical results are
collected by sampling the quantities of interest at the integration points of each element, averaging over time
and over planes parallel to the walls.

We have performed multiple simulations using these settings to study the behavior of different variants of
the FIC-FEM formulation presented in the preceding pages. Note that all turbulent channel flow cases were
run using the projections for the mass stabilization in Eq. (43).

6.2 Fixed combination parameter

The first set of test cases use the FIC formulation with a fixed combination parameter. We introduce the
notation 〈x〉 to describe the average of quantity x (in time and over directions of statistical homogeneity) and
x′ := x−〈x〉 to denote its fluctuation. The average stream-wise velocity 〈u〉, relative to the friction velocity uτ ,
is shown in Fig. 2(a) for tetrahedral meshes and in Fig. 2(c) for hexhahedra. Both figures also show the DNS
results of Moser et al. [31] for the same Reynolds number, which we adopt as a reference solution.

In addition to studying the solution in terms of the average flow, we are also interested in quantifying the
fluctuation in our solution, which should be properly captured if we want to represent turbulent flows accurately.
We introduce the distribution of turbulence kinetic energy along the wall-normal direction as a second quantity
of interest. Turbulence kinetic energy is defined in terms of the velocity variances as

k =
1

2
(〈u′u′〉+ 〈v′v′〉+ 〈w′w′〉) (65)

and is shown in Fig. 2(a) for the cases simulated using tetrahedral meshes and in Fig. 2(d) for hexahedra, again
compared to the DNS reference solution. In addition, the individual velocity variance components in Eq. (65)
are presented in the plots of Fig. 3.

11



10
−1

10
0

10
1

10
2

y+

0

5

10

15

20

25

〈u
〉
/
u
τ

(a) Average stream-wise velocity (tetrahe-
dra).

0 50 100 150 200 250 300 350 400

y+

0

1

2

3

4

5

6

7

k
/
u
2 τ

Moser et al.

6× 643 tet. β = 0.5

6× 643 tet. β = 0.8

6× 643 tet. β = 1.0

(b) Turbulence kinetic energy (tetrahedra).

10
−1

10
0

10
1

10
2

y+

0

5

10

15

20

25

〈u
〉
/
u
τ

(c) Average stream-wise velocity (hexahe-
dra).

0 50 100 150 200 250 300 350 400

y+

0

1

2

3

4

5

k
/
u
2 τ

Moser et al.

643 hexa. β = 0.5

643 hexa. β = 0.8

643 hexa. β = 1.0

(d) Turbulence kinetic energy (hexahedra).

Figure 2: Channel flow – average stream-wise velocity and turbulence kinetic energy profiles obtained using
hexahedral or tetrahedral elements elements and a fixed β, compared to the DNS data of Moser et al. [31].

0 50 100 150 200 250 300 350 400

y+

0.0
0.5
1.0
1.5
2.0
2.5
3.0
3.5
4.0
4.5

〈u
′
u
′
〉1

/
2
/
u
τ

Moser et al.

6× 643 tet. β = 0.5

6× 643 tet. β = 0.8

6× 643 tet. β = 1.0

(a) Stream-wise fluctuation 〈u′u′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

〈v
′
v
′
〉1

/
2
/
u
τ

(b) Wall-normal fluctuation 〈v′v′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

1.2

1.4

〈w
′
w

′
〉1

/
2
/
u
τ

(c) Cross-stream fluctuation 〈w′w′〉.

0 50 100 150 200 250 300 350 400

y+

0.0
0.5
1.0
1.5
2.0
2.5
3.0
3.5
4.0
4.5

〈u
′
u
′
〉1

/
2
/
u
τ

Moser et al.

643 hexa. β = 0.5

643 hexa. β = 0.8

643 hexa. β = 1.0

(d) Stream-wise fluctuation 〈u′u′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

〈v
′
v
′
〉1

/
2
/
u
τ

(e) Wall-normal fluctuation 〈v′v′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

1.2

1.4

〈w
′
w

′
〉1

/
2
/
u
τ

(f) Cross-stream fluctuation 〈w′w′〉.

Figure 3: Channel flow – Reynolds stresses obtained using hexahedral or tetrahedral elements using a fixed β,
compared to Moser et al. [31].

12



Finally, we measure the dissipation of average stream-wise linear momentum in the wall-normal direction.
We know from studying the RANS momentum equation that the total mean shear stress in the xy plane can
be written as (see for example [30] or [3])

〈τxy〉 = −ρ 〈u
′v′〉+ µ

∂ 〈u〉

∂y
= τw

y

δ
(66)

where the first term of the middle equality represents the Reynolds stresses in the xy plane and the second the
viscous stress due to the average velocity. This decomposition is shown in Fig. 4 for the simulation performed
using hexahedral elements and β = 0.8. The balance of stresses for the average solution implies that the total
mean shear stress 〈τxy〉 is equal to ρu

2
τ (in module) at the walls and varies linearly on the wall-normal direction

(see for example [30]). The fact that the addition of the two terms, as measured in the simulation, is close to
the expected straight line allows us to verify that the solution has reached statistical equilibrium.

−1.0 −0.8 −0.6 −0.4 −0.2 0.0

〈τxy〉

0

50

100

150

200

250

300

350

400

y
+

Total

Reynolds −〈u′v′〉 /u2τ

Viscous (ν∂ 〈u〉 /∂y) /u2τ

Figure 4: Channel flow – average 〈τxy〉 stress profile obtained using a mesh with 64
3 hexahedra and fixing

β = 0.8.

We observe that the results obtained with linear hexahedra are closer to the reference values than those
obtained with linear tetrahedra in all cases. This can also be seen in Fig. 5, which shows both the tetrahedral
and hexhahedral solutions for β = 0.8. This is to be expected, as hexahedra use trilinear shape functions, which
define a richer interpolation than the linear functions used in tetrahedra.

Figs. 2 and 3 give us an idea of the dependence of the solution on the free parameter of the formulation,
β, which is set a priori. We observe that there is not a large amount of variation between the different cases,
although the β = 0.5 case tends to display a lower level of velocity fluctuations in all directions and, conversely,
large values of β produce more fluctuation. This suggests that small values of β, which give more weight to the
gradient diffusion term, result in a solution that is more diffusive overall.

6.3 Variable combination parameter

The next set of tests has been performed using Eq. (27) to assign a value to the combination parameter βi,
while keeping the remaining simulation settings as in the fixed beta case. In a first round, we set the minimum
value of the coefficient to βm = 0.8 and simulate the problem using both hexahedral and tetrahedral meshes.
The averaged results of the simulation are presented in Fig. 5, where they are compared to those obtained for
a fixed coefficient in the previous section.

We can see in the figures that the average velocity profiles are generally lower to those obtained in the fixed
β cases and in better agreement with DNS data. Conversely, velocity fluctuations measured in the stream-wise
direction are somewhat lower than in the fixed β simulations, resulting in a turbulence kinetic energy that is
closer to that measured in the reference DNS simulations.

As in the previous case, we want to measure the impact on the results of the choice of the limit value βm
for the combination coefficient. To test its influence, we have run several simulations for tetrahedra (Fig. 6)
and hexahedra (Fig. 7), changing the value of βm. Results in good agreement with the reference DNS data
are obtained for βi ≥ 0.8 and βi ≥ 0.9. In general, results results show limited sensitivity to the choice of
parameter, at least for large values of the β parameter.

A different question regarding the behavior of the method is the sensitivity of the solution to the choice of
mesh size. In addition to the presented simulations, we have repeated the case βi ≥ 0.8 using different mesh
sizes, namely two coarser meshes composed of 323 hexahedra and 6 × 323 tetrahedra as well as one finer case
with a 1283 hexahedra mesh. The results for these simulations are presented in Fig. 8 for tetrahedra and Fig. 9
for hexahedra, compared to the previous results for the same case. Again, we notice a clear difference in the
behaviour of tetrahedra and hexahedra. In particular, it seems that the coarser tetrahedral mesh is insufficient
to reproduce the features of the problem, resulting in a significantly larger average velocity.

Finally, we present in Fig. 10 the energy spectrum corresponding to the solution of the case with a 323

hexahedra mesh and a variable combination coefficient βi ≥ 0.8. This result has been calculated using the

13



10
−1

10
0

10
1

10
2

y+

0

5

10

15

20

25

〈u
〉
/
u
τ

(a) Average stream-wise velocity

0 50 100 150 200 250 300 350 400

y+

0

1

2

3

4

5

6

7

k
/
u
2 τ

Moser et al.

643 hexa. β = 0.8

6× 643 tet. β = 0.8

643 hexa. β ≥ 0.8

6× 643 tet. β ≥ 0.8

(b) Turbulence kinetic energy.

0 50 100 150 200 250 300 350 400

y+

0.0

0.5

1.0

1.5

2.0

2.5

3.0

3.5

〈u
′
u
′
〉1

/
2
/
u
τ

(c) Stream-wise fluctuation 〈u′u′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

〈v
′
v
′
〉1

/
2
/
u
τ

(d) Wall-normal fluctuation 〈v′v′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

1.2

1.4

〈w
′
w

′
〉1

/
2
/
u
τ

(e) Cross-stream fluctuation 〈w′w′〉.

Figure 5: Channel flow – velocity average and variances using a fixed or variable combination parameter.

10
−1

10
0

10
1

10
2

y+

0

5

10

15

20

25

〈u
〉
/
u
τ

(a) Average stream-wise velocity

0 50 100 150 200 250 300 350 400

y+

0

1

2

3

4

5

6

k
/
u
2 τ

Moser et al.

6× 643 tet. β ≥ 0.7

6× 643 tet. β ≥ 0.8

6× 643 tet. β ≥ 0.9

(b) Turbulence kinetic energy.

0 50 100 150 200 250 300 350 400

y+

0.0

0.5

1.0

1.5

2.0

2.5

3.0

3.5

〈u
′
u
′
〉1

/
2
/
u
τ

(c) Stream-wise fluctuation 〈u′u′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

1.2

〈v
′
v
′
〉1

/
2
/
u
τ

(d) Wall-normal fluctuation 〈v′v′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

1.2

1.4

〈w
′
w

′
〉1

/
2
/
u
τ

(e) Cross-stream fluctuation 〈w′w′〉.

Figure 6: Channel flow – velocity average and variances obtained using linear tetrahedra and different limits
for a variable combination parameter.

14



10
−1

10
0

10
1

10
2

y+

0

5

10

15

20

25

〈u
〉
/
u
τ

(a) Average stream-wise velocity

0 50 100 150 200 250 300 350 400

y+

0

1

2

3

4

5

k
/
u
2 τ

Moser et al.

643 hexa. β ≥ 0.7

643 hexa. β ≥ 0.8

643 hexa. β ≥ 0.9

(b) Turbulence kinetic energy.

0 50 100 150 200 250 300 350 400

y+

0.0

0.5

1.0

1.5

2.0

2.5

3.0

〈u
′
u
′
〉1

/
2
/
u
τ

(c) Stream-wise fluctuation 〈u′u′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

〈v
′
v
′
〉1

/
2
/
u
τ

(d) Wall-normal fluctuation 〈v′v′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

1.2

1.4

〈w
′
w

′
〉1

/
2
/
u
τ

(e) Cross-stream fluctuation 〈w′w′〉.

Figure 7: Channel flow – velocity average and variances obtained using linear hexahedra and different limits for
a variable combination parameter.

10
−1

10
0

10
1

10
2

y+

0

5

10

15

20

25

〈u
〉
/
u
τ

(a) Average stream-wise velocity

0 50 100 150 200 250 300 350 400

y+

0

1

2

3

4

5

6

7

8

k
/
u
2 τ

Moser et al.

6× 323 tetrahedra

6× 643 tetrahedra

(b) Turbulence kinetic energy.

0 50 100 150 200 250 300 350 400

y+

0.0
0.5
1.0
1.5
2.0
2.5
3.0
3.5
4.0

〈u
′
u
′
〉1

/
2
/
u
τ

(c) Stream-wise fluctuation 〈u′u′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

〈v
′
v
′
〉1

/
2
/
u
τ

(d) Wall-normal fluctuation 〈v′v′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

1.2

1.4

〈w
′
w

′
〉1

/
2
/
u
τ

(e) Cross-stream fluctuation 〈w′w′〉.

Figure 8: Channel flow – velocity average and variances obtained using different grid sizes (all results with a
variable βi ≥ 0.8).

15



10
−1

10
0

10
1

10
2

y+

0

5

10

15

20

25

〈u
〉
/
u
τ

(a) Average stream-wise velocity

0 50 100 150 200 250 300 350 400

y+

0

1

2

3

4

5

6

k
/
u
2 τ

Moser et al.

323 hexahedra

643 hexahedra

1283 hexahedra

(b) Turbulence kinetic energy.

0 50 100 150 200 250 300 350 400

y+

0.0

0.5

1.0

1.5

2.0

2.5

3.0

3.5

〈u
′
u
′
〉1

/
2
/
u
τ

(c) Stream-wise fluctuation 〈u′u′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

〈v
′
v
′
〉1

/
2
/
u
τ

(d) Wall-normal fluctuation 〈v′v′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

1.2

1.4

〈w
′
w

′
〉1

/
2
/
u
τ

(e) Cross-stream fluctuation 〈w′w′〉.

Figure 9: Channel flow – velocity average and variances obtained using different grid sizes (all results with a
variable βi ≥ 0.8).

10
0

10
1

10
2

kx

10
−8

10
−7

10
−6

10
−5

10
−4

10
−3

10
−2

10
−1
10

0
10

1

E
u
u

Variable β ≥ 0.8

Moser et al.

Euu ∝ k
−5/3
x

Figure 10: Channel flow – stream-wise energy spectrum obtained using a 323 hexahedra mesh and a variable
combination coefficient βi ≥ 0.8, compared to the DNS data of Moser et al. [31].

stream-wise velocity along the centerline of the channel and is found to be in agreement to the same measurement
in the data of Moser et al. [31] up to the highest wavenumbers allowed by mesh resolution. In addition, the

measured spectrum for the lower wavenumbers matches the theoretical slope of k
−5/3
x expected in the inertial

subrange, which has been plotted in the figure for reference.

6.4 Summary of the results

We summarize the main results for the analysis of the turbulent channel flow at Reτ = 395 test case. A first
general observation is that hexahedra produce more accurate solutions than tetrahedra for a given mesh size.
This was expected, since the interpolation space used for hexahedral meshes is richer, but our results allow us
to quantify the difference in this case. A comparison of Figs. 8 and Fig. 9 suggests that 6× 643 tetrahedra are
required to obtain results comparable to 323 hexahedra, which represents 48 times more elements in total.

Given that the formulation proposed here has a free parameter, the combination parameter βi, we studied
the sensitivity of the solution to its value. In the cases where βi is fixed throughout the simulation, the general
trend is to obtain lower variances the smaller the coefficient, which is equivalent to giving more weight to the
gradient diffusion term (see Fig. 3). This suggests that the gradient diffusion term introduces a significant
amount of numerical dissipation, resulting in more homogeneous solutions. In comparison, the average velocity
profile is less sensitive to the choice of parameter, as similar results are obtained in the different cases.

If the combination parameter βi is set on each element according to the local weighting function of Eq. (27),
the obtained velocity profiles are generally lower than those obtained with a fixed parameter and measured
variances show a better agreement with the DNS data. This is most noticeable for the 〈u′u′〉 correlation, which

16



10
−1

10
0

10
1

10
2

y+

0

5

10

15

20

25

〈u
〉
/
u
τ

(a) Average stream-wise velocity

0 50 100 150 200 250 300 350 400

y+

0

1

2

3

4

5

6

7

k
/
u
2 τ

Moser et al.

FIC β ≥ 0.8.

GLS.

GLS no div − div term.

(b) Turbulence kinetic energy.

0 50 100 150 200 250 300 350 400

y+

0.0

0.5

1.0

1.5

2.0

2.5

3.0

3.5

〈u
′
u
′
〉1

/
2
/
u
τ

(c) Stream-wise fluctuation 〈u′u′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

〈v
′
v
′
〉1

/
2
/
u
τ

(d) Wall-normal fluctuation 〈v′v′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

1.2

1.4

〈w
′
w

′
〉1

/
2
/
u
τ

(e) Cross-stream fluctuation 〈w′w′〉.

Figure 11: Channel flow – velocity average and variances obtained using FIC-FEM with a variable combination
coefficient βi ≥ 0.8 and the GLS method on a 6× 64

3 tetrahedra mesh.

is the larger contribution to the total turbulence kinetic energy (see Fig. 5). Using this approach, there is still
a parameter to be set externally, the minimum admissible value of β, but our results show little sensitivity to
this parameter, as can be observed in Fig. 6 for tetrahedra and Fig. 7 for hexahedra.

As a final verification, we compare the presented FIC-FEM approach to the more standard Galerkin-Least
squares (GLS) method. In practical terms, the main differences between the present formulation and GLS are
the presence of the gradient diffusion term in the stabilized momentum equation Eq. (44) and the absence of
a div-div term in the form (∇ ·w) τ2 (∇ · u), which in GLS is obtained from the mass balance equation. This
div-div term is considered relevant in this case, since it has been shown to have a negative impact in the accuracy
of the solution for this case (see for example [16]).

In order to quantify the relative importance of these two differences, we compare the results obtained using
the present FIC-FEM approach with a variable βi to those produced by a GLS formulation on the same finite
element meshes, both including and neglecting the div-div term. The results are presented in Fig. 11 for
tetrahedral meshes and in Fig. 12 for hexahedral elements. Our results confirm the negative impact of the div-
div term in the solution and show that, in general, the FIC-FEM formulation results in slightly lower velocity
averages than the GLS method without the div-div term. This is more noticeable in the hexahedral mesh while,
for tetrahedra, the velocity profiles obtained by these two methods are very close.

7 Example 2. Flow around a cylinder

The flow over a circular cylinder is a classical problem in CFD simulations, which has been studied extensively,
both experimentally and numerically (see for example the review in [35]). This problem exhibits a variable
behavior depending on the Reynolds number, due to the different vortex shedding mechanisms that develop
on the wake of the cylinder [36]. As a benchmark example for the FIC-FEM formulation, we study the case
corresponding to a Reynolds number Re = 3900 based on the diameter of the cylinder and the inflow velocity,
for which extensive data, both experimental [37] and numerical [38, 39], is available. For our tests, we adopt a
domain and problem set up similar to that of [38] and compare our results to those presented in that reference.

We simulate the flow over a cylinder with diameter D using a domain of 30D × 30D, centered on the
cylinder, in the plane normal to the cylinder’s axis, and W = 3.14D in the span-wise direction. The simulation
is run for 160 dimensionless time units (made dimensionless using the inflow velocity U∞ and the diameter D)
with a dimensionless time step δt = 0.1, which should provide sufficient resolution to capture the main vortex
shedding frequency.

The domain for the problem is presented in Figure 13. Consider the axes x, y and z, aligned in the stream-
wise, cross-stream and span-wise directions respectively, and let u, v and w, be the components of the flow
velocity in each of the three coordinate directions. We are interested in measuring the velocity history in

17



10
−1

10
0

10
1

10
2

y+

0

5

10

15

20

25

〈u
〉
/
u
τ

(a) Average stream-wise velocity

0 50 100 150 200 250 300 350 400

y+

0

1

2

3

4

5

6

k
/
u
2 τ

Moser et al.

FIC β ≥ 0.8.

GLS.

GLS no div − div term.

(b) Turbulence kinetic energy.

0 50 100 150 200 250 300 350 400

y+

0.0

0.5

1.0

1.5

2.0

2.5

3.0

3.5

〈u
′
u
′
〉1

/
2
/
u
τ

(c) Stream-wise fluctuation 〈u′u′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

〈v
′
v
′
〉1

/
2
/
u
τ

(d) Wall-normal fluctuation 〈v′v′〉.

0 50 100 150 200 250 300 350 400

y+

0.0

0.2

0.4

0.6

0.8

1.0

1.2

1.4

〈w
′
w

′
〉1

/
2
/
u
τ

(e) Cross-stream fluctuation 〈w′w′〉.

Figure 12: Channel flow – velocity average and variances obtained using FIC-FEM with a variable combination
coefficient βi ≥ 0.8 and the GLS method on a 64

3 hexahedra mesh.

selected planes in the wake of the cylinder, pictured in Figure 13, chosen to coincide with those reported in the
reference [38].

Figure 13: Flow around a cylinder – simulation domain and measurement planes.

The velocity is fixed to a constant U∞ = 1m/s for the inlet and to zero on the cylinder surface. Periodic
boundary conditions are used in the span-wise direction, while a no-penetration condition v = 0 is set in the far
sides along the cross-stream direction. Based on the results obtained for the channel flow, we decide to use the
FIC variant with a variable combination parameter, limiting the combination parameter to a minimum value
of βm = 0.8.

We have used four different meshes to simulate the problem, as reported in Table 1. The meshes are
unstructured in all cases, with sizes ranging between 0.03D near the cylinder to 0.5D in the far regions, and
higher element counts correspond to increasingly refined mesh sizes on the cylinder wake. It must be noted
that, although hexahedral elements were shown to have a superior performance in the previous test case, we
consider that tetrahedral are relevant in complex flows, due to the difficulty of meshing arbitrarily complex
domains using hexahedra. All reported figures and results correspond to mesh T2 unless otherwise stated.

The different tetrahedral meshes have been used to ensure that mesh convergence is achieved, while the
hexahedral case is intended as a comparison between the two element types, using a comparable number of
mesh nodes. However, there is an important difference in the two meshes, due to limitations on the meshing
procedure. While the tetrahedral meshes are completely unstructured, the hexahedral mesh is structured in
the span-wise direction, since it was generated by translation of a quadrilateral mesh. This means that the
hexahedral mesh has the same (smallest) mesh size along the span-wise dimension across the entire domain,
resulting in elongated elements in the coarser regions.

We show the average velocity along several y–z cross sections on the wake of the cylinder in Fig. 14, comparing

18



Mesh Element type Num. nodes (×106) Num. elements (×106)

T1 Tetrahedra 0.73 4.18
T2 Tetrahedra 1.74 10.0
T3 Tetrahedra 3.82 23.2
H Hexahedra 1.8 1.75

Table 1: Flow around a cylinder – mesh definition.

−3 −2 −1 0 1 2 3

y coordinate

−2.5

−2.0

−1.5

−1.0

−0.5

0.0

0.5

1.0

1.5

〈u
〉
/
U
∞

x/D = 1.06

x/D = 1.54

x/D = 2.02 Ref.
T1.

T2.

T3.

(a) Stream-wise velocity 〈u〉 (near wake).

−3 −2 −1 0 1 2 3

y coordinate

−2.5

−2.0

−1.5

−1.0

−0.5

0.0

0.5

〈v
〉
/
U
∞

x/D = 1.06

x/D = 1.54

x/D = 2.02

(b) Cross-stream velocity 〈v〉 (near wake).

−3 −2 −1 0 1 2 3

y coordinate

0.2

0.4

0.6

0.8

1.0

〈u
〉
/
U
∞

x/D = 6.0

x/D = 7.0

x/D = 10.0

(c) Stream-wise velocity 〈u〉 (far wake).

Figure 14: Flow around a cylinder – average velocities in the wake for different tetrahedral meshes.

the results obtained for the different tetrahedral meshes to the results presented in [38], which we adopt as a
reference solution. Since cases T2 and T3 provide close results in general, unlike T1, we consider that the latter
are sufficiently converged, and consequently adopt case T2 as our reference solution in the following.

The instantaneous stream-wise velocity field on the central x–y plane at the end of the simulation is shown
in Fig. 15. The velocities on the x–z plane for the same time instant are shown in Fig. 16. From the plot of
stream-wise velocity component u in Fig 16(a), we can observe the formation of a recirculation zone just after
the cylinder. Similarly, in Fig. 16(b), which shows the instantaneous cross-stream component of velocity v, the
alternating direction of the velocity suggests the formation of a vortex trail.

While the instantaneous velocity distributions provide a qualitative idea of the flow, we are also interested
in studying the statistics of the cylinder wake, which represent a more quantitative measure of the quality of
the simulation. We compute the average velocity in the stream-wise and cross-stream directions on different
y–z sections (that is, normal to the mean flow) on the wake of the cylinder. The results in terms of averages,
compared to those of [38], are shown in Fig. 17.

Observing the results, we can see that we obtain a close agreement between our results and those in the
reference, although the formation of the wake is slightly delayed in our simulations when compared to the
reference. This can be seen by considering that the average velocity defect on the wake starts as a deep U -
shaped trough just behind the cylinder, where the average flow in the recirculation zone is very small or negative
on average, and becomes wider and shallower (closer to the inflow velocity U∞) as the wake develops. In general,
our profiles are below the expected curve, which corresponds to a larger velocity defect for a given section.

In addition, we have computed the variance of the stream-wise velocity 〈u′u′〉, shown in Fig. 18(a) for the
near wake and in Fig. 18(b) for the far wake. The obtained variance is smaller in general than in the reference

Figure 15: Flow around a cylinder – instantaneous stream-wise velocity u on the x–y midplane.

19



(a) Stream-wise velocity u.

(b) Cross-stream velocity v.

(c) Span-wise velocity w.

Figure 16: Flow around a cylinder – instantaneous velocities on the x–z midplane.

−3 −2 −1 0 1 2 3

y coordinate

−2.5

−2.0

−1.5

−1.0

−0.5

0.0

0.5

1.0

1.5

〈u
〉
/
U
∞

x/D = 1.06

x/D = 1.54

x/D = 2.02
Ref.

T2.

H.

(a) Stream-wise velocity 〈u〉 (near wake).

−3 −2 −1 0 1 2 3

y coordinate

−2.5

−2.0

−1.5

−1.0

−0.5

0.0

0.5

〈v
〉
/
U
∞

x/D = 1.06

x/D = 1.54

x/D = 2.02

(b) Cross-stream velocity 〈v〉 (near wake).

−3 −2 −1 0 1 2 3

y coordinate

0.2

0.4

0.6

0.8

1.0

〈u
〉
/
U
∞

x/D = 6.0

x/D = 7.0

x/D = 10.0

(c) Stream-wise velocity 〈u〉 (far wake).

Figure 17: Flow around a cylinder – average velocities in the wake.

20



−3 −2 −1 0 1 2 3

y coordinate

−1.2

−1.0

−0.8

−0.6

−0.4

−0.2

0.0

0.2

〈u
′
u
′
〉
/
U

2 ∞

x/D = 1.06

x/D = 1.54

x/D = 2.02

Ref.

T2.

H.

(a) 〈u′u′〉 correlation (near wake).

−3 −2 −1 0 1 2 3

y coordinate

−0.10

−0.08

−0.06

−0.04

−0.02

0.00

0.02

0.04

0.06

〈u
′
u
′
〉
/
U

2 ∞

x/D = 6.0

x/D = 7.0

x/D = 10.0

(b) 〈u′u′〉 correlation (far wake).

−3 −2 −1 0 1 2 3

y coordinate

−0.030

−0.025

−0.020

−0.015

−0.010

−0.005

0.000

0.005

0.010

〈u
′
v
′
〉
/
U

2 ∞

x/D = 6.0

x/D = 7.0

x/D = 10.0

(c) 〈u′v′〉 correlation (far wake).

Figure 18: Flow around a cylinder – velocity correlations in the wake.

data, which suggests a smoother flow and a more diffusive solution. Finally, the cross-correlation 〈u′v′〉 for the
far wake is shown in Fig. 18(c). This result shows some irregularity, larger in our solution than in the reference,
which might be reduced with a longer simulation time.

Finally, we compute the drag coefficient CD and the Strouhal number St, which represents the dimensionless
vortex shedding frequency, given by the expressions

CD =
〈Rx〉

1
2
ρU2

∞
DW

St =
f D

U∞
(67)

where 〈Rx〉 is the average force applied by the fluid on the surface of the cylinder in the stream-wise direction
and f is the vortex-shedding frequency on the cylinder tail, which we obtain from the lift force history Ry (t).
The results, compared to those reported in [38], are summarized in Table 2.

Analysis CD St

FIC-FEM results 1.09 0.217
Numerical [38] 1.04 0.210

Experimental (reported in [38]) 0.99± 0.05 0.215± 0.005

Table 2: Flow around a cylinder – flow parameters.

The results obtained for this case show agreement to reference values in terms of the average solution in
general. Variances, while in qualitative agreement with the expected results in terms of spatial distribution,
tend to be underestimated. This suggests that the FIC-FEM solution has a slightly larger dissipation than
required, smoothing out peaks in the fluctuating solution.

8 Summary and conclusions

We have introduced a new FIC-based finite element formulation for incompressible flows. Compared to previous
FIC-FEM stabilized formulations of the Navier-Stokes problem [1, 17, 19, 20, 21], our method contains a new
term on the momentum equation, which introduces an additional non-isotropic dissipation in the direction of
the velocity gradients, and a stabilized formulation for the mass equation which is based on a second order
FIC balance in space and represents an incompressible Eulerian version of the method presented for quasi-
incompressible flows in [2].

The method as presented has a free combination parameter βi that defines the relative weights of the classical
streamline diffusion and the new gradient diffusion term in the stabilization of each component of the momentum
equation. We have explored the use of a constant value for βi and also have proposed a way to define its value
dynamically, based on the local features of the flow, with the intent of improving the results and reducing the
dependence of the model on free parameters.

We have tested the FIC-FEM procedure on the turbulent channel flow at Reτ = 395 benchmark, where
we have analyzed the performance of the different variants of the method, and the flow around a cylinder at
Re = 3900. The main conclusions we extracted from the simulations can be summarized as follows:

• Hexahedral meshes provide significantly better results than tetrahedra, with 323 hexahedra producing
results of comparable quality to 6× 643 tetrahedra.

• The method is quite insensitive to the free parameter β, at least for values of β ≥ 0.5, for either the fixed
or variable βi variants.

21



• Using the variable expression for the βi coefficient results in a better approximation to the DNS curves,
although it increases the non-linearity of the problem to be solved.

• The solution obtained using a variable βi coefficient presents a physically meaningful energy spectrum for
modes that are well resolved with the calculation mesh.

The FIC-FEM procedure proposed has been able to produce an accurate solution for the flow examples
considered. Attempting to provide a theoretical justification for this observation will be an obvious venue for
further research. In this sense, it is interesting to note that the gradient diffusion terms, which constitute the
main difference between the proposed formulation and other stabilization methods, has a similar structure to
the family of LES models known as gradient models, such as the Clark model [40] or the Modulated Gradient
Diffusion model [41]. Exploring the relation of the FIC-based stabilization procedure to such models could allow
us to obtain a better understanding of the good features of the method in terms of its behavior in turbulent
problems and motivate future improvements.

References

References

[1] E. Oñate, Derivation of stabilized equations for numerical solution of advective-diffusive transport
and fluid flow problems, Computer Methods in Applied Mechanics and Engineering 151 (12) (1998)
233 – 265, containing papers presented at the Symposium on Advances in Computational Mechanics.
doi:http://dx.doi.org/10.1016/S0045-7825(97)00119-9.

[2] E. Oñate, A. Franci, J. M. Carbonell, Lagrangian formulation for finite element analysis of quasi-
incompressible fluids with reduced mass losses, International Journal for Numerical Methods in Fluids
74 (10) (2014) 699–731. doi:10.1002/fld.3870.

[3] S. B. Pope, Turbulent Flows, Cambridge University Press, 2000.

[4] A. E. Tejada-Mart́ınez, K. E. Jansen, On the interaction between dynamic model dissi-
pation and numerical dissipation due to streamline upwind/Petrov-Galerkin stabilization,
Computer Methods in Applied Mechanics and Engineering 194 (9-11) (2005) 1225 – 1248.
doi:http://dx.doi.org/10.1016/j.cma.2004.06.037.

[5] A. V. Trofimova, A. E. Tejada-Mart́ınez, K. E. Jansen, R. T. Lahey, Jr., Direct numerical simulation of
turbulent channel flows using a stabilized finite element method, Computers & Fluids 38 (4) (2009) 924 –
938.

[6] V. Gravemeier, M. W. Gee, M. Kronbichler, W. A. Wall, An algebraic variational multiscale–
multigrid method for large eddy simulation of turbulent flow, Computer Methods in Applied Mechan-
ics and Engineering 199 (13-16) (2010) 853 – 864, turbulence Modeling for Large Eddy Simulations.
doi:http://dx.doi.org/10.1016/j.cma.2009.05.017.

[7] T. J. R. Hughes, Multiscale phenomena: Green’s functions, the Dirichlet-to-Neumann formulation, subgrid
scale models, bubbles and the origins of stabilized methods, Computer Methods in Applied Mechanics and
Engineering 127 (1-4) (1995) 387–401. doi:DOI:10.1016/0045-7825(95)00844-9.

[8] T. J. R. Hughes, G. R. Feijóo, L. Mazzei, J.-B. Quincy, The variational multiscale method–
a paradigm for computational mechanics, Computer Methods in Applied Mechanics and En-
gineering 166 (1-2) (1998) 3–24, advances in Stabilized Methods in Computational Mechanics.
doi:DOI:10.1016/S0045-7825(98)00079-6.

[9] T. J. R. Hughes, L. Mazzei, K. E. Jansen, Large eddy simulation and the variational multiscale method,
Computing and Visualization in Science 3 (2000) 47–59.

[10] R. Codina, J. Pŕıncipe, O. Guasch, S. Badia, Time dependent subscales in the stabilized finite element
approximation of incompressible flow problems, Computer Methods in Applied Mechanics and Engineering
196 (21-24) (2007) 2413–2430. doi:DOI:10.1016/j.cma.2007.01.002.

[11] O. Guasch, R. Codina, Statistical behavior of the orthogonal subgrid scale stabilization terms in the finite
element large eddy simulation of turbulent flows, Computer Methods in Applied Mechanics and Engineering
261–262 (0) (2013) 154 – 166. doi:http://dx.doi.org/10.1016/j.cma.2013.04.006.

22

http://dx.doi.org/http://dx.doi.org/10.1016/S0045-7825(97)00119-9
http://dx.doi.org/10.1002/fld.3870
http://dx.doi.org/http://dx.doi.org/10.1016/j.cma.2004.06.037
http://dx.doi.org/http://dx.doi.org/10.1016/j.cma.2009.05.017
http://dx.doi.org/DOI: 10.1016/0045-7825(95)00844-9
http://dx.doi.org/DOI: 10.1016/S0045-7825(98)00079-6
http://dx.doi.org/DOI: 10.1016/j.cma.2007.01.002
http://dx.doi.org/http://dx.doi.org/10.1016/j.cma.2013.04.006


[12] J. P. Boris, F. F. Grinstein, E. S. Oran, R. L. Kolbe, New insights into large eddy simulation, Fluid
Dynamics Research 10 (4-6) (1992) 199.

[13] I. Akkerman, Y. Bazilevs, V. Calo, T. Hughes, S. Hulshoff, The role of continuity in residual-
based variational multiscale modeling of turbulence, Computational Mechanics 41 (2008) 371–378.
doi:10.1007/s00466-007-0193-7.

[14] Y. Bazilevs, V. Calo, J. Cottrell, T. Hughes, A. Reali, G. Scovazzi, Variational multiscale residual-based
turbulence modeling for large eddy simulation of incompressible flows, Computer Methods in Applied
Mechanics and Engineering 197 (1-4) (2007) 173 – 201. doi:DOI:10.1016/j.cma.2007.07.016.

[15] M. Avila, R. Codina, J. Principe, Large eddy simulation of low mach number flows
using dynamic and orthogonal subgrid scales, Computers & Fluids 99 (2014) 44 – 66.
doi:http://dx.doi.org/10.1016/j.compfluid.2014.04.003.

[16] O. Colomés, S. Badia, R. Codina, J. Pŕıncipe, Assessment of variational multiscale models for the large eddy
simulation of turbulent incompressible flows, Computer Methods in Applied Mechanics and Engineering
285 (0) (2015) 32 – 63. doi:http://dx.doi.org/10.1016/j.cma.2014.10.041.

[17] E. Oñate, A stabilized finite element method for incompressible viscous flows using a finite increment
calculus formulation, Computer Methods in Applied Mechanics and Engineering 182 (3-4) (2000) 355 –
370. doi:10.1016/S0045-7825(99)00198-X.

[18] E. Oñate, Possibilities of finite calculus in computational mechanics, International Journal for Numerical
Methods in Engineering 60 (1) (2004) 255–281. doi:10.1002/nme.961.

[19] E. Oñate, A. Valls, J. Garćıa, Computation of turbulent flows using a finite calculus-finite ele-
ment formulation, International Journal for Numerical Methods in Fluids 54 (6-8) (2007) 609–637.
doi:10.1002/fld.1476.

[20] E. Oñate, A. Valls, J. Garćıa, Modeling incompressible flows at low and high Reynolds numbers via a finite
calculus-finite element approach, Journal of Computational Physics 224 (1) (2007) 332 – 351, special Issue
Dedicated to Professor Piet Wesseling on the occasion of his retirement from Delft University of Technology.
doi:http://dx.doi.org/10.1016/j.jcp.2007.02.026.

[21] E. Oñate, P. Nadukandi, S. R. Idelsohn, J. Garćıa, C. Felippa, A family of residual-based stabilized finite
element methods for Stokes flows, International Journal for Numerical Methods in Fluids 65 (1-3) (2011)
106–134. doi:10.1002/fld.2468.

[22] E. Oñate, S. R. Idelsohn, C. A. Felippa, Consistent pressure Laplacian stabilization for incompressible
continua via higher-order finite calculus, International Journal for Numerical Methods in Engineering 87 (1-
5) (2011) 171–195. doi:10.1002/nme.3021.

[23] R. Codina, J. Principe, M. Ávila, Finite element approximation of turbulent thermally coupled incompress-
ible flows with numerical sub-grid scale modeling, International Journal for Numerical Methods for Heat
& Fluid Flow 20 (2010) 492–516. doi:doi:10.1108/09615531011048213.

[24] R. Temam, Navier-Stokes Equations: Theory and Numerical Analysis, American Mathematical Soc., 2001.

[25] T. J. R. Hughes, M. Mallet, A new finite element formulation for computational fluid dynamics: III. The
generalized streamline operator for multidimensional advective-diffusive systems, Computer Methods in
Applied Mechanics and Engineering 58 (3) (1986) 305–328. doi:DOI:10.1016/0045-7825(86)90152-0.

[26] R. Codina, A discontinuity-capturing crosswind-dissipation for the finite element solution of the convection-
diffusion equation, Computer Methods in Applied Mechanics and Engineering 110 (3-4) (1993) 325 – 342.
doi:10.1016/0045-7825(93)90213-H.

[27] T. J. R. Hughes, L. P. Franca, G. M. Hulbert, A new finite element formulation for computational fluid
dynamics: VIII. The Galerkin/least-squares method for advective-diffusive equations, Computer Methods
in Applied Mechanics and Engineering 73 (2) (1989) 173–189. doi:DOI:10.1016/0045-7825(89)90111-4.

[28] T. J. R. Hughes, The Finite Element Method: Linear Static and Dynamic Finite Element Analysis, Dover
Publications, Inc, 2000.

[29] P. Dadvand, R. Rossi, M. Gil, X. Martorell, J. Cotela-Dalmau, E. Juanpere, S. R. Idelsohn, E. Oñate,
Migration of a generic multi-physics framework to HPC environments, Computers & Fluids 80 (2013)
301–309.

23

http://dx.doi.org/10.1007/s00466-007-0193-7
http://dx.doi.org/DOI: 10.1016/j.cma.2007.07.016
http://dx.doi.org/http://dx.doi.org/10.1016/j.compfluid.2014.04.003
http://dx.doi.org/http://dx.doi.org/10.1016/j.cma.2014.10.041
http://dx.doi.org/10.1016/S0045-7825(99)00198-X
http://dx.doi.org/10.1002/nme.961
http://dx.doi.org/10.1002/fld.1476
http://dx.doi.org/http://dx.doi.org/10.1016/j.jcp.2007.02.026
http://dx.doi.org/10.1002/fld.2468
http://dx.doi.org/10.1002/nme.3021
http://dx.doi.org/doi:10.1108/09615531011048213
http://dx.doi.org/DOI: 10.1016/0045-7825(86)90152-0
http://dx.doi.org/10.1016/0045-7825(93)90213-H
http://dx.doi.org/DOI: 10.1016/0045-7825(89)90111-4


[30] H. Tennekes, J. L. Lumley, A first course in turbulence, MIT Press, 1972.

[31] R. D. Moser, J. Kim, N. N. Mansour, Direct numerical simulation of turbulent channel flow up to Reτ = 590,
Physics of Fluids 11 (4) (1999) 943–945. doi:10.1063/1.869966.

[32] U. Piomelli, E. Balaras, Wall-layer models for large-eddy simulations, Annual Review of Fluid Mechanics
34 (2002) 349–374. doi:{10.1146/annurev.fluid.34.082901.144919}.

[33] E. Bou-Zeid, C. Meneveau, M. Parlange, A scale-dependent Lagrangian dynamic model for large
eddy simulation of complex turbulent flows, Physics of Fluids (1994-present) 17 (2) (2005) 025105.
doi:http://dx.doi.org/10.1063/1.1839152.

[34] F. E. Ham, F. Lien, A. B. Strong, A fully conservative second-order finite difference scheme for in-
compressible flow on nonuniform grids, Journal of Computational Physics 177 (1) (2002) 117 – 133.
doi:http://dx.doi.org/10.1006/jcph.2002.7006.

[35] C. Norberg, Fluctuating lift on a circular cylinder: review and new measurements, Journal of Fluids and
Structures 17 (1) (2003) 57–96. doi:10.1016/S0889-9746(02)00099-3.

[36] J. H. Lienhard, Synopsis of lift, drag, and vortex frequency data for rigid circular cylinders, Tech. rep.,
Washington State University (1966).

[37] L. Ong, J. Wallace, The velocity field of the turbulent very near wake of a circular cylinder, Experiments
in Fluids 20 (1996) 441–453, 10.1007/BF00189383.

[38] A. G. Kravchenko, P. Moin, Numerical studies of flow over a circular cylinder at ReD = 3900, Physics of
Fluids 12 (2) (2000) 403–417.

[39] P. Beaudan, P. Moin, Numerical experiments on the flow past a circular cylinder at sub-critical Reynolds
number, Tech. Rep. TF-62, Department of Mechanical Engineering, Stanford University (December 1994).

[40] R. A. Clark, J. H. Ferziger, W. C. Reynolds, Evaluation of subgrid-scale models using an accurately
simulated turbulent flow, Journal of Fluid Mechanics 91 (1979) 1–16. doi:10.1017/S002211207900001X.

[41] H. Lu, F. Porté-Agel, A modulated gradient model for large-eddy simulation: Application to a neutral
atmospheric boundary layer, Physics of Fluids 22 (1). doi:http://dx.doi.org/10.1063/1.3291073.

24

http://dx.doi.org/10.1063/1.869966
http://dx.doi.org/{10.1146/annurev.fluid.34.082901.144919}
http://dx.doi.org/http://dx.doi.org/10.1063/1.1839152
http://dx.doi.org/http://dx.doi.org/10.1006/jcph.2002.7006
http://dx.doi.org/10.1016/S0889-9746(02)00099-3
http://dx.doi.org/10.1017/S002211207900001X
http://dx.doi.org/http://dx.doi.org/10.1063/1.3291073

	Introduction
	Governing equations
	Stabilized momentum equation
	Streamline diffusion formulation
	Gradient diffusion formulation
	Combined streamline-gradient diffusion approach

	Stabilized mass balance equation
	Finite element formulation
	Spatial discretization
	Time integration and linearization
	Summary of the FIC-FEM solution scheme

	Example 1. Turbulent channel flow
	Problem definition
	Fixed combination parameter
	Variable combination parameter
	Summary of the results

	Example 2. Flow around a cylinder
	Summary and conclusions

