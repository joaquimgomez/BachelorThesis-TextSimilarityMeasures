











































Comp. Part. Mech. manuscript No.
(will be inserted by the editor)

Seakeeping with the semi-Lagrangian Particle Finite Element Method

Prashanth Nadukandi · Borja Servan-Camas ·
Pablo Agustín Becker · Julio Garcia-Espinosa

Received: date / Accepted: date

Abstract The application of the semi-Lagrangian Particle
Finite Element Method (SL–PFEM) for the seakeeping sim-
ulation of the Wave Adaptive Modular Vehicle under spray
generating conditions is presented. The time integration of
the Lagrangian advection is done using the explicit integra-
tion of the velocity and acceleration along the streamlines
(X-IVAS). Despite the suitability of the SL–PFEM for the
considered seakeeping application, small time steps were
needed in the X-IVAS scheme to control the solution accu-
racy. A preliminary proposal to overcome this limitation of
the X-IVAS scheme for seakeeping simulations is presented.

Keywords Particle Finite Element Method · semi-
Lagrangian formulations · seakeeping

1 Introduction

The Particle Finite Element Method (PFEM) [18] is a versa-
tile framework for the analysis of fluid–structure interaction
problems. The PFEM combines Lagrangian particle-based
techniques with the advantage of the integral formulation of
the Finite Element Method (FEM). It has been shown [14,
15,21,28,13,27] to successfully simulate a wide variety of
complex engineering problems, e.g., free-surface/multi-fluid
flows with violent interface motions, multi-fluid mixing and

P. Nadukandi
E-mail: npras@cimne.upc.edu, nadukandi@gmail.com
B. Servan-Camas
E-mail: bservan@cimne.upc.edu
P. A. Becker
E-mail: pbecker@cimne.upc.edu
J. Garcia-Espinosa
E-mail: julio@cimne.upc.edu

Centre Internacional de Mètodos Numèrics en Enginyeria (CIMNE),
Edifici C1, Gran Capitan s/n, 08034 Barcelona, Spain

buoyancy-driven segregation problems etc. The latest devel-
opment within the framework of the PFEM is the X-IVAS
(eXplicit Integration along the Velocity and Acceleration
Streamlines) scheme [16]. It is a semi-implicit scheme built
over a semi-Lagrangian (SL) formulation of the PFEM.

In this paper we present the application of the SL–PFEM
using the X-IVAS scheme1 to the seakeeping simulation of
the Wave Adaptive Modular Vehicle (WAM-V) [32]. The
objective of the WAM-V is to be a lightweight watercraft
capable of moving fast and efficiently on the surface of the
sea. The motivation is that this technology could someday
be used for quickly deploying research and reconnaissance
equipment to far-flung locations and for search-and-rescue
operations in the sea. To operate safely close to the shore, the
WAM-V has an inflatable catamaran-style hull that displaces
only a few feet below the waterline. To travel efficiently with
low wave resistance in rough seas, it is designed to have a
flexible wave-adaptive sub-structure. This feature allows it
to surf on top of the waves rather than cut through them.

Objective The purpose of this paper is first to show the suit-
ability of the SL–PFEMmethod to simulate the aforesaid sea-
keeping problem under spray generating conditions and sec-
ondly, to identify some limitations of the SL–PFEM related
to the trajectory approximation obtained using the X-IVAS
scheme when the underlying physics imposes wave-like mo-
tion. Finally, the work presents a preliminary proposal to
overcome the identified limitation.

Seakeeping simulations usually involve water wave mo-
tion. Stokes waves propagating on the water surface is an
interesting example where time integration schemes are co-

1 The SL–PFEM method using the X-IVAS scheme has been called
the Particle Finite Element Method second generation (PFEM-2) by
the original authors [16]. However, we choose the former nomenclature
(SL–PFEM+X-IVAS) to acknowledge its connection (see Sect. 2) with
semi-Lagrangian schemes.



2 Prashanth Nadukandi et al.

erced into using small time steps. The X-IVAS scheme is
no exception; the hypothesis—the streamlines are a good
approximation to the pathlines, fails for this example. Using
second-order Stokes wave propagation as the model problem
we illustrate the particle trajectory approximation in the X-
IVAS scheme which explains why the underlying hypothesis
fails. An alternative to the X-IVAS scheme is where the parti-
cles are driven by the acceleration in the latest configuration.
The trajectory approximation driven by acceleration in the
latest configuration is illustrated which shows a remarkable
improvement compared to the one obtained by the X-IVAS
scheme.

2 Semi-Lagrangian formulation

Semi-Lagrangian schemes can be classified into two groups
based on the way the problem variables are stored in the
formulation: the Eulerian storage (ES) group and the La-
grangian storage (LS) group. However, the keyword semi-
Lagrangian almost always points to ES–SL schemes in the
literature. TheES–SL schemes are extensions of theCourant–
Isaacson–Rees [4] method for hyperbolic equations. John
Sawyer [29] and Andrè Robert [26] made seminal contri-
butions to ES–SL schemes. ES–SL schemes are uncondi-
tionally stable and therefore allow for large time steps. The
solution is defined on a mesh and the nodal values are stored.
Lagrangian particles are used as an auxiliary tool to compute
the advective time evolution of the variables. For each time
step (say tn to tn+1) particles are initially placed at the mesh
nodes and are transported backwards in time (for tn+1 − tns)
along the pathlines passing through these nodes at time tn+1.
The tn solution at the terminal positions are then assigned
to the tn+1 nodal values. The backward trajectories seldom
end at existing nodes. The ES–SL schemes provide models
for the a priori unknown pathlines and to determine the tn
solution at the terminal positions.

The simplest first-order ES–SL scheme traces back a
straight line characteristic and use piecewise-linear interpo-
lation of the tn solution. Min and Gibou [22] proposed a
second-order scheme by numerically tracing back curved
characteristics and using higher order polynomial interpola-
tion. Dupont and Liu [7] combined a first-order SL scheme
with the back and forth error compensation and correction
(BFECC) method [6] to obtain a second-order uncondition-
ally stable scheme. Selle et al. used a similar approach to
create a second-order scheme [30] using the MacCormack
method [20] instead of the BFECC method. The initial con-
dition and the solution evolution in the ES–SL schemes are
known up to the spatial resolution of a fixed mesh. Hence,
the overall accuracy of the ES–SL schemes is subjected to
numerical erosion.

On the contrary, a majority of the solution variables are
stored with the particles in the LS–SL schemes and their

advective evolution is computed in a Lagrangian manner.
Necessarily implicit variables (NIV) like the pressure are
defined on the mesh and are stored at the nodes. Implicit
corrections (e.g., action of viscosity) and the evolution of
NIV (e.g., pressure) are computed on the mesh. For each
time step (say tn to tn+1) particles are transported forward in
time (for tn+1− tns) along the pathlines passing through their
respective positions at time tn. The solution variables car-
ried with the particles are updated by interpolating (usually
piecewise-linear) implicit corrections (if any) at the updated
locations.

The LS–SL schemes have their origin in the Particle-in-
Cell (PIC) method [11,8]. However the PIC method is an
ES–SL scheme (solution is stored on the mesh) and it is not
suitable to simulate incompressible flows. Thematerial-point
method [31] (MPM) is an improvement of the PIC method
wherein each particle is endowed with a fixed point mass,
a position, a stress and specific material parameters. In the
MPM, the pathlines are approximated by tracing forward a
simple straight line characteristic (see Zhang et al. [33] and
Gelet et al. [9]).

The X-IVAS scheme is a LS–SL scheme wherein the
streamlines computed using the tn solution are used to ap-
proximate the pathlines. Unlike in the MPM, here particles
carry with them only the intrinsic material and flow prop-
erties. This permits the user to insert or remove particles
without affecting the extrinsic flow properties (e.g., total
mass). Several benchmark CFD and FSI examples were sim-
ulated [13]with the SL–PFEMusing theX-IVAS scheme and
taking very large time steps, e.g., 10–15 times the standard
Courant–Friedrichs–Lewy (CFL) stability limit [3]. Therein
the simulation results of multi-fluid incompressible flows
were compared [13] with those obtained with OpenFOAM®
(openfoam.org). For similar accuracy and using a desktop
computer for the simulations, the SL–PFEM using the X-
IVAS scheme was reported [13] to be twice faster than
OpenFOAM®. The latter uses the Finite Volume Method
(FVM) for discretisation and the Volume Of Fluid (VOF)
method for capturing the multi-fluid interfaces. Gimenez
et al. did [10] similar performance studies for incompressible
flow simulations using the SL–PFEM on parallel comput-
ers. They reported strong scalability of the SL–PFEM at par
withOpenFOAM® (using the solver pimpleFoam); however,
a three-fold gain in speed (wall-time) was reported for the
former for a chosen level of accuracy.

Celledoni et al. showed [2] that second-order ES–SL
schemes are effectively second-order approximations to stan-
dard exponential integrators. A similar connection between
the X-IVAS scheme (a LS–SL scheme) and exponential inte-
grators was pointed out [23] by the first author, albeit using
heuristic arguments. Exponential integrators are designed to
integrate stiff initial value problems with large time-steps.



Seakeeping with the semi-Lagrangian Particle Finite Element Method 3

This connection explains why the SL schemes admit very
large time-steps without deteriorating the solution accuracy.

3 Semi-Lagrangian Particle Finite Element Method

Notation Vectors are written using bold italic font and ma-
trices are written using bold upright font. The independent
variables in Lagrangian kinematics are {λ, t}, where λ rep-
resents a label to identify particles and t represents the time
elapsed after labeling. The primary dependent variable is the
fluid particle trajectory denoted as X (λ, t). The independent
variables in Eulerian kinematics are {x, t}, where x denotes
the spatial coordinates. The primary dependent variable is
the fluid velocity u(x, t).

Consider the Eulerian description of the incompressible
Navier-Stokes equations.

∂

∂t
u + (u · ∇)u − ν∆u + ∇p = f (1)

∇ · u = 0 (2)

where ν is the kinematic viscosity and p(x, t), f (x, t) are the
pressure (scaled by the density) and the external acceleration
fields, respectively. The effective acceleration field a(x, t) in
the fluid domain is obtained from the momentum balance
equation of the flow.

a =

[
∂

∂t
+ u · ∇

]
u = ν∆u − ∇p + f (3)

Note that the functional dependence on the indepen-
dent variables is suppressed in equations (1), (2) and (3)
for brevity.

The fundamental principle of kinematics relates the Eu-
lerian description of the flowwith the Lagrangian description
as follows.

d
dt

X (λ, t) = u(X (λ, t), t) (4)

d2

dt2
X (λ, t) = a(X (λ, t), t) (5)

X-IVAS scheme The basic idea is to update the fluid particle
position and velocity within a time-step tn ≤ t ≤ tn+1 using

d
dt

Xh (λ, t) = uh (Xh (λ, t), tn) = AnXh (λ, t) + bn (6)

d
dt
Uh (λ, t) = ah (Xh (λ, t), tn) = CnXh (λ, t) + dn (7)

where uh (x, t) and ah (x, t) denote spatially continuous piece-
wise linear approximations of the velocity and acceleration
defined on a background simplicial mesh. Note that uh and
ah at time t = tn are used. It follows that uh (x, tn) and
ah (x, tn) can be expressed locally as linear functions of x,

i.e. uh (x, tn) = Anx+bn and ah (x, tn) = Cnx+dn. Thema-
trices An, Cn and the vectors bn, dn are spatially piecewise
constant and depend on the time tn. The particle trajectory
and its velocity computed in this manner are denoted as
Xh (λ, t) and Uh (λ, t), respectively.

Nielson and Jung presented [24] formulas in 2D and 3D
to compute the closed-form analytical solution of tangent
curves for piecewise linear vector fields defined over simpli-
cial meshes. Thus, the Nielson–Jung formulas can be used
to compute the analytical solution of (6). Idelsohn et al. pre-
sented [16] a procedure to compute the analytical solution of
(6) and (7) in 2D. However the Nielson–Jung formulas and
the calculation procedure described by Idelsohn et al. to com-
pute the analytical solution are not numerically stable; loss
of significance occurs due to subtractive cancellations near
removable singularities [12,23]. Recently, the first-author
presented [23] numerically stable formulas in 2D and 3D
for the closed-form analytical solution of (6) and (7). How-
ever, due to ease of implementation numerical sub-stepping
procedures based on simple finite difference schemes (e.g.
forward Euler) are often used to integrate equations (6) and
(7).

We briefly describe the algorithm (see Table 1 for an out-
line) to implement the SL–PFEM using the X-IVAS scheme.
First the Lagrangian advection (see [23, Sect. 3] for details)
of the particles: Xh (λ, tn) → Xh (λ, tn+1) and Uh (λ, tn) →
Uh (λ, tn+1) are done using equations (6) and (7). Then we
project the data advected with particles onto a background
finite element (FE) mesh. The data include the particle ve-
locities, identities2 and other problem dependent intrinsic
variables. Using the particle velocities projected onto the
FE mesh as the solution at the start of the time intreval
tn ≤ t ≤ tn+1, we solve the Stokes equations on the back-
ground FEmesh. For instance using the backward Euler time
integration the semi-discrete Stokes system to be solved is

ûh (x, tn+1) = Ph Uh (λ, tn+1) (8)
uh,n+1 − ûh,n+1

∆tn
− ν∆uh,n+1 + ∇ph,n+1 = f h,n+1 − ah,n

(9)

∇ · uh,n+1 = 0 (10)

wherePh is a projection operator from the particles to the FE
mesh, uh,n+1 = uh (x, tn+1), ûh,n+1 = ûh (x, tn+1), ph,n+1 =
ph (x, tn+1), ah,n = ah (x, tn) and f h,n+1 = f h (x, tn+1). We
refer to earlier papers [17,19,16] on the SL–PFEM for sev-
eral alternate time integration strategies for the Stokes system
to be solved on the background mesh.

Usually projection is an implicit operation which incurs
a notable cost of inverting a global matrix. To avoid this

2 In multi-fluid flows, the interface between multiple fluids is re-
constructed [1] on the FE mesh using the advected particle identities.
Appropriate enrichments are determined [1] for the pressure FE shape
functions about the interface.



4 Prashanth Nadukandi et al.

Table 1: Algorithm to implement the SL–PFEM using the
X-IVAS scheme.

1. Compute uh (x, tn ), ph (x, tn ) → ah (x, tn ) using the weak
form of Eq. (3).

2. Integrate Xh (λ, tn ) → Xh (λ, tn+1) using Eq. (6).
3. IntegrateUh (λ, tn ) →Uh (λ, tn+1) using Eq. (7).
4. TransferUh (λ, tn+1) → ûh (x, tn+1) using Eqs. (11) and (12).
5. Integrate ûh (x, tn+1), ah (x, tn ) → uh (x, tn+1), ph (x, tn+1)

using Eqs. (9) and (10).
6. Update Uh (λ, tn+1), ûh (x, tn+1), uh (x, tn+1) → Uh (λ, tn+1)

using Eq. (13).
7. End of time step. Execute step 1 for next time step.

cost an explicit kernel smoothing operator is used instead
of the projection operator in Eq. (8). Thus, ûh (x, tn+1) is
approximated as the kernel smoother of the set of discrete
data Uh (λ, tn+1) stored with the particles.

ûh (x, tn+1) =
∑
λ

K
h (x, λ)Uh (λ, tn+1) (11)

K
h (x, λ) =

∑
a

Na (x)
W a (Xh (λ, tn+1))∑
λ̄ W a (Xh (λ̄, tn+1))

(12)

where Na (x) and W a (x) are the standard FEM shape func-
tion and an appropriate weighting function associated with
the FEM node with index a. λ and λ̄ denote particle identity
indices. We have used W a (x) = Na (x) in the simulations.

Finally the particle velocities are updated by the incre-
ment uh,n+1 − ûh,n+1 evaluated at the particle positions.

Uh (λ, tn+1) = Uh (λ, tn+1)

+ uh (Xh (λ, tn+1), tn+1) − ûh (Xh (λ, tn+1), tn+1) (13)

Remark The kernel smoothing technique introduces numer-
ical diffusion when data is transfered from the particles to
the mesh. However, it must be noted that the particle data
is not completly overwritten. Note that in Eq. (13) only the
increment uh,n+1 − ûh,n+1 is transfered back to the particle
which serves as a hedge against numerical diffusion.

4 Seakeeping simulation of the WAM-V using the
SL–PFEM

Experimental testing of the WAM-V prototype revealed an
operability problem—at high speeds the hull generates an
intense water spray (see Figure 1). Beyond a critical speed
the spray leads to reduced visibility and the operator (or the
reconnaissance equipment) will get drenched. Both repre-
sent operational and also safety hazards, especially in cold
climates where there is a heightened risk of marine ice for-
mation.

Fig. 1: Spray generated by the WAM-V hull at 21 knots [25].
Courtesy of Prof. Mehdi Ahmadian, VirginiaTech, USA.

Computer simulations are highly valuable to evaluate a
wide range of ideas prior to construction and prevent the cost
of purchasing components. The results of such simulations
assist engineers in the decision making process towards bet-
ter hull design that control and mitigate the spray formation.

The inflatable hull of theWAM-V is designed such that it
displaces just a few feet below the waterline. It is reasonable
to assume that the waterline never reaches the sub-structure
connecting the hulls during themotion of theWAM-V.There-
fore we just simulate the response of the free surface of the
water due to the action of the WAM-V hull. A qualitative
understanding of the physical conditions leading to spray
generation can be obtained by simulating the action of just
one hull.

Fig. 2: The domain dimensions, location of the hull and the
waterline.

The domain is a 3D box with straight walls (see Figure
2) with dimensions: 9 m, 3 m and 2 m along the x, y and
z axes, respectively. The coordinates (0, 0,−1) and (9, 3, 1)
represent two diagonally opposite corners of the domain.
The face with coordinates (0, 0,−1), (9, 0,−1), (9, 0, 1) and
(0, 0, 1) represents the plane of symmetry of the WAM-V.
The geometry of the hull considered in the simulations cor-
responds to those of the 12 feet WAM-V. The 3D space of the



Seakeeping with the semi-Lagrangian Particle Finite Element Method 5

fluid domain is obtained by subtracting the volume occupied
by the catamaran-type hull of the WAM-V from the volume
of the containing 3D box. The draft of the hull, i.e. the dis-
placement below the steady waterline is taken as 4 inches.

The problem domain is discretized by a mesh of 490 778
nodes and 3 080 211 four-node tetrahedral elements. On an
average twenty particles (material points that transport in-
trinsic properties of the fluid) per element were used in the
simulations.

A pre-defined rigid body oscillatory motion is imposed
as a transient boundary condition to model the pitch of the
WAM-V hull. The pitch axis is parallel to the y-axis and
passes through the point (6, 0, 0). The angle of rotation (in
radians) about the pitch axis is taken as

θ = −0.06 sin2(5t) (14)

The background mesh is deformed every time step such
that its internal boundary always conforms to that of the
WAM-V hull. The mesh deformation scheme used is based
on a Laplacian solver which is commonly used in the im-
plementation of the Arbitrary Lagrangian–Eulerian formu-
lations. This enables us to impose the no-slip velocity bound-
ary conditions at the internal boundary in a straight-forward
manner. The computer code used in this work was devel-
oped in the C++ programming environment KRATOS® [5].
KRATOS® is an open-source multi-physics software frame-
work which provide a collection of tools useful to perform
tasks that are common to all FEM codes.

Water wave motion is generated by imposing the solution
of a deep-water second-order Stokes wave in a narrow strip
of water at the inlet and on the walls of the outlet.

a = 0.05 m, k =
4π
3
, g = 9.8 m/s2, ω =

√
gk (15)

ux (x, z, t) = aω exp(kz) cos[k (x −Ut) − ωt] +U (16)
uz (x, z, t) = aω exp(kz) sin[k (x −Ut) − ωt] (17)

where a is the amplitude of the wave, k is the angular
wavenumber, g is the acceleration due to gravity and ω is
the angular frequency. Further U is the velocity with which
the WAM-V moves relative to water and ux , uz represent the
spatial inlet velocity components of the water in an inertial
reference frame that moves with the WAM-V. The narrow
strip at the inlet where the wave velocity is imposed has a
width of 0.2 m. This periodic velocity condition causes a dis-
turbance which is propagated in the rest of the domain and
whose motion is governed by the Navier–Stokes equations.

Three cases were studied which correspond to three dif-
ferent speeds of theWAM-V, viz.U = 15 knots,U = 20 knots
and U = 25 knots, respectively. The total physical time of
simulation was chosen to be 4 s using 800 time steps of
0.005 s each. All the three cases took nearly 24 hours each to
perform the computations using a workstation with an Intel®
Core™ i7 − 3820 CPU and 32 GB RAM. The computations

were performed in parallel using four (available) cores and
a single thread per core. Due to the very large mesh size
(3 million elements) and particle collection (60 million par-
ticles), the memory requirements of these simulations are
high; nearly 17 GB of RAM.

(a) XZ plane view.

(b) YZ plane view.

Fig. 3: Detail of the spray generated by the 12 ft WAM-V hull
at 25 knots and time = 3.57 s. The isocontour corresponding
to the air–water interface and the water particles in the air-
elements are displayed.

Figure 3 illustrates the details of the spray generated by
the 12 ft WAM-V hull moving at 25 knots. Eight snapshots
are shown in Figure 4 which correspond to a time interval
(3.47 s–3.82 s) near the end of the simulation. In this se-
quence of snapshots we can see the initiation of the spray
generation, its gradual development and a skewed separation
from the axis of theWAM-V hull (cf. Figure 1). Near the end
of this snapshot sequence we can see the process start over
again. The spray generation (with respect to the location) at
regular intervals is caused due to the presence of waves and
the imposed pitch of the hull. The differences in the results
obtained using U = 15 knots and U = 20 knots (not shown
here) are in the height and intensity of the spray, which as
expected increased gradually with the velocity.

We see that the SL–PFEM is suitable for the seakeeping
simulation of the WAM-V under spray generating condi-



6 Prashanth Nadukandi et al.

(a) t = 3.47 s (b) t = 3.67 s

(c) t = 3.52 s (d) t = 3.72 s

(e) t = 3.57 s (f) t = 3.77 s

(g) t = 3.62 s (h) t = 3.82 s

Fig. 4: Simulation of the spray generated by the 12 ft WAM-V hull moving at 25 knots using the SL–PFEM. The isocontour
corresponding to the air–water interface and the water particles in the air-elements are displayed.



Seakeeping with the semi-Lagrangian Particle Finite Element Method 7

tions. Conventional CFD software tools are not suitable to
reproduce spray generating conditions for this challenging
problem. This is an example where particle-based incom-
pressible flow simulation tools (e.g. SL–PFEM) stand out
and deliver superior results.

In these simulations the water–air interface evolves in a
very complicated manner. At any particular instant of time,
all elements of the background mesh are labelled as water-
element, air-element or interface-element. Each particle has
an identity which is either air (label: +1) or water (label:
-1). Within each element and at every time-step the particles
transfer their identities to the element nodes. These contribu-
tions are weighted based on their location within the element
and are assembled at the nodes. After the assembly, each
node has an identity between -1 and +1. Following this line,
a continuous piecewise linear approximation of the other-
wise discrete identity data (on the particles) is obtained on
the background mesh. The water–air interface is defined as
the piecewise linear (planar) surface where the continuous
piecewise linear approximate identity takes a value 0. The
boundaries of the interface are determined at the resolution
of the background mesh.

Fig. 5: Particles that compose the spray in an air-element. The
water particles are shown as blue circles; the air particles are
seen as white circles.

In due course, situations may arise where there are re-
gions within an air-element that are filled with water parti-
cles. There will also be interface-elements wherein we will
find water particles on the air-side of the interface. These
particles compose the spray generated in the simulations
(see Figure 5). Should the pockets of water particles be large
enough then it creates a situation where there are one or more
water-elements surrounded by air-elements. These islands of
water-elements are seen as water splash in the simulations

which represent violent separation and/or merger of the in-
terface. Naturally, such representation of water spray and its
intensity depends on the number of particles chosen in the
simulation. Nevertheless, the number of particles that com-
pose the spray is not a representation of the mass of water
in the spray. Recall that particles represent material points
that carry with them only the intrinsic properties of the flow.
So a smaller number of particles just mean that the spray
representation is sampled at a coarser level of detail.

Other possible physical conditions which may generate
spray are not modelled in the simulations. For instance, the
viscous action of air motion may separate water particles
from the interface or decompose existing water splash into
water spray. Additionally, this phenomenon can happen at
multiple scales wherein entities which can be classified as
water spray at a coarse scale may be classified as water splash
at a fine scale (which in turn can be decomposed into spray).
This cascade will continue until surface tension forces comes
to prominence and protect the integrity of the water droplets.
Reproducing such physical conditions is out of the scope of
the current implementation of the SL–PFEM.

Remark For a wide class of engineering applications the
X-IVAS scheme usually admits very large time steps in the
Lagrangain advection stage, e.g. 10–15 times the one given
by the CFL condition. However in the simulations presented
here we had to use small time steps (of the same order as
the CFL limit) to control the accuracy of the solution. The
reason for this limitation is discussed in the next section.

5 Trajectory approximation for Stokes waves

Consider a second-order Stokeswave in deep sea and position
the 2D coordinate system at the height of the mean sea level.
The solution of the free surface η(x, t) is

η(x, t) = a cos(k x − ωt) +
1
2

a2k cos[2(k x − ωt)] (18)

Substituting U = 0 in the equations (16) and (17 we
obtain the solution of the velocity components.

Consider the initial time step in the X-IVAS scheme and
let the initial velocity and pressure be given by substituting
t = 0 in the exact solution. Figure 6 illustrates the streamlines
of the initial velocity field originating at three distinct posi-
tions on the surface of the Stokes wave. Two of these initial
positions are chosen as the crest and trough of the wave and
the third point is chosen midway. In the X-IVAS scheme the
computed trajectories are identical to the streamlines. The
exact trajectories (pathlines) of particles initially located at
these three points are also shown.

For the Stokes wave we see that the streamlines are not
a good approximation to the pathlines. Recall that in the X-
IVAS scheme we first compute tangent curves (streamlines)



8 Prashanth Nadukandi et al.

0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8
−0.06

−0.04

−0.02

0

0.02

0.04

0.06
Trajectory approximation in the X−IVAS method

x

y

free surface

pathline →

← streamline

Fig. 6: Trajectory approximation in the X-IVAS scheme. The
velocity field in the initial configuration is shown in the
background as a vector plot.

of the velocity vector field and choose them as the trajectories
of the particles.

Xh (λ, t) = Xh (λ, tn) +
∫ t
tn

uh (Xh (λ, ξ), tn) dξ (19)

Thenwe increment particle velocities by an amount equal
to the line integral of the acceleration vector field along the
streamlines.

Uh (λ, t) = Uh (λ, tn) +
∫ t
tn

ah (Xh (λ, τ), tn) dτ (20)

Therefore the updates in the particle position and its
velocity within a time-step are decoupled in the X-IVAS
scheme. When the velocity field has a significant temporal
variation within a time step, the trajectory computed using
equation (19) will have a significant error. In the Stokes
wave propagation problem, transporting particles along the
streamlines (see Figure 6) with large time steps will lead to
significant errors in the configuration of the fluid domain.
Now consider an alternative scheme for the Lagrangian ad-
vection: update the fluid particle position and velocity within
a time-step tn < t < tn+1 using solutions to the following
explicit second-order system of equations.

d2

d2t
Xh (λ, t) = ah (Xh (λ, t), tn) = CnXh (λ, t) + dn (21)

Unlike in the X-IVAS scheme the solution of the above
equation admits correction to the trajectories caused due to
the updates in the particle velocities within a time-step.

Uh (λ, t) = Uh (λ, tn) +
∫ t
tn

ah (Xh (λ, ξ), tn) dξ (22)

Xh (λ, t) = Xh (λ, tn) + (t − tn)Uh (λ, tn)

+

∫ t
tn

∫ τ
tn

ah (Xh (λ, ξ), tn) dξ dτ
(23)

Figure 7 illustrates the trajectories driven by the initial
acceleration field and originating at the considered three ini-
tial positions. Clearly the approximation in Figure 7 stands
out as a higher fidelity model to the pathlines. Numerically

0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8
−0.06

−0.04

−0.02

0

0.02

0.04

0.06
Trajectory driven by acceleration in the latest configuration

x

y

free surface

pathline →

← trajectory computed using explicit acceleration

Fig. 7: Trajectory driven by the acceleration field (shown in
the background as a vector plot) in the initial configuration.

stable formulas to compute the closed-form analytical solu-
tion of equation (21) will be done during the implementation
of the Marie Skłodowska-Curie action—FastFlowSim3.

6 Conclusions

In the seakeeping simulation of the WAM-V, we have seen
that the semi-Lagrangian Particle Finite Element method is
a suitable CFD tool for the analysis of incompressible flows
subjected to challenging physical conditions, e.g. violent in-
terface motions, spray generating conditions etc. Due to the
Lagrangian treatment of the advective processes and the La-
grangian data storage strategy in the SL–PFEM, the inter-
faces are accurately tracked. Further, the computational task
associated to advective transport is mutually exclusive and
hence scalable on parallel computers.

However, seakeeping simulations often involve water
wave motion. Examining a second-order Stokes wave prop-
agating on the surface of a deep sea, we have seen that the
streamlines are not a good approximation to the pathlines.
In such situations the use of large time steps in the X-IVAS
scheme will result in significant errors in the fluid config-
uration. The particle trajectories driven by the acceleration
in the initial configuration of the second-order Stokes wave
are shown to be a better approximation to the pathlines.
For seakeeping simulations with the SL–PFEM, this latter
time-integration scheme seems to be a promising alterna-
tive to mitigate the small time-step limitation of the X-IVAS
scheme.

7 Compliance with Ethical Standards

The authors declare that they have no conflict of interest.
This study was partially supported by the WAM-V project
funded under the Navy Grant N62909-12-1-7101 issued by
Office of Naval Research Global, the SAFECON project (ref.
267521, FP7-IDEAS-ERC) and the FORECASTproject (ref.
664910, H2020-ERC-2014-PoC) of the European Research

3 http://cordis.europa.eu/project/rcn/200435_en.html



Seakeeping with the semi-Lagrangian Particle Finite Element Method 9

Council (European Commission). The United States Gov-
ernment has a royalty-free license throughout the world in
all copyrightable material contained herein.

Acknowledgements Permission to use the image shown in Figure 1 has
been granted byProf.MehdiAhmadian,VirginiaTech,USA.This image
has appeared earlier in Andrew William Peterson’s Ph.D. thesis [25,
Figure 3.12, page 55].

References

1. Becker, P., Idelsohn, S.R., Oñate, E.: A unified monolithic
approach for multi-fluid flows and fluidâĂŞstructure interac-
tion using the Particle Finite Element Method with fixed
mesh. Computational Mechanics (2014). DOI 10.1007/
s00466-014-1107-0. URL http://link.springer.com/10.
1007/s00466-014-1107-0

2. Celledoni, E., Kometa, B.K., Verdier, O.: High Order Semi-
Lagrangian Methods for the Incompressible Navier–Stokes Equa-
tions. Journal of Scientific Computing (2015). DOI 10.1007/
s10915-015-0015-6. URL http://link.springer.com/10.
1007/s10915-015-0015-6

3. Courant, R., Friedrichs, K., Lewy, H.: On the Partial Difference
Equations of Mathematical Physics. IBM Journal of Research
and Development 11(2), 215–234 (1967). DOI 10.1147/rd.112.
0215. URL http://ieeexplore.ieee.org/lpdocs/epic03/
wrapper.htm?arnumber=5391985

4. Courant, R., Isaacson, E., Rees, M.: On the solution of nonlinear
hyperbolic differential equations by finite differences. Communi-
cations on Pure and Applied Mathematics 5(3), 243–255 (1952).
DOI 10.1002/cpa.3160050303. URL http://doi.wiley.com/
10.1002/cpa.3160050303

5. Dadvand, P., Rossi, R., Oñate, E.: AnObject-oriented Environment
for Developing Finite Element Codes for Multi-disciplinary Appli-
cations. Archives of ComputationalMethods in Engineering 17(3),
253–297 (2010). DOI 10.1007/s11831-010-9045-2. URL http:
//link.springer.com/10.1007/s11831-010-9045-2

6. Dupont, T.F., Liu, Y.: Back and forth error compensa-
tion and correction methods for removing errors induced
by uneven gradients of the level set function. Journal of
Computational Physics 190(1), 311–324 (2003). DOI 10.
1016/S0021-9991(03)00276-6. URL http://linkinghub.
elsevier.com/retrieve/pii/S0021999103002766

7. Dupont, T.F., Liu, Y.: Back and forth error compensation
and correction methods for semi-lagrangian schemes with ap-
plication to level set interface computations. Mathemat-
ics of Computation 76(258), 647–669 (2007). DOI 10.
1090/S0025-5718-06-01898-9. URL http://www.ams.org/
journal-getitem?pii=S0025-5718-06-01898-9

8. Evans, M.W., Harlow, F.H.: The Particle-in-Cell Method for Hy-
drodynamic Calculations. Tech. rep., Los Alamos National Lab-
oratory, Los Alamos, New Mexico (1957). URL http://www.
fas.org/sgp/othergov/doe/lanl/dtic/ADA384618.html

9. Gelet, R.M., Nguyen, G., Rognon, P.: Modelling interaction of
incompressible fluids and deformable particles with the Material
Point Method. In: The 6th International Conference on Computa-
tional Methods (ICCM2015) (2015)

10. Gimenez, J.M., Nigro, N.M., Idelsohn, S.R.: Evaluating the per-
formance of the particle finite element method in parallel ar-
chitectures. Computational Particle Mechanics 1(1), 103–116
(2014). DOI 10.1007/s40571-014-0009-4. URL http://link.
springer.com/10.1007/s40571-014-0009-4

11. Harlow, F.H.: Hydrodynamic Problems Involving Large Fluid Dis-
tortions. Journal of the ACM 4(2), 137–142 (1957). DOI 10.1145/

320868.320871. URL http://portal.acm.org/citation.
cfm?doid=320868.320871

12. Higham, N.J.: Accuracy and Stability of Numerical Algorithms.
Society for Industrial and Applied Mathematics (2002). DOI 10.
1137/1.9780898718027. URL http://epubs.siam.org/doi/
book/10.1137/1.9780898718027

13. Idelsohn, S.R., Marti, J., Becker, P., Oñate, E.: Analysis of mul-
tifluid flows with large time steps using the particle finite ele-
ment method. International Journal for Numerical Methods in
Fluids 75(9), 621–644 (2014). DOI 10.1002/fld.3908. URL
http://doi.wiley.com/10.1002/fld.3908

14. Idelsohn, S.R., Mier-Torrecilla, M., Nigro, N., Oñate, E.:
On the analysis of heterogeneous fluids with jumps in the
viscosity using a discontinuous pressure field. Computa-
tional Mechanics 46(1), 115–124 (2010). DOI 10.1007/
s00466-009-0448-6. URL http://www.springerlink.com/
index/10.1007/s00466-009-0448-6

15. Idelsohn, S.R., de Mier-Torrecilla, M., Oñate, E.: Multi-
fluid flows with the Particle Finite Element Method. Com-
puter Methods in Applied Mechanics and Engineering
198(33-36), 2750–2767 (2009). DOI 10.1016/j.cma.2009.04.
002. URL http://linkinghub.elsevier.com/retrieve/
pii/S0045782509001534

16. Idelsohn, S.R., Nigro, N., Limache, A., Oñate, E.: Large time-step
explicit integration method for solving problems with dominant
convection. Computer Methods in Applied Mechanics and Engi-
neering 217-220, 168–185 (2012). DOI 10.1016/j.cma.2011.12.
008. URL http://linkinghub.elsevier.com/retrieve/
pii/S0045782511003872

17. Idelsohn, S.R., Nigro, N.M., Gimenez, J.M., Rossi, R., Marti,
J.M.: A fast and accurate method to solve the incompressible
Navier-Stokes equations. Engineering Computations 30(2), 197–
222 (2013). DOI 10.1108/02644401311304854. URL http:
//www.emeraldinsight.com/10.1108/02644401311304854

18. Idelsohn, S.R., Oñate, E., Del Pin, F.: The particle finite element
method: a powerful tool to solve incompressible flows with free-
surfaces and breaking waves. International Journal for Numerical
Methods in Engineering 61(7), 964–989 (2004). DOI 10.1002/
nme.1096. URL http://doi.wiley.com/10.1002/nme.1096

19. Idelsohn, S.R., Oñate, E., Nigro, N., Becker, P., Gimenez, J.: La-
grangian versus Eulerian integration errors. Computer Methods
in Applied Mechanics and Engineering 293, 191–206 (2015).
DOI 10.1016/j.cma.2015.04.003. URL http://linkinghub.
elsevier.com/retrieve/pii/S0045782515001401

20. MacCormack, R.W.: The Effect of Viscosity in Hypervelocity Im-
pact Cratering. Journal of Spacecraft and Rockets 40(5), 757–763
(2003). DOI 10.2514/2.6901. URL http://arc.aiaa.org/
doi/abs/10.2514/2.6901

21. Marti, J., Ryzhakov, P., Idelsohn, S.R., Oñate, E.: Combined
Eulerian-PFEM approach for analysis of polymers in fire sit-
uations. International Journal for Numerical Methods in En-
gineering pp. n/a–n/a (2012). DOI 10.1002/nme.4357. URL
http://doi.wiley.com/10.1002/nme.4357

22. Min, C., Gibou, F.: A second order accurate projection
method for the incompressible NavierâĂŞStokes equations
on non-graded adaptive grids. Journal of Computational
Physics 219(2), 912–929 (2006). DOI 10.1016/j.jcp.2006.07.
019. URL http://linkinghub.elsevier.com/retrieve/
pii/S0021999106003366

23. Nadukandi, P.: Numerically stable formulas for a particle-based
explicit exponential integrator. Computational Mechanics 55(5),
903–920 (2015). DOI 10.1007/s00466-015-1142-5. URL http:
//link.springer.com/10.1007/s00466-015-1142-5

24. Nielson, G.M., Jung, I.H.: Tools for computing tangent
curves for linearly varying vector fields over tetrahedral
domains. IEEE Transactions on Visualization and Com-
puter Graphics 5(4), 360–372 (1999). DOI 10.1109/



10 Prashanth Nadukandi et al.

2945.817352. URL http://ieeexplore.ieee.org/lpdocs/
epic03/wrapper.htm?arnumber=817352

25. Peterson, A.W.: Simulation and Testing ofWave-AdaptiveModular
Vessels. Ph.d. thesis, Virginia Polytechnic Institute and State Uni-
versity (2014). URL http://hdl.handle.net/10919/54555

26. Robert, A.: A stable numerical integration scheme for the
primitive meteorological equations. Atmosphere-Ocean
19(1), 35–46 (1981). DOI 10.1080/07055900.1981.9649098.
URL http://www.tandfonline.com/doi/abs/10.1080/
07055900.1981.9649098

27. Ryzhakov, P.: Amodified fractional step method for fluidâĂŞstruc-
ture interaction problems. Revista Internacional de Méto-
dos Numéricos para Cálculo y Diseño en Ingeniería (2016).
DOI 10.1016/j.rimni.2015.09.002. URL http://linkinghub.
elsevier.com/retrieve/pii/S0213131515000589

28. Ryzhakov, P., Rossi, R., Oñate, E.: An algorithm for the sim-
ulation of thermally coupled low speed flow problems. Inter-
national Journal for Numerical Methods in Fluids 70(1), 1–19
(2012). DOI 10.1002/fld.2674. URL http://doi.wiley.com/
10.1002/fld.2674

29. SAWYER, J.S.: A semi-Lagrangian method of solving the vor-
ticity advection equation. Tellus 15(4), 336–342 (1963). DOI
10.1111/j.2153-3490.1963.tb01396.x. URL http://tellusa.
net/index.php/tellusa/article/view/8862

30. Selle, A., Fedkiw, R., Kim, B., Liu, Y., Rossignac, J.: An Un-
conditionally Stable MacCormack Method. Journal of Sci-
entific Computing 35(2-3), 350–371 (2008). DOI 10.1007/
s10915-007-9166-4. URL http://link.springer.com/10.
1007/s10915-007-9166-4

31. Sulsky, D., Zhou, S.J., Schreyer, H.L.: Application of a
particle-in-cell method to solid mechanics. Computer Physics
Communications 87(1-2), 236–252 (1995). DOI 10.1016/
0010-4655(94)00170-7. URL http://linkinghub.elsevier.
com/retrieve/pii/0010465594001707

32. WAM-V: TheWaveAdaptiveModular Vessel. URL http://www.
wam-v.com

33. Zhang, D.Z., Zou, Q., VanderHeyden,W.B.,Ma, X.:Material point
method applied to multiphase flows. Journal of Computational
Physics 227(6), 3159–3173 (2008). DOI 10.1016/j.jcp.2007.11.
021. URL http://linkinghub.elsevier.com/retrieve/
pii/S0021999107005165


