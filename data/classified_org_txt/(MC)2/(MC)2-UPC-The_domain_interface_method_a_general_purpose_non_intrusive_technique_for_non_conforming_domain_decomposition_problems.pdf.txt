



























































































The domain interface method: a general-purpose non-intrusive technique for non-conforming domain decomposition problems


Comput Mech
DOI 10.1007/s00466-015-1239-x

ORIGINAL PAPER

The domain interface method: a general-purpose non-intrusive
technique for non-conforming domain decomposition problems

M. Cafiero1 · O. Lloberas-Valls1 · J. Cante1,3 · J. Oliver1,2

Received: 12 May 2015 / Accepted: 9 December 2015
© The Author(s) 2015. This article is published with open access at Springerlink.com

Abstract A domain decomposition technique is proposed
which is capable of properly connecting arbitrary non-
conforming interfaces. The strategy essentially consists in
considering a fictitious zero-width interface between the
non-matching meshes which is discretized using a Delaunay
triangulation. Continuity is satisfied across domains through
normal and tangential stresses provided by the discretized
interface and inserted in the formulation in the form of
Lagrangemultipliers. The final structure of the global system
of equations resembles the dual assembly of substructures
where the Lagrange multipliers are employed to nullify the
gap between domains. A new approach to handle floating
subdomains is outlined which can be implemented without
significantly altering the structure of standard industrial finite
element codes. The effectiveness of the developed algorithm
is demonstrated through a patch test example and a num-
ber of tests that highlight the accuracy of the methodology
and independence of the results with respect to the frame-
work parameters. Considering its high degree of flexibility
and non-intrusive character, the proposed domain decompo-
sition framework is regarded as an attractive alternative to
other established techniques such as the mortar approach.

B J. Oliver
oliver@cimne.upc.edu

1 CIMNE – Centre Internacional de Metodes Numerics en
Enginyeria, Barcelona, Spain

2 E.T.S d’Enginyers de Camins, Canals i Ports, Technical
University of Catalonia (Barcelona Tech), Campus Nord
UPC, Mòdul C-1, c/ Jordi Girona 1-3, 08034 Barcelona, Spain

3 E.T.S. d’Enginyeries Industrial i Aeronàutica de Terrassa,
Technical University of Catalonia (Barcelona Tech), Campus
Terrassa UPC, c/ Colom 11, 08222 Terrassa, Spain

Keywords Domain decomposition methods · Non-
conforming interface · Weak coupling techniques for
non-matching meshes

1 Introduction

Modern engineering applications require sophisticated sim-
ulation techniques which deal with increasing complexity
and refinement of the computational models. Consequently,
detailed finite element discretizations are commonly used
in nowadays structural analysis and a number of practi-
cal situations are emerging in which special techniques
are indispensable to handle non-matching discretizations.
In this introduction we focus on engineering applica-
tions and computational techniques concerning the assem-
bly and resolution of models involving non-overlapping
meshes.

1.1 The need for non-matching mesh assemblies in
computational mechanics

Typical scenarios arise when independent mesh discretiza-
tions are applied to different parts of a structure and when
large models are divided and distributed among different
working teams. A common situation is encountered when
particular structural components are reused in evolving
designs such as thewings among diverse aircraft models with
changing fuselages. Themeshes of the structural components
aremost likely non-matching and need to be assembled along
common edges using special techniques that account for the
non-conforming interfaces [34,35].

The field of contact mechanics [51] has significantly
boosted the formulation of new assembly techniques since
the most general situations between contact surfaces are

123

http://crossmark.crossref.org/dialog/?doi=10.1007/s00466-015-1239-x&domain=pdf


Comput Mech

encountered therein, e.g. sliding bodies over a surface or
rolling and rebounding of different discretized entities.
Other somehow related applications are connected with fluid
structure interaction [7] and multiphysics [14,41] analy-
sis where different discretizations are taken into account
due to the distinct physical nature of interacting compo-
nents.

An emerging set of techniques intimately related with
computational material design are the so-called multiscale
and multiresolution methods [13,17,27]. The idea is to
account for the lower scale components and their interactions
with an upper scale level. Multiresolution techniques based
on mesh adaptivity [33] and concurrent multiscale analysis
such as global/local approaches [8], variational multiscale
methods [25,26,36] and multiscale domain decomposition
methods [15,20,28] are examples in which lower (fine) scale
discretizations are glued to upper (coarse) scale models. This
can be performed selectively during the computations at
areas of interest, e.g. stress concentrations, crack growth and
appearance of non-linear effects, by “zooming” into these
regions and substituting a part of the domain discretization
by its corresponding refined model [30,31]. As a result, a
number of non-conforming interfaces between different scale
discretizations arise which need to be handled by appropriate
techniques.

Most of the above mentioned applications involve com-
plex models which upon discretization, e.g. using finite
elements, lead to large systems of equations. It is then not
surprising that most of the existing methodologies to con-
nect different meshes are frequently encountered in domain
decomposition techniques [19]. These techniques roughly
divide the complex model into subdomains and distribute
the corresponding calculations among different processor
units. They can be viewed as powerful parallel solvers typ-
ically formed by a blend of direct solvers that account
for the local domain factorizations and iterative solvers
for an interface problem that accounts for the connectiv-
ity of all domains. It is precisely in the generation of
such connectivity where the techniques discussed in this
paper play a crucial role since they ensure continuity of
the solution field across all conforming and non-conforming
interfaces.

1.2 Non-overlapping domain decomposition analysis
with non-conforming interfaces

In most of the domain decomposition applications the geo-
metrical compatibility of the interface �I is assumed to be
satisfied between non-matching meshes [44] meaning that
the boundaries of the domains at the common interface are
identical in the undeformed configuration. However, there
are practical situations in which this is not the case, e.g.
curved interfaces with different piece-wise linear discretiza-

tions (cf. Fig. 1). Extensions to geometrical incompatibility
have been specially addressed by contact domain tech-
niques [43,51]. Domain decomposition techniques designed
to tackle non-conforming interfaces typically employ strong
or weak coupling constraints to satisfy compatibility of the
solution field at the interface.

Strong coupling constraints refer essentially to collocation
techniques where one constraint is assigned to each degree
of freedom (DOF) while weak coupling techniques refer to
constraints enforced in an integral or average sense along
portions of the interface surface assigning one constraint per
group of DOFs belonging to the interface portion. In the
contact domain literature these techniques are often referred
to as node-to-segment techniques and segment-to-segment
techniques, respectively.

Generally, a reference displacement field u�I is outlined
fromwhich the interface constraints are generated. Such field
can be chosen based on one of the domain discretizations at
the common interface or by a third auxiliary interface dis-
cretization with a particular optimal distribution of the DOFs
such that the gap between domains is minimized in some
norm (cf. Fig. 2). Note that if the coarsest discretization is
utilized for the reference solution field the solution can be
artificially stiffened if the fine mesh is not obtained by h or p
refinement of the coarse mesh at the interface for the strong
coupling case. For this reason, weak coupling techniques
are preferred in the context of a general non-conforming
interface since they relax the constraint such that stiffening
and locking effects do not occur. Mortar methods and their
formulation in terms of finite elements constitute the most
general technique for non-conforming interfaces in which
geometrical incompatibilities can be handled [5]. The most
challenging applications of such techniques are identified in
time-dependent domains, e.g. contact problems, and when
highly refined domains are considered at local areas without
the need for an expensivemesh adaption, e.g. multiresolution
analysis.

The enforcement of constraints at a non-conforming inter-
face is typically done with the introduction of Lagrange
multipliers [1]. Basically, an extra term is added into the
variational statement which corresponds to the work per-
formed at the non-conforming interface in terms of the
existing gap and interface stresses. In the context of the
finite element method different discretizations are generated
at each domain and distribution functions are associated with
the Lagrange multipliers at the interface leading to a dis-
cretized weak form of the equilibrium equations and the
interface compatibility constraints. The distribution func-
tions for the Lagrange multipliers and shape functions for
the finite elements should be properly selected to fulfill
the Ladyzhenskaya–Babuška–Brezzi (LBB) condition (also
known as the inf-sup condition) [2] in order to guarantee
that both discretizations converge to the right solution upon

123



Comput Mech

Ω(1) Ω(2)

ΓI

Ω(1) Ω(2)

ΓI

Non-matching
limits

Ω(1)

ΓI

Ω(1) Ω(2)

ΓI

refinement
h/p- General

non-conforming

Ω(2)

Geometrically compatible Geometrically incompatible

Piece-wise
linear curves

Fig. 1 Different situations for a non-conforming interface

(1) (2) (3)(2) (3)

(1) (1)

(1)

Coarse Fine Auxiliar

Se
gm

en
t-t

o-s
eg

me
nt

(su
rfa

ce
pro

jec
tio

n)

No
de

-to
-se

gm
en

t

Do
ma

in
Int

erf
ac

e

M
eth

od
(D

IM
)

(no
de

pa
iri

ng
)

Master or projection surface

Continuous connecting surface

Automatic Delaunay discretizations

Ω(s) ⊂ Rn, ΓI ⊂ Rn−1

Ω(s) ⊂ Rn, ΓI ⊂ Rn

Fig. 2 Connecting non-conforming interfaces with different strategies

mesh refinement. Other techniques to enforce the constraints
are related with the introduction of a penalty term which
associates a high cost to the violation of the compatibility
constraint. This is the case of penalty methods which have
the advantage of not incorporating extra DOFs to the sys-
tem of equations although the penalty term can influence the
solution. Methods based on Augmented Lagrange multipli-
ers seek for an optimal compromise between penalty and
Lagrange multipliers allowing an exact enforcement in com-

bination with a penalty-like regularization which improves
the numerical treatment. In such methods the constraint vio-
lation is also penalized but, quite in contrast, the solution
is not influenced by the penalty term. In fact, the convex-
ity of the functional is increased to facilitate the search of
its minimum. Explicit elimination of the constraints can
be performed as well leading to a system of equations
with no extra unknowns. However, these methods are not
straightforward to implement for the case of non-matching

123



Comput Mech

meshes since they require to compute a null space of the
compatibility matrices used in the equivalent dual formu-
lation or constructing a projection operator which can be
demanding in terms of storage. The reader is referred to the
work of Rixen [45] for an overview of such techniques in
the context of domain decomposition methods. Yet another
method to enforce the constraints without the introduction
of Lagrange multipliers was introduced by Nitsche [37]
which can be regarded as an intermediate technique between
the Lagrange multiplier and the penalty method. It essen-
tially modifies the weak form by adding a term including
a positive constant parameter that enforces the Dirichlet
boundary condition. Such modification depends on the par-
ticular problem but it does not lead to an ill-conditioned
system as the penalty method would do for large values of
the penalty parameter. In fact the stabilization term exhibits
less influence on the solution than standard penalty meth-
ods and, in practice, large values are not needed in order
to ensure convergence and a proper enforcement of the con-
straints. A Nitsche method to handle the interface constraints
derived fromdomain decompositionmethodswas introduced
in [4]. In order to avoid integrating products of functions on
unrelated meshes, the Lagrange multiplier method can be
adopted to enforce the interface constraints and a Nitsche
method can be employed to stabilize the system. This is
accomplished by introducing an extra term in the varia-
tional principle that couples the multipliers with the stress
fields at the interface [23]. Although the system of equa-
tions is augmented due to the introduction of the Lagrange
unknowns, no constraints are needed for the discretization
of the hybrid solution field since stabilization is accounted
for by the extra “penalty” term. This technique has proven to
be specially useful for the constraint enforcement in contact
domain methods [21,38] and will be utilized in the present
contribution.

Domain decomposition frameworks typically found in lit-
erature that account for non-conforming interfaces are based
on the introduction ofLagrangemultipliers toweakly enforce
the compatibility constraints. This is the case for the mor-
tar approach [5] which is currently the most general and
well established methodology. It essentially consists on a
segment-to-segment discretization strategy where one of the
domain surfaces at the interface is considered the ‘mor-
tar’ (master) surface whilst the other is the ‘non-mortar’
(or slave). There are also variants of the approach where a
third intermediate surface is considered with a reference dis-
placement, however it obviously leads to an increase of the
number ofDOFs. Constraints are, therefore,weakly enforced
by minimizing the gap with respect to the mortar surface.
This methodology presents an obvious disadvantage when
the selectedmortar discretization is significantly coarser than
the non-mortar one since a higher error can be obtained at
the interface and might not satisfy the patch test. The dual

domain decomposition method proposed by Herry et al. [24]
presents a highly accurate technique to glue non-conforming
interfaces bymeans of LagrangeMultipliers. It basically uses
a third interface discretization with optimal location of the
DOFs such that the kinematic continuity at the interface is
exact. However, the technique is only valid for geometrically
compatible non-conforming interfaces and, for this reason,
arbitrary curved interfaces and interfaces which do not share
the limit nodes can not be considered therein. The local-
ized Lagrange multipliers (LLM) method proposed by Park
et al. [39] consists in the introduction of a third interface
surface with a specific discretization in order to collocate
Lagrange multipliers to enforce the constraints at the non-
matching meshes. Such discretization is performed in order
to a priori satisfy the constant stress patch condition. The
technique can be viewed as a general and optimal node-to-
segment approach applied to the connection frame but still
arbitrary highly irregular grids and geometrically incompat-
ible interfaces are not addressed.

In contrast with the above mentioned techniques we pro-
pose a general and flexible methodology to account for the
most complex interface situations, i.e. geometrically incom-
patible and arbitrary non-conforming. The main idea in the
domain interface method (DIM) is to explicitly discretize the
interface through a Delaunay triangulation. In all previously
introduced techniques one slave node or segment belonging
to a domain interface was somehow projected on the other
domain interface or on an auxiliary one. Therefore, the inter-
face constraints were formulated in a domain which is one
dimension lower than the subdivided domains. In the DIM,
the interface constraints are formulated on an intermediate
interface of the same dimension as the adjacent decomposed
domains (cf. Fig. 2). Consequently, the interface surface is
continuous and uniquely defined upon the Delaunay dis-
cretizationwithout any assumptions on themaster/slave side.
This results in full and non-overlapping connections leading
to satisfactory results concerning the constant stress patch
test. The geometrical details, weak form and FE implemen-
tation are given in Sect. 2 and a number of representative
simulations are commented in Sect. 3 in order to highlight
the advantages and applicability of the proposed approach
against other established methodologies.

2 Formulation of the DIM method

In this section the necessary geometrical aspects of the
methodology are introduced and strong and weak forms of
the problem are outlined. The solvability of the resulting
system is discussed in terms of its stabilization and possi-
ble resolution choices including a parallel scheme. The main
idea behind the DIMmethod concerns an explicit meshing of
the interface between domains and is inspired in the method-

123



Comput Mech

ology introduced in [21,38] for contact mechanics. Rather
than a particularization of the contact domain method for the
case of tied contact the DIM equations stem from export-
ing the concept of the interface domain and the generality
of the contact interface connections to the family of domain
decomposition methods. In this manner, a new set of tech-
niques within the domain decomposition methods is devised
such as a non-intrusive methodology to handle rigid body
modes (RBMs) without the need for extending the solution
field to the RBM intensities as it is frequently done in estab-
lished methodologies [11]. For the sake of completeness the
methodology is introduced considering a finite strain case.
Infinitesimal deformations are recovered by considering the
necessary simplifications in the presented theory (i.e. small
displacements compared to the domain dimensions and neg-
ligible gradients of such displacements). Compact notation
will be utilized for tensor quantities throughout the document
unless a different notation is specifically mentioned.

2.1 Geometrical description of the DIM

Consider the structure assembly depicted in Fig. 3 (top)
where the domain � is composed by the union of Ns non-
overlapping domains �(s). At each domain �(s) one can
identify the regions were Dirichlet �(s)u and Neumann �

(s)
σ

boundary conditions are imposed. The interface �(s)I =
∂�(s)∩∂�(q) with outward unit normalννν(s) where ∂� stands
for the domain boundaries of the adjacent domains s and q.
Discretizations of the two bodies, e.g. using finite elements
(FE), leads to a number of N (s)

λ
vertices at the domain bound-

ary ∂�(s) located at the vicinity of �(s)I which need to be
involved in the interface discretization.

The interface generation (cf. Fig. 3) starts with a fictitious
contraction of the vertices Vi in the direction −ννν(s) by a
magnitude k. The result will be independent on the chosen
magnitude k but in our analyses k ≈ he, being he an average
of the equivalent FE size. The fictitious coordinates x′i are
utilized to generate a Delaunay triangulation which defines
the interface domain

D =
Np⋃

p=1
D(p), (1)

where D(p) represents each of the interface patches up to Np.

The interface surface �(s)D = ∂�(s) ∩ ∂D and, for the case of
a geometrically compatible interface, �(s)I = �(s)D .

Remark 2.1 Note that, upon discretization of the domain
interface D using triangular linear elements D(p), the inte-
grals over a geometrically incompatible interface when h →
0 converge to a bounded value:

Np∑

p=1
lim
h p→0

∫

D(p)

1

h p
(•) dD = 1

2

Np∑

p=1

∫

L(p)
(•) dL + O(h),

(2)

where O(h) corresponds to the error caused by approximat-
ing the interface geometry with piece-wise linear segments.
Considering the case of geometrically compatible interfaces
O(h) → 0 and
Np∑

p=1
lim
h p→0

∫

D(p)

1

h p
(•) dD ≈ 1

2

Np∑

p=1

∫

L(p)
(•) dL . (3)

Since the integration is performed over D(p) when h → 0 it
is pointed out that both adjacent domain interfaces �(s)D and

�
(q)
D are automatically accounted for. This is in contrast with

other methodologies, e.g. the mortar method [5], where only
one of the adjacent interface discretizations is considered.

Consider the assembly of two non-overlapping domains
�(s), s = 1, 2, (cf. Fig. 3) undergoing finite strains. The
corresponding deformation maps are denoted by φ(s)t (X) ≡
φ(s)(X, t) : �(s)0 × [0, T ] → �(s)t , where material points
X(s) ∈ �(s)0 at the reference configuration are mapped onto
the current configuration x(s) = φ(s)t (X) ∈ �(s)t . Such amap-
ping can be expressed in terms of the total displacement field
U(s)t (X

(s)) which denotes the difference between reference
and current coordinates satisfying

x(s) = φ(s)t (X) = X(s) + U(s)t (X(s)). (4)

In our quasi-static analyses a pseudo-time domain t ∈
[0, t] is considered with subdivisions in discrete intervals
[tn, tn+1]of incremental time length	t = tn+1−tn . Configu-
rations at the previous tn and current tn+1 times are denoted as
�

(s)
n = φ(s)tn (�

(s)
0 ) ≡ φ(s)n (�(s)0 ) and �(s)n+1 = φ(s)tn+1(�

(s)
0 ) ≡

φ
(s)
n+1(�

(s)
0 ), respectively. Therefore, an expression of the

incremental motion φ(s) can be found by substitution of the
current and previous configurations in (4) as

x(s)n+1 = φ(s)tn+1 (X(s))
x(s)n = φ(s)tn (X(s))

}
⇒

x(s)n+1 = φ(s)n+1
(
(φ

(s)
n )

−1
(x(s)n )

)
= φ(s)(x(s)n )

∀x(s)n ∈ �(s)n .
(5)

With the incremental motion in hand, the incremental field

u(s)(x(s)n ) = φ(s)(x(s)n ) − x(s)n = x(s)n+1 − x(s)n , ∀x(s)n ∈ �(s)n .
(6)

The incremental motion of the interface domain

φ
D
(x(s)n ) ≡ xn+1(xn) = xn + uD(xn), ∀xn ∈ D(p)n , (7)

123



Comput Mech

Fig. 3 Generation of the
domain interface: (i) domain
discretizations, (ii) fictitious
domain contractions, (iii)
Delaunay triangulations and (iv)
original mesh recovery

Ω(2)

Delaunay triangulation

D(p)

Ω(2)Γ(2)D

Γ(1)D

Ω(2)

Non-overlaping domains Independent discretizations

Ω(2)

Γ(2)u

Γ(2)σΓ(2)I

Ω(1)

Γ(1)I

Domain interface generation

(ii) Fictitous k-contraction

Ω(2)

Ω(1)

k

(iii) Interface discretization

Ω(2)

Ω(1)

V (2)i

(i) Disconnected interface

Ω(1) i= 1, . . . ,N(s)c

i= 1, . . . ,N(s)c

Γ(s)D = ∂ Ω
(s) ∩∂D

ννν(1)

ννν(2)

xi
(s) = xi(s) − kννν(s)

Assembly of global domain Ω with different structural components

Ω(1)

Ω(2)

Potential non-conforming interfaceΩ =
Ns

s=1
Ω(s)

V (1)i

Original mesh recovery

V (2)1V
(1)
2

(iv) Connected interface

V (2)1

V (1)1

D(p)

Lp

V (1)2
V (1)1Ω(1) hp

Ω(1)

D

D
(p)
n denoting the interface domain D at time tn . Therefore,

Dn+1 = φD(Dn) and γD = φD(�D) which represent the
current and previous domain interface and interface surfaces,
respectively (cf. Fig. 4). The incremental displacement field
at the interface domainuD is calculated by linearly interpolat-
ing the displacement increments dDi of the interface element

vertices as

uD(xn) ≡ u(p)(xn) =
3∑

i=1
Ni (xn)d

D
i , ∀xn ∈ D(p)n , (8)

Ni denoting linear shape functions for three-node triangular
finite elements. The incremental gradient deformation tensor

123



Comput Mech

l(
p)

n(p)
t(p)

Previous configuration (n) Current configuration (n+1)

N(p)

base-side

N(p)
T(p)

base-side

L(p)

Γ1D

Γ1D

H(p)
D(p)n

T(p)

xn

x̄n

H(p) = (g0N)3

φ D

n(p)
t(p)

γ1D

γ2D

D(p)n+1

bas
e-si

de

bas
e-si

de

x̄n+1

x̃n+1
gT

g(xn)
gN xn+1

g(0)N (xn)
1

3

2

1

3

2

2

1

3

2

1

3

D(p−1)n D(p+1)n

D(p−1)n+1

D(p+1)n+1

Fig. 4 Geometrical definition of the gap g(xn) according to the previous (left) and current (right) configurations

fD = ∇̄∇∇
(
φ
D
(xn)

)
= ∂xn+1

∂xn
= 1 + ∇̄∇∇(uD), (9)

where 1 represents de second order unity tensor and ∇̄∇∇
denotes the material gradient with respect to the reference
previous configuration n.

Remark 2.2 It is important to note that fD(xn) ≡ f (p) =
constant, ∀xn ∈ D(p) due to the linear character of the
incremental displacements defined in (8).

As depicted in Fig. 4, each interface patch D(p) contains
a base-line defined on �

(p)
D with unit normal vector N

(p) in
the sense of the normal to the adjacent domain ννν(s). The
tangential vector T(p) = ê × N(p), where ê denotes the out-
of-plane unit vector forming the ordered triplet of unit vectors{
N(p),T(p), ê

}
. Considering the incremental motion φD, the

current tangential and normal unit vectors read

t(p) = φ
D(T(p))∣∣∣∣φD(T(p))

∣∣∣∣ =
f (p) · T(p)∣∣∣∣f (p) · T(p)

∣∣∣∣

n(p) = t(p) × ê.
(10)

The definition of the normal and tangential vectors
depends on the local base-line for every interface patch, there-
fore these vectors are constant within every patch (cf. 10) but
discontinuous across the interface patches.

The initial normal gap g0N (cf. Fig. 4) is defined at the
previous configuration n for a given point xn and its normal
projection to the base-line x̄n as

g0N(xn) = (xn − x̄n) · N(p). (11)

The final gap vector

g(xn) = xn+1 − x̄n+1 = φD(xn) − φD(x̄n), (12)

where xn+1 and x̄n+1 stand for the convected points xn and
x̄n , respectively. The final gap can be expressed as a sumof its
normal and tangential projections onto the current base-side
as

g(xn) = gN(xn)n(p) + gT(xn)t(p)

⇒
{
gN(xn) = g(xn) · n(p)
gT(xn) = g(xn) · t(p).

(13)

123



Comput Mech

Consequently, the normal gap gN(xn) can be seen as a pro-
jection in the direction of n(p) which denotes penetration for
negative values. Similarly, the tangential gap gT(xn) repre-
sents the slid distance in the sense of t(p). It should be stressed
that the gap definition utilized in this manuscript and already
introduced in [21,38] is not standard in the sense that it is
defined as a patch-wise continuous function throughout the
patch (p) and not only defined at the interface nodes as other
methodologies would consider. For future use into the varia-
tional statement it is convenient to express the gap in terms of
the displacement field and, to this end, a Taylor series expan-
sion of φD(xn) is considered around x̄n up to second order
terms, with xn − x̄n = g0N(xn)N(p). In this spirit

xn+1 = φD(xn) = φD
(
x̄n + g0N(xn))N(p)

)

= φD(x̄n) + ∇̄∇∇
(
φ
D
(x̄n)

)
·
(
g0N(xn))N

(p)
)

+ O(xn2)
= x̄n+1 + g0N(xn))f (p) · N(p) + O(xn2).

(14)

Second orderO(xn2) and higher order terms can be neglected
due to the linear character of f (p) and, therefore, the final
expression for the gap vector as a function of the displace-
ments reads

g(xn) = xn+1 − x̄n+1 = g0N(xn))f (p) · N(p)
= g0N(xn))

(
1 + ∇̄∇∇(u(p))

)
· N(p). (15)

In the same spirit as in (13), the final gap g(xn) =
gN(xn)n(p) + gT(xn)t(p) with

gN(xn) = n(p) · g(xn) = g0N(xn))n(p) · f (p) · N(p)

= g0N(xn))n(p) ·
(
N(p) + ∇̄∇∇(u(p)) · N(p)

)
,

gT(xn) = t(p) · g(xn) = g0N(xn))t(p) · f (p) · N(p)

= g0N(xn))t(p) ·
(
N(p) + ∇̄∇∇(u(p)) · N(p)

)
.

(16)

Remark 2.3 The expressions of the gap match the ones
obtained in node-to-segment techniques [51] when xn is con-
sidered the slave node and x̄n is chosen as the master one.
However, as already pointed out by Oliver et al. [38], the
expressions in (16) can be regarded more general since they
are defined continuously throughout the interface patch D(p)

and not only for the vertices. Therefore the strategy is com-
parable to segment-to-segment techniques without the need
for a definition of the master and slave surfaces.

In order to formulate the variational principle in Sect. 2.2
it is convenient to work with a dimensionless measure of the
gap. In this view, the normal and tangential gap intensities are

written relative to the absolute value of the original normal
gap as

ḡN(xn) =
gN(xn)∣∣g0N(xn)

∣∣ and ḡT(xn) =
gT(xn)∣∣g0T(xn)

∣∣ . (17)

Remark 2.4 It is important to note that the gap intensity
results singular when a perfect connection is fulfilled at the
previous configuration, i.e. g0T(xn) = 0. However, the inte-
gral terms added to the variational statement that account for
the work at the interface converge to a bounded value despite
the kernel being unbounded as shown in (2).

Inserting (17) in (16) the final expression for the gap reads

ḡN(xn) = sign
(
g0N(xn)

)
n(p) ·

(
N(p) + ∇̄∇∇(u(p)) · N(p)

)
,

ḡT(xn) = sign
(
g0N(xn)

)
t(p) ·

(
N(p) + ∇̄∇∇(u(p)) · N(p)

)
.

(18)

The interface traction vector acting at the surface �(s)D can
be expressed in terms of the first Piola–Kirchoff stress tensor
P(s) at time n + 1 with respect to the configuration at time n
and the normal vector N(p) = ννν(s)n as

tI(xn,N)
(s) = P(s) · N(p), ∀xn ∈ �(s)D (19)

with normal and tangential components w.r.t. the current nor-
mal and tangential vectors

tI,N(xn) = n(p) · P(s) · N(p)
tI,T(xn) = t(p) · P(s) · N(p)

}
∀xn ∈ �(s)D (20)

and are defined at the surface γ (s)D (cf. Fig. 4). Displace-
ment compatibility between domains is enforced through the
Lagrange multipliers defined constant at each patch D(p) as

λN(xn) = tI,N(xn)
λT(xn) = tI,T(xn)

}
∀xn ∈ �(s)D (21)

which can be seen as the normal and tangential stresses that
connect the adjacent domains (cf. Fig. 5).

Remark 2.5 For the case of tied contact within the present
domain decompositon framework there is no need for a
splitting between normal and tangential contributions. How-
ever, this splitting is introduced for the sake of completeness
presenting a methodology that serves as a basis to tackle,
if needed, more complex phenomena in which a different
treatment can be considered for the tangential and nor-
mal interface components. Such scenarios may involve, for
instance, sliding between domains. Additionally, the imposi-
tion of particular boundary conditions utilizing the Lagrange

123



Comput Mech

λ (p)N = t
(s)
N = n ·P(s) ·N

λ (p)T = t
(s)
T = t ·P(s) ·N

n

t

ba
se

-s
id

e

D(p)

Ω(s)

D

P(s)Ω(q)
λλλ (p)I

Fig. 5 Lagrange multiplier identification at the interface

multiplier framework can be considered as well in which the
tangential component is treated differently due to friction or
sliding. Specific cases involving fluid structure interaction
could in this manner be treated as well. The case of nor-
mal tying along an interface segment between fully tied limit
corners has been studied already within a multiscale Domain
Decomposition framework [30] to avoid undesirable stress
concentrations at heterogeneous non-conforming interfaces.
Such a splitting induces a non-linearity which would indeed
have an impact within a small deformation setting but for the
large strain formulation presented in thismanuscript the price
of the splitting is considered low compared to the benefits of
increasing the applicability of the methodology.

2.2 Strong and weak forms of the problem

The strong form of the equilibrium problem at domain �(s)

can be written as:

FIND:

{
u(s)(x(s)n ) : �(s)n →R2,
λλλI(xn) = λN(xn)n(p) + λT(xn)t(p) : Dn →R2,

(22)

FULFILLING:

Equilibrium equation: ∇̄∇∇ · P(s) = 0, in �(s)n (23)
Constitutive model: P(s) = ���(s)(u(s)), in �(s)n (24)
Dirichlet’s boundary conditions: u(s) = û(s), in �(s)u

(25)

Neumann’s boundary conditions: t(s) = t̂(s), in �(s)σ
(26)

Lagrange multiplier identification: λλλI = t(s), in �(s)D
(27)

Compatibility constraints:

{
ḡN(u

D
) = 0

ḡT(u
D
) = 0

, in Dn, (28)

∇̄∇∇ being the material gradient with respect to the previous
configuration n, P(s) the first Piola–Kirchoff corresponding
to the previous configuration�(s)n , t̂

(s) and û(s) the prescribed
tractions and displacements at �(s)σ and �

(s)
u , respectively.

Remark 2.6 Note that the compatibility constraints are enfo-
rced to nullify the normal ḡN(uD) and tangential ḡT(uD)
components of the effective gap satisfying, in this man-
ner, displacement compatibility across domains as indicated
in (28). The gaps are defined by means of the incremen-
tal displacements at the interface uD which are calculated
by interpolating the displacements at the vertices according
to (8). In addition, the displacements at the vertices of the
interface patch are calculated with the domain displacements
u(s)(xn).

The weak form of the problem stated in (23–28) is expressed
through the virtual work principle and variational statement
of the constraint equations. To this end, the solution VVV and
weighting spacesVVV0 for the displacement field as well as the
Lagrange multiplier space LLL for the corresponding solution
and weighting functions are defined as:

VVV :=
{
u
/
u
∣∣∣
�(s)

∈ H1(�(s)), u(s) = û(s) in �(s)u , s : 1 . . . Ns
}

,

(29)

VVV0 :=
{
δu

/
δu

∣∣∣
�(s)

∈ H1(�(s)), δu(s) = 0 in �(s)u , s : 1 . . . Ns
}

,

(30)

L := L2(D), (31)

H1(�(s)) and L2(D) being the Sovolev space of functions
with square integrable derivatives and the Lebesgue space
of square integrable functions, respectively. The variational
statement reads:

FIND:

{
u(s) ∈ VVV : �(s)n → R2
λλλI ∈ LLL : Dn → R2

(32)

FULFILLING:

δmec(u,λλλI, δu) := δint,ext(u, δu) + δI(u,λλλI, δu) = 0,
∀δu(s) ∈ VVV0. (33)
AND

δλN(u
D
, δλN) = 0, ∀δλN ∈ L, (34)

δλT(u
D
, δλT) = 0, ∀δλT ∈ L. (35)

The part of the mechanical work corresponding to internal
and external forces

δint,ext(u, δu) = δint(u, δu) − δext(δu) (36)

with

δint(u, δu) =
Ns∑

s=1

{∫

�
(s)
n

P(s) : ∇̄∇∇(δu(s)) d�
}

(37)

123



Comput Mech

and

δext(δu) =
Ns∑

s=1

{∫

�
(s)
σ

t̂(s) · δu(s) d�
}

. (38)

The work performed at the interface

δI(u,λλλI) =
∫

Dn
λλλI · δḡ(uD) dD

=
∫

Dn
λNδḡN(u

D
) dD +

∫

Dn
λTδḡT(u

D
) dD,

(39)

where δḡ denotes the gap intensity variations. It is worth not-
ing that the resulting variational principles are considered on
the interface volume (surface in 2D) Dn and not at the inter-
face surface (segments in 2D) as it is done in other established
methodologies. Following the expressions of the gap inten-
sity variations developed in [21,38] the interface normal and
tangential work contributions can be written in terms of the
displacement variations as:
∫

Dn
λNδḡN(u

D
) dD =

∫

Dn
λNḡNn · ∇∇∇(δuD) · n dD, (40)

∫

Dn
λTδḡT(u

D
) dD =

∫

Dn
λTḡNn · ∇∇∇(δuD) · t dD

+
∫

Dn
λTḡNt · ∇∇∇(δuD) · n dD

+
∫

Dn
λTḡTt · ∇∇∇(δuD) · t dD, (41)

where ∇∇∇ = ∂(•)
∂xn+1

denotes the spatial gradient, i.e. taking

derivatives with respect to the current configuration n + 1.
Finally, the variational statements of the constraint equa-

tions

δλN(u
D
, δλN) =

∫

Dn
δλN ḡN(u

D
) dD

=
∫

Dn
δλN sign

(
g0N

)
n ·

(
N + ∇̄∇∇(uD) · N

)
dD,

(42)

δλT(u
D
, δλT) =

∫

Dn
δλT ḡT(u

D
) dD

=
∫

Dn
δλT sign

(
g0N

)
t ·

(
N + ∇̄∇∇(uD) · N

)
dD,

(43)

which force the interface work to nullify in an average sense
along the domain interface Dn .

Remark 2.7 The equilibrium equation in (23) and imposed
tractions at the boundary (26) correspond to the Euler–
Lagrange equations and natural boundary conditions asso-

ciated to the virtual work principle in (33). In the same spirit,
the constraint equations in (28) correspond to the Euler–
Lagrange equations associated to the constraint variational
Eqs. (34, 35).

2.3 Discretization using FE and lambda-solvability of
the resulting system

Consider a Galerkin-based discretization in which the dis-
placement solution field and its variations are interpolated
using the shape functions N as:

u(s)(xn) =
∑

a

Na(xn)d
(s)
a ∀xn ∈ �(s)n , (44)

δu(s)(xn) =
∑

a

Na(xn)δd
(s)
a ∀xn ∈ �(s)n , (45)

where the subscript a denotes the discrete nodes correspond-
ing to the displacement interpolation. In a similar fashion,
the displacements uD, Lagrange multipliers λλλI and its corre-
sponding variations at the interface patch D are discretized
as:

uD(xn) =
∑

a

Na(xn)d
D
a ∀xn ∈ Dn, (46)

δuD(xn) =
∑

a

Na(xn)δd
D
a ∀xn ∈ Dn, (47)

λλλI(xn) =
∑

b

�b(xn)���b ∀xn ∈ Dn, (48)

δλλλI(xn) =
∑

b

�b(xn)δ���b ∀xn ∈ Dn, (49)

where the subscript b stands for the the discrete nodes corre-
sponding to the Lagrange multipliers interpolation using the
shape functions � which read:

�(xn) =
{
1 ∀xn ∈ D(p)n
0 ∀xn /∈ D(p)n

. (50)

Remark 2.8 It should be noted that a piece-wise constant
interpolation of the Lagrange multipliers might not lead to
optimal spatial convergence rates. We have not observed any
critical convergence behaviour in any of our simulations.
However, it is observed in our analyses that the theoretical
convergence rates might not be fully recovered due to use
of piece-wise constant Lagrange multipliers. A more theo-
retical and practical study regarding convergence rates with
respect to the choice of the Lagrange multiplier space is out
of the scope of this work and could be considered as a future
research topic for a more mathematically oriented contribu-
tion.

123



Comput Mech

The FE approximation of the virtual work expression
in (33) can be written using the above interpolations (44)
to (49) as follows:

δmec(u,λλλI, δu) ≈ δhmec(d,���, δd) = δhint,ext(d, δd)
+ δhI (d,���, δd). (51)

Considering that (51) holds for any virtual displacement δu,
the residual forces of the variational principle

Rmech(d,���) = Rint,ext(d) + RI(d,���), (52)

with

Rint,ext(d) =
Ns∑

s=1

(
F(s)int (d

(s)
) − F(s)ext

)

=
Ns∑

s=1

(∫

�(s)

∑

a

(
P(s)(d(s)) · ∇̄∇∇(Na)

)
d�

−
∫

�(s)

∑

a

(
Na t̂

(s)
a

)
d�

)
, (53)

RI(d,���) =
∫

Dn

∑

b

(
�b�N,b

)
ḡNn

(
∑

a

∇∇∇(Na)
)

· n dD

+
∫

Dn

∑

b

(
�b�T,b

)
ḡNn

(
∑

a

∇∇∇(Na)
)

· t dD

+
∫

Dn

∑

b

(
�b�T,b

)
ḡNt

(
∑

a

∇∇∇(Na)
)

· n dD

+
∫

Dn

∑

b

(
�b�T,b

)
ḡTt

(
∑

a

∇∇∇(Na)
)

· t dD,

(54)

where it is assumed that g = g(dD), n = n(dD) and t =
t(dD).

Following an analogous procedure for the variational
expression of the interface constraints (34, 35)

δλN(u
D
, δλN) ≈ δhλN(dD, δ�N). (55)

δλT(u
D
, δλT) ≈ δhλT(dD, δ�T). (56)

Considering that (55, 56) hold for any virtual Lagrange mul-
tiplier δλN and δλT, the residual displacement gap of the
constraint variational principle can be written in a matrix
form as:

Rλ(d
D
) =

[
RλN(d

D)

RλT(d
D)

]
, (57)

with

RλN(d
D
) =

∫

Dn
sign(g0N)n ·

(
N +

(
∑

a

∇̄∇∇(NadDa ) · N
))

dD,

(58)

RλT(d
D
) =

∫

Dn
sign(g0N)t ·

(
N +

(
∑

a

∇̄∇∇(NadDa ) · N
))

dD.

(59)

The discrete problem to be solved can be specified in terms
of the nodal quantities d and��� as:

FIND dAND���FULFILLING

Rmech(d,���) = 0, (60)
Rλ(d

D
) = 0. (61)

The set of Eqs. (60, 61) can be solved incrementally via a
standard Newton-Raphson procedure on the linearized sys-
tem

[
Rmech(d,���)
Rλ(d)

]
+

⎡

⎢
⎣

∂Rmech(d,���)
∂d

∂Rmech(d,���)
∂���

∂Rλ(d)
∂d

0

⎤

⎥
⎦
[

	d
	���

]
= 0,

(62)

where	d and	��� denote the solution field increments to be
solved at each iteration.

It is important to realize that zero entries appear at the
tangent matrix due to the fact that the gap residual Rλ(d)
depends solely on the nodal displacements d and not on
the Lagrange multipliers ���. Consequently, the problem is
prone to exhibit instabilities if the adopted solution field
discretizations do not satisfy the Ladyzhenskaya–Babuška–
Brezzi (LBB) condition [2]. In order to provide a dependency
of the Lagrange multipliers ��� for the gap residual Rλ(d), a
Nitschemethod [37] is employed based on thework ofHeintz
and Hansbo [23] who introduced this methodology for the
case of linear kinematics. The stabilization procedure utilized
in this manuscript has been introduced by Oliver et al. [38]
and Hartmann et al. [21] in the context of contact mechan-
ics. It essentially consists in a modification of the constraint
variational principles (34, 35) considering a weak format of
the identities in (21) leading to

δ̃λN(u
D
, δλN) = δλN(uD, δλN)

+
∫

∂Dn∩�(s)D
τδλN

(
tN(u

(s)
)−λN

)
d�=0,

∀δλN ∈ LN, (63)
δ̃λT(u

D
, δλT) = δλT(uD, δλT)

+
∫

∂Dn∩�(s)D
τδλT

(
tT(u

(s)
)−λT

)
d�=0,

∀δλT ∈ LT, (64)

123



Comput Mech

with τ > 0 being an additional parameter that penalizes
the violation of the identity expressed by the new term. In
addition

τ = αstab
Emin

L , (65)

where Emin is the minimal Young’s modulus of the adjacent
domains, L stands for the base-side length of the interface
domain element in the previous configuration (cf. Fig. 4) and
αstab corresponds to a dimensionless user defined parameter
which is regarded independent of the mesh size [21]. Note
that the units of the stabilization parameter τ are [L]3/[F]
such that the additional variational term corresponds to an
energetic contribution with units [F][L]. It should be noted
that, since the penalized term is part of the Euler–Lagrange
equations of the variational principle (27), it will tend to
zero upon mesh refinement. For this reason the stabilization
procedure described in (63, 64) is qualified as a consistent
penaltymethod inwhich, unlike other non-consistent penalty
methods, the parameter τ can be made significantly small
without affecting the quality of the obtained results.

The new residual displacement gap of the modified vari-
ational constraints (63, 64)

R̃λ(d
D
,���) =

[
R̃λN(d

D,�N)

R̃λT(d
D,�T)

]
, (66)

with

R̃λN (d
D
,�N) =

∫

Dn
sign(g0N)n ·

(
N +

(
∑

a

∇̄∇∇(NadDa ) · N
))

dD

+
∫

�n

τ

(
n · P(s) · N −

∑

b

(
�b�N,b

)
)

d� (67)

R̃λT (d
D
,�T) =

∫

Dn
sign(g0N)t ·

(
N +

(
∑

a

∇̄∇∇(NadDa ) · N
))

dD

+
∫

�n

τ

(
t · P(s) · N −

∑

b

(
�b�T,b

)
)

d�. (68)

The first Piola–Kirchoff stress tensor P(s) in (67, 68) belongs
to domain �(s) and corresponds to the element adjacent to
the base-line of the interface element D(p) (cf. Fig. 5). Taking
into account the above expressions for the modified con-
straint residual, the system in (62) results in

[
Rmech(d,���)
R̃λ(d,���)

]
+
⎡

⎢
⎣

∂Rmech(d,���)
∂d

∂Rmech(d,���)
∂���

∂R̃λ(d,���)
∂d

∂R̃λ(d,���)
∂���

⎤

⎥
⎦
[

	d
	���

]
= 0.

(69)

Remark 2.9 The system in (69) is non-symmetric due to the
fact that the stabilization term is only introduced in the con-
straint equations. The consistent symmetric version proposed

by Heintz and Hansbo [23] could be utilized too and it would
be recommended in those cases where the adopted FEmodel
leads to a symmetric tangent stiffness matrix. In the context
of a full parallel scheme, the symmetry of the system in (69)
allows the use of efficient iterative solvers such as the pre-
conditioned conjugate gradient [3].

2.4 Parallel system resolution strategies

The dual assembly in (69) can be recast considering the dis-
cretized quantities for each domain �(s) in a matrix form
as

⎡

⎢⎢⎢⎢
⎣

K(1)dd 0 0 K
(1)
d�

0
. . . 0

...

0 0 K(Ns)dd K
(Ns)
d�

K(1)
�d . . . K

(Ns)
�d K��

⎤

⎥⎥⎥⎥
⎦

⎡

⎢⎢⎢
⎣

	d(1)
...

	d(Ns)

	���

⎤

⎥⎥⎥
⎦

=

⎡

⎢⎢⎢⎢
⎣

r(1)d
...

r(Ns)d
r�

⎤

⎥⎥⎥⎥
⎦

,

(70)

where

[
K(s)dd K

(s)
d�

K(s)
�d K��

]
=

⎡

⎢⎢⎢
⎣

∂ (Rmech(d,���))
(s)

∂d(s)
∂ (Rmech(d,���))

(s)

∂���(s)

∂
(
R̃λ(d,���)

)(s)

∂d(s)
∂R̃λ(d,���)

∂���

⎤

⎥⎥⎥
⎦

,

(71)
[
r(s)d
r�

]
=

[
(Rmech(d,���))

(s)

R̃λ(d,���)

]
(72)

and

d(s) = d(xn)|xn ∈ �(s), (73)
���

(s) = ���(xn)|xn ∈ �(s)I = �I ∩ �(s), (74)
(Rmech(d,���))

(s) =Rmech(d,���), ∀d = d(s) and ∀���=���(s),
(75)

(
R̃λ(d,���)

)(s)
= R̃λ(d,���), ∀d = d(s) and ∀��� = ���(s).

(76)

The system in (70) is expected to be large and, therefore, suit-
able to be solved using a parallel scheme. Given a reasonable
amount of memory, the sparse system in (70) can be tack-
led with a direct parallel solver using a moderate number of
processors. These algorithms are referred to as multi-frontal
or block-LU methods [46] and are based on indepen-
dent simultaneous factorizations of the domain matrices.
Although these techniques do not scale well in massively
parallel computers, they provide the same robustness as tra-
ditional direct methods which make them attractive when
dealing with general non-symmetric and ill-conditioned sys-
tems. Additionally, block-LU solvers account for automatic

123



Comput Mech

load-balancing and multi-threading which is specially effec-
tive when dealing with domains with a significant difference
in terms of the number of DOF [9,32].

Another option is to express the global system (70) in
terms of the interface flexibility problem

FI	��� = 	gI, (77)

FI = K�� −
Ns∑

s=1

(
K(s)

�d (Kdd)
−1K(s)d�

)
, (78)

	gI = r� −
Ns∑

s=1

(
K(s)

�d (Kdd)
−1 r(s)d

)
, (79)

assuming that the matrices K(s)dd are not singular, i.e. they do
not exhibit rigid body modes (RBMs) as observed in floating
domains (cf. following Sect. 2.5 for a detailed explanation).
The flexibility of the interface and the interface displacement
gap increment are denoted by FI and 	gI, respectively and
can be interpreted as the condensation of the domain stiffness
matrices and residual forces at the interface �I. The domain
displacement increments 	d(s) can be independently cal-
culated for each domain after the solution of the Lagrange
multipliers 	��� as

	d(s) =
(
K(s)dd

)−1 (
r(s)d − K(s)d�	���

)
. (80)

In this second option, a blend of direct solvers are employed
to independently compute the factorizations of the domain
stiffness and an iterative solver is utilized for the solution
of the interface problem in (77) as commonly done in most
substructuring and domain decomposition techniques [10,
11]. Consequently, the domain stiffness factorizations, the
resolution of the interface problemand the computation of the
domain solution fields are inherently parallel tasks and, for
this reason, themethodology scaleswell inmassively parallel
computers. Moreover, since the interface problem does not
have to be explicitly assembled, the required memory profile
for such a parallel resolution is significantly lower than for
the parallel direct solution of the global system (70).

If the flexibility matrix FI is symmetric, the interface
problem in (77) can be solved by preconditioned Conjugate
Gradient iterations, otherwise a Bi-Conjugate Gradient Sta-
bilized (Bi-CGSTAB) or a Generalized Minimal Residual
method (GMRES) can be employed [3]. In our case, the non-
symmetry of the flexibility problem (77) can be caused by
the stabilization procedure outlined in (63, 64), which only
affects the constraint variational principle, or in those cases
where the constitutive equations render a non-symmetric
stiffness matrix. For the case of ill-conditioned systems, e.g.
domains with high stiffness contrasts due to heterogeneous
components or undergoing damage growth and coalescence,

robust and efficient preconditioners are generally hard to find
(cf. [29,47,49]).

The main goal of this contribution is not the parallel
assessment of the proposed domain decomposition technique
but rather the introduction of the novel concepts for han-
dling non-conformingmeshes and its performance in general
assembly situations. However, it is highlighted that the algo-
rithm is perfectly compatible with a full parallel scheme as
the ones explained above. For clarity, in all the examples pre-
sented in Sect. 3 the flexibility problem in (77) was explicitly
assembled and solved through standard direct solvers using
an LU factorization.

2.5 A non-intrusive strategy to handle rigid body modes
in the DIM

If one or more subdomains �(s) exhibit rigid body modes
(RBMs), the corresponding matrices K(s)dd are not invert-
ible and the expressions of the interface problem in (77)
to (79) need to be generalized in order to handle singu-
lar matrices K(s)dd . In standard non-overlapping dual domain
decomposition methods [11,45], the expression for the nodal
displacements at domain �(s) reads

	d(s) =
(
K(s)dd

)+ (
r(s)d − K(s)d�	�

)
− R(s)ααα(s), (81)

K(s)dd
+
, R(s) and ααα(s) being a generalized inverse, rigid

body modes (RBMs) and their amplitudes, respectively. The
RBMs R(s) span the null space of K(s)dd and represent all
displacement configurations that do not contribute to the
deformation energy, thus satisfying K(s)dd 	drbm = 0 at the
corresponding domain�(s). Note that the generalized inverse

K(s)dd
+
coincides with the standard inverse K(s)dd

−1
if K(s)dd is

non-singular and fulfills

K(s)ddK
(s)
dd

+
K(s)dd = K(s)dd , (82)

K(s)dd
+
K(s)ddK

(s)
dd

+ = K(s)dd
+
. (83)

The computation of the generalized inverse can be performed
by zeroing the rows and columns corresponding to a zero
pivot as in the temporary links method [16]. The rigid body
modes R(s) can be computed as a by-product of the factor-
ization of K(s)dd or by geometrical inspection considering the
given Dirichlet boundary conditions.

The mechanical work developed by the domain boundary
forces r(s)d − K(s)d�	� must vanish in the directions of the
rigid body modes and, therefore the following orthogonality
condition must be satisfied

R(s)
T
(
r(s)d − K(s)d�	���

)
= 0. (84)

123



Comput Mech

Substituting (81) in the stabilized constraint conditions
assembled in (70)

Ns∑

s=1
K(s)

�d	d
(s) + K��	��� = r� (85)

and taking into account the orthogonality condition (84),
the following general expression for the interface problem
is obtained:

[
FI GI
GI

T 0

] [
	���

	ααα

]
=

[
	gI
	e

]
, (86)

where

FI =
Ns∑

s=1
K(s)

�dK
(s)+
dd K

(s)T

d� , (87)

	gI =
Ns∑

s=1
K(s)

�dK
(s)+
dd r

(s)
d + K��	��� − r�, (88)

GI =
[
K(1)

�dR
(1) . . . K(Ns)

�d R
(Ns)

]
, (89)

ααα =
[
ααα(1)

T
. . . ααα(Ns)

T
]T

, and (90)

	e =
[
r(1)

T

d R
(1) . . . rdf (Ns)

T
R(Ns)

]T
. (91)

In the augmented interface system (86) the operator GI
is built considering the rigid body modes of each domain
restricted onto the interface, i.e. considering only those con-
figurations of the rigid body modes with components at the
interface and neglecting all inner degrees of freedom. The
increments 	e correspond to the residual at the interface
which is out of balance with respect to the rigid body modes.

The local problems in (81) are solved using direct solvers
while an iterative solver is employed for the augmented inter-
face problem (86) which is transformed into a semi-definite
system of equations on 	���, i.e. eliminating the RBMs from
the system, by imposing GTI 	��� = e through a projection
operator (cf. [12,45] for a more detailed explanation).

Although the methodology presented in (81) to (91) is
general for the parallel processing of any dual system (70),
its implementation in commercial FE packages is regarded
highly intrusive. For this reason, a new methodology is pro-
posed in the context of the DIM method which is capable of
handling rigid body modes without the need for augmenting
the flexibility system (77). Themethod essentially adds a new
term to the virtual mechanical work expression (33) which
penalizes a function of the type 12 ||ḡ||2. The new term is nulli-
fied in the solution since it is related with the Euler–Lagrange
equations of the constraint variational principle and, there-
fore motivates the character of interior penalty method of the
proposed procedure in the sense that mesh refinement will

force the penalized term to tend to zero. The new virtual work
expression reads:

δ̃mec(u,λλλI, δu) := δmec(u,λλλI, δu)
+ δRBM(uD, δuD) = 0, (92)

δRBM(u
D
, δuD) =

Nr∑

r=1
c
∫

�
(r)
D

δḡ · ḡ d�

=
Nr∑

r=1
c
∫

�
(r)
D

δḡNḡN d�

+
Nr∑

r=1
c
∫

�
(r)
D

δḡTḡT d�, (93)

�
(r)
D being the interface segments such that �

(r)
D = �(s) ∩

D(r), Nr representing the number of patches utilized to handle
the RBMs (cf. Fig. 6) and c denoting the penalty coeffi-
cient utilized to enforce the new condition. The additional
term (93) can be expressed in terms of the virtual displace-
ments as

Nr∑

r=1
c
∫

�
(r)
D

δḡN ḡN d� =
Nr∑

r=1
c
∫

�
(r)
D

(
ḡNn · ∇∇∇(δuD) · n

)
ḡN d�, (94)

Nr∑

r=1
c
∫

�
(r)
D

δḡT ḡT d� =
Nr∑

r=1
c
∫

�
(r)
D

(
ḡNn · ∇∇∇(δuD) · t

+ḡNt · ∇∇∇(δuD) · n + ḡTt · ∇∇∇(δuD) · t
)
ḡT d�. (95)

Considering that Eqs. (94, 95) hold for any virtual displace-
ment δuD, the corresponding residual

RRBM(d
D
) = RRBM,N (dD) + RRBM,T (dD), (96)

RRBM,N (d
D
)=

Nr∑

r=1
c
∫

�
(r)
D

(
ḡNn

(
∑

a

∇∇∇(Na)
)

· n
)
ḡN d�,

(97)

RRBM,T (d
D
) =

Nr∑

r=1
c
∫

�
(r)
D

(
ḡNn

(
∑

a

∇∇∇(Na)
)

· t

+ ḡNt
(
∑

a

∇∇∇(Na)
)

· n + ḡTt
(
∑

a

∇∇∇(Na)
)

· t
)
ḡT d�.

(98)

Note that both ḡN and ḡT are a function of dD and, therefore

∂RRBM(dD)
∂d

= f (dD), (99)
∂RRBM(dD)

∂���
= 0. (100)

Consequently, there will be contributions to the matrixK(s)dd ,
being �(s) the domain sharing the segment �(r)D with the
patch D(r), and also to the adjacent domain �(q) (cf. Fig. 6)

123



Comput Mech

Fig. 6 Handling domains �(m)

with RBMs. Stabilizing
interface patches
D(r), r = 1 . . . 4 correspond to
the shadowed elements

ḡ(r)N (d
(m),ΛN) =

2τ
H(r)

Λ(r)N −n ·P(m)(d(m)) ·N

ḡ(r)T (d
(m),ΛT) =

2τ
H(r)

Λ(r)T − t ·P(m)(d(m)) ·N

Ω(q)Ω(s) Ω(m)

dD1

P(m) ΛΛΛ(2)ḡ
(1)
I

Stabilizing interface patches D(r) for domains with RBMs Ω(m)

(r = 1 . . .4)

dD2

dD3

D(3) D(4)

D(1) D(2)

which will brake the band structure detailed in (70). In order
to avoid the coupling of displacement quantities from adja-
cent domains it is proposed to express the gap as a function
of the interface Lagrange multipliers and surface tractions on
the same domain and substitute the expression in the residu-
als (97, 98).

To this end, we consider the stabilization expressions
(63, 64). The use of linear triangular interface patches leads to
patch-wise constant normal and tangential vectors n(r), t(r)

and gap intensities ḡN, ḡT. Therefore the discretized residual
Eqs. (67, 68) can be re-written as

∫

D(r)
ḡN dD +

∫

�
(r)
D

τ
(
tN − �(r)N

)
d� = 0,

p ∈ {1, . . . , Np}, (101)∫
D(r)

ḡT dD +
∫

�
(r)
D

τ
(
tT − �(r)T

)
d� = 0,

p ∈ {1, . . . , Np}, (102)

where the base-side of the patch is denoted by�(r)D (cf. Fig. 4).
The volume and surface integrals in (101, 102) can be calcu-
lated as
∫

D(r)
dD = 1

2
L(r)H (r), (103)

∫

�
(r)
D

d� = L(r), (104)

L(r) being the length of the base-side and H (r) =
∣∣g0N(x3)

∣∣
the absolute value of the initial normal gap corresponding
to the interface element vertex 3 (cf. Fig. 4) which is the
height of the interface patch D(r)n in the previous configu-
ration. Considering the integrals (103, 104) and taking into

account that tN and tT from the element adjacent to D
(r) are

constant, the expressions in (101, 102) yield

1

2
H (r)ḡN + τ

(
tN − �(r)N

)
= 0, p ∈ {1, . . . , Np}, (105)

1

2
H (r)ḡT + τ

(
tT − �(r)T

)
= 0. p ∈ {1, . . . , Np}, (106)

The effective gap components can be now expressed in terms
of the Lagrange multiplier and traction vector components
as

ḡ
(r)
N =

gN(x3)∣∣g0N(x3)
∣∣ =

(gN)3
H (r)

= 2τ
H (r)

(
�

(r)
N − tN

)
, (107)

ḡ
(r)
T =

gT(x3)∣∣g0T(x3)
∣∣ =

(gT)3
H (r)

= 2τ
H (r)

(
�

(r)
T − tT

)
. (108)

Substituting (107, 108) in (97, 98) we obtain

RRBM(d,���) = RRBM,N (d,�N) + RRBM,T (d,���), (109)

RRBM,N (d,�N) =
Nr∑

r=1
c
∫

�
(r)
D

(
ḡN(d,�N)n

(
∑

a

∇∇∇(Na)
)

· n
)

ḡN(d,�N) d�, (110)

RRBM,T (d,���) =
Nr∑

r=1
c
∫

�
(r)
D

{
ḡN(d,�N)n

(
∑

a

∇∇∇(Na)
)

· t

+ ḡN(d,�N)t
(
∑

a

∇∇∇(Na)
)

· n (111)

+ ḡT(d,�T)t
(
∑

a

∇∇∇(Na)
)

· t
}
ḡT(d,�T) d�,

(112)

123



Comput Mech

with

ḡ
(r)
N (d,�N) =

2τ

H

(r) (
�

(r)
N − n · PI(d) · N

)
, (113)

ḡ
(r)
T (d,�T) =

2τ

H

(r) (
�

(r)
T − t · PI(d) · N

)
. (114)

Note that the modifications to the mechanical residual of
those domains that exhibit RBMs�(m) are performed involv-
ing nodal displacements d(m) of the same domain and
Lagrange multipliers defined at the interface patch D(r)

assuming that only those interface patches D(r) adjacent to
�(m) are selected (cf. Fig. 6). The new submatrices of the
global dual system (70) corresponding to domains with rigid
body modes �(m) can be defined as

⎡

⎣
K(m)dd K

(m)
d�

K(m)
�d K��

⎤

⎦ =

⎡

⎢⎢⎢⎢
⎣

∂
(
R̃mech(d,���)

)(m)

∂d(m)

∂
(
R̃mech(d,���)

)(m)

∂���(m)

∂
(
R̃λ(d,���)

)(m)

∂d(m)
∂R̃λ(d,���)

∂���

⎤

⎥⎥⎥⎥
⎦

,

(115)
[
r(m)d
r�

]
=

⎡

⎣
(
R̃mech(d,���)

)(m)

R̃λ(d,���)

⎤

⎦ , (116)

where

(
R̃mech(d,���)

)(m)
= (Rmech(d,���))(m)+(RRBM(d,���))(m) .

(117)

Consequently, the bandwidth in (70) is kept also for the con-
tributions to domains with RBMs and, for this reason, the
system can be processed in a parallel fashion as detailed
in (78–80).

Remark 2.10 Equations (113, 114) are obtained assuming
linear (constant strain) interface patches as adopted in the
examples presented in this work. If a higher order interpola-
tion is employed at the interface patches, a mean value of the
normal and tangential traction tN and tT can be used along
�

(p)
D such that the relations (113, 114) can still be utilized.

Remark 2.11 In all our computationswe considered all inter-
face patches D(r) adjacent to domain �(m). If the base-line
of the patch D(r) chosen to avoid the RBM is not located at
∂�(m), contributions to adjacent domains would be expected
in (70) and, therefore, the system could not be properly
processed in a parallel fashion.

2.6 Iterative scheme for the non-linear DIM

The linearized set of equations in (70) obtained with a
Newton-like scheme is solved iteratively for each load/time

Box 1 Iterative scheme for the non-linear DIM
Initialize: d(s)0 ,�

(s)
0 ,K

(s)
dd,0,K

(s)
d�,0,K

(s)
�d,0,K��,0, r

(s)
d,0andr�,0

New load step tn+1 = tn + 	t :
1. Add new external force increment to the residual r(s)d ← f (s)ext,n+1
2. Update tangent stiffness K(s)dd,i ,K

(s)
d�,i ,K

(s)
�d,i ,K��,i using nodal

data from last iteration i

• If floating domain K(s)dd,i ,K(s)d�,i , r(s)d,i ← R̃mech,i (d,���)(s)
• Otherwise K(s)dd,i ,K(s)d�,i , r(s)d,i ← Rmech,i (d,���)(s)

3. Parallel solver:

• Factorize local stiffness and compute the flexibility compo-
nents FI,i and 	gI,i

• Solve for 	���i+1 =
(
FI,i

)−1
	gI,i using an iterative solver.

• Compute displacement increments 	d(s)i+1 =(
K(s)dd,i

)−1 (
r(s)d,i − K(s)d�,i	�i+1

)

4. Update domain internal variables, assemble internal forces and
compute new residuals r(s)d,i+1 and r

(s)
�,i+1

5. Check for convergence:
If converged, go to 1
Else, add new iteration i and go to 2

All operations involving domain FE quantities (i.e. with superscript s)
require a loop over all domains �(s)

step	t as done in the so-called Newton-Krylov-Schur meth-
ods [6,12]. In this view, a first type of iterations refer to
the solution of the non-linear problem with successive linear
approximations. A second type of iterations arise from the
solution of the flexibility problem in (77) where usually Con-
jugate Gradient or GMRES iterates are considered. Finally,
the Schur complements are utilized for the local solutions at
each domain �(s) (80).

Assuming a fix domain decomposition and a given Delau-
nay interface discretization, the iterative scheme for the
non-linear DIM framework is summarized in Box 1.

3 Framework validation through representative
simulations

In the following we present a number of academic examples
which highlight the accuracy and convergence properties of
the framework. Attention is focused on the continuity of the
solution at the interface, the convergence rate upon mesh
refinement and a qualitative comparison of the advantages
and eventual pitfalls against existing formulations. Infinites-
imal strain theory is utilized in all examples except from
the one reported in Sect. 3.5 where finite strain theory is
considered. Additionally, the stabilization parameter τ (cf.
Eqs. 63–68) is set to 10−7 in all our computations except
from the results reported by the end of Sect. 3.4 where a
sensitivity analysis is performed varying the values of τ .

123



Comput Mech

l = 20 m

uy = −2 m

Dicretization (a) Dicretization (b)

l=
20

m Ω
(1)

Ω(2)

Fig. 7 Geometry, boundary conditions and domain decomposition
(top). Domain discretizations using linear T3 elements (bottom)

3.1 Patch test

The so-called ‘patch test’ is specially selected to verify the
correct transference of information throughout the interface.
A compression analysis is performed on a two-dimensional
homogeneous quadrilateral specimen. Plane strain condi-
tions are assumed and a linear elastic constitutive law is
considered with Young’s modulus E = 2.1 × 102MPa and
Poisson’s ratio ν = 0.3. The geometry, boundary conditions
and domain discretizations are depicted in Fig. 7.

The quadrilateral specimen is submitted to an homoge-
neous strain state where

εεε =

⎡

⎢⎢
⎣

0 0 0

0
uy
l

0

0 0 0

⎤

⎥⎥
⎦ . (118)

Considering the linear elastic constitutive relation

σσσ = λTr(εεε)1 + 2μεεε (119)

with Lamé constants

λ = νE
(1 + ν)(1 − 2ν) , μ =

E

2(1 + ν) (120)

Fig. 8 Total displacement ||u||
contours (top) and contour lines
(bottom) within the deformed
configurations for
discretizations (a) and (b). 3 ×
displacement magnification

)b(noitazitercsiD)a(noitazitercsiD

20

||u|| [m]

123



Comput Mech

and 1 being the second order unity tensor, the analytical solu-
tion reads σx = −1.2115×104 Pa and σy = −2.8269×104
Pa. These values are obviously constant throughout the spec-
imen, and are taken as the reference solution with nine
significant decimal digits when compared to the stress dis-
tributions obtained through our simulations using double
precision floating points.

Displacement contours for both discretizations are shown
in Fig. 8 within the corresponding deformed configurations.
Contour lines show that continuity is satisfied throughout
the whole specimen at this observation scale. The horizontal
and vertical stress fields are constant and identical for both
cases according to the machine precision and therefore not
reported. However the relative error er between the numerical
and reference stresses is 1.2× 10−8 for the horizontal stress
and 1.1 × 10−8 for the vertical stress.

Since the maximum relative error is order 10−8, it is con-
cluded that the proposed methodology passes the patch test
and provides an adequate transference of information across
a non-conforming interface.

3.2 Patch test with floating subdomains

In the same spirit as the previous example a patch test is
set up using a domain discretization containing one floating
domain. The objective is, therefore, to verify that the algo-
rithm to handle floating domains developed in Sect. 2.5 does
not affect the resulting solution. To this end, a biaxial com-
pression test is imposed to a quadrilateral specimen divided
into nine domains as shown in Fig. 9 and a linear elastic
constitutive law is considered with plane strain conditions.
The parameter c used to overcome the appearance of RBMs
(cf. 93–98) is set to 10−4 in all examples that require the
treatment of floating domains.

Note that interface corner points are correctly connected
using the interface discretization. The boundary conditions
result in an homogeneous strain state where

εεε =

⎡

⎢⎢⎢
⎣

δx

l
0 0

0
δy

l
0

0 0 0

⎤

⎥⎥⎥
⎦

(121)

with δx = uRx −uLx and δy = uTy −uBy . Considering the linear
elastic constitutive relation andLamé constants in (119, 120),
respectively, the analytical stresses read σx = −9.9615×104
Pa and σy = −8.8846 × 104 Pa.

Displacement contour lines in the deformed configura-
tion plotted in Fig. 10 show that displacement continuity is
again satisfied throughout the whole specimen at this obser-
vation scale. The obtained horizontal and vertical stress fields
are obviously constant and the relative error er between the

ν = 0.3

E = 2.1×105 Pa

l = 30 m

l=
30

m

uBy = 1.5 m

uL x
=

5.
5

m

uR x
=

−2
.5

m

uTy = −4.5 m Discretization

ΓI

Fig. 9 Geometry, boundary conditions and material parameters (top
left). Domain discretizations using linear T3 elements (top right). Detail
of the interface discretization �I at corner points (bottom)

ux [m]

-2.5 5.5

uy [m]

-4.5 1.5

Fig. 10 Horizontal (left) and vertical (right) displacement contours
(top) and contour lines (bottom) within the deformed configurations.
1.75 × displacement magnification

123



Comput Mech

y

x

l = 10 m

d
=

1
m

Ω(1) Ω(2)

Curved interface

(6800 elements)

(6800 elements)

Straight interface

P

F = 2×106 N

Fig. 11 Boundary conditions and domain discretizations for the cantilever beam test

Reference
Monolothic

Number of FE

D
efl

ec
tio

n
u y

[m
]

1e+041e+031e+02

-3.0e-02

-3.2e-02

-3.5e-02

Fig. 12 Mesh sensitivity analysis with a monolithic approach

numerical and reference stresses is 1.5 × 10−9 for the hori-
zontal stress and 1.8 × 10−9 for the vertical stress.

Both relative errors are significantly small and, therefore,
it is concluded that the patch test is successfully passed in
those cases where floating subdomains are present. This indi-
cates that the proposed non-intrusive methodology to handle

floating domains does not affect the accuracy of the domain
decomposition framework.

3.3 Cantilever beam test

The following example is based on a test proposed by Herry
et al. [24] where the deflection at one end of a cantilever
beam is measured in order to assess the performance of
the domain decomposition method when splitting the beam
into two domains connected at a non-conforming inter-
face. The material is linear elastic with Young’s modulus
E = 2.1 × 1011 N/m2 and Poisson’s ratio ν = 0.3. The
two-dimensional test is conducted under plane strain con-
ditions and the geometry, boundary conditions and domain
discretizations are shown in Fig. 11.

The reference solution for the right end deflection is
obtained through simulations with a monolithic approach,
i.e. considering a single discretization for thewhole specimen
and employing a standard FE approach. A mesh sensitivity
analysis is performed (cf. Fig. 12) and the reference deflec-

123



Comput Mech

Fig. 13 Vertical displacement
contours employing straight and
curved interfaces. 35 ×
displacement magnification

Curved interface

Straight interface

uy [m]

0.0 −3.443×10−2

uy [m]

0.0 −3.420×10−2

Table 1 Cantilever beam test. Accuracy of the proposed approach com-
pared to the reference numerical solution

Straight interface Curved interface

Number of � 36 36
uy
urefy

99.00% 98.33%

tion urefy = −3.478× 10−2 m is selected which corresponds
to a mesh discretization similar to the one chosen in the
domain decomposition (DD) approach.

The vertical displacement contours for both straight and
curved interfaces are shown in Fig. 13. Note that displace-
ment continuity is fulfilled across the straight and curved
interfaces.

The high accuracy of the DD approach compared to the
reference monolithic solution is proven in Table 1. Both
decompositions provide accuracy percentages which are
above 98%.

A similar example was carried out by Herry et al. [24]
where the cantilever beam was analyzed using bilinear
quadrilateral FE. Table 2 is reproduced from this study and

Table 2 Cantilever beam test. Accuracy of similar approaches com-
pared to a reference theoretical solution

Coarse mortar
mesh

Fine mortar
mesh

Dual DD
method

Number of � 15 23 35
uy
urefy

79.06% 99.86% 99.84%

compares the performance between mortar methods and a
dual domain decomposition approach developed for non-
matching meshes. It is worth noting that the accuracy of
the deflection provided in the present contribution is very
much comparable to the accuracies of the above mentioned
approaches. It is noticeable in Table 2 that the original mor-
tar method performs poorly when the coarse mesh is used
to define the mortar surface. This is obviously regarded as a
considerable drawback of the method since in a general case
the distinction between coarse and fine discretizations at the
interface might not be straightforward. The approach based
on dual domain decomposition methods does not suffer from
this shortcoming since a third surface is constructed with a

123



Comput Mech

Fig. 14 Boundary conditions (top) and domain decomposition using the coarsest FE discretization (bottom)

particular arrangement of Lagrange multipliers that leads to
an optimummatching condition regarding the kinematic con-
tinuity. However, this approach is based on the assumption
that the three surfaces have the same geometry. This implies
that, upon discretization, a number of nodes, e.g. extreme
nodes, are common. This assumption is reasonable for cases
in which the domains are originated from the decomposition
of a continuous body. Conversely, if the domains are glued at
a common surface and discretized independently, this condi-
tion might not be realistic.

More advancedmortar methods employed nowadays [40–
42,50] consider a carefully chosenLagrangemultiplier space
based on stability and optimality considerations or even a
third auxiliary surface with an optimal node collocation to
minimize the error at the interface integrals. This may not
lead to the suboptimal performance shown in Table 2 but,
for the case of a third auxiliary surface, extra degrees of
freedom (possibly condensible) are required and, therefore,
the cost and complexity of the formulation is increased. For
the case of an heterogeneous interface, the performance in
terms of accuracy of such advanced mortar methods would
not be affected. However, the DIM method outlined in this
contribution for two-dimensional applications distinguishes
from these techniques in the sense that no extra projection
surfaces and extra DOFs are required for a general geometri-
cally incompatible interface since this is automatically taken
into account by the interface mesh. It is not the author’s
intention to provide a review study of all recent mortar vari-
ants but rather compare the accuracy of the DIM method
with situations in which original mortar methods would
perform optimally. We believe that more advanced mortar
technologies would provide a comparable accuracy to the
one observed by original mortar techniques when the finest
mesh is selected as the mortar surface. In such scenarios, the
DIMmethodwould be considered a computationally cheaper
alternative.

3.4 Convergence analysis and dependence on the
stabilization parameter τ

The effect ofmesh refinement at the interface is studied in this
section. Based on the work of Girault et al. [18] a test is set up
in a two dimensional cantilever beam under plane strain con-
ditions. Infinitesimal strain theory is utilized and the material
follows a linear elastic constitutive law with Young’s modu-
lus E = 2.0 × 105 N/m2 and Poisson’s ratio ν = 0.3.

As sketched in Fig. 14, homogeneous displacement
boundary conditions are imposed at the left end of the beam
uL = 0 and the right end follows the displacement uR = u�
where

u� =
⎡

⎢
⎣

−3αx2y
αx3 + 3αλ

λ + 2μ x(y
2 − c2)

⎤

⎥
⎦ , (122)

Guirault et. al.
DIM

FE size [m]

E
rr

or

1e+001e-011e-02

1e+02

1e+01

1e+00

1e-01

1e-02

1e-03

1e-04

1e-05

m= 1.21

m= 1.27

Fig. 15 Local convergence error based on the displacement jump norm∣∣∣∣�u�
∣∣∣∣
L2

in (124) for different mesh discretizations

123



Comput Mech

ux [m] 0.15-0.15

uy [m] 0.0-1.0

Fig. 16 Horizontal (top) and vertical (bottom) displacement contours for the finest FE discretization

λ and μ being the Lamé constants described in (120) and
α = −1.0 × 10−3m−2. The body force field on the beam
reads

f� =
⎡

⎣6αμ
3λ + 4μ
λ + 2μ y

0

⎤

⎦ . (123)

This condition is translated into homogeneous tractions σσσ ·
n = 0 at the top and bottom surfaces of the beam as indicated
in Fig. 14.

The beam is split into ten domains as indicated in Fig. 14
and an alternate regular discretization is considered between
domains such that all interfaces are non-conforming. Four
levels of refinement are employed which correspond to ele-
ment sizes ranging from 1/4 to 1/32m for one set of domains
and 1/6 to 1/48 m for the alternate set of domains.

The error is measured taking into account the displace-
ment jump �u� at the interface �i, j between domains �i and
� j as

∣∣∣∣�u�
∣∣∣∣
L2

=
(∫

�i, j

∣∣ui −P�i (u j )
∣∣2 d�i, j

)1/2
, ∀�i, j ∈�I,

(124)

where P�i (u j ) denotes the projection of the coarse domain
interface displacements u j onto the fine interface discretiza-
tion �i . It can be observed that the error

∣∣∣∣�u�
∣∣∣∣
L2

reduces
with decreasing element size and the rate of change m is
about 1.27 between the first two discretizations (cf. Fig. 15).

This is in accordance with the results presented by Girault et
al. [18] where a different error is computed which takes into
account the prescribed boundary and Lagrange multipliers at
the interface.

Additionally, the displacement norm ||u − uh||L2 is cal-
culated using the approximated uh and theoretical solution u
throughout the specimen as:

||u − uh||L2 =
(∫

�

|u − uh|2 d�
)1/2

. (125)

The convergence study summarized in Fig. 15 shows satis-
factory results when the framework is compared to similar
techniques. Displacement jumps at the interfaces are hardly
visible at the displacement contour plots given in Fig. 16
which reveals that displacement continuity is sufficiently sat-
isfied in the present approach.

Results in Fig. 17 show the expected convergence order
O(h2) using the displacement norm in (125) for a monolithic
analysis. When the analysis is performed using the pro-
posed domain decomposition approach using different mesh
refinements and non-conforming interfaces, the obtained
convergence order is found lower than O(h2). The reason
for this suboptimal behaviour is related with the use of piece-
wise constant Lagrange multipliers at each interface patch.
Although this choice has a positive impact on the simplicity
of the framework implementation, the exact theoretical con-
vergence ordermay not be recovered. Amore thorough study
considering higher interpolations of the Lagrange multiplier

123



Comput Mech

DIM
Monolithic

FE size [m]

E
rr
o
r

1e+001e-011e-02

1e+01

1e+00

1e-01

1e-02

1e-03

1e-04

1e-05

1e-06

m= 2.0

m= 1.9
m= 1.8

m= 1.7

Fig. 17 Global convergence error based on the displacement norm
||u − uh||L2 in (125) for different mesh discretizations

field and its impact on the presented framework is considered
a topic for future research.

The sensitivity of the analysis with respect to the stabi-
lization parameter τ is reported in Fig. 18 where the jump
error

∣∣∣∣�u�
∣∣∣∣
L2

is plotted against different values of τ for the
coarsest and finest discretization sets. It is observed that the
error diminishes with decreasing values of τ . Additionally,
one can utilize remarkably low values of the stabilization
parameter upon mesh refinement which confirms the con-
sistency character indicated in Sect. 2.3. In general, coarser
meshes tend to give higher error values for a given value of
the stabilization parameter τ .

Fine discretization

Coarse discretization

Stabilization parameter τ

E
rr

or

1e-041e-061e-081e-10

1e-01

1e-02

1e-03

1e-04

1e-05

1e-06

Fig. 18 Error
∣∣∣∣�u�

∣∣∣∣
L2

for different values of the stabilization para-
meter τ

3.5 Geometrically incompatible non-matching meshes

The following example consists in the assembly of a simpli-
fied plane-like structure where two geometrically incompat-
ible interfaces are identified which connect the wings to the
plane fuselage (cf. Fig. 19). A distributed force of 0.5N/m is
applied at the bottom part of both wings to emulate the lift
experienced during flight conditions. Several points at the
fuselage section are imposed null Dirichlet boundary condi-
tions in order to restrict the global rigid body modes. The

Ω(1)

Independent domain FE discretization

Assembly of global domain Ω with different structural components

Geometrically incompatible non-conforming interfaces

Ω(3)Ω(2)

Γ(1)u

Γ(3)σΓ(2)σ

15.3 m

2
m

D

Γ(1)D D
Γ(1)D Γ(3)D

Γ(1)D

Fig. 19 Plane structure assembly. Geometry (top) and domain decomposition (bottom)

123



Comput Mech

u [m]

152.10

u [m]

591.10

Monolithic approach

Close-up at interface Γ(1)D -Γ
(3)
D

Domain decomposition approach

P

P

Fig. 20 Total displacement contours of the monolithic (top) and domain decomposition approaches (bottom) in the deformed configurations

Table 3 Deflections at point P
using the monolithic and domain
decomposition approaches

Monolithic Domain decomposition Relative error

||uM|| [m] ||uDDM|| [m] er =
||uM|| − ||uDDM||

||uDDM||
Point P 1.195 1.251 4.676%

material is considered hyperelastic [48] satisfying

S = λtr(E)1 + 2μE, (126)

S being the second Piola–Kirchhoff stress tensor, E the
Green–Lagrange strain, and λ and μ the Lamé constants.
Due to the simplicity of the model, i.e. discretized by solid
elements and not thin-shells, thematerial parameters are cho-
sen arbitrarily and are not sought to mimic a real situation
but rather illustrate a target case for the use of geometrically
incompatible non-conforming interfaces. In the current sim-
ulations the Young’s modulus and Poisson’s ratio are set to
2.0 × 104MPa and 0.3, respectively.

In order to assess the performance of the DIM in this
example, the vertical displacement of the wing end (point
P) is monitored and compared to the one obtained with a
reference monolithic approach considering a similar spatial

discretization. As it can be observed in the contour plots in
Fig. 20 and the deflections reported in Table 3, the results
for the geometrically incompatible non-conforming interface
are remarkably close to the ones obtained with a monolithic
approach used as the reference solution for this problem.
Note that the interface gap depicted in the close-up in Fig. 20
is hardly visible and it can be concluded that the methodol-
ogy shows satisfactory results and proves to be remarkably
competent against the most demanding cases.

4 Conclusions and future perspectives

The kernel of the proposedDIM to be used in domain decom-
position methods and presented in this contribution resides
in an explicit discretization of the interface by means of a
zero-thickness Delaunay triangulation. This is accomplished

123



Comput Mech

through a fictitious contraction of the subdomains at the inter-
face which allows for a proper discretization between the
shrunk domain boundaries. The fictitious contraction has no
impact on the solution of the problem since all calculations
are performed using the original coordinates. Moreover, it is
shown that the integrals over the zero-thickness interface are
bounded despite the fact that the integrand is not bounded.
The method is grounded in the so called Nitsche methods in
which a stabilization term is added at the constraint equa-
tions. In this manner, zero diagonal terms are not present at
the global system and instabilities are avoided if the LBB
condition is not fulfilled by the chosen discretization. This
process is viewed as a consistent penalty method since the
stabilization term vanishes with progressivemesh refinement
and the penalty factor can be made significantly small with-
out affecting the results.

The methodology is inherited from the field of contact
mechanics and, for this reason, is regarded as more general
than existing domain decomposition strategies since there is
no need for a fixed interface geometry that needs to be shared
by the decomposed domains at both sides of the interface.
This is for instance the case of some dual domain decomposi-
tion techniques in which the limit DOFs at the interface need
to be common in both adjacent domain discretizations.More-
over, the generation of interface patches is independent of the
choice of slave and master sides in contrast with early mor-
tar methods and, for this reason, the methodology is regarded
less prone to errors related with such choice. More evolved
mortar methodologies are able to automatically handle these
situations by considering, for instance, an extra interface sur-
face from which a particular distribution of DOFs serves to
construct anoptimal set of interface constraints between adja-
cent meshes. However, such an intermediate surface involves
calculations over extra DOFs which could increase the com-
putational cost and complexity of the approach.

A new non-intrusive strategy to handle floating domains
is outlined which adds an extra stabilization term to the
energy functional with contributions of all adjacent interface
patches. This avoids the calculation of a pseudo-inverse at
floating domains and does not destroy the band structure of
the global system. For this reason, it does not spoil a possible
parallel solution as done with existing dual domain decom-
position methods.

The DIMmethod passes the patch test also for the case of
floating subdomains providing continuity of the stress field
across the interface which indicates that all new ingredients
do not affect the accuracy of the solution when compared
to other established techniques. Remarkable continuity of
the displacement field across the interface is shown in all
reported experiments. A comparable accuracy degree has
been observed with independence of the shape of the inter-
faces. In addition, good convergence rates are reached upon
mesh refinement similar to other accurate techniques for non-

conforming interfaces although theoretical convergence rates
could not be obtained exactly due to the piece-wise constant
interpolation of the Lagrange multipliers.

The algorithmic treatment of the subdomains allows for a
parallel solution scheme analogous to well established tech-
niques such as dual domain decomposition techniques. In
this manner the local factorizations can be tackled by direct
solvers and the resulting interface problem can be assembled
in a matrix-free fashion and solved with the use of iterative
solvers. A full parallel version of the framework involves
the construction of adequate preconditioners for the inter-
face problem which was out of the scope of this contribution
and it is left as a future research line. In the same spirit, a 3D
extension of the method is left as a topic for further research.
Preliminary 3D works have been successfully performed for
the contact domain case [22] and it is presumed that the tech-
nology shows sufficient potential to successfully perform in
large 3Dcases although challenges are expected concerning a
robust 3D Delaunay tetrahedralization for the most complex
interface geometries. In any case, the domain decomposition
formulation applied to monoscale analysis or ’static’ spatial
discretizations has the advantage of performing the interface
meshing once at the beginning of the analysis and, there-
fore, the cost of a new Delaunay tetrahedralization (which
could be certainly more involved for a 3D case) is negligible
compared to the cost of the whole analysis.

The framework presented in this contribution provides
the basis to study complex deformation phenomena involv-
ing large strains, e.g. bulk metal forming, and shows a clear
potential to tackle multifield applications, e.g. mixed formu-
lations for incompressible and thermo-mechanical problems.
In this view, the field of Lagrange Multipliers needs to be
extended in order to account for the temperature and pres-
sure fields and it is planned for a future contribution.

The explicit Delaunay triangulation of the interface is
expected to positively impact the field of multiresolution
problems and adaptive multiresolution analysis. Since arbi-
trary discretizations can be handled at non-conforming inter-
faces, adaptive multiresolution analyses can be performed
employing an independent ‘on-the-fly’ refinement at partic-
ular domains of interest without meshing restrictions. In the
same spirit, existing independent discretizations of partic-
ular domains can be easily reused and incorporated to the
calculations.

Due to its versatility and generality the DIM method is
viewed as an attractive alternative to mortar methods and
other established dual domain decomposition methods in
which the interface geometry and its limits are restricted to
the boundary discretization of the connected domains.

Acknowledgments The research leading to these results has received
funding from the European Research Council under the European
Union’s Seventh Framework Programme (FP/2007-2013)/ERC Grant

123



Comput Mech

Agreement No. 320815 (ERCAdvanced Grant Project “Advanced tools
for computational design of engineeringmaterials”COMP-DES-MAT).
Oriol Lloberas-Valls gratefully acknowledges the funding received from
the Spanish Ministry of Economy and Competitiveness through the
“Juan de la Cierva” Postdoctoral Junior Grant: JCI-2012-13782 and the
National Research Plan 2014: MAT2014-60919-R.

OpenAccess This article is distributed under the terms of theCreative
Commons Attribution 4.0 International License (http://creativecomm
ons.org/licenses/by/4.0/), which permits unrestricted use, distribution,
and reproduction in any medium, provided you give appropriate credit
to the original author(s) and the source, provide a link to the Creative
Commons license, and indicate if changes were made.

References

1. Babuška I (1973) The finite element method with lagrangian mul-
tipliers. Numer Math 20(3):179–192

2. Babuška I, Narasimhan R (1997) The Babuška–Brezzi condition
and the patch test: an example. Comput Methods Appl Mech Eng
140(12):183–199

3. Barrett R, Berry M, Chan TF, Demmel J, Donato JM, Dongarra
J, Eijkhout V, Pozo R, Romine C, Van Der Vorst H (1993) Tem-
plates for the solution of linear systems: building blocks for iterative
methods. SIAM Press, Philadelphia, PA

4. Becker R, Hansbo P, Stenberg R (2003) A finite element method
for domain decomposition with non-matching grids. ESAIMMath
Model Numer Anal 37:209–225

5. Bernardi C, Maday Y, Patera A (1994) A new nonconforming
approach to domain decomposition: the mortar element method.
In: Brezis H, Lions JL (eds) Nonlinear partial differential equations
and their application, volumeXI of College de France Seminar. Pit-
man, London, pp 13–51

6. Cresta P, Allix O, Rey C, Guinard S (2007) Nonlinear localization
strategies for domain decomposition methods: application to post-
buckling analyses. ComputMethodsApplMechEng 196(8):1436–
1446

7. de Boer A, van Zuijlen AH, Bijl H (2007) Review of coupling
methods for non-matching meshes. Comput Methods Appl Mech
Eng 196(8):1515–1525

8. Duarte CA, Kim DJ (2008) Analysis and applications of a general-
ized finite element method with global-local enrichment functions.
Comput Methods Appl Mech Eng 197(6–8):487–504

9. Everdij FPX, Lloberas-Valls O, Rixen DJ, Simone A, Sluys LJ
(2013) Domain decomposition and parallel direct solvers as an
adaptive multiscale strategy for damage simulation in materials.
In: Proceedings of the 22nd international conference on domain
decomposition methods (DD22), Lugano, Switzerland

10. Farhat C (1990) Which parallel finite element algorithm for which
architecture and which problem? Eng Comput 7(3):186–195

11. Farhat C, Roux FX (1991) A method of finite element tearing and
interconnecting and its parallel solution algorithm. Int J Numer
Methods Eng 32(6):1205–1227

12. Farhat C, Pierson K, Lesoinne M (2000) The second generation
FETI methods and their application to the parallel solution of
large-scale linear and geometrically non-linear structural analysis
problems. Comput Methods Appl Mech Eng 184(2–4):333–374

13. Feyel F, Chaboche JL (2000) FE2 multiscale approach for mod-
elling the elastoviscoplastic behaviour of long fibre SiC/Ti compos-
ite materials. ComputMethods ApplMech Eng 183(3–4):309–330

14. FlemischB,KaltenbacherM,Triebenbacher S,WohlmuthB (2011)
Non-matching grids for a flexible discretization in computational
acoustics. Commun Comput Phys 11(2):472–488

15. Gendre L, Allix O, Gosselet P (2011) A two-scale approximation
of the schur complement and its use for nonintrusive coupling. Int
J Numer Methods Eng. doi:10.1002/nme.3142

16. Géradin M, Rixen DJ (2015) Mechanical vibrations: theory and
applications, 3rd edn. Willey. ISBN 978-1-118-90020-8

17. Ghosh S, Bai J, Raghavan P (2007) Concurrent multi-level model
for damage evolution in microstructurally debonding composites.
Mech Mater 39(3):241–266

18. Girault V, Pencheva GV, Wheeler MF, Wildey TM (2009) Domain
decomposition for linear elasticity with dg jumps and mor-
tars. Computer Methods in Applied Mechanics and Engineering
198(2126):1751–1765

19. Gosselet P, Rey C (2006) Non-overlapping domain decomposi-
tion methods in structural mechanics. Arch Comput Methods Eng
13(4):515–572

20. Guidault PA, Allix O, Champaney L, Navarro JP (2007) A
two-scale approach with homogenization for the computation of
cracked structures. Comput Struct 85(17–18):1360–1371

21. Hartmann S, Oliver J, Weyler R, Cante JC, Hernández JA (2009)
A contact domain method for large deformation frictional contact
problems. Part 2: numerical aspects. Comput Methods Appl Mech
Eng 198(3336):2607–2631

22. Hartmann S, Weyler R, Oliver J, Cante JC, Hernández JA (2010)
A 3d frictionless contact domain method for large deformation
problems. Comput Model Eng Sci 55(3):211–269

23. Heintz P, Hansbo P (2006) Stabilized lagrange multiplier methods
for bilateral elastic contact with friction. Comput Methods Appl
Mech Eng 195(3336):4323–4333

24. Herry B, Di Valentin L, Combescure A (2002) An approach to
the connection between subdomains with non-matching meshes
for transient mechanical analysis. Int J Numer Methods Eng
55(8):973–1003

25. Hughes TJR, Feijóo GR, Mazzei L, Quincy JB (1998) The varia-
tional multiscale method—a paradigm for computational mechan-
ics. Comput Methods Appl Mech Eng 166(1–2):3–24

26. Hund A, Ramm E (2007) Locality constraints within multiscale
model for non-linear material behaviour. Int J NumerMethods Eng
70(13):1613–1632

27. Kouznetsova V, Brekelmans WAM, Baaijens FPT (2001) An
approach to micro-macro modeling of heterogeneous materials.
Comput Mech 27(1):37–48

28. Ladevèze P, Loiseau O, Dureisseix D (2001) A micro-macro and
parallel computational strategy for highly heterogeneous struc-
tures. Int J Numer Methods Eng 52(12):121–138

29. Lloberas-Valls O (2013) Multiscale domain decomposition analy-
sis of quasi-brittle materials. Ph.D. Thesis, Delft University of
Technology

30. Lloberas-Valls O, Rixen DJ, Simone A, Sluys LJ (2012) On
micro-to-macro connections in domain decomposition multiscale
methods. Comput Methods Appl Mech Eng 225–228:177–196

31. Lloberas-Valls O, RixenDJ, SimoneA, Sluys LJ (2012)Multiscale
domain decomposition analysis of quasi-brittle heterogeneous
materials. Int J Numer Methods Eng 89(11):1337–1366

32. Lloberas-Valls O, Everdij FPX, Rixen DJ, Simone A, Sluys LJ
(2014) Multiscale analysis of damage using dual and primal
domain decomposition techniques. In: Oñate E, Oliver X, Huerta
A (eds) Proceedings of the 11th. World congress on computational
mechanics—WCCM XI, Barcelona, Spain

33. Loehnert S, Prange C,Wriggers P (2012) Error controlled adaptive
multiscale XFEM simulation of cracks. Int J Fract 178(1):147–156

34. MacPherson I, Rodgers J, Allen C, Fenwick C (2006) Sliding and
non-matching grid methods for helicopter simulations. In: 44th
AIAA aerospace sciences meeting and exhibit. American Institute
of Aeronautics and Astronautics

35. McGee W, Seshaiyer P (2005) Non-conforming finite element
methods for nonmatching grids in three dimensions. In: Domain

123

http://creativecommons.org/licenses/by/4.0/
http://creativecommons.org/licenses/by/4.0/
http://dx.doi.org/10.1002/nme.3142


Comput Mech

decomposition methods in science and engineering, number 40 in
lecture notes in computational science and engineering. Springer,
Berlin, pp 327–334

36. Mergheim J (2009) A variational multiscalemethod tomodel crack
propagation at finite strains. Int J Numer Methods Eng 80(3):269–
289

37. Nitsche J (1971) Über ein variationsprinzip zur lösung von
dirichlet-problemen bei verwendung von teilräumen, die keinen
randbedingungen unterworfen sind. Abhandlungen aus demMath-
ematischen Seminar der Universität Hamburg 36(1):9–15

38. Oliver J, Hartmann S, Cante JC, Weyler R, Hernández JA (2009)
A contact domain method for large deformation frictional contact
problems. Part 1: theoretical basis. Comput Methods Appl Mech
Eng 198(3336):2591–2606

39. Park KC, Felippa CA, Rebel G (2002) A simple algorithm for
localized construction of non-matching structural interfaces. Int J
Numer Methods Eng 53(9):2117–2142

40. Popp A, Wohlmuth BI, Gee MW, Wall WA (2012) Dual quadratic
mortar finite element methods for 3d finite deformation contact.
SIAM J Sci Comput 34(4):B421–B446

41. Popp A, GeeMW,WallWA (2013)Mortar methods for single- and
multi-field applications in computational mechanics. In: Resch M,
Wang X, Bez W, Focht E, Kobayashi H (eds) Sustained simulation
performance 2012. Springer, Berlin, pp 133–154

42. Puso MA (2004) A 3d mortar method for solid mechanics. Int J
Numer Methods Eng 59(3):315–336

43. Puso MA, Laursen TA (2004) A mortar segment-to-segment
contact method for large deformation solid mechanics. Comput
Methods Appl Mech Eng 193(68):601–629

44. Quiroz L, Beckers P (1995) Non-conforming mesh gluing in the
finite elements method. Int J Numer Methods Eng 38(13):2165–
2184

45. Rixen DJ (1997) Substructuring and dual methods in structural
analysis. PhD thesis, Publications de la Faculté des Sciences
Appliquées, no. 175, Université de Liège, Belgium

46. RixenDJ (2001) Parallel processing. In: Encyclopedia of vibration.
Elsevier, Oxford, pp 990–1001

47. Rixen DJ, Farhat C (1999) A simple and efficient extension
of a class of substructure based preconditioners to heteroge-
neous structural mechanics problems. Int J Numer Methods Eng
44(4):489–516

48. Simo JC, Hughes TJ (1998) Computational inelasticity, volume 7
of interdisciplinary applied mathematics. Springer, New York

49. Spillane N, Rixen DJ (2013) Automatic spectral coarse spaces
for robust FETI and BDD algorithms. Int J Numer Methods Eng
95(11):953–990

50. Wohlmuth BI (2000) A mortar finite element method using dual
spaces for the lagrangemultiplier. SIAM JNumer Anal 38(3):989–
1012

51. Wriggers P (1995) Finite element algorithms for contact problems.
Arch Comput Methods Eng 2(4):1–49

123


	The domain interface method: a general-purpose non-intrusive technique for non-conforming domain decomposition problems
	Abstract
	1 Introduction
	1.1 The need for non-matching mesh assemblies in computational mechanics
	1.2 Non-overlapping domain decomposition analysis with non-conforming interfaces

	2 Formulation of the DIM method
	2.1 Geometrical description of the DIM
	2.2 Strong and weak forms of the problem
	2.3 Discretization using FE and lambda-solvability of the resulting system
	2.4 Parallel system resolution strategies
	2.5 A non-intrusive strategy to handle rigid body modes in the DIM
	2.6 Iterative scheme for the non-linear DIM

	3 Framework validation through representative simulations
	3.1 Patch test
	3.2 Patch test with floating subdomains
	3.3 Cantilever beam test
	3.4 Convergence analysis and dependence on the stabilization parameter τ
	3.5 Geometrically incompatible non-matching meshes

	4 Conclusions and future perspectives
	Acknowledgments
	References




