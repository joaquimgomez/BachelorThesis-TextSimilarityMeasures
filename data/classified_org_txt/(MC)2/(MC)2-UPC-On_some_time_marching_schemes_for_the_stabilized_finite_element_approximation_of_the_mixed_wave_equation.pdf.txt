

























































On some time marching schemes for the stabilized finite element
approximation of the mixed wave equation

Hector Espinozaa,b, Ramon Codinaa,∗, Santiago Badiaa,c

aUniversitat Politècnica de Catalunya, Jordi Girona 1-3, Edifici C1, E-08034 Barcelona, Spain
bEscuela Superior Politécnica del Litoral ESPOL, Km 30.5 vía Perimetral, EC090902, Guayaquil, Ecuador

cCentre Internacional de Mètodes Numèrics en Enginyeria, Parc Mediterrani de la Tecnologia, Esteve Terradas 5, E-08860
Castelldefels, Spain

Abstract

In this paper we analyze time marching schemes for the wave equation in mixed form. The problem is
discretized in space using stabilized finite elements. On the one hand, stability and convergence analyses of
the fully discrete numerical schemes are presented using different time integration schemes and appropriate
functional settings. On the other hand, we use Fourier techniques (also known as von Neumann analysis) in
order to analyze stability, dispersion and dissipation. Numerical convergence tests are presented for various
time integration schemes, polynomial interpolations (for the spatial discretization), stabilization methods,
and variational forms. To analyze the behavior of the different schemes considered, a 1D wave propagation
problem is solved.

Keywords: time marching schemes, dispersion, dissipation, von Neumann analysis, Fourier analysis,
mixed wave equation, stabilized finite element methods, variational multiscale methods
2008 MSC: 35F46, 35L05, 35L50, 35L65, 35M13, 65J10, 65M12, 65M15, 65M60, 76M10

1. Introduction

Finite difference time marching schemes are mostly used for the time integration of evolution problems
because of their efficiency and ease of implementation. In the case of partial differential equations (PDEs) in
space and time, even if a given finite difference scheme has some general properties regarding stability and
accuracy, the precise behavior of the scheme needs to be analyzed together with the spatial discretization
employed. In this paper we aim at analyzing classical first and second order schemes for the hyperbolic wave
equation, with the particularity that we write it in mixed form and discretize in space using stabilized finite
element (FE) methods.

For the analysis of time discretization schemes for wave propagation problems it is customary to split the
total discretization error into two parts: dispersion error and dissipation error. Dispersion is the dependency
of the phase velocity on the frequency and the dispersion error is the deviation of the phase velocity with
respect to the expected one for a given frequency. On the other hand, dissipation error is the decrease in
amplitude with respect to the expected one. In general, dispersion and dissipation errors are higher for poorly
resolved frequencies, which occurs mainly for high frequencies. The wave equation we aim to analyze is non-
dispersive and non-dissipative. Therefore, it would be desirable to have non-dispersive and non-dissipative
discretization schemes. This sometimes cannot be achieved, thus one just aims to have low-dispersion low-
dissipation schemes [1, 2]. Dispersion and/or dissipation of numerical schemes can be evaluated using Fourier

∗Corresponding author. Tel.: +34 934016486
Email addresses: hector.espinoza@upc.edu (Hector Espinoza), ramon.codina@upc.edu (Ramon Codina),

sbadia@cimne.upc.edu (Santiago Badia)
URL: https://upc.edu/espinoza (Hector Espinoza), http://codina.rmee.upc.edu/ (Ramon Codina),

http://badia.rmee.upc.edu/ (Santiago Badia)

Preprint submitted to Comput. Methods Appl. Mech. Engrg. August 3, 2015



techniques (see [3, 4, 5]), energy methods (see [6]), or modified equation analysis (see [4, 7]). Fourier analysis
can be carried out for semi-discretizations or full discretizations. Dispersion/dissipation analysis methods
have been used to optimize numerical schemes [3, 7]. Other properties of the continuous wave equation, such
as the preservation of symplecticity, some invariants or some symmetries are even more difficult to inherit
for discrete schemes. This is the motivation of the so-called geometric numerical integrators, which we will
not consider in this paper (see [8], for example).

Contrary to the irreducible hyperbolic wave equation, which is of second order in space and time, the
mixed wave equation is of first order in space and time. We will consider the case of a single scalar unknown,
which in the mixed format unfolds into two unknowns, namely, this scalar field and a vector unknown. With
regard to the space approximation, the Galerkin FE discretization of this mixed wave equation requires to
satisfy a compatibility condition between the spaces of the two unknowns (scalar and vector), i.e., to use
so-called inf-sup compatible interpolations. Alternatively, we can consider stabilized FE methods, which
provide much more flexibility when choosing the interpolation spaces [9, 10, 11]. In particular, we can
consider equal interpolation for the unknowns. Stability and convergence of the stabilized FE spatial semi-
discretization of the mixed wave equation has been presented in [10, 11]. Stability and convergence of fully
discrete schemes has also been analyzed for the convection-diffusion equation and the Stokes equations in
[12, 13, 14] using spatial and temporal approximations related to those used in the present work. Note
that the use of stabilized FE methods for general first order hyperbolic equations is an old topic, which can
be traced back to [15] if only the advective terms are considered. However, we exploit here the particular
structure of the wave equation and the functional settings that can be associated to it; this allows us to go
much further in the analysis.

In this work, we analyze the stability and convergence properties for the mixed wave equation, after time
semi-discretization, space semi-discretization, and full discretization, and perform their Fourier analyses.
For the time discretization, we consider backward Euler (BE), Crank-Nicolson1 (CN) and the second order
backward differentiation formula (BDF2). We will see how a symplectic time integrator (CN) compares to
non-symplectic time integrators (BE and BDF2). Dispersion and dissipation of discretization methods will
be evaluated through numerical experiments. This consists in solving a given problem and evaluating the
solution obtained [17, 18, 3]. We will solve a 1D wave propagation problem to show qualitatively dispersion
and dissipation of the proposed numerical schemes.

The organization of the paper is as follows. In Section 2 we present the problem statement and its space-
time discretization. In Section 3 we present stability and convergence results of the fully discrete problem
obtained using variational techniques. We provide results for all the methods considered, even though we
only present one sample of the proofs of these results. In Section 4 we present a complete Fourier analysis
for the 1D wave equation in mixed form, from which precise information on the behavior of the different
schemes can be drawn. Numerical results are presented in Section 5 and, finally, in Section 6 the conclusions
of the work are summarized. This paper is a continuation of our work on the approximation of the mixed
form of the wave equation presented in [10, 11]. Frequent reference is made to these two papers, to which
the reader is addressed for details.

2. Problem statement and numerical approximation

2.1. Initial and boundary value problem
The problem we consider is an initial and boundary value problem posed in a time interval Υ := (0, T )

and in a spatial domain Ω ⊂ Rd, (d = 1, 2 or 3). Let t ∈ Υ be a given time instant in the temporal domain
and x ∈ Ω a given point in the spatial domain. We define the space-time domain as Ξ := Ω×Υ. Let Γ be
the boundary of the domain Ω. We split Γ into three disjoint sets denoted as Γp, Γu and Γo. The scalar

1The original CN discretization scheme was devised to solve numerically PDEs of heat-conduction type; it is a space-time
discretization based on finite differences. Sometimes CN is used to refer to the implicit midpoint method or the (implicit)
trapezoidal rule and there is no agreement in the literature [16]. We have to mention that for linear operators (which is the
the case of the mixed wave equation) the trapezoidal rule and the implicit midpoint method are equivalent.

2



unknown p is enforced on Γp, the normal trace of the vector unknown γnu on Γu, and a simple non reflecting
boundary condition (NRBC) on Γo. Although the boundary conditions are irrelevant for the von Neumann
analysis, we just mention them for completeness.

The problem consists in finding p : Ξ −→ R and u : Ξ −→ Rd such that

µp∂tp+∇ · u = fp , (1)
µu∂tu+∇p = fu , (2)

with the following initial conditions

p(x, 0) = 0, u (x, 0) = 0, (3)

and with the following boundary conditions

p = 0 on Γp, γnu := n · u = 0 on Γu, µ
1
2
p p = µ

1
2
u γnu on Γo, (4)

where µp > 0 and µu > 0 are physical coefficients such that c2 = (µpµu)
−1, c is the wave speed, fp and fu

are forcing terms, n is the unit outward normal to the boundary of the domain and γn is the normal trace
operator. In the previous equations and in what follows, we use the following convention: lower-case bold
italic letters represent vectors in Rd, lower-case non-bold italic letters represent scalars, whereas upper-case
non-bold italic letters may be arrays or matrices.

Let Ψ be a generic spatial domain, i.e. Ω or Γ or part of them. Whenever they are well defined, we denote
by L2(Ψ) the space of square integrable functions defined on Ψ, by H1(Ψ) the space of functions in L2(Ψ)
with derivatives in L2(Ψ), by H(div,Ψ) the space of vector functions with components and divergence in
L2(Ψ), and by L2(Ψ)

d
the space of vector functions with components in L2(Ψ). Additionally, for an arbitrary

normed functional space X, its norm will be denoted as ||·||
X
. In the case of L2(Ω) or L2(Ω)

d
the L2-norm

will simply be denoted as ||·|| and the L2-inner-product as (· , ·) Furthermore, the space of functions whose
X-norm is Cr continuous in the time interval Υ will be denoted by Cr(Υ; X). We will only be interested in
the cases r = 0 and r = 1. Functions whose X-norm is Lp in Υ will be denoted by Lp(Υ; X); when X = L2(Ω)
or X = L2(Ω)

d
, the compact notation Lp(L2) will sometimes be used. Furthermore, let Vp, Vu be spaces

associated with p and u respectively. These spaces will be defined afterwards because they depend on the
functional setting. Additionally, let us define V := Vp × Vu and L := L2(Ω)× L2(Ω)

d
.

Problem (1)-(2) with appropriate initial and boundary conditions will be well-posed for:

p ∈ C1
(
Υ;L2(Ω)

)
∩ C0

(
Υ; Vp

)
, u ∈ C1

(
Υ;L2(Ω)

d)
∩ C0

(
Υ; Vu

)
,

with fp and fu regular enough.

2.2. Variational problem
The variational form of problem (1)-(4) can be expressed in three different ways. Each one requires a

certain regularity on the unknowns p and u. The problem reads: find [p,u] ∈ C1 (Υ; L)∩C0 (Υ; V) such that

B ([p,u] , [q,v]) = L ([q,v]) ,

for all test functions [q,v] ∈ V, and satisfying the initial conditions. The bilinear form B, the linear form
L and the space V are defined in three different ways depending on the variational form into consideration.
For simplicity, we will assume that the forcing terms fp and fu are square integrable, although we could
relax this regularity requirement and assume they belong to the dual space of Vp and Vu, respectively. Let
us also define two auxiliary variables denoted as κp and κu:

κp :=

(
µp
µu

) 1
2

, κu :=

(
µu
µp

) 1
2

.

The possible variational formulations of the problem are the following [10, 11]:

3



Variational Form I.

Vp =
{
q ∈ H1(Ω)| q = 0 on Γp

}
,

Vu =
{
v ∈ H(div,Ω)| γnv = 0 on Γu and γnv ∈ L2(Γo)

}
B ([p,u] , [q,v]) = µp (∂tp, q) + (∇ · u, q) + µu (∂tu,v) + (∇p,v) (5)
L ([q,v]) = (fp, q) + (fu,v) (6)
p = 0 on Γp, Strongly imposed (7)
γnu = 0 on Γu, Strongly imposed (8)

µ
1
2
p p = µ

1
2
u γnu on Γo, Strongly imposed (9)

Variational Form II.

Vp = L
2(Ω), Vu =

{
v ∈ H(div,Ω)| γnv = 0 on Γu and γnv ∈ L2(Γo)

}
B ([p,u] , [q,v]) = µp (∂tp, q) + (∇ · u, q) + µu (∂tu,v)− (p,∇ · v) + κu

∫
Γo

(γnv)(γnu) dΓ (10)

L ([q,v]) = (fp, q) + (fu,v) (11)
p = 0 on Γp, Weakly imposed (12)
γnu = 0 on Γu, Strongly imposed (13)

µ
1
2
p p = µ

1
2
u γnu on Γo, Weakly imposed (14)

Variational Form III.

Vp =
{
q ∈ H1(Ω)| q = 0 on Γp

}
, Vu = L

2(Ω)
d

B ([p,u] , [q,v]) = µp (∂tp, q)− (u,∇q) + µu (∂tu,v) + (∇p,v) + κp
∫

Γo

pq dΓ (15)

L ([q,v]) = (fp, q) + (fu,v) (16)
p = 0 on Γp, Strongly imposed (17)
γnu = 0 on Γu, Weakly imposed (18)

µ
1
2
p p = µ

1
2
u γnu on Γo, Weakly imposed (19)

2.3. Stabilized finite element formulations
Here we present two stabilized FE methods, which we will denote by the acronyms ASGS (Algebraic

Sub-Grid Scales) and OSS (Orthogonal Sub-grid Scales), aimed at overcoming the instability problems of
the standard Galerkin method found when the interpolating spaces do not satisfy an appropriate inf-sup
condition. We focus on equal and continuous interpolations for p and u and therefore, conforming FE spaces.
For conciseness, we will consider quasi-uniform FE partitions {K} of size h. For stabilized formulations in
general non-uniform non-degenerate cases, see [19].

Let Vp,h and Vu,h be the FE spaces constructed from the FE partition {K} to approximate p and
u, respectively, with Vp,h ⊂ Vp and Vu,h ⊂ Vu. Additionally, let us define Vh = Vp,h × Vu,h. Stabilized FE
methods deal with the following problem: find a pair [ph,uh] ∈ C1(Υ; Vh) with initial conditions ph(x, 0) = 0,
uh(x, 0) = 0 such that

Bs ([ph,uh] , [qh,vh]) = Ls ([qh,vh]) , (20)

for all test functions [qh,vh] ∈ Vh, where the bilinear form Bs and the linear form Ls include the Galerkin
terms and additional stabilization terms. Depending on how the stabilization part is designed, a different
stabilization method arises. Below, we present two methods, namely ASGS and OSS. The stabilization
terms depend on the choice of the so-called stabilization parameters τp and τu.

4



The ASGS method is an extension to the mixed form of the wave equation of the method proposed in
[20, 21]. It consists in solving problem (20) and taking the bilinear form Bs and the linear form Ls as:

Bs ([ph,uh] , [qh,vh]) = B ([ph,uh] , [qh,vh]) + (µp∂tph +∇ · uh, τp∇ · vh) + (µu∂tuh +∇ph, τu∇qh) , (21)
Ls ([qh,vh]) = L ([qh,vh]) + (fp, τp∇ · vh) + (fu, τu∇qh) . (22)

The OSS method is an extension to the wave equation in mixed form of the method proposed in [22, 23].
It consists in solving problem (20) and taking the bilinear form Bs and the linear form Ls as:

Bs ([ph,uh] , [qh,vh]) = B ([ph,uh] , [qh,vh]) +
(
P⊥p (∇ · uh) , τp∇ · vh

)
+
(
P⊥u (∇ph) , τu∇qh

)
, (23)

Ls ([qh,vh]) = L ([qh,vh]) +
(
P⊥p (fp) , τp∇ · vh

)
+
(
P⊥u (fu) , τu∇qh

)
, (24)

where P⊥p (·) = I(·) − Pp(·) and P⊥u (·) = I(·) − Pu(·), Pp(·) being the L2(Ω) projection on Vp,h and Pu(·)
the L2(Ω) projection on Vu,h. This in particular implies that Pp(·) = 0 on Γp for variational forms I and III
and that n · Pu(·) = 0 on Γu for variational forms I and II. Let us remark that for the sake of conciseness
we will not consider in this paper the so-called dynamic subscales introduced in [23], even if we favor them
and their use is crucial in the case of very small time steps (see also [24, 25]).

An important ingredient of stabilized formulations are the stabilization parameters. In our case, we
compute them in all formulations as:

τp = Cτh

√
µu
µp

√
`p
`u
, τu = Cτh

√
µp
µu

√
`u
`p
, (25)

where Cτ is a dimensionless algorithmic constant and `p, `u are length scales corresponding to p and u,
respectively. As it was shown in the analysis presented in [10], in order to mimic at the discrete level the
proper functional setting of the continuous problem the length scales `p and `u should be taken as shown
in Table 1, where L0 is a fixed length scale of the problem that can be fixed a priori. The motivation for
designing the stabilization parameters can be found in [26, 9].

Table 1: Stabilization Parameters Order and Length Scales Definition

Variational Form I II III
`p `p = `u L

2
0/h h

`u `p = `u h L
2
0/h

τp O(h) O(1) O(h2)
τu O(h) O(h2) O(1)

2.4. Full discretization
To discretize in time we will use standard finite difference schemes of first and second order, namely, the

BE, the CN and the BDF2 schemes. Let 0 = t0 < . . . < tn < . . . tN = T be a finite difference partition
of Υ of size δt, that we take constant for the sake of simplicity. Let U be the sequence of exact solutions
U := {Un}Nn=0 := {[p(x, t

n),u(x, tn)]}Nn=0. We will often abbreviate p
n := p(x, tn) and un := u(x, tn);

the same symbol will be used for a time approximation to these unknowns. Let Uh be the sequence of
approximate solutions of the fully discrete problem, that is Uh := {Unh }

N
n=0

:= {[pnh,u
n
h]}

N
n=0

. This fully
discrete problem reads: find the sequence Uh such that

Bh (Uh, Vh) = Lh (Vh) , (26)

for all Vh. The definitions of Bh and Lh depend on the combination of space and time discretization and will
be given in the next section, where the stability and convergence properties of the fully discrete methods
are presented.

5



To simplify notation we will use the backward (DrB,q,s) central (D
r
C,q,s) and forward (D

r
F,q,s) difference

operators for the r-th derivative, of order q and in a time interval of size sδt. For instance, the BE and
BDF2 approximations of the time derivative for the scalar unknown will be

D1B,1,1p
n =

pn − pn−1

δt
, D1B,2,1p

n =
3pn − 4pn−1 + pn−2

2δt
.

3. Stability and convergence results

3.1. Preliminaries
We present here the results of stability and convergence of the fully discrete methods arising from the

combination of time marching schemes (BE, CN and BDF2) and spatial stabilized FE methods (ASGS and
OSS). We provide stability and convergence results for each fully discrete method. In order to do that, we
use the concept of Λ-coercivity, used for the first time in [12]. This concept is equivalent to the concept of
T-coercivity [27, 28, 29, 30] but it was coined before under the name of Λ-coercivity in [12].

The concept of Λ-coercivity aids us in the proof of stability and later in the convergence analysis. The
proofs are similar to the ones shown in [10, 11], but considering now the time-discretization as well. Only
one of such proofs will be developed here, the others following very similar strategies.

As usual, we use C for a generic constant independent of the mesh size h and time step δt. The value
of C may be different at different occurrences. Additionally, we will use the notation A & B and A . B to
indicate that A ≥ CB and A ≤ CB for any A and B depending on the solution and the data. All our results
are presented in such a way that C is independent of the dimensional system, i.e., C is dimensionless.

Let UI be the sequence of projected solutions UI := {[pnI ,u
n
I ]}

N
n=0

, where pnI := Π
n
p (p

n) and unI :=
Πnu (u

n), where Πnp (·) and Πnu (·) are adequate interpolants onto the FE spaces, taken to be projections.
Notice that this notation allows us to take different interpolants at different time steps.

Let us define some auxiliary norms to ease notation in the following:

|||V n|||20 := µp||q
n||2 + µu||vn||

2
, (27)

|||V |||2B := (1 + σ)κp||q||
2
`2(Υ,L2(Γo))

+ (1− σ)κu||γnv||
2
`2(Υ,L2(Γo))

, (28)

|||F |||2F :=
1

µp
||fp||

2
`1(Υ,L2(Ω))

+
1

µu
||fu||

2
`1(Υ,L2(Ω)) + τp||fp||

2
`2(Υ,L2(Ω))

+ τu||fu||
2
`2(Υ,L2(Ω)), (29)

with σ = −1, 0, 1 for variational forms I, II and III respectively, and ‖ · ‖`p(Υ,X) stands for the `p-norm
of a sequence of X-norms associated to the time discretization of Υ. When X = Lq(Ω), we will use the
abbreviation `p(Υ, Lq(Ω)) ≡ `p(Lq).

For the convergence analysis we need to define three types of errors: the projection error, the dis-
cretization error, and the total error. The projection error is the error between the exact solution and
the projected exact solution and is defined as ε := {εn}Nn=0 :=

{
[εnp , ε

n
u]
}N
n=0

:= U − UI . The discretiza-
tion error is the error between the discrete solution and the projected exact solution and is defined as
e := {en}Nn=0 :=

{
[enp , e

n
u]
}N
n=0

:= Uh − UI . Finally, the total error is the error between the exact solution
and the discrete solution and is defined as ξ := {ξn}Nn=0 :=

{
[ξnp , ξ

n
u ]
}N
n=0

:= U − Uh.

3.2. Analysis strategy
As mentioned above, all the methods considered have the form (26). We have proved that all of them

(ASGS and OSS for the spatial discretization, considering the three possible variational formulations, and
BE, CN and BDF2 for the time integration) are stable and optimally convergent, with the convergence order
in space and time that should be expected. However, including all the proofs would be extremely long and
tedious. Rather than this, we explain in what follows the analysis strategy that we have employed, give the
details of the terms involved for each method in the following subsection and present then the proof of the
simplest case.

For all methods we have proved Λ-coercivity, stability and convergence in an appropriate norm |||·||| that
depends on the method. More precisely, we have shown that

6



1. Λ-coercivity. If V is a sequence of functions, either continuous or discrete in space, there exist a map
Λ(V ) such that

Bh(V,Λ(V )) & |||V |||
2
, |||Λ(V )||| . |||V |||, (30)

for all V . From this property one easily gets stability in the form of an inf-sup condition (see [12]).
2. Stability. The discrete solution Uh satisfies

|||Uh||| . |||F |||∗, (31)

for an appropriate norm |||F |||∗ of the data (the forcing terms).
3. Convergence. Of course, the final objective is to provide an estimate for the total error ξ in some

norm. We can show that if U is the sequence of continuous solutions and Uh the sequence of discrete
solutions, then

|||U − Uh||| . E(h, δt), (32)

for a certain error function E(h, δt). At this point, let us remark that convergence is not a more or less
straightforward consequence of stability, since the discrete problem is not consistent in the variational
sense. To prove convergence we need to deal with the consistency error

C(U, Vh) := Lh(Vh)− Bh(U, Vh). (33)

From this definition it is easy to arrive to

Bh(e, Vh) = Bh(ε, Vh) + C(U, Vh). (34)

3.3. Forms, norms and error functions
Recalling that we have taken as zero the initial conditions, all methods are solely defined by the bilinear

form Bh and the linear form Lh. These are given for all methods in Table 2. The only comment that needs
to be made is that in practice BDF2 can be started either with BE or CN. Numerical experiments show
no difference in the convergence rate, even if theoretical error estimates are not optimal for convergence in
terms of δt when BDF2 is started with BE for variational forms II and III. In other words, when BE is chosen
to start BDF2, some terms of the error coming from the BE part will not be of order δt2 for variational
forms II or III (e.g. the term δt2τp||µp∂ttp||

2
`2(L2)

for variational form II. See Tables 4 and 5). Obviously, we
are assuming δt proportional to h to exclude variational form I from this statement.

The stability analysis of the different methods relies on the expression of map Λ(V ) satisfying (30), the
norm of the unknown |||V ||| and the norm of the forcing terms |||F |||∗. These are all given in Table 3. Note
that in this table use is made of abbreviations (27)-(29). The expressions of |||F |||∗ determine the regularity
required for the data in each case.

Finally, Tables 4 and 5 provide the error functions of the error estimates (32) for the ASGS and the
OSS methods, respectively. There are many terms in these expressions with the same convergence order.
However, including all of them gives an indication of the possible sources of error, as well as of the required
regularity of the continuous solution to obtain optimal convergence rates.

3.4. A sample of the proofs: ASGS-BE method
As an example of how to prove (30), (31) and (32), we present now the proof of these results for the

simplest of the six methods considered, namely, ASGS for the space discretization and BE for the time
integration. The proof of the rest of methods is more or less involved, but follows the same ideas.

7



Table 2: Forms that define the methods

Method Bh and Lh

ASGS-BE
Bh (Uh, Vh) =

∑N
n=1 δt

[(
µpD

1
B,1,1p

n
h

+∇ · un
h
, qn
h

+ τp∇ · vnh
)

+
(
µuD

1
B,1,1u

n
h

+∇pn
h
,vn
h

+ τu∇qnh
)]

Lh (Vh) =
∑N
n=1 δt

(
fp
n, qn

h
+ τp∇ · vnh

)
+
∑N
n=1 δt

(
fu
n,vn

h
+ τu∇qnh

)

ASGS-CN

Bh (Uh, Vh) =
∑N
n=1 δt

[(
µpD

1
B,1,1p

n
h

+∇ · u
n− 1

2
h

, qn
h

+ τp∇ · vnh
)

+
(
µuD

1
B,1,1u

n
h

+∇p
n− 1

2
h

,vn
h

+ τu∇qnh
)]

Lh (Vh) =
∑N
n=1 δt

(
fp
n− 1

2 , qn
h

+ τp∇ · vnh
)

+
∑N
n=1 δt

(
fu
n− 1

2 ,vn
h

+ τu∇qnh
)

ASGS-BDF2

Bh (Uh, Vh) = δt
[(
µpD

1
B,1,1p

1
h

+∇ · u
1− 1

2
h

, q1
h

+ τp∇ · v1h
)

+
(
µuD

1
B,1,1u

1
h

+∇p
1− 1

2
h

,v1
h

+ τu∇q1h
)]

+
∑N
n=2 δt

[(
µpD

1
B,2,1p

n
h

+∇ · un
h
, qn
h

+ τp∇ · vnh
)

+
(
µuD

1
B,2,1u

n
h

+∇pn
h
,vn
h

+ τu∇qnh
)]

Lh (Vh) = δt
(
fp

1− 1
2 , q1

h
+ τp∇ · v1h

)
+
∑N
n=2 δt

(
fp
n, qn

h
+ τp∇ · vnh

)
+δt

(
fu

1− 1
2 ,v1

h
+ τu∇q1h

)
+
∑N
n=2 δt

(
fu
n,vn

h
+ τu∇qnh

)
OSS-BE

Bh (Uh, Vh) =
∑N
n=1 δt

[(
µpD

1
B,1,1p

n
h

+∇ · un
h
, qn
h

)
+ τp

(
P⊥p

(
∇ · un

h

)
,∇ · vn

h

)]
+
∑N
n=1 δt

[(
µuD

1
B,1,1u

n
h

+∇pn
h
,vn
h

)
+ τu

(
P⊥u

(
∇pn

h

)
,∇qn

h

)]
Lh (Vh) =

∑N
n=1 δt

[(
fp
n, qn

h

)
+ τp

(
P⊥p (fp

n) ,∇ · vn
h

)]
+
∑N
n=1 δt

[(
fu
n,vn

h

)
+ τu

(
P⊥u (fu

n) ,∇qn
h

)]

OSS-CN

Bh (Uh, Vh) =
∑N
n=1 δt

[(
µpD

1
B,1,1p

n
h

+∇ · u
n− 1

2
h

, qn
h

)
+ τp

(
P⊥p

(
∇ · u

n− 1
2

h

)
,∇ · vn

h

)]
+
∑N
n=1 δt

[(
µuD

1
B,1,1u

n
h

+∇p
n− 1

2
h

,vn
h

)
+ τu

(
P⊥u

(
∇p

n− 1
2

h

)
,∇qn

h

)]
Lh (Vh) =

∑N
n=1 δt

[(
fp
n− 1

2 , qn
h

)
+ τp

(
P⊥p

(
fp
n− 1

2

)
,∇ · vn

h

)]
+
∑N
n=1 δt

[(
fu
n− 1

2 ,vn
h

)
+ τu

(
P⊥u

(
fu
n− 1

2

)
,∇qn

h

)]

OSS-BDF2

Bh (Uh, Vh) = δt
[(
µpD

1
B,1,1p

1
h

+∇ · u
1
2
h
, q1
h

+ τp∇ · v1h
)

+
(
P⊥p

(
∇ · u

1
2
h

)
, τp∇ · v1h

)]
+
∑N
n=2 δt

[(
µpD

1
B,2,1p

n
h

+∇ · un
h
, qn
h

)
+ τp

(
P⊥p

(
∇ · un

h

)
,∇ · vn

h

)]
+δt

[(
µuD

1
B,1,1u

1
h

+∇p
1
2
h
,v1
h

)
+
(
P⊥u

(
∇p

1
2
h

)
, τu∇q1h

)]
+
∑N
n=2 δt

[(
µuD

1
B,2,1u

n
h

+∇pn
h
,vn
h

)
+ τu

(
P⊥u

(
∇pn

h

)
,∇qn

h

)]
Lh (Vh) = δt

[(
fp

1
2 , q1

h

)
+ τp

(
P⊥p

(
fp

1
2

)
,∇ · v1

h

)]
+ δt

[(
fu

1
2 ,v1

h

)
+ τu

(
P⊥u

(
fu

1
2

)
,∇q1

h

)]
+
∑N
n=2 δt

[(
fp
n, qn

h

)
+ τp

(
P⊥p (fp

n) ,∇ · vn
h

)]
+
∑N
n=2 δt

[(
fu
n,vn

h

)
+ τu

(
P⊥u (fu

n) ,∇qn
h

)]

3.4.1. Proof of Λ-coercivity (30)
From the definition of Bh in Table 2 and of Λ(V ) in Table 3 for the ASGS-BE method we get

Bh (V,Λ (V )) =
N∑
n=1

δt
(
µpD

1
B,1,1q

n, qn
)

+

N∑
n=1

δt
(
µuD

1
B,1,1v

n,vn
)

+ τpτuµu

N∑
n=1

δt
(
∇ · vn,∇ ·

(
D1B,1,1v

n
))

+ τpτuµp

N∑
n=1

δt
(
∇qn,∇

(
D1B,1,1q

n
))

+

N∑
n=1

δt [(∇ · vn, qn) + (∇qn,vn)]

+

N∑
n=1

δtτp
∣∣∣∣µpD1B,1,1qn +∇ · vn∣∣∣∣2 + N∑

n=1

δtτu
∣∣∣∣µuD1B,1,1vn +∇qn∣∣∣∣2

+ τpτuµpµu

N∑
n=1

δt
[(
D1B,1,1q

n,∇ ·
(
D1B,1,1v

n
))

+
(
D1B,1,1v

n,∇
(
D1B,1,1q

n
))]

. (35)

8



Table 3: Functions to obtain Λ-coercivity and norms

Method Λ(V ), |||V ||| and |||F |||∗

ASGS-BE

Λ (V ) := V +

{
[0,0] ,

{[
τpµpD

1
B,1,1q

n, τuµuD
1
B,1,1v

n
]}N
n=1

}
|||V |||2 :=

∣∣∣∣∣∣V N ∣∣∣∣∣∣2
0

+ |||V |||2B + τp
∣∣∣∣∣∣µpD1B,1,1qn +∇ · vn∣∣∣∣∣∣2

`2(Υ,L2(Ω))
+ τu

∣∣∣∣∣∣µuD1B,1,1vn +∇qn∣∣∣∣∣∣2
`2(Υ,L2(Ω))

|||F |||∗
2 := |||F |||2F + τpτuµu

∣∣∣∣∣∣D1B,1,1fp∣∣∣∣∣∣2
`1(Υ,L2(Ω))

+ τpτuµp

∣∣∣∣∣∣D1B,1,1fu∣∣∣∣∣∣2
`1(Υ,L2(Ω))

+τpτuµu||fp||2`∞(Υ,L2(Ω)) + τpτuµp||fu||
2
`∞(Υ,L2(Ω))

ASGS-CN

Λ (V ) :=

{[
p0,u0

]
,
{[
pn−

1
2 ,un−

1
2

]}N
n=1

}
+

{
[0,0] ,

{[
τpµpD

1
B,1,1q

n, τuµuD
1
B,1,1v

n
]}N
n=1

}
|||V |||2 :=

∣∣∣∣∣∣V N ∣∣∣∣∣∣2
0

+ |||V |||2B + τp
∣∣∣∣∣∣µpD1B,1,1qn +∇ · vn− 12 ∣∣∣∣∣∣2

`2(Υ,L2(Ω))

+τu

∣∣∣∣∣∣µuD1B,1,1vn +∇qn− 12 ∣∣∣∣∣∣2
`2(Υ,L2(Ω))

|||F |||∗
2 := |||F |||2F + τpτuµu

∣∣∣∣∣∣D1B,1,1fp∣∣∣∣∣∣2
`1(Υ,L2(Ω))

+ τpτuµp

∣∣∣∣∣∣D1B,1,1fu∣∣∣∣∣∣2
`1(Υ,L2(Ω))

+τpτuµu||fp||2`∞(Υ,L2(Ω)) + τpτuµp||fu||
2
`∞(Υ,L2(Ω))

ASGS-BDF2

Λ (V ) :=
{
V 0, V

1
2 , {V n}Nn=2

}
+

{
[0,0] ,

[
τpµpD

1
B,1,1q

1, τuµuD
1
B,1,1v

1
]
,
{[
τpµpD

1
B,2,1q

n, τuµuD
1
B,2,1v

n
]}N
n=2

}
|||V |||2 :=

∣∣∣∣∣∣V N ∣∣∣∣∣∣2
0

+ |||V |||2B + τp
∣∣∣∣∣∣µpD1B,1,1q1 +∇ · v 12 ∣∣∣∣∣∣2δt+ τu∣∣∣∣∣∣µuD1B,1,1v1 +∇q 12 ∣∣∣∣∣∣2δt

+τp

∣∣∣∣∣∣µpD1B,2,1qn +∇ · vn∣∣∣∣∣∣2
`2(Υ,L2(Ω))

+ τu

∣∣∣∣∣∣µuD1B,2,1vn +∇qn∣∣∣∣∣∣2
`2(Υ,L2(Ω))

|||F |||∗
2 := |||F |||2F + τpτuµu

∣∣∣∣∣∣D1B,1,1fp1∣∣∣∣∣∣2δt2 + τpτuµu∣∣∣∣∣∣D1B,2,1fp∣∣∣∣∣∣2
`1(Υ,L2(Ω))

+ τpτuµu||fp||2`∞(Υ,L2(Ω))

+τpτuµp

∣∣∣∣∣∣D1B,1,1fu1∣∣∣∣∣∣2δt2 + τpτuµp∣∣∣∣∣∣D1B,2,1fu∣∣∣∣∣∣2
`1(Υ,L2(Ω))

+ τpτuµp||fu||2`∞(Υ,L2(Ω))

OSS-BE

Λ (V ) := V + βΛb (V ) (β small enough)

Λb (V ) :=
{

[0,0] ,
{[
τp
(
µpD

1
B,1,1q

n + Pp (∇ · vn)
)
, τu

(
µuD

1
B,1,1v

n + Pu (∇qn)
)]}N

n=1

}
|||V |||2 :=

∣∣∣∣∣∣V N ∣∣∣∣∣∣2
0

+ |||V |||2B + τp
∣∣∣∣∣∣µpD1B,1,1qn +∇ · vn∣∣∣∣∣∣2

`2(Υ,L2(Ω))
+ τu

∣∣∣∣∣∣µuD1B,1,1vn +∇qn∣∣∣∣∣∣2
`2(Υ,L2(Ω))

|||F |||∗
2 := |||F |||2F

OSS-CN

Λ (V ) := Λa (V ) + βΛb (V ) (β small enough)

Λa (V ) :=

{[
p0,u0

]
,
{[
pn−

1
2 ,un−

1
2

]}N
n=1

}
Λb (V ) :=

{
[0,0] ,

{[
τp
(
µpD

1
B,1,1q

n + Pp
(
∇ · vn−

1
2

))
, τu

(
µuD

1
B,1,1v

n + Pu
(
∇qn−

1
2

))]}N
n=1

}
|||V |||2 :=

∣∣∣∣∣∣V N ∣∣∣∣∣∣2
0

+ |||V |||2B + τp
∣∣∣∣∣∣µpD1B,1,1qn +∇ · vn− 12 ∣∣∣∣∣∣2

`2(Υ,L2(Ω))

+τu

∣∣∣∣∣∣µuD1B,1,1vn +∇qn− 12 ∣∣∣∣∣∣2
`2(Υ,L2(Ω))

|||F |||∗
2 := |||F |||2F

OSS-BDF2

Λ (V ) := Λa (V ) + βΛb (V ) (β > 0 small enough)
Λa (V ) :=

{
V 0, V

1
2 , {V n}Nn=2

}
Λb (V ) :=

{
[0,0] ,

[
τp
(
µpD

1
B,1,1q

1 + Pp
(
∇ · v

1
2

))
, τu

(
µuD

1
B,1,1v

1 + Pu
(
∇q

1
2

))]
{[
τp
(
µpD

1
B,2,1q

n + Pp (∇ · vn)
)
, τu

(
µuD

1
B,2,1v

n + Pu (∇qn)
)]}N

n=2

}
|||V |||2 :=

∣∣∣∣∣∣V N ∣∣∣∣∣∣2
0

+ |||V |||2B + τp
∣∣∣∣∣∣µpD1B,1,1q1 +∇ · v 12 ∣∣∣∣∣∣2δt+ τu∣∣∣∣∣∣µuD1B,1,1v1 +∇q 12 ∣∣∣∣∣∣2δt

+τp

∣∣∣∣∣∣µpD1B,2,1qn +∇ · vn∣∣∣∣∣∣2
`2(Υ,L2(Ω))

+ τu

∣∣∣∣∣∣µuD1B,2,1vn +∇qn∣∣∣∣∣∣2
`2(Υ,L2(Ω))

|||F |||∗
2 := |||F |||2F

Now we show how each term is bounded. The first four terms of (35) can be bounded considering zero
initial conditions (3), the fact that τpτu = C2τh

2 by (25) and the definition of
∣∣∣∣∣∣V N ∣∣∣∣∣∣2

0
in (27) as

N∑
n=1

δt
(
µpD

1
B,1,1q

n, qn
)

+

N∑
n=1

δt
(
µuD

1
B,1,1v

n,vn
)
9



Table 4: Error functions I: ASGS formulation

Method E(h, δt)

BE

E2(h, δt) := µp||εp||2`∞(L2) + µu||εu||
2
`∞(L2) + τpτuµu||∇ · εu||

2
`∞(L2) + τpτuµp||∇εp||

2
`∞(L2)

+ 1
τu
||εu||2`2(L2) + τp

∣∣∣∣∣∣µpD1B,1,1εp∣∣∣∣∣∣2
`2(L2)

+ τp||∇ · εu||2`2(L2) + (1 + σ)κp||εp||
2
`2(Υ,L2(Γo))

+ 1
τp
||εp||2`2(L2) + τu

∣∣∣∣∣∣µuD1B,1,1εu∣∣∣∣∣∣2
`2(L2)

+ τu||∇εp||2`2(L2) + (1− σ)κu||εu||
2
`2(Υ,L2(Γo))

+τpτuµu

∣∣∣∣∣∣µpD1B,1,1εp∣∣∣∣∣∣2
`∞(L2)

+ τpτuµu

∣∣∣∣∣∣µpD2C,2,1εp∣∣∣∣∣∣2
`1(L2)

+ τpτuµu

∣∣∣∣∣∣∇ ·D1B,1,1εu∣∣∣∣∣∣2
`1(L2)

+τpτuµp

∣∣∣∣∣∣µuD1B,1,1εu∣∣∣∣∣∣2
`∞(L2)

+ τpτuµp

∣∣∣∣∣∣µuD2C,2,1εu∣∣∣∣∣∣2
`1(L2)

+ τpτuµp

∣∣∣∣∣∣∇D1B,1,1εp∣∣∣∣∣∣2
`1(L2)

+ δt
2

µp
||µp∂ttp||2`1(L2) + δt

2τp||µp∂ttp||2`2(L2) + τpτuµuδt
2
(
||µp∂ttp||2`∞(L2) + ||µp∂tttp||

2
`1(L2)

)
+ δt

2

µu
||µu∂ttu||2`1(L2) + δt

2τu||µu∂ttu||2`2(L2) + τpτuµpδt
2
(
||µu∂ttu||2`∞(L2) + ||µu∂tttu||

2
`1(L2)

)

CN

E2(h, δt) := µp||εp||2`∞(Υ,L2(Ω)) + µu||εu||
2
`∞(Υ,L2(Ω)) + (1 + σ)κp||εp||

2
`2(Υ,L2(Γo))

+ (1− σ)κu||εu||2`2(Υ,L2(Γo))
+ 1
τu
||εu||2`2(L2) + τp

∣∣∣∣∣∣µpD1B,1,1εp∣∣∣∣∣∣2
`2(L2)

+ τp||∇ · εu||2`2(L2) + τpτuµu
∣∣∣∣∣∣∇ ·D1B,1,1εu∣∣∣∣∣∣2

`1(L2)

+ 1
τp
||εp||2`2(L2) + τu

∣∣∣∣∣∣µuD1B,1,1εu∣∣∣∣∣∣2
`2(L2)

+ τu||∇εp||2`2(L2) + τpτuµp
∣∣∣∣∣∣∇D1B,1,1εp∣∣∣∣∣∣2

`1(L2)

+τpτuµu

∣∣∣∣∣∣µpD1B,1,1εp∣∣∣∣∣∣2
`∞(L2)

+ τpτuµu

∣∣∣∣∣∣µpD2C,2,1εp∣∣∣∣∣∣2
`1(L2)

+τpτuµp

∣∣∣∣∣∣µuD1B,1,1εu∣∣∣∣∣∣2
`∞(L2)

+ τpτuµp

∣∣∣∣∣∣µuD2C,2,1εu∣∣∣∣∣∣2
`1(L2)

+ δt
4

µp
||µp∂tttp||2`1(L2) + δt

4τp||µp∂tttp||2`2(L2) + τpτuµuδt
4
[
||µp∂tttp||2`∞(L2) + ||µp∂ttttp||

2
`1(L2)

]
+ δt

4

µu
||µu∂tttu||2`1(L2) + δt

4τu||µu∂tttu||2`2(L2) + τpτuµpδt
4
[
||µu∂tttu||2`∞(L2) + ||µu∂ttttu||

2
`1(L2)

]

BDF2

E2(h, δt) := µp||εp||2`∞(L2) + µu||εu||
2
`∞(L2) + (1 + σ)κp||εp||

2
`2(Υ,L2(Γo))

+ (1− σ)κu||εu||2`2(Υ,L2(Γo))
+ 1
τu
||εu||2`2(Υ,L2(Ω)) + τp

∣∣∣∣∣∣µpD1B,1,1ε1p∣∣∣∣∣∣2δt+ τp∣∣∣∣∣∣µpD1B,2,1εp∣∣∣∣∣∣2
`2(L2)

+ τp||∇ · εu||2`2(L2)

+ 1
τp
||εp||2`2(L2) + τu

∣∣∣∣∣∣µuD1B,1,1ε1u∣∣∣∣∣∣2δt+ τu∣∣∣∣∣∣µuD1B,2,1εu∣∣∣∣∣∣2
`2(L2)

+ τu||∇εp||2`2(Υ,L2(Ω))

+τpτuµu

∣∣∣∣
∣∣∣∣µpD2C,2, 1

2

ε
1
2
p

∣∣∣∣
∣∣∣∣2δt2 + τpτuµp

∣∣∣∣
∣∣∣∣µuD2C,2, 1

2

ε
1
2
u

∣∣∣∣
∣∣∣∣2δt2

+τpτuµu

(∣∣∣∣∣∣µpD1B,2,1ε2p∣∣∣∣∣∣2 + ∣∣∣∣∣∣µp (D1B,2,1ε3p − 4D1B,2,1ε2p)∣∣∣∣∣∣2
)

+τpτuµp

(∣∣∣∣∣∣µuD1B,2,1ε2u∣∣∣∣∣∣2 + ∣∣∣∣∣∣µu (D1B,2,1ε3u − 4D1B,2,1ε2u)∣∣∣∣∣∣2
)

+τpτuµu

∣∣∣∣∣∣µp(3D2C,4,1 − 2D2C,2,2)εnp ∣∣∣∣∣∣2
`1(L2)

+ τpτuµp

∣∣∣∣∣∣µu(3D2C,4,1 − 2D2C,2,2)εnu∣∣∣∣∣∣2
`1(L2)

+τpτuµu

(∣∣∣∣∣∣µpD1B,2,1εNp ∣∣∣∣∣∣2 + ∣∣∣∣∣∣µp (3D1B,2,1εN−1p − 4D1B,2,1εNp )∣∣∣∣∣∣2
)

+τpτuµp

(∣∣∣∣∣∣µuD1B,2,1εNu ∣∣∣∣∣∣2 + ∣∣∣∣∣∣µu (3D1B,2,1εN−1u − 4D1B,2,1εNu )∣∣∣∣∣∣2
)

+τpτuµu

(∣∣∣∣∣∣∇ ·D1B,1,1ε1u∣∣∣∣∣∣2δt2 + ∣∣∣∣∣∣∇ ·D1F,2,1εu∣∣∣∣∣∣2
`1(L2)

)
+τpτuµp

(∣∣∣∣∣∣∇D1B,1,1ε1p∣∣∣∣∣∣2δt2 + ∣∣∣∣∣∣∇D1F,2,1εp∣∣∣∣∣∣2
`1(L2)

)
+ δt

4

µp

∣∣∣∣∣∣µp∂tttp 12 ∣∣∣∣∣∣2δt2 + δt4µp ||µp∂tttpn||2`1(L2) + δt4µu ∣∣∣∣∣∣µu∂tttu 12 ∣∣∣∣∣∣2δt2 + δt4µu ||µu∂tttun||2`1(L2)
+δt4τp

∣∣∣∣∣∣µp∂tttp 12 ∣∣∣∣∣∣2δt+ δt4τp||µp∂tttpn||2`2(L2) + δt4τu∣∣∣∣∣∣µu∂tttu 12 ∣∣∣∣∣∣2δt+ δt4τu||µu∂tttun||2`2(L2)
+δt4τpτuµu

(∣∣∣∣∣∣µp∂tttp 12 ∣∣∣∣∣∣2 + ||µp∂ttttp||2`1(L2) + ||µp∂tttp||2L∞(L2)
)

+δt4τpτuµp

(∣∣∣∣∣∣µu∂tttu 12 ∣∣∣∣∣∣2 + ||µu∂ttttu||2`1(L2) + ||µu∂tttu||2L∞(L2)
)

+ τpτuµu

N∑
n=1

δt
(
∇ · vn,∇ ·

(
D1B,1,1v

n
))

+ τpτuµp

N∑
n=1

δt
(
∇qn,∇

(
D1B,1,1q

n
))

&
∣∣∣∣∣∣V N ∣∣∣∣∣∣2

0
. (36)

10



Table 5: Error functions II: OSS formulation

Method E(h, δt)

BE

E2(h, δt) := µp||εp||2`∞(L2) +
1
τu
||εu||2`2(Υ,L2(Ω)) + τp

∣∣∣∣∣∣µpD1B,1,1εp∣∣∣∣∣∣2
`2(L2)

+ τp||∇ · εu||2`2(L2)

+µu||εu||2`∞(L2) +
1
τp
||εp||2`2(L2) + τu

∣∣∣∣∣∣µuD1B,1,1εu∣∣∣∣∣∣2
`2(L2)

+ τu||∇εp||2`2(L2)
+(1 + σ)κp||εp||2`2(Υ,L2(Γo)) + (1− σ)κu||εu||

2
`2(Υ,L2(Γo))

+ δt
2

µp
||µp∂ttp||2`1(L2) +

δt2

µu
||µu∂ttu||2`1(L2) + δt

2τp||µp∂ttp||2`2(L2) + δt
2τu||µu∂ttu||2`2(L2)

CN

E2(h, δt) := µp||εp||2`∞(L2) + µu||εu||
2
`∞(L2) + (1 + σ)κp||εp||

2
`2(Υ,L2(Γo))

+ (1− σ)κu||εu||2`2(Υ,L2(Γo))
+ 1
τu
||εu||2`2(L2) + τp

∣∣∣∣∣∣µpD1B,1,1εp∣∣∣∣∣∣2
`2(L2)

+ τp||∇ · εu||2`2(L2)

+ 1
τp
||εp||2`2(L2) + τu

∣∣∣∣∣∣µuD1B,1,1εu∣∣∣∣∣∣2
`2(L2)

+ τu||∇εp||2`2(L2)
+ δt

4

µp
||µp∂tttp||2`1(L2) + δt

4τp||µp∂tttp||2`2(L2) +
δt4

µu
||µu∂tttu||2`1(L2) + δt

4τu||µu∂tttu||2`2(L2)

BDF2

E2(h, δt) := µp||εp||2`∞(L2) + µu||εu||
2
`∞(L2) +

1
τu

∣∣∣∣
∣∣∣∣ε 12u

∣∣∣∣
∣∣∣∣2δt+ 1τp

∣∣∣∣
∣∣∣∣ε 12p
∣∣∣∣
∣∣∣∣2δt+ 1τu ||εu||2`2(L2) + 1τp ||εp||2`2(L2)

+(1 + σ)κp||εp||2`2(Υ,L2(Γo)) + (1− σ)κu||εu||
2
`2(Υ,L2(Γo))

+τp

∣∣∣∣∣∣µpD1B,1,1ε1p∣∣∣∣∣∣2δt+ τp
∣∣∣∣
∣∣∣∣∇ · ε 12u

∣∣∣∣
∣∣∣∣2δt+ τp∣∣∣∣∣∣µpD1B,2,1εnp ∣∣∣∣∣∣2

`2(L2)
+ τp||∇ · εu||2`2(L2)

+τu

∣∣∣∣∣∣µuD1B,1,1ε1u∣∣∣∣∣∣2δt+ τu
∣∣∣∣
∣∣∣∣∇ε 12p

∣∣∣∣
∣∣∣∣2δt+ τu∣∣∣∣∣∣µuD1B,2,1εnu∣∣∣∣∣∣2

`2(L2)
+ τu||∇εp||2`2(L2)

+ δt
4

µp

∣∣∣∣∣∣µp∂tttp 12 ∣∣∣∣∣∣2δt2 + δt4µp ||µp∂tttpn||2`1(L2) + δt4µu ∣∣∣∣∣∣µp∂tttu 12 ∣∣∣∣∣∣2δt2 + δt4µu ||µu∂tttun||2`1(L2)
+δt4

(
τp

∣∣∣∣∣∣µp∂tttp 12 ∣∣∣∣∣∣2δt+ τp||µp∂tttpn||2`2(L2) + τu∣∣∣∣∣∣µu∂tttu 12 ∣∣∣∣∣∣2δt+ τu||µu∂tttun||2`2(L2)
)

The 5th term is bounded using the divergence theorem, splitting the boundary integral in its parts Γp Γu
Γo, using the boundary conditions (4) and the definition of |||V |||

2
B in (28) as

N∑
n=1

δt [(∇ · vn, qn) + (∇qn,vn)] ≥ |||V |||2B . (37)

The 6th and 7th terms are already what we need. The 8th and 9th terms are greater than zero by boundary
conditions. Combining (35)-(37) the proof is completed.

3.4.2. Proof of stability (31)
Recalling the Λ-coercivity result we can write

|||Uh|||
2
. Bh(Uh,Λ(Uh)) = Lh(Λ(Uh), (38)

and using the definition of Lh we can write

|||Uh|||
2
.

N∑
n=1

δt
(
fp
n, pnh + τp

(
µpD

1
B,1,1p

n
h +∇ · u

n
h

))
+

N∑
n=1

δt
(
fp
n, τp∇ · τuµuD1B,1,1u

n
h

)
+

N∑
n=1

δt
(
fu

n,unh + τu
(
µuD

1
B,1,1u

n
h +∇p

n
h

))
+

N∑
n=1

δt
(
fu

n, τu∇τpµpD1B,1,1p
n
h

)
. (39)

The 1st and 3rd terms can be bounded as

N∑
n=1

δt
(
fp
n, pnh + τp

(
µpD

1
B,1,1p

n
h +∇ · u

n
h

))
11



+

N∑
n=1

δt
(
fu

n,unh + τu
(
µuD

1
B,1,1u

n
h +∇p

n
h

))
. α1|||F |||

2
F +

1

α1
|||Uh|||

2
, (40)

where here and in what follows αi > 0 are reals appearing from Young’s inequality. The 2nd and 4th terms
are bounded in a similar manner and we just show how we bound the 2nd term:

N∑
n=1

δt
(
fp
n, τp∇ · τuµuD1B,1,1u

n
h

)
=−

N∑
n=1

δt
(
D1B,1,1fp

n, τpτuµu∇ · un−1h
)

+
(
fp
N , τpτuµu∇ · uNh

)
.α2τpτuµu

∣∣∣∣D1B,1,1fp∣∣∣∣2`1(Υ,L2(Ω)) + α3τpτuµu||fp||2`∞(Υ,L2(Ω))
+

1

α2
τpτuµu||∇ · uh||

2
`∞(Υ,L2(Ω)) +

1

α3
τpτuµu||∇ · uh||

2
`∞(Υ,L2(Ω)). (41)

Combining (38)-(41) and taking αi large enough the proof is complete.

3.4.3. Proof of convergence (32)
Combining Λ-coercivity with V = e and (34) we can arrive to

|||e|||2 . Bh(e,Λ(e)) = Bh(ε,Λ(e)) + C(U,Λ(e)).

The aim is to bound e in terms of ε and U . We first analyze the term containing Bh and then the term
associated to the consistency error (33):

Bh(ε,Λ(e)) =
N∑
n=1

δt
(
µpD

1
B,1,1ε

n
p +∇ · ε

n
u, e

n
p + τp

(
µpD

1
B,1,1e

n
p +∇ · e

n
u

)
+ τpτuµu∇ ·D1B,1,1e

n
u

)
+

N∑
n=1

δt
(
µuD

1
B,1,1ε

n
u +∇ε

n
p , e

n
u + τu

(
µuD

1
B,1,1e

n
u +∇e

n
p

)
,+τpτuµp∇D1B,1,1e

n
p

)
≤

N∑
n=1

δt

[
α1
2τp

∣∣∣∣εnp ∣∣∣∣2 + τp2α1
∣∣∣∣µpD1B,1,1enp +∇ · enu∣∣∣∣2]

+

N∑
n=1

δt

[
α2
2τu
||εnu||

2
+

τu
2α2

∣∣∣∣µuD1B,1,1enu +∇enp ∣∣∣∣2]

+

N∑
n=1

δtτp

[
α3
2

∣∣∣∣µpD1B,1,1εnp +∇ · εnu∣∣∣∣2 + 12α3
∣∣∣∣µpD1B,1,1enp +∇ · enu∣∣∣∣2]

+

N∑
n=1

δtτu

[
α4
2

∣∣∣∣µuD1B,1,1εnu +∇εnp ∣∣∣∣2 + 12α4
∣∣∣∣µuD1B,1,1enu +∇enp ∣∣∣∣2]

+

N∑
n=1

δt
(
µpD

1
B,1,1ε

n
p +∇ · ε

n
u, τpτuµu∇ ·D

1
B,1,1e

n
u

)
+

N∑
n=1

δt
(
µuD

1
B,1,1ε

n
u +∇ε

n+1
p , τpτuµp∇D

1
B,1,1e

n
p

)
.

The only terms missing to bound are the last two ones. Both are bound similarly and we will only show
how the first one is bounded. The first part is bounded as
N∑
n=1

δt
(
µpD

1
B,1,1ε

n
p , τpτuµu∇ ·D

1
B,1,1e

n
u

)
12



=τpτuµu
[(
µpD

1
B,1,1ε

N
p ,∇ · e

N
u

)
−
(
µpD

1
B,1,1ε

1
p,∇ · e

0
u

)]
−
N−1∑
n=1

δtτpτuµu
(
µpD

2
C,2,1ε

n
p ,∇ · e

n
u

)
≤τpτuµu

[
α5
2

∣∣∣∣µpD1B,1,1εNp ∣∣∣∣2 + 12α5
∣∣∣∣∇ · eNu ∣∣∣∣2]+ τpτuµu [α62 ∣∣∣∣µpD2C,2,1εp∣∣∣∣2`1(L2) + 12α6 ||∇ · eu||2`∞(L2)

]
,

and the second part is bounded as

N∑
n=1

δt
(
∇ · εnu, τpτuµu∇ ·D

1
B,1,1e

n
u

)
=τpτuµu

[(
∇ · εNu ,∇ · e

N
u

)
−
(
∇ · ε0u,∇ · e

0
u

)]
−

N∑
n=1

δt
(
∇ ·D1B,1,1ε

n
u, τpτuµu∇ · e

n
u

)
≤τpτuµu

[
α7
2

∣∣∣∣∇ · εNu ∣∣∣∣2 + 12α7
∣∣∣∣∇ · eNu ∣∣∣∣2 + α82 ∣∣∣∣∇ ·D1B,1,1εu∣∣∣∣2`1(L2) + 12α8 ||∇ · eu||2`∞(L2)

]
.

This completes the bounding of Bh. Now let us bound the consistency error (33):

C(U,Λ(e)) = Lh(Λ(e))− Bh(U,Λ(e))

=−
N∑
n=1

δt
(
µpD

1
B,1,1p

n +∇ · un, enp + τp
(
µpD

1
B,1,1e

n
p +∇ · e

n
u

)
+ τpτuµu∇ ·D1B,1,1e

n
u

)
−

N∑
n=1

δt
(
µuD

1
B,1,1u

n +∇pn, enu + τu
(
µuD

1
B,1,1e

n
u +∇e

n
p

)
+ τpτuµp∇D1B,1,1e

n
p

)
.

Both terms are bounded similarly and we only show how it is bounded the first one. Let us start with its
first part

−
N∑
n=1

δt
(
µpD

1
B,1,1p

n +∇ · un, enp
)
≤
α9
2

δt2

µp

[
N∑
n=1

∣∣∣∣µpD1B,1,1pn +∇ · un∣∣∣∣
]2

+
1

2α9
µp||ep||

2
`∞(L2)

≤
α9
2

δt2

µp

[
N∑
n=1

∣∣∣∣µpD1B,1,1pn − µp∂tpn∣∣∣∣
]2

+
1

2α9
µp||ep||

2
`∞(L2)

≤
α9
2

δt2

µp
||µp∂ttpn||

2
`1(L2)

+
1

2α9
µp||ep||

2
`∞(L2)

.

The second part can be bounded as

−
N∑
n=1

δt
(
µpD

1
B,1,1p

n +∇ · un, τp
(
µpD

1
B,1,1e

n
p +∇ · e

n
u

))
≤
α10
2

N∑
n=1

δtτp
∣∣∣∣µpD1B,1,1pn − µp∂tpn∣∣∣∣2 + 12α10

N∑
n=1

δtτp
∣∣∣∣µpD1B,1,1enp +∇ · enu∣∣∣∣2

≤
α10
2
δt2τp||µp∂ttpn||

2
`2(Υ,L2(Ω))

+
1

2α10
τp
∣∣∣∣µpD1B,1,1enp +∇ · enu∣∣∣∣2`2(Υ,L2(Ω)).

The third part can be bounded as

−
N∑
n=1

δt
(
µpD

1
B,1,1p

n +∇ · un, τpτuµu∇ ·D1B,1,1e
n
u

)
13



=τpτuµu
[(
µpD

1
B,1,1p

N +∇ · uN ,∇ · eNu
)
−
(
µpD

1
B,1,1p

1 +∇ · u0,∇ · e0u
)]

− τpτuµu

[
N−1∑
n=1

δt
(
µpD

2
C,2,1p

n +∇ ·D1B,1,1u
n,∇ · enu

)
+ δt

(
∇ ·D1B,1,1u

1,∇ · e0u
)]

≤τpτuµu
[
α11
2

∣∣∣∣µpD1B,1,1pN +∇ · uN ∣∣∣∣2 + 12α11
∣∣∣∣∇ · eNu ∣∣∣∣2]

+ τpτuµu
α12
2

[
N−1∑
n=1

δt
∣∣∣∣µpD2C,2,1pn +∇ ·D1B,1,1un∣∣∣∣

]2
+ τpτuµu

1

2α12
||∇ · eu||

2

≤τpτuµu
[
α11
2
δt2
∣∣∣∣µp∂ttpN ∣∣∣∣2 + 1

2α11

∣∣∣∣∇ · eNu ∣∣∣∣2]
+ τpτuµu

[
α12
2
δt2||µp∂tttp||

2
`1(Υ,L2(Ω))

+
1

2α12
||∇ · eu||

2
`∞(Υ,L2(Ω))

]
.

Combining all bounds the proof is complete.

3.5. Accuracy of the fully discrete methods
Let k be the order of p-interpolation and l the order of u-interpolation. Analyzing the a priori error

estimates (32) for the fully discrete methods with the error functions given in Tables 4 and 5 and assuming
regular enough solutions, we can summarize the convergence rates as shown in Tables 6-8. We stress
the fact that the convergence rates do depend on the choice of the stabilization parameters, and different
convergence orders are obtained for the three discrete variational formulations above. Let us note that the
time discretization schemes do not spoil the spatial convergence rates obtained in [10, 11] for the time-
continuous case. Let us mention that the negative powers of h appear due to some terms in the error
function having τp or τu dividing (see See Tables 4 and 5). Obviously, an appropriate (δt, h) relationship
should be chosen to have convergence.

Table 6: Convergence rates for ASGS-BE and OSS-BE according to variational form

Variational Form I II III∣∣∣∣ξnp ∣∣∣∣`∞(L2) , ||ξnu ||`∞(L2) hk+ 12 + hl+ 12 + δt+ h 12 δt hk+ 12 + hl + δt hk + hl+ 12 + δt∣∣∣∣∣∣µuD1B,1,1ξnu +∇ξnp ∣∣∣∣∣∣
`2(L2)

hk + hl + h−
1
2 δt+ δt hk−

1
2 + hl−1 + h−1δt hk + hl+

1
2 + δt∣∣∣∣∣∣µpD1B,1,1ξnp +∇ · ξnu ∣∣∣∣∣∣

`2(L2)
hk + hl + h−

1
2 δt+ δt hk+

1
2 + hl + δt hk−1 + hl−

1
2 + h−1δt

Best k, l, h-δt k = l, δt ∼ hk+
1
2 k + 1

2
= l, δt ∼ hl k = l + 1

2
, δt ∼ hk

k = l, δt ∼ hl k = l, δt ∼ hk

k + 1 = l, δt ∼ hl−
1
2 k = l + 1, δt ∼ hk−

1
2

4. Fourier analysis

We show now the results of a Fourier analysis (or von Neumann analysis) in 1D using linear (P1) elements,
which serves to study dispersion, dissipation, and stability of the numerical schemes. The analysis is done
in an unbounded domain with no forcing terms, but with non-zero initial conditions. The mesh is taken
uniform, of size h, and the time step is δt. We focus on variational form I because it has the best convergence
properties, as shown in the previous analysis.

14



Table 7: Convergence rates for ASGS-CN and OSS-CN according to variational form

Variational Form I II III∣∣∣∣ξnp ∣∣∣∣`∞(L2) , ||ξnu ||`∞(L2) hk+ 12 + hl+ 12 + δt2 + h 12 δt2 hk+ 12 + hl + δt2 hk + hl+ 12 + δt2∣∣∣∣
∣∣∣∣µuD1B,1,1ξnu +∇ξn− 12p

∣∣∣∣
∣∣∣∣
`2(L2)

hk + hl + h−
1
2 δt2 + δt2 hk−

1
2 + hl−1 + h−1δt2 hk + hl+

1
2 + δt2∣∣∣∣

∣∣∣∣µpD1B,1,1ξnp +∇ · ξn− 12u
∣∣∣∣
∣∣∣∣
`2(L2)

hk + hl + h−
1
2 δt2 + δt2 hk+

1
2 + hl + δt2 hk−1 + hl−

1
2 + h−1δt2

Best k, l, h-δt k = l, δt2 ∼ hk+
1
2 k + 1

2
= l, δt2 ∼ hl k = l + 1

2
, δt2 ∼ hk

k = l, δt2 ∼ hl k = l, δt2 ∼ hk

k + 1 = l, δt2 ∼ hl−
1
2 k = l + 1, δt2 ∼ hk−

1
2

Table 8: Convergence rates for ASGS-BDF2 and OSS-BDF2 according to variational form

Variational Form I II III∣∣∣∣ξnp ∣∣∣∣`∞(L2) , ||ξnu ||`∞(L2) hk+ 12 + hl+ 12 + δt2 hk+ 12 + hl + δt2 hk + hl+ 12 + δt2∣∣∣∣∣∣µuD1B,2,1ξnu +∇ξnp ∣∣∣∣∣∣
`2(L2)

hk + hl + h−
1
2 δt2 hk−

1
2 + hl−1 + h−1δt2 hk + hl+

1
2 + δt2∣∣∣∣∣∣µpD1B,2,1ξnp +∇ · ξnu ∣∣∣∣∣∣

`2(L2)
hk + hl + h−

1
2 δt2 hk+

1
2 + hl + δt2 hk−1 + hl−

1
2 + h−1δt2

Best k, l, h-δt k = l, δt2 ∼ hk+
1
2 k + 1

2
= l, δt2 ∼ hl k = l + 1

2
, δt2 ∼ hk

k = l, δt2 ∼ hl k = l, δt2 ∼ hk

k + 1 = l, δt2 ∼ hl−
1
2 k = l + 1, δt2 ∼ hk−

1
2

Let us consider a solution of the form p = Cpei(kx−ωt) and u = Cpµ
1/2
p µ

−1/2
u e

i(kx−ωt), where Cp is
an arbitrary constant such that [p] = [Cp], [·] standing for dimensional group, ω is the angular frequency
(temporal frequency) and k is the (angular) wavenumber (spatial frequency). It can be checked that this
plane wave is solution of the wave equation in mixed form. The angular frequency and wavenumber are
related through the wave speed as ω = kc.

We denote by < (·) and = (·) to the real and imaginary parts of a complex number respectively. The
stability conditions can be summarized as follows: =(kh) ≥ 0 or =(ωδt) ≤ 0, where k and ω are the
semi-discrete or fully-discrete wavenumber and angular frequency respectively.

For 1D P1 elements of size diamK = h we will need the following element matrices:∫
K

NiNj

∣∣∣
i,j=1,2

=
h

6

(
2 1
1 2

)
,

∫
K

Ni∂xNj

∣∣∣
i,j=1,2

=
1

2

(
−1 1
−1 1

)
,∫

K

∂xNiNj

∣∣∣
i,j=1,2

=
1

2

(
−1 −1
1 1

)
,

∫
K

∂xNi∂xNj

∣∣∣
i,j=1,2

=
1

h

(
1 −1
−1 1

)
,

where Ni is the shape function of node i (in element K). When assembled for just two elements sharing a
generic node they give, respectively,

Mp = Mu =
h

6


2 1 01 4 1

0 2 1


 , Kp = Ku = 1

2


−1 1 0−1 0 1

0 −1 1


 ,

15



0

0.5

1

1.5

2

0 0.2 0.4 0.6 0.8 1

<
(ω
δ
t
)/
ω

ωδt/π

θ = 0 and θ = 1
θ = 0.25 and θ = 0.75

θ = 0.50

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
δ
t
)/
ω

ωδt/π

θ = 0
θ = 0.25
θ = 0.5
θ = 0.75
θ = 1

Figure 1: θ-method time semi-discretization

0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
δ
t
)/
ω

ωδt/π

minus root

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
δ
t
)/
ω

ωδt/π

minus root

Figure 2: BDF2 time semi-discretization

MS,p = MS,u =
1

2


−1 −1 01 0 −1

0 1 1


 , KS,p = KS,u = 1

h


 1 −1 0−1 2 −1

0 −1 1


 .

Additionally, we define the lumped mass matrices

M̃p = M̃u =
h

2


1 0 00 2 0

0 0 1


 .

First we will analyze the time semi-discretization, then the space semi-discretization and finally the full
discretization. The time discretizations to be considered are the θ and BDF2 methods, whereas the space
discretizations to be analyzed are stabilized FE methods (ASGS and OSS). We will often take tn = nδt and
xj = jh, where n is the time step and j is the mesh point.

4.1. Time semi-discretization
Let us start considering the effect of the time discretization only, without discretizing in space. Let us

take ωδt = kδtcδt and kδt = k, where the subscript δt denotes temporal semi-discretization. We take a
solution (mode) of the form

[Pn(x), Un(x)] = φke
i(kx−ωδttn)

[
1, µ1/2p µ

−1/2
u

]
, (42)

16



0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
δ
t
)/
ω

ωδt/π

θ = 0.5
BDF2

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
δ
t
)/
ω

ωδt/π

θ = 0.5
BDF2

Figure 3: Time semi-discretization comparison

where φk is a constant that describes the amplitude at tn = 0.
The semi-discrete problem using the θ method is as follows:

µp
δt

(Pn+1 − Pn) + θ
d

dx
Un+1 + (1− θ)

d

dx
Un = 0,

µu
δt

(Un+1 − Un) + θ
d

dx
Pn+1 + (1− θ)

d

dx
Pn = 0,

where 0 ≤ θ ≤ 1 is a parameter. The backward Euler method corresponds to θ = 1, the forward Euler
method to θ = 0 and the trapezoidal rule to θ = 0.5. Replacing [Pn, Un] from (42) we have:

µp
δt

(
e−iωδtδt − 1

)
+ µ1/2p µ

−1/2
u

(
ikθe−iωδtδt + ik(1− θ)

)
= 0,

µu
δt
µ1/2p µ

−1/2
u

(
e−iωδtδt − 1

)
+ ikθe−iωδtδt + ik(1− θ) = 0.

Both equations are equivalent, so we just analyze one of them. We have that

ωδtδt =
−1
i

log

(
1− (1− θ)iωδt

1 + iωδtθ

)
.

The numerical angular frequency, ωδt, is not always real, it is complex for θ 6= 0.5. It can be shown that the
angular frequency error is 2nd order in ωδt for θ = 0.5 and only 1st order in ωδt for θ 6= 0.5. Fig. 1 shows
the angular frequency ratio ωδt/ω for 0 ≤ ωδt/π ≤ 1. It can be seen that the θ-method is unconditionally
stable for θ ≥ 0.5.

On the other hand, the semi-discrete problem using BDF2 is:

µp
2δt

(3Pn+1 − 4Pn + Pn−1) +
d

dx
Un+1 = 0,

µu
2δt

(3Un+1 − 4Un + Un−1) +
d

dx
Pn+1 = 0.

Following a similar procedure as for the θ method we arrive to

ωδtδt =
1

i
log(2±

√
1− 2iωδt).

The numerical angular frequency is complex. The root corresponding to +√ is spurious, hence we just
plot the root corresponding to −√. It can be shown that the angular frequency error is 2nd order in ωδt.

17



0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(k
h
/
k
)

kh/π

Cτ = 0.0
Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4

0.96

0.98

1

1.02

1.04

0 0.1 0.2 0.3 0.4 0.5

<
(k
h
/
k
)

kh/π

Cτ = 0.0
Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4

Figure 4: ASGS space semi-discretization: real part of the wavenumber ratio (the right picture is a zoom of the left)

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(k
h
/
k
)

kh/π

Cτ = 0.0
Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4

-0.04

-0.02

0

0.02

0.04

0 0.1 0.2 0.3 0.4 0.5

=
(k
h
/
k
)

kh/π

Cτ = 0.0
Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4

Figure 5: ASGS space semi-discretization: imaginary part of the wavenumber ratio (the right picture is a zoom of the left)

Fig. 2 shows the angular frequency ratio ωδt/ω for 0 ≤ ωδt/π ≤ 1. It can be seen that the BDF2 method is
unconditionally stable.

Now, let us compare the θ-method with θ = 1/2 and BDF2. Fig. 3 compares both methods. It can be
seen that the θ-method with θ = 1/2 outperforms BDF2 for the wave equation in mixed form both in terms
of dispersion and dissipation.

4.2. Space semi-discretization
We analyze now the wave equation in mixed form when the spatial discretization is done using the

ASGS and the OSS methods. We take ωh = khch and ωh = ω, where the subscript h denotes spatial
semi-discretization. We take now

[Pj(t), Uj(t)] = φωe
i(khxj−ωt)

[
1, µ1/2p µ

−1/2
u

]
, (43)

where φω is a constant that describes the amplitude at t = 0.
For the ASGS method, the semi-discrete problem has the matrix structure:

µpMp
dP

dt
+KuU + τuµuMS,u

dU

dt
+ τuKS,pP = 0,

µuMu
dU

dt
+KpP + τpµpMS,p

dP

dt
+ τpKS,uU = 0,

18



0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(k
h
/
k
)

kh/π

Cτ = 0.0
Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4

0.96

0.98

1

1.02

1.04

0 0.1 0.2 0.3 0.4 0.5
<

(k
h
/
k
)

kh/π

Cτ = 0.0
Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4

Figure 6: OSS space semi-discretization: real part of the wavenumber ratio (the right picture is a zoom of the left)

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(k
h
/
k
)

kh/π

Cτ = 0.0
Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4

-0.04

-0.02

0

0.02

0.04

0 0.1 0.2 0.3 0.4 0.5

=
(k
h
/
k
)

kh/π

Cτ = 0.0
Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4

Figure 7: OSS space semi-discretization: imaginary part of the wavenumber ratio (the right picture is a zoom of the left)

19



where a subscript S has been introduced in the matrices with contributions from the stabilization terms. In
these equations, P and U do not denote the sequence of solutions in time, but the array of nodal unknowns
with time-continuous components. The meaning of P and U in what follows will be determined by the
context. We just analyze one of the previous equations because they are equivalent. The j-th row of the
first system of equations is

µp
h

6

(
d

dt
Pj−1 + 4

d

dt
Pj +

d

dt
Pj+1

)
+

1

2
(−Uj−1 + Uj+1)

+ τuµu
1

2

(
d

dt
Uj−1 −

d

dt
Uj+1

)
+ τu

1

h
(−Pj−1 + 2Pj − Pj+1) = 0.

Replacing [Pj , Uj ] from (43) we have:

−iωµp
h

6

(
e−ikhh + 4 + eikhh

)
+

1

2
µ1/2p µ

−1/2
u

(
−e−ikhh + eikhh

)
−

1

2
iωτuµ

1/2
p µ

1/2
u

(
e−ikhh − eikhh

)
+

1

h
τu
(
−e−ikhh + 2− eikhh

)
= 0,

kh
k

= −
i

kh
log

(
−(4kh+ 12iCτ )±

√
36(kh)2C2τ + 72ikhCτ + 12(kh)

2 − 36
2(kh+ 3i− 3khCτ − 6iCτ )

)
.

The Maclaurin series for the real and imaginary parts are:

<(kh)
k

= 1−
15C2τ − 1

180
(kh)4 +

126C4τ − 63C2τ + 1
1512

(kh)6 + ... ,

=(kh)
k

=
Cτ
12

(kh)3 −
6C3τ − Cτ

72
(kh)5 + ... .

It can be shown that kh is complex and that <(kh) is of order (kh)4 for any Cτ and of order (kh)6 for
Cτ = 1/

√
15 ≈ 0.2582. Additionally, =(kh) is of order (kh)3 for any Cτ > 0. Fig. 4 and Fig. 5 show the

real and imaginary parts of the wavenumber ratio as a function of kh/π. It can be seen that the Galerkin
method (Cτ = 0) is unstable whereas the ASGS method is always stable.

Next, we analyze an OSS method in which a lumped mass matrix (diagonal) is used to project the
residual. Additionally, as the projection with a lumped mass matrix is not exactly an L2 projection, we keep
the time derivatives in the residual. Non-lumped (consistent) mass matrices are used for time derivatives.
Better than lumped mass matrix approximations to the L2 projection can be used, but the results obtained
are very similar. For instance we could use the family of banded approximate mass matrices from [31].

The matrix form of the semi-discrete problem is:

µpMp
dP

dt
+KuU + τuµuMS,u

dU

dt
+ τuKS,pP − τuMS,uRu = 0,

MuRu = µuMu
d

dt
U +KpP,

µuMu
dU

dt
+KpP + τpµpMS,p

dP

dt
+ τpKS,uU − τpMS,pRp = 0,

MpRp = µpMp
d

dt
P +KuU.

As we use a lumped projection, the semi-discrete problem reduces to:

µpMp
dP

dt
+KuU + τuµuMS,u

dU

dt
+ τuKS,pP − τuMS,uM̃−1u

(
µuMu

d

dt
U +KpP

)
= 0,

µuMu
dU

dt
+KpP + τpµpMS,p

dP

dt
+ τpKS,uU − τpMS,pM̃−1p

(
µpMp

d

dt
P +KuU

)
= 0.

20



0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
∗
/
ω

)

kh/π

θ = 1
θ = 0.5
θ = 0

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
∗
/
ω

)

kh/π

θ = 1
θ = 0.5
θ = 0

Figure 8: ASGS + θ for r = 1 and Cτ = 0.2

0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
∗
/
ω

)

kh/π

Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4
Cτ = 0.5

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
∗
/
ω

)

kh/π

Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4
Cτ = 0.5

Figure 9: ASGS + θ for r = 1 and θ = 0.5

Following similar steps as for the ASGS method, we arrive to the expression which relates khh with kh:

2kh
(
eikhh + 4e2ikhh + e3ikhh

)
+ 6i

(
−eikhh + e3ikhh

)
+ khCτ

(
−1 + 2eikhh − 2e3ikhh + e4ikhh

)
+ 3iCτ

(
1− 4eikhh + 6e2ikhh − 4e3ikhh + e4ikhh

)
= 0.

Fig. 6 and Fig. 7 show the real and imaginary parts of the wavenumber ratio as a function of kh/π. As
before, the Galerkin method (Cτ = 0) is unstable whereas the OSS method is always stable.

4.3. Space-time discretization
Finally, we analyze the fully discrete problems arising from the combination of time discretizations (θ

and BDF2) and space discretizations (ASGS and OSS). Thus, in total we will analyze four fully discrete
problems. We take ω∗ = k∗c∗ and k∗ = k. The subscript ∗ denotes full discretization. We take a mode of
the form [

Pnj , U
n
j

]
= φke

i(kxj−ω∗tn)
[
1, µ1/2p µ

−1/2
u

]
, (44)

where φk describes the amplitude at tn = 0.
Let us define r as the Courant or CFL number as

r := cδt/h. (45)

21



0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
∗
/
ω

)

kh/π

r = 0.1
r = 0.5
r = 1.0
r = 2.0
r = 10.0

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
∗
/
ω

)

kh/π

r = 0.1
r = 0.5
r = 1.0
r = 2.0
r = 10.0

Figure 10: ASGS + θ for Cτ = 0.2 and θ = 0.5

0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
∗
/
ω

)

kh/π

Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4
Cτ = 0.5

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
∗
/
ω

)

kh/π

Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4
Cτ = 0.5

Figure 11: ASGS + BDF2 for r = 1

0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
∗
/
ω

)

kh/π

r = 0.1
r = 0.5
r = 1.0
r = 2.0
r = 10.0

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
∗
/
ω

)

kh/π

r = 0.1
r = 0.5
r = 1.0
r = 2.0
r = 10.0

Figure 12: ASGS + BDF2 for Cτ = 0.2

22



First, we consider the ASGS formulation for the space discretization. With regard to the time integration,
we first consider the θ-method. The fully discrete problem is:

µp
δt
Mp

(
Pn+1 − Pn

)
+τu

µu
δt
MS,u

(
Un+1 − Un

)
+ θ

(
KuU

n+1 + τuKS,pP
n+1
)

+ (1− θ) (KuUn + τuKS,pPn) = 0,
µu
δt
Mu

(
Un+1 − Un

)
+τp

µp
δt
MS,p

(
Pn+1 − Pn

)
+ θ

(
KpP

n+1 + τpKS,uU
n+1
)

+(1− θ) (KpPn + τpKS,uUn) = 0.

We concentrate in one of the equations because both will be equivalent for the current analysis. The j-th
row of the system of equations is

µp
h

6δt

(
Pn+1j−1 + 4P

n+1
j + P

n+1
j+1 − P

n
j−1 − 4P

n
j − P

n
j+1

)
+ τu

µu
2δt

(
Un+1j−1 − U

n+1
j+1 − U

n
j−1 + U

n
j+1

)
+ θ

(
1

2

(
−Un+1j−1 + U

n+1
j+1

)
+ τu

1

h

(
−Pn+1j−1 + 2P

n+1
j − P

n+1
j+1

))
+ (1− θ)

(
1

2

(
−Unj−1 + U

n
j+1

)
+ τu

1

h

(
−Pnj−1 + 2P

n
j − P

n
j+1

))
= 0,

and replacing
[
Pnj , U

n
j

]
from (44) we get

µp
h

6δt

(
ei(−kh−ω∗δt) + 4ei(−ω∗δt) + ei(kh−ω∗δt) − ei(−kh) − 4− ei(kh)

)
+

1

2δt
τuµ

1/2
p µ

1/2
u

(
ei(−kh−ω∗δt) − ei(kh−ω∗δt) − ei(−kh) + ei(kh)

)
+ θ

(
1

2
µ1/2p µ

−1/2
u

(
−ei(−kh−ω∗δt) + ei(kh−ω∗δt)

)
+

1

h
τu

(
−ei(−kh−ω∗δt) + 2ei(−ω∗δt) − ei(kh−ω∗δt)

))
+ (1− θ)

(
1

2
µ1/2p µ

−1/2
u

(
−ei(−kh) + ei(kh)

)
+

1

h
τu

(
−ei(−kh) + 2− ei(kh)

))
= 0.

Using the definition of r from (45) we arrive to:

ω∗
ω

= −
1

ir(kh)
log

(
−2− cos(kh) + 3iCτ sin(kh) + (1− θ)(3ir sin(kh) + 6rCτ (1− cos(kh)))

3iCτ sin(kh)− 2− cos(kh)− 3irθ sin(kh)− 6rθCτ (1− cos(kh))

)
.

Fig. 8, Fig. 9, and Fig. 10 show the real and imaginary parts of the angular frequency ratio keeping
two parameters fixed. It can be seen that θ = 0 (forward Euler or explicit Euler scheme) is unconditionally
unstable. This is similar to what happens with forward in time-centered in space finite differences (FTCS)
applied to the pure advection equation in 1D.

Next, we consider the ASGS with the BDF2 time integration. The fully discrete problem is:

µp
2δt

Mp
(
3Pn+2 − 4Pn+1 + Pn

)
+τu

µu
2δt

MS,u
(
3Un+2 − 4Un+1 + Un

)
+KuU

n+2 + τuKS,pP
n+2 = 0,

µu
2δt

Mu
(
3Un+2 − 4Un+1 + Un

)
+τp

µp
2δt

MS,p
(
3Pn+2 − 4Pn+1 + Pn

)
+KpP

n+2 + τpKS,uU
n+2 = 0.

Following a similar procedure as before, we arrive to(
3e−2iω∗δt − 4e−iω∗δt + 1

)
((2 + cos(kh))− 3iCτ (sin(kh)))

+e−2iω∗δt (6ir (sin(kh)) + 12rCτ (1− cos(kh))) = 0.

Fig. 11 and Fig. 12 show the angular frequency ratio for the fully discrete problem. It can be seen that this
combination of spatial and temporal discretization is stable.

23



0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
∗
/
ω

)

kh/π

ASGS + θ = 1
ASGS + θ = 1/2
ASGS + BDF2

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
∗
/
ω

)

kh/π

ASGS + θ = 1
ASGS + θ = 1/2
ASGS + BDF2

Figure 13: Fully discrete ASGS with Cτ = 0.2 and r = 1

Fig. 13 compares the fully discrete ASGS method with the two time integration schemes shown previously.
It can be seen that the θ method performs better than BDF2 for small enough kh.

Next, we aim to analyze the properties of the OSS stabilized formulation. When using the θ-method for
the time integration, the fully discrete problem is:

µp
δt
Mp

(
Pn+1 − Pn

)
+ τu

µu
δt
MS,u

(
Un+1 − Un

)
− τuMS,uM̃−1u

µu
δt
Mu

(
Un+1 − Un

)
+ θ

(
KuU

n+1 + τuKS,pP
n+1 − τuMS,uM̃−1u KpP

n+1
)

+ (1− θ)
(
KuU

n + τuKS,pP
n − τuMS,uM̃−1u KpP

n
)

= 0,

µu
δt
Mu

(
Un+1 − Un

)
+ τp

µp
δt
MS,p

(
Pn+1 − Pn

)
− τpMS,pM̃−1p

µp
δt
Mp

(
Pn+1 − Pn

)
+ θ

(
KpP

n+1 + τpKS,uU
n+1 − τpMS,pM̃−1p KuU

n+1
)

+ (1− θ)
(
KpP

n + τpKS,uU
n − τpMS,pM̃−1p KuU

n
)

= 0.

Following a similar procedure as before we arrive to(
e−iω∗δt − 1

)
(2 (2 + cos(kh)) + iCτ (−2 sin(kh) + sin(2kh)))

+
(
θe−iω∗δt + 1− θ

)
(6ir (sin(kh)) + 3rCτ (3− 4 cos(kh) + cos(2kh))) = 0.

Fig. 14, Fig. 15, and Fig. 16 show the angular frequency ratio for this fully discretized problem.
Next, we consider the OSS-BDF2 fully discrete problem:

µp
2δt

Mp
(
3Pn+2 − 4Pn+1 + Pn

)
+ τu

µu
2δt

MS,u
(
3Un+2 − 4Un+1 + Un

)
+KuU

n+2 + τuKS,pP
n+2

− τuMS,uM̃−1u
( µu

2δt
Mu

(
3Un+2 − 4Un+1 + Un

)
+KpP

n+2
)

= 0,

µu
2δt

Mu
(
3Un+2 − 4Un+1 + Un

)
+ τp

µp
2δt

MS,p
(
3Pn+2 − 4Pn+1 + Pn

)
+KpP

n+2 + τpKS,uU
n+2

− τpMS,pM̃−1p
( µp

2δt
Mp

(
3Pn+2 − 4Pn+1 + Pn

)
+KuU

n+2
)

= 0.

Following a similar procedure as before we get(
3e−2iω∗δt − 4e−iω∗δt + 1

)
(2 (2 + cos(kh)) + iCτ (−2 sin(kh) + sin(2kh)))

+ e−2iω∗δt (12ir (sin(kh)) + 6rCτ (3− 4 cos(kh) + cos(2kh))) = 0.

24



0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
∗
/
ω

)

kh/π

θ = 1
θ = 0.5
θ = 0

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
∗
/
ω

)

kh/π

θ = 1
θ = 0.5
θ = 0

Figure 14: OSS + θ for r = 1 and Cτ = 0.2

0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
∗
/
ω

)

kh/π

Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4
Cτ = 0.5

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
∗
/
ω

)

kh/π

Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4
Cτ = 0.5

Figure 15: OSS + θ for r = 1 and θ = 0.5

0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
∗
/
ω

)

kh/π

r = 0.1
r = 0.5
r = 1.0
r = 2.0
r = 10.0

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
∗
/
ω

)

kh/π

r = 0.1
r = 0.5
r = 1.0
r = 2.0
r = 10.0

Figure 16: OSS + θ for Cτ = 0.2 and θ = 0.5

25



0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
∗
/
ω

)

kh/π

Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4
Cτ = 0.5

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1
=

(ω
∗
/
ω

)

kh/π

Cτ = 0.1
Cτ = 0.2
Cτ = 0.3
Cτ = 0.4
Cτ = 0.5

Figure 17: OSS + BDF2 for r = 1

0.6

0.8

1

1.2

1.4

0 0.2 0.4 0.6 0.8 1

<
(ω
∗
/
ω

)

kh/π

r = 0.1
r = 0.5
r = 1.0
r = 2.0
r = 10.0

-0.4

-0.2

0

0.2

0.4

0 0.2 0.4 0.6 0.8 1

=
(ω
∗
/
ω

)

kh/π

r = 0.1
r = 0.5
r = 1.0
r = 2.0
r = 10.0

Figure 18: OSS + BDF2 for Cτ = 0.2

26



Table 9: Experimental δt convergence rates for ASGS-BE method using Q1/Q1 spatial interpolation

Variational Form I II III I
δt vs. h δt ∼ 0.5h δt ∼ 4.5h1.5

Num Min Num Min Num Min Num Min∣∣∣∣pn − pn
h

∣∣∣∣
`∞(L2)

1.00 1 1.00 1 1.01 1 1.00 1∣∣∣∣un − un
h

∣∣∣∣
`∞(L2)

1.02 1 1.02 1 1.02 1 1.01 1∣∣∣∣∇(pn − pn
h

)
∣∣∣∣
`2(L2)

1.00 0.5 1.00 0 1.00 1 0.66 2/3∣∣∣∣∇ · (un − un
h

)
∣∣∣∣
`2(L2)

1.00 0.5 1.00 1 1.00 0 0.66 2/3

Table 10: Experimental δt convergence rates for OSS-BE method using Q1/Q1 spatial interpolation

Variational Form I II III I
δt vs. h δt ∼ 0.5h δt ∼ 4.5h1.5

Num Min Num Min Num Min Num Min∣∣∣∣pn − pn
h

∣∣∣∣
`∞(L2)

1.00 1 1.00 1 1.01 1 1.00 1∣∣∣∣un − un
h

∣∣∣∣
`∞(L2)

1.02 1 1.02 1 1.02 1 1.01 1∣∣∣∣∇(pn − pn
h

)
∣∣∣∣
`2(L2)

1.00 0.5 1.00 0 1.00 1 0.66 2/3∣∣∣∣∇ · (un − un
h

)
∣∣∣∣
`2(L2)

1.00 0.5 1.00 1 1.00 0 0.66 2/3

Fig. 17 and Fig. 18 show the real and imaginary parts of the angular frequency ratio.
The plots comparing time marching schemes for the OSS method are very similar to the ones for ASGS

and are not shown for succinctness. The fully discrete ASGS and OSS methods perform similarly according
to this analysis, so we do not show a side by side comparison of both methods.

5. Numerical results

In this section we present two sets of numerical results. First, convergence tests are presented and com-
pared with the predicted convergence rates obtained from convergence analysis. Then, numerical solutions
of a wave propagation problem are compared in order to see the differences of the fully discrete methods.

5.1. Convergence tests
Let us consider a two dimensional transient problem with analytical solution to investigate the con-

vergence properties of the stabilized FE formulations proposed. The spatial domain is the unit square
(0, 1) × (0, 1) and the temporal domain is (0, 1). The forcing terms [fp,fu] are chosen such that the exact
solution is p = sin(πx) sin(πy) cos

(
π
3
t
)
and u = [p, p] with µp = µu = 1. On the boundary we prescribe

p = 0 (Γ = Γp). The initial condition is taken as the exact solution at t = 0. Various mesh sizes and time
step sizes have been used to generate the results. We have used isotropic bilinear (Q1) and biquadratic (Q2)
meshes of sizes h = 0.05, 0.025, 0.01, 0.005 and 0.002. The stabilization algorithmic constant Cτ has been
taken as 0.05 for Q1 elements and 0.4 for Q2 elements. The the length scale of the problem has been taken
as L0 = d

√
meas(Ω) = 1.

In Tables 9-20 we show the convergence rates with respect to the time step size δt for various stabilization
methods (ASGS and OSS), time integrators (BE/CN/BDF2) and spatial interpolations (Q1 and Q2). The
numerical experiments have been carried out modifying the time step size and the mesh size at the same time.
The relationship (δt, h) is shown in each table for each variational form with the respective proportionality
constant and power, δt ∼ Cshs. The power constant s has been chosen in two ways, first as s = 1 for all
the variational forms and, secondly, it has been chosen such that the best convergence is achieved for equal
interpolation of the unknowns (k = l); see Tables 9-20. It is observed than in all cases the numerical rate
of convergence obtained (Num) is greater than or equal to the minimum one predicted by the convergence
analysis (Min). Note that in some cases a clear superconvergence phenomenon is observed.

27



Table 11: Experimental δt convergence rates for ASGS-BE method using Q2/Q2 spatial interpolation

Variational Form I II III I II III
δt vs. h δt ∼ 0.5h δt ∼ 894h2.5 δt ∼ 40h2 δt ∼ 40h2

Num Min Num Min Num Min Num Min Num Min Num Min∣∣∣∣pn − pn
h

∣∣∣∣
`∞(L2)

0.98 1 0.98 1 0.98 1 0.99 1 0.99 1 0.99 1∣∣∣∣un − un
h

∣∣∣∣
`∞(L2)

0.99 1 0.99 1 0.99 1 1.00 1 1.00 1 1.00 1∣∣∣∣∇(pn − pn
h

)
∣∣∣∣
`2(L2)

0.99 0.5 0.99 0 0.99 1 0.98 4/5 0.50 0.5 1.00 1∣∣∣∣∇ · (un − un
h

)
∣∣∣∣
`2(L2)

0.99 0.5 0.99 1 0.99 0 0.99 4/5 1.00 1 0.50 0.5

Table 12: Experimental δt convergence rates for OSS-BE method using Q2/Q2 spatial interpolation

Variational Form I II III I II III
δt vs. h δt ∼ 0.5h δt ∼ 894h2.5 δt ∼ 40h2 δt ∼ 40h2

Num Min Num Min Num Min Num Min Num Min Num Min∣∣∣∣pn − pn
h

∣∣∣∣
`∞(L2)

0.98 1 0.98 1 0.98 1 0.99 1 0.99 1 0.99 1∣∣∣∣un − un
h

∣∣∣∣
`∞(L2)

0.99 1 0.99 1 0.99 1 1.00 1 1.00 1 1.00 1∣∣∣∣∇(pn − pn
h

)
∣∣∣∣
`2(L2)

0.99 0.5 1.02 0 0.99 1 0.98 4/5 0.51 0.5 1.00 1∣∣∣∣∇ · (un − un
h

)
∣∣∣∣
`2(L2)

0.99 0.5 0.99 1 1.03 0 0.99 4/5 0.99 1 0.52 0.5

Table 13: Experimental δt convergence rates for ASGS-CN method using Q1/Q1 spatial interpolation

Variational Form I II III I II III
δt vs. h δt ∼ 0.5h δt ∼ 0.2h0.75 δt ∼ 0.1h0.5 δt ∼ 0.1h0.5

Num Min Num Min Num Min Num Min Num Min Num Min∣∣∣∣pn − pn
h

∣∣∣∣
`∞(L2)

2.00 1.5 2.00 1 2.00 1 2.60 2 3.38 2 3.39 2∣∣∣∣un − un
h

∣∣∣∣
`∞(L2)

2.00 1.5 2.00 1 2.00 1 2.64 2 3.72 2 3.72 2∣∣∣∣∇(pn − pn
h

)
∣∣∣∣
`2(L2)

1.00 1 1.00 0 1.00 1 1.33 4/3 1.99 0 1.99 2∣∣∣∣∇ · (un − un
h

)
∣∣∣∣
`2(L2)

1.00 1 1.00 1 1.00 0 1.33 4/3 1.99 2 1.99 0

Table 14: Experimental δt convergence rates for OSS-CN method using Q1/Q1 spatial interpolation

Variational Form I II III I II III
δt vs. h δt ∼ 0.5h δt ∼ 0.2h0.75 δt ∼ 0.1h0.5 δt ∼ 0.1h0.5

Num Min Num Min Num Min Num Min Num Min Num Min∣∣∣∣pn − pn
h

∣∣∣∣
`∞(L2)

2.00 1.5 2.00 1 2.00 1 2.60 2 3.38 2 3.39 2∣∣∣∣un − un
h

∣∣∣∣
`∞(L2)

2.00 1.5 2.00 1 2.00 1 2.64 2 3.72 2 3.72 2∣∣∣∣∇(pn − pn
h

)
∣∣∣∣
`2(L2)

1.00 1 1.00 0 1.00 1 1.33 4/3 1.99 0 1.99 2∣∣∣∣∇ · (un − un
h

)
∣∣∣∣
`2(L2)

1.00 1 1.00 1 1.00 0 1.33 4/3 1.99 2 1.99 0

Table 15: Experimental δt convergence rates for ASGS-CN method using Q2/Q2 spatial interpolation

Variational Form I II III I
δt vs. h δt ∼ 0.5h δt ∼ 2h1.25

Num Min Num Min Num Min Num Min∣∣∣∣pn − pn
h

∣∣∣∣
`∞(L2)

2.01 2 2.00 2 2.00 2 2.00 2∣∣∣∣un − un
h

∣∣∣∣
`∞(L2)

2.26 2 2.00 2 2.00 2 2.13 2∣∣∣∣∇(pn − pn
h

)
∣∣∣∣
`2(L2)

1.99 1.5 1.00 1 2.00 2 1.60 1.6∣∣∣∣∇ · (un − un
h

)
∣∣∣∣
`2(L2)

1.99 1.5 2.00 2 1.00 1 1.60 1.6

28



Table 16: Experimental δt convergence rates for OSS-CN method using Q2/Q2 spatial interpolation

Variational Form I II III I
δt vs. h δt ∼ 0.5h δt ∼ 2h1.25

Num Min Num Min Num Min Num Min∣∣∣∣pn − pn
h

∣∣∣∣
`∞(L2)

2.01 2 1.99 2 2.00 2 2.00 2∣∣∣∣un − un
h

∣∣∣∣
`∞(L2)

2.04 2 1.99 2 2.03 2 2.00 2∣∣∣∣∇(pn − pn
h

)
∣∣∣∣
`2(L2)

2.00 1.5 1.00 1 2.00 2 1.60 1.6∣∣∣∣∇ · (un − un
h

)
∣∣∣∣
`2(L2)

2.02 1.5 1.98 2 1.02 1 1.62 1.6

Table 17: Experimental δt convergence rates for ASGS-BDF2 method using Q1/Q1 spatial interpolation

Variational Form I II III I II III
δt vs. h δt ∼ 0.5h δt ∼ 0.2h0.75 δt ∼ 0.1h0.5 δt ∼ 0.1h0.5

Num Min Num Min Num Min Num Min Num Min Num Min∣∣∣∣pn − pn
h

∣∣∣∣
`∞(L2)

2.00 1.5 2.00 1 2.00 1 2.66 2 3.93 2 3.93 2∣∣∣∣un − un
h

∣∣∣∣
`∞(L2)

2.00 1.5 2.00 1 2.00 1 2.67 2 4.04 2 4.04 2∣∣∣∣∇(pn − pn
h

)
∣∣∣∣
`2(L2)

1.00 1 1.00 0 1.00 1 1.32 4/3 1.99 0 1.99 2∣∣∣∣∇ · (un − un
h

)
∣∣∣∣
`2(L2)

1.00 1 1.00 1 1.00 0 1.32 4/3 1.99 2 1.99 0

Table 18: Experimental δt convergence rates for OSS-BDF2 method using Q1/Q1 spatial interpolation

Variational Form I II III I II III
δt vs. h δt ∼ 0.5h δt ∼ 0.2h0.75 δt ∼ 0.1h0.5 δt ∼ 0.1h0.5

Num Min Num Min Num Min Num Min Num Min Num Min∣∣∣∣pn − pn
h

∣∣∣∣
`∞(L2)

2.00 1.5 2.00 1 2.00 1 2.66 2 3.93 2 3.93 2∣∣∣∣un − un
h

∣∣∣∣
`∞(L2)

2.00 1.5 2.00 1 2.00 1 2.67 2 4.04 2 4.04 2∣∣∣∣∇(pn − pn
h

)
∣∣∣∣
`2(L2)

1.00 1 1.00 0 1.00 1 1.32 4/3 1.99 0 1.99 2∣∣∣∣∇ · (un − un
h

)
∣∣∣∣
`2(L2)

1.00 1 1.00 1 1.00 0 1.32 4/3 1.99 2 1.99 0

Table 19: Experimental δt convergence rates for ASGS-BDF2 method using Q2/Q2 spatial interpolation

Variational Form I II III I
δt vs. h δt ∼ 0.5h δt ∼ 2h1.25

Num Min Num Min Num Min Num Min∣∣∣∣pn − pn
h

∣∣∣∣
`∞(L2)

2.17 2 2.00 2 2.13 2 2.41 2∣∣∣∣un − un
h

∣∣∣∣
`∞(L2)

2.19 2 2.00 2 2.00 2 2.34 2∣∣∣∣∇(pn − pn
h

)
∣∣∣∣
`2(L2)

1.99 1.5 1.00 1 2.00 2 1.59 1.6∣∣∣∣∇ · (un − un
h

)
∣∣∣∣
`2(L2)

1.99 1.5 2.00 2 1.00 1 1.59 1.6

Table 20: Experimental δt convergence rates for OSS-BDF2 method using Q2/Q2 spatial interpolation

Variational Form I II III I
δt vs. h δt ∼ 0.5h δt ∼ 2h1.25

Num Min Num Min Num Min Num Min∣∣∣∣pn − pn
h

∣∣∣∣
`∞(L2)

2.18 2 2.02 2 2.14 2 2.42 2∣∣∣∣un − un
h

∣∣∣∣
`∞(L2)

2.03 2 2.00 2 2.03 2 2.24 2∣∣∣∣∇(pn − pn
h

)
∣∣∣∣
`2(L2)

2.00 1.5 1.01 1 2.00 2 1.60 1.6∣∣∣∣∇ · (un − un
h

)
∣∣∣∣
`2(L2)

2.02 1.5 2.00 2 1.03 1 1.64 1.6

29



-1

-0.5

0

0.5

1

0 0.2 0.4 0.6 0.8 1

p

x

Exact

BE

BDF2

CN

Figure 19: Numerical solution using the ASGS formulation and different time marching schemes

5.2. Numerical comparison
In Section 4 we analyzed dispersion and dissipation analytically through Fourier techniques. We present

now a simple test to verify experimentally the predictions of the Fourier analysis. Let us consider a 1D
problem in Ω = (0, L) = (0, 1) and Υ = (0, 0.8), and let us solve the mixed wave equation with µp = 1,
µu = 1, zero initial conditions and boundary conditions p(0, t) = sin (ωt) and p(L, t) = 0. We compare the
solutions obtained with the fully discrete methods at t = 0.6.

For ω = 10π a quite coarse pair of mesh and time step sizes is (h, δt) = (0.05, 0.05). This allows us to
see dispersion and dissipation in the numerical solution when compared with the exact solution sin(ωt −
kx)(1−H(x− ct)), where H is the Heaviside step function. The algorithmic constant is taken as Cτ = 0.1
and the elements used are P1.

Fig. 19 shows the numerical solutions obtained with ASGS and three time marching schemes. CN is the
least dissipative while BE is the most dissipative and BDF2 is somewhere in the middle. These numerical
results are in agreement with the previous Fourier analysis. OSS behaves similarly and we do not show
those results. Figs. 20-22 compare the ASGS method with the OSS method for the same time integration
scheme, showing a very similar numerical behavior.

6. Conclusions

In this work we have presented fully discrete methods arising from the combination of spatial dis-
cretization methods, namely stabilized FE methods, and temporal discretization methods (backward Euler,
Crank-Nicolson and 2nd order backward differentiation formula) for the mixed wave equation in three differ-
ent variational forms. The stabilization parameters have been designed such that they mimic the continuous
setting.

30



-1

-0.5

0

0.5

1

0 0.2 0.4 0.6 0.8 1

p

x

Exact

ASGS

OSS

Figure 20: Comparison of ASGS and OSS using BE as time integration

-1

-0.5

0

0.5

1

0 0.2 0.4 0.6 0.8 1

p

x

Exact

ASGS

OSS

Figure 21: Comparison of ASGS and OSS using BDF2 as time integration

31



-1

-0.5

0

0.5

1

0 0.2 0.4 0.6 0.8 1

p

x

Exact

ASGS

OSS

Figure 22: Comparison of ASGS and OSS using CN as time integration

Stability and convergence has been proved for all combinations of space discretization and time dis-
cretization. Stability, dispersion and dissipation of the fully discrete methods in 1D for equal interpolation
of [p,u] has been analyzed using Fourier techniques. According to this analysis, CN performs better than
BE and BDF2. Additionally, ASGS and OSS perform similarly.

Numerical convergence tests have been performed and the results obtained in the numerical experiments
are in agreement with the theoretical predictions. Additionally, the fully discrete methods have been com-
pared qualitatively. This comparison shows the differences in dispersion and dissipation of the methods and
is in agreement with the Fourier analysis.

Acknowledgments

The work of the first author was funded by the Ministerio de Educación, Cultura y Deporte, Programa de
Formación del Profesorado Universitario (FPU), in Spain, with grant AP2010-0563, the work of the second
author by the FP7 Grant No. 308874 (project Eunison) and the ICREA Acadèmia Program from the Catalan
Government, and the work of the third author was funded by the European Research Council under the
FP7 Programme Ideas through the Starting Grant No. 258443 - COMFUS: Computational Methods for
Fusion Technology.

References

[1] J. Berland, C. Bogey, C. Bailly, Low-dissipation and low-dispersion fourth-order runge–kutta algorithm, Computers &
Fluids 35 (2006) 1459 – 1463.

[2] K. Tselios, T. Simos, Runge-Kutta methods with minimal dispersion and dissipation for problems arising from computa-
tional acoustics, Journal of Computational and Applied Mathematics 175 (2005) 173 – 181.

[3] H. Xu, P. Sagaut, Optimal low-dispersion low-dissipation LBM schemes for computational aeroacoustics, Journal of
Computational Physics 230 (2011) 5353 – 5382.

32



[4] J. Li, Z. Yang, The von neumann analysis and modified equation approach for finite difference schemes, Applied Mathe-
matics and Computation 225 (2013) 610 – 621.

[5] G. Scovazzi, J. N. Shadid, E. Love, W. J. Rider, A conservative nodal variational multiscale method for Lagrangian shock
hydrodynamics, Computer Methods in Applied Mechanics and Engineering 199 (2010) 3059–3100.

[6] J. Nordström, Conservative finite difference formulations, variable coefficients, energy estimates and artificial dissipation,
Journal of Scientific Computing 29 (2006) 375–404.

[7] P. Joly, J. Rodríguez, Optimized higher order time discretization of second order hyperbolic problems: Construction and
numerical study, Journal of Computational and Applied Mathematics 234 (2010) 1953 – 1961.

[8] Y. Sun, P. Tse, Symplectic and multisymplectic numerical methods for Maxwell’s equations, Journal of Computational
Physics 230 (2011) 2076–2094.

[9] R. Codina, Finite element approximation of the hyperbolic wave equation in mixed form, Computer Methods in Applied
Mechanics and Engineering 197 (2008) 1305 – 1322.

[10] S. Badia, R. Codina, H. Espinoza, Stability, convergence, and accuracy of stabilized finite element methods for the wave
equation in mixed form, SIAM Journal on Numerical Analysis 52 (2014) 1729–1752.

[11] H. Espinoza, R. Codina, S. Badia, A Sommerfeld non-reflecting boundary condition for the wave equation in mixed form,
Computer Methods in Applied Mechanics and Engineering 276 (2014) 122 – 148.

[12] S. Badia, R. Codina, Analysis of a stabilized finite element approximation of the transient convection-diffusion equation
using an ALE framework, SIAM Journal on Numerical Analysis 44 (2006) 2159–2197.

[13] E. Burman, M. A. Fernández, Galerkin finite element methods with symmetric pressure stabilization for the transient
Stokes equations: Stability and convergence analysis, SIAM Journal on Numerical Analysis 47 (2008) 409–439.

[14] E. Burman, Consistent SUPG-method for transient transport problems: Stability and convergence, Computer Methods
in Applied Mechanics and Engineering 199 (2010) 1114 – 1123.

[15] T. Hughes, L. Franca, G. Hulbert, A new finite element formulation for computational fluid dynamics: VIII. The Galerkin
/ least-squares method for advective-diffusive equations, Computer Methods in Applied Mechanics and Engineering 73
(1989) 173–189.

[16] J. Lopez-Marcos, Crank-Nicolson method, in: Encyclopedia of Mathematics, Springer, 2012, p. 1.
[17] G. Noh, S. Ham, K.-J. Bathe, Performance of an implicit time integration scheme in the analysis of wave propagations,

Computers & Structures 123 (2013) 93–105.
[18] A. Idesman, H. Samajder, E. Aulisa, P. Seshaiyer, Benchmark problems for wave propagation in elastic materials,

Computational Mechanics 43 (2009) 797–814.
[19] R. Codina, Analysis of a stabilized finite element approximation of the Oseen equations using orthogonal subscales,

Applied Numerical Mathematics 58 (2008) 264 – 283.
[20] T. J. Hughes, Multiscale phenomena: Green’s functions, the Dirichlet-to-Neumann formulation, subgrid scale models,

bubbles and the origins of stabilized methods, Computer Methods in Applied Mechanics and Engineering 127 (1995) 387
– 401.

[21] T. J. Hughes, G. R. Feijoo, L. Mazzei, J.-B. Quincy, The variational multiscale method-A paradigm for computational
mechanics, Computer Methods in Applied Mechanics and Engineering 166 (1998) 3 – 24.

[22] R. Codina, Stabilization of incompressibility and convection through orthogonal sub-scales in finite element methods,
Computer Methods in Applied Mechanics and Engineering 190 (2000) 1579 – 1599.

[23] R. Codina, Stabilized finite element approximation of transient incompressible flows using orthogonal subscales, Computer
Methods in Applied Mechanics and Engineering 191 (2002) 4295 – 4321.

[24] R. Codina, J. Principe, O. Guasch, S. Badia, Time dependent subscales in the stabilized finite element approximation of
incompressible flow problems, Computer Methods in Applied Mechanics and Engineering 196 (2007) 2413 – 2430.

[25] S. Badia, R. Codina, On a multiscale approach to the transient Stokes problem: Dynamic subscales and anisotropic
space-time discretization, Applied Mathematics and Computation 207 (2009) 415 – 433.

[26] S. Badia, R. Codina, Unified stabilized finite element formulations for the Stokes and the Darcy problems, SIAM Journal
on Numerical Analysis 47 (2009) 1971–2000.

[27] A.-S. Bonnet-BenDhia, P. Ciarlet, C. Zwölf, Time harmonic wave diffraction problems in materials with sign-shifting
coefficients, Journal of Computational and Applied Mathematics 234 (2010) 1912–1919.

[28] A.-S. Bonnet-BenDhia, L. Chesnel, H. Haddar, On the use of T-coercivity to study the interior transmission eigenvalue
problem, Comptes Rendus Mathematique 349 (2011) 647–651.

[29] L. Chesnel, P. Ciarlet, T-coercivity and continuous galerkin methods: application to transmission problems with sign
changing coefficients, Numerische Mathematik 124 (2013) 1–29.

[30] A.-S. Bonnet-BenDhia, L. Chesnel, P. Ciarlet, T-coercivity for the Maxwell problem with sign-changing coefficients,
Communications in Partial Differential Equations 39 (2014) 1007–1031.

[31] J.-L. Guermond, R. Pasquetti, A correction technique for the dispersive effects of mass lumping for transport problems,
Computer Methods in Applied Mechanics and Engineering 253 (2013) 186–198.

33


	Introduction
	Problem statement and numerical approximation
	Initial and boundary value problem
	Variational problem
	Stabilized finite element formulations
	Full discretization

	Stability and convergence results
	Preliminaries
	Analysis strategy
	Forms, norms and error functions
	A sample of the proofs: ASGS-BE method
	Proof of -coercivity (30)
	Proof of stability (31)
	Proof of convergence (32)

	Accuracy of the fully discrete methods

	Fourier analysis
	Time semi-discretization
	Space semi-discretization
	Space-time discretization

	Numerical results
	Convergence tests
	Numerical comparison

	Conclusions

