












































Noname manuscript No.
(will be inserted by the editor)

Lagrangian analysis of multiscale particulate flows with the particle finite
element method

Eugenio Oñate · Miguel Angel Celigueta · Salvador
Latorre · Guillermo Casas · Riccardo Rossi · Jerzy Rojek

Received: date / Accepted: date

Abstract We present a Lagrangian numerical technique for the analysis of flows incorporating physical particles
of different sizes. The numerical approach is based on the Particle Finite Element Method (PFEM) which blends
concepts from particle-based techniques and the FEM. The basis of the Lagrangian formulation for particulate
flows and the procedure for modelling the motion of small and large particles that are submerged in the fluid
are described in detail. The numerical technique for analysis of this type of multiscale particulate flows using a
stabilized mixed velocity-pressure formulation and the PFEM is also presented. Examples of application of the
PFEM to several particulate flows problems are given.

Keywords Lagrangian analysis · Multiscale particulate flows · Particle finite element method

1 Introduction

The study of fluid flows containing particles of different sizes (hereafter called particulate flows) is relevant to many
areas of engineering and applied sciences. In this work we are concerned with particulate flows containing small to
large particles. This type of flows is typical in slurry flows originated by natural hazards such as floods, tsunamis
and landslides, as well as in many processes of the bio-medical and pharmaceutical industries, in the manufacturing
industry and in the oil and gas industry (i.e. cuttings transport in boreholes), among other applications [1, 2, 6,
13, 14, 16, 21–23, 26, 47, 50, 51, 55, 61, 62].

Our interest in this work is the modelling and simulation of free surface particulate quasi-incompressible flows
containing particles of different sizes using a particular class of Lagrangian FEM termed the Particle Finite Element
Method (PFEM, www.cimne.com/pfem) [4, 5, 8, 11, 17–20, 25, 27, 28, 35, 36, 38, 40, 42–46]. The PFEM treats
the mesh nodes in the fluid and solid domains as particles which can freely move and even separate from the main
fluid domain. A mesh connects the nodes discretizing the domain where the governing equations are solved using
a stabilized FEM.

In Lagrangian analysis procedures (such as the PFEM) the motion of fluid particles is tracked during the
transient solution. Hence, the convective terms vanish in the momentum equations and no numerical stabilization
is needed. Another source of instability, however, remains in the numerical solution of Lagrangian flows, that due
to the treatment of the incompressibility constraint which requires using a stabilized numerical method.

In this work we use a stabilized Lagrangian formulation that has excellent mass preservation features. The
success of the formulation relies on the consistent derivation of a residual-based stabilized expression of the mass
balance equation using the Finite Calculus (FIC) method [29–33, 37–39].

E. Oñate, M.A. Celigueta, S. Latorre, G. Casas, R. Rossi
Centre Internacional de Mètodes Numèrics en Enginyeria (CIMNE)
Campus Norte UPC, 08034 Barcelona, Spain
Tel.: +34-93-2057016
Fax: +34-93-4016517
E-mail: onate,maceli,latorre,gcasas,rrossi@cimne.upc.edu

J. Rojek
Institute of Fundamental Technological Research
Polish Academy of Sciences
E-mail: jrojek@ippt.pan.pl



2 Eugenio Oñate et al.

The lay-out of the paper is the following. In the next section we present the basic equations for conservation of
linear momentum and mass for a quasi-incompressible particulate fluid in a Lagrangian framework. The treatment
of the different force terms for micro, macro and large particles are explained. Next we derive the stabilized FIC
form of the mass balance equation. Then, the finite element discretization using simplicial element with equal
order approximation for the velocity and the pressure is presented and the relevant matrices and vectors of the
discretized problem are given. Details of the implicit transient solution of the Lagrangian FEM equations for a
particulate flow using a Newton-Raphson type iterative scheme are presented. The basic steps of the PFEM for
solving free-surface particulate flow problems are described.

The efficiency and accuracy of the PFEM for analysis of particulate flows are verified by solving a set of free
surface and confined fluid flow problems incorporating particles of small and large sizes in two (2D) and three
(3D) dimensions. The problems include the study of soil erosion, landslide situations, tsunami and flood flows,
soil dredging problems and particle filling of fluid containers, among others. The excellent performance of the
numerical method proposed for analysis of particulate flows is highlighted.

2 Modelling of micro, macro and large particles

Figure 1 shows a domain containing a fluid and particles of different sizes. Particles will be termed microscopic,
macroscopic and large in terms of their dimensions. Microscopic and macroscopic particles will be assumed to
have a cylindrical (in 2D) or spherical (in 3D) shape. These particles are modelled as rigid objects that undergo
interaction forces computed in terms of the relative distance between particles (for microscropic particles) or via
the physical contact between a particle and its neighbors (for macroscopic particles), as in the standard discrete
element method (DEM) [2, 16, 34].

Fig. 1: Microscopic, macroscopic and large particles within a fluid domain

In this work microscopic and macroscopic particles are assumed to be spherical and submerged in the fluid
(Figure 2). Fluid-to-particle forces are transferred to the particles via appropriate drag and buoyancy functions.
Particle-to-fluid forces have equal magnitude and opposite direction as the fluid-to-particle ones and are transferred
to the fluid points as an additional body force vector in the momentum equation (Figure 3). These equations, as
well as the mass balance equations account for the percentage of particles in the fluid, similarly at it is done in
standard immersed approaches for particulate flows [53, 54, 56].

Large particles, on the other hand, can have any arbitrary shape and they can be treated as rigid or deformable
bodies. In the later case, they are discretized with the standard FEM. The forces between the fluid and the particles
and viceversa are computed via fluid-structure interaction (FSI) procedures [31, 60].

The following sections describe the basic governing equations for a Lagrangian particulate fluid and the com-
putation of the forces for microscopic, macroscopic and large particles.



Lagrangian analysis of multiscale particulate flows with the particle finite element method 3

(a) (b)

Fig. 2: (a) Particles of different sizes surrounding the nodes in a FEM mesh. (b) Representative volume for a node
(in shadowed darker colour)

Fig. 3: Immersed approach for treating the motion of physical particles in a fluid [61]

3 Basic governing equations for a Lagrangian particulate fluid [1, 22, 23, 61]

Conservation of linear momentum

ρf
Dvi
Dt

=
∂σij
∂xj

+ bi +
1

nf
f
pf
i , i, j = 1, · · · , ns in V (1)

In V is the analysis domain, ns is the number of space dimensions (ns = 3 for 3D problems), ρf is the density
of the fluid, vi and bi are the velocity and body force components along the ith cartesian axis, respectively, σij are

the fluid Cauchy stresses, f
pf
i are averaged particle-to-fluid interaction forces for which closure relations must be

provided and nf is the fluid volume fraction defined for each node j as

nfj = 1−
1

Vj

nj∑
i=1

V ij (2)

where Vj is the volume of the representative domain associated to a fluid node j, V
i
j is the volume of the ith

particle belonging to Vj and nj is the number of particles contained in Vj . Note that nfj = 1 for a representative
fluid domain containing no particles (Figure 2).

The fluid volume fraction nf in Eq.(1) is a continuous function that is interpolated from the nodal values in
the finite element fashion [22].

Summation of terms with repeated indices is assumed in Eq.(1) and in the following, unless otherwise specified.

Remark 1. The term Dvi
Dt

in Eq.(1) is the material derivative of the velocity vi. This term is typically computed
in a Lagrangian framework as

Dvi
Dt

=
n+1vi − nvi

∆t
(3a)

with
n+1vi := vi(

n+1x, n+1t) , nvi := vi(
nx, nt) (3b)

where nvi(
nx, nt) is the velocity of the material point that has the position nx at time t = nt, where x =

[x1, x2, x3]
T is the coordinates vector of a point in a fixed Cartesian system. Note that the convective term,

typical of Eulerian formulations, does not appear in the definition of the material derivative [3, 9, 60].



4 Eugenio Oñate et al.

Constitutive equations

The Cauchy stresses σij in the fluid are split in the deviatoric (sij) and pressure (p) components as

σij = sij + pδij (4)

where δij is the Kronecker delta. In this work the pressure is assumed to be positive for a tension state.
The relationship between the deviatoric stresses and the strain rates has the standard form for a Newtonian

fluid [9],

sij = 2µε
′
ij with ε

′
ij = εij −

1

3
εvδij and εv = εii (5)

In Eq.(5) µ is the viscosity, ε′ij and εv are the deviatoric and volumetric strain rates, respectively. The strain
rates εij are related to the velocities by

εij =
1

2

(
∂vi
∂xj

+
∂vj
∂xi

)
(6)

Mass conservation equation

The mass conservation equation for a particulate flow is written as

rv = 0 (7a)

with

rv :=
D(nfρf )

Dt
+ nfρfεv (7b)

Expanding the material derivative and dividing Eq.(7a) by nf the expression of rv can be rewritten as

rv :=
1

κ

Dp

Dt
+

1

nf

Dnf
Dt

+ εv (8)

where κ = ρfc
2 and c = −∂p

∂ρ
is the speed of sound in the fluid.

Remark 2. For nf = 1 (i.e. no particles are contained in the fluid) the standard momentum and mass conservation
equations for the fluid are recovered.

Boundary conditions

The boundary conditions at the Dirichlet (Γv) and Neumann (Γt) boundaries with Γ = Γv ∪ Γt are
vi − v

p
i = 0 on Γv (9)

σijnj − t
p
i = 0 on Γt i, j = 1, · · · , ns (10)

where v
p
i and t

p
i are the prescribed velocities and prescribed tractions on the Γv and Γt boundaries, respectively

and nj are the components of the unit normal vector to the boundary [3, 9, 60].
At a free surface the Neumann boundary conditions typically apply.

4 Motion of microscopic and macroscopic particles

As mentioned early, microscopic and macroscopic particles are assumed to be rigid spheres (in 3D). Their motion
follows the standard law for Lagrangian particles. For the ith spherical particle

miu̇i = Fi , Jiẇi = Ti (11)

where ui and wi are the velocity and rotation vector of the center of gravity of the particle, mi and Ji are the
mass and rotational inertia of the particle, respectively and Fi and Ti are the vectors containing the forces and
torques acting at the gravity center of the particle [34].

The forces Fi acting on the ith particle are computed as

Fi = F
w
i + F

c
i + F

fp
i (12)

Fwi , F
c
i and F

fp
i are the forces on the particle due to self-weight, contact interactions and fluid effects. These forces

are computed as follows.



Lagrangian analysis of multiscale particulate flows with the particle finite element method 5

Self-weight forces

Fwi = −ρiΩig (13)

where ρi and Ωi are the density and the volume of the ith particle, respectively and g is the gravity acceleration
vector.

Contact forces

Fci =

ni∑
j=1

Fcij (14)

where ni is the number of contact interfaces for the ith particle.

Fcij = F
ij
n + F

ij
s = F

ij
n ni + F

ij
s (15)

where Fijn and F
ij
s are the normal and tangential forces acting at the ith interface connecting particles i and j

(Figure 4). These forces are computed in terms of the relative motion of the interacting particles as in the standard
DEM [2, 16, 34].

For microscopic particles the tangential forces Fijs are neglected in Eq.(15).

Fluid-to-particle forces: F
fp
i = F

d
i + F

b
i , where F

b
i and F

d
i are, respectively, the buoyancy and drag forces on

the ith particle. These forces are computed as:

Buoyancy forces

Fbi = Ωi∇∇∇∇∇∇∇∇∇∇∇∇∇∇p (16)

Drag forces

Fdi = f
d
i n
−(χ+1)
f

where χ = χ(Re) is a coefficient that depends on the local Reynolds number for the particle Re [1, 6, 15, 22, 23]
and

fdi =
1

2
ρfAiCd‖vfi − vi‖(vfi − vi) (17)

In Eq.(17) vfi and vi are respectively the velocity of the fluid and of the particle center, Ai is the area of the
particle surface with radius ri (2πri or 4πr

2
i for a circle or a sphere, respectively) and Cd is a drag coefficient that

depends on the particle geometry and the rugosity of its surface [22, 23].

The force term f
pf
i in the r.h.s. of the momentum equations (Eq.(1)) is computed for each particle (in vector

form) as fpf = −ffp with vector ffp computed at each node in the fluid mesh from the drag forces Fdi as

f
fp
j =

1

Vj

nj∑
i=1

Fdi , j = 1, N (18)

A continuum distribution of ffp is obtained by interpolating its nodal values over each element in the FEM
fashion.

We note that the forces on the particles due to lift effects have been neglected in the present analysis. These
forces can be accounted for as explained in [22].



6 Eugenio Oñate et al.

(a) Contact between microscopic particles

Forces between two microscopic particles act in the direction of the line connecting their radii

(b) Contact “a la DEM” between macroscopic particles [34]

F
ij
n = Knu

ij
n + Cnu̇

ij
n

F
ij
s = Ksu

ij
s

u
ij
n ,u

ij
s relative displacements in the normal and

tangential directions to a contact interface

Fig. 4: Interacting forces between microscopic (a) and macroscopic (b) particles

5 Motion of large particles

As mentioned earlier, large particles may be considered as rigid or deformable bodies. In the first case the motion
follows the rules of Eq.(11) for rigid Lagrangian particles. The contact forces at the particle surface due to the
adjacent interacting particles are computed using a frictional contact interface layer between particles as in the
standard PFEM (Section 10.2).

The fluid forces on the particles are computing by integrating the tangential (viscous) and normal (pressure)
forces at the edges of the fluid elements surrounding the particles.

Large deformable particles, on the other hand, behave as deformable bodies immersed in the fluid which are
discretized via the standard FEM. Their motion can be followed using a staggered FSI scheme, or else by treating
the deformable bodies and the fluid as a single continuum with different material properties. Details of this unified
treatment of the interaction between fluids and deformable solids can be found in [12, 18, 46].



Lagrangian analysis of multiscale particulate flows with the particle finite element method 7

6 Stabilized FIC form of the mass balance equation

The modelling of incompressible fluids with a mixed finite element method using an equal order interpolation for
the velocities and the pressure requires introducing a stabilized formulation for the mass balance equation.

In our work we use a stabilized form of the mass balance equation obtained via the Finite Calculus (FIC)
approach [29–33, 37–39]. The FIC stabilized mass balance equation is written as

rv − τ
∂r̄mi
∂xi

= 0 in V (19)

where

r̄mi =
∂σij
∂xj

+ bi +
1

nf
f
pf
i (20)

is a static momentum term and τ is a stabilization parameter computed as

τ =

(
8µ

h2
+

2ρf
δ

)−1
(21)

where h is a characteristic distance of each finite element and δ is a time parameter.

The derivation of Eq.(19) for an homogeneous quasi-incompressible fluid is presented in [45].

The stabilization parameter τ is computed in practice for each element e using h = le and δ = ∆t as

τ =

(
8µ

(le)2
+

2ρ

∆t

)−1
(22)

where ∆t is the time step used for the transient solution and le is a characteristic element length computed as
le = 2(V e)1/ns where V e is the element area (for 3-noded triangles) or volume (for 4-noded tetrahedra). For fluids
with heterogeneous material properties the values of µ and ρ in Eq.(22) are computed at the element center.

7 Variational equations for the fluid

The variational form of the momentum and mass balance equations is obtained via the standard weighted residual
approach [9, 60]. The resulting integral expressions after integration by parts and some algebra are:

Momentum equations

∫
V

wiρ
Dvi
Dt

dV +

∫
V

[
δεij2µε

′
ij + δεvp

]
dV −

∫
V

wi

(
bi +

1

nf
f
pf
i

)
dV −

∫
Γt

wit
p
i dΓ = 0 (23)

Mass balance equation

∫
V

q

κ

Dp

Dt
dV −

∫
V

q

(
1

nf

Dnf
Dt

+ εv

)
dV +

∫
V

τ
∂q

∂xi

(
∂

∂xi
(2µεij) +

∂p

∂xi
+ bi

)
dV

−
∫
Γt

qτ

[
ρ
Dvn
Dt
−

2

hn
(2µ

∂vn
∂n

+ p− tn)
]
dΓ = 0

(24)

The derivation of Eqs.(23) and (24) for homogeneous fluids can be found in [45].



8 Eugenio Oñate et al.

8 FEM discretization

We discretize the analysis domain containing Np microscopic and macroscopic particles and a number of large
particles into finite elements with n nodes in the standard manner leading to a mesh with a total number of
Ne elements and N nodes. In our work we will choose simple 3-noded linear triangles (n = 3) for 2D problems
and 4-noded tetrahedra (n = 4) for 3D problems with local linear shape functions Nei defined for each node i of
element e [41, 58]. The velocity components, the weighting functions and the pressure are interpolated over the
mesh in terms of their nodal values in the same manner using the global linear shape functions Nj spanning over
the elements sharing node j (j = 1, N) [41, 58].

The finite element interpolation over the fluid domain can be written in matrix form as

v = Nvv̄ , w = Nvw̄ , p = Npp̄ , q = Npq̄ (25)

where

v̄ =




v̄1

v̄2

...
v̄N


 with v̄

i =



v̄i1
v̄i2
v̄i3


 , w̄ =




w̄1

w̄2

...
w̄N


 with w̄

i =



w̄i1
w̄i2
w̄i3


 , p̄ =



p̄1

p̄2

...
p̄N


 and q̄ =



q̄1

q̄2

...
q̄N




Nv = [N1,N2, · · · ,NN ]T , Np = [N1, N2, · · · , NN ]

(26)

with Nj = NjIns where Ins is the ns × ns unit matrix.
In Eq.(26) vectors v̄, (w̄, q̄) and p̄ contain the nodal velocities, the nodal weighting functions and the nodal

pressures for the whole mesh, respectively and the upperindex denotes the nodal value for each vector or scalar
magnitude.

Substituting the approximation (25) into the variational forms (23) and (24) gives the system of algebraic
equations for the particulate fluid in matrix form as

M0 ˙̄v + Kv̄ + Qp̄− fv = 0 (27a)

M1 ˙̄p−QT v̄ + (L + Mb)p̄− fp = 0 (27b)

The different matrices and vectors in Eqs.(27) are shown in Box 1 for 2D problems.

Remark 3. The boundary terms of vector fp can be incorporated in the matrices of Eq.(27b). This, however,
leads to a non symmetrical set of equations. For this reason we have chosen to compute these boundary terms
iteratively within the incremental solution scheme.

Remark 4. Matrix Mb in Eq.(27b) allows us to compute the pressure without the need of prescribing its value at
the free surface. This eliminates the error introduced when the pressure is prescribed to zero in free boundaries,
which may lead to considerable mass losses [20, 45].

9 Incremental solution of the discretized equations

Eqs.(27) are solved in time with an implicit Newton-Raphson type iterative scheme [3, 9, 58, 60]. The basic steps
within a time interval [n, n+ 1] are:

- Initialize variables: (n+1x1, n+1v̄1, n+1p̄1, n+1nif ,
n+1r̄1m) ≡ {nx, nv̄, np̄, nnf , nr̄m}.

- Iteration loop: k = 1, · · · , NITER.
For each iteration.



Lagrangian analysis of multiscale particulate flows with the particle finite element method 9

Me0ij =

∫
V e

ρNei N
e
j I2dV , K

e
ij =

∫
V e

BeTi DB
e
jdV , Q

e
ij =

∫
V e

BeTi mN
e
j dV

Me1ij =

∫
V e

1

κ
Nei N

e
j dV , M

e
bij

=

∫
Γet

2τ

hn
Nei N

e
j dΓ

Leij =

∫
V e

τ(∇∇∇∇∇∇∇∇∇∇∇∇∇∇TNei )∇∇∇∇∇∇∇∇∇∇∇∇∇∇N
e
j dV , f

e
vi

=

∫
V e

Nei

(
b +

1

nf
fpf
)
dV +

∫
Γet

Nei t
pdΓ

fepi =

∫
Γet

τNei

[
ρ
Dvn

Dt
−

2

hn
(2µ

∂vn

∂n
− tn)

]
dΓ −

∫
V e

(
τ∇∇∇∇∇∇∇∇∇∇∇∇∇∇TNei b−N

e
i

1

nf

Dnf

Dt

)
dV

with i, j = 1, n.

D = 2µ


 2/3 −1/3 0−1/3 2/3 0

0 0 1/2


 , Bei =




∂Nei
∂x1

0

0
∂Nei
∂x2

0 0
∂Nei
∂x2

∂Nei
∂x1




Nei = N
e
i I2 and ∇∇∇∇∇∇∇∇∇∇∇∇∇∇ =




∂

∂x1
∂

∂x2


 , m =




1
1
0




Nei : Local shape function of node i of element e [41, 45]

Box 1. Element form of the matrices and vectors in Eqs.(27) for 2D problems

Step 1. Compute the nodal velocity increments ∆v̄

From Eq.(27a), we deduce
n+1Hiv∆v̄ = −

n+1r̄km → ∆v̄ (28a)

with the momentum residual r̄m and the iteration matrix Hv given by

r̄m = M0 ˙̄v + Kv̄ + Qp̄− fv , Hv =
1

∆t
M0 + K + Kv (28b)

with

Kev =

∫
nV e

BTmθ∆tκmTBdV (28c)

Step 2. Update the velocities

Fluid nodes: n+1v̄k+1 = n+1v̄k +∆v̄ (29a)

Rigid particles:

{
n+1/2u̇j =

n−1/2u̇j +
nük+1j ∆t

u̇j =
1
mj

nFk+1j , j = 1, Np
(29b)

Step 3. Compute the nodal pressures n+1p̄k+1

From Eq.(27b) we obtain

n+1Hip
n+1p̄k+1 =

1

∆t
M1

n+1p̄i + QT n+1v̄k+1 + n+1f̄ ip →
n+1p̄k+1 (30a)

with

Hp =
1

∆t
M1 + L + Mb (30b)



10 Eugenio Oñate et al.

Step 4. Update the coordinates of the fluid nodes and particles

Fluid nodes: n+1xk+1i =
n+1xki +

1

2
(n+1v̄k+1i +

nv̄i)∆t , i = 1, N (31a)

Rigid particles:



n+1uk+1i =

nuk+1i +
n+1/2u̇k+1i ∆t

n+1xk+1i =
nxi +

n+1uk+1i , i = 1, Np

(31b)

Step 5. Compute the fluid volume fractions for each node n+1nk+1fi via Eq.(2)

Step 6. Compute forces and torques on particles: n+1Fk+1i ,
n+1Tk+1i , i = 1, Np

Step 7. Compute particle-to-fluid nodes: (n+1f
pf
i )

k+1 = −(n+1ffpi )
k+1 , i = 1, N with f

fp
i computed by Eq.(18)

Step 8. Check convergence

Verify the following conditions:

‖n+1v̄k+1 − n+1v̄k‖ ≤ ev‖nv̄‖
‖n+1p̄k+1 − n+1p̄k‖ ≤ ep‖np̄‖

(32)

where ev and ep are prescribed error norms for the nodal velocities and the nodal pressures, respectively. In the
examples solved in this work we have set ev = ep = 10

−3.

If both conditions (32) are satisfied then make n← n+ 1 and proceed to the next time step.
Otherwise, make the iteration counter k ← k + 1 and repeat Steps 1–8.

Remark 5. In Eqs.(28)–(32) n+1(·) denotes the values of a matrix or a vector computed using the nodal unknowns
at time n+ 1. In our work the derivatives and integrals in the iteration matrices Hv and Hp and the residual
vector r̄m are computed on the discretized geometry at time n (i.e. V

e = nV e) while the nodal force vectors
fv and fp are computed on the current configuration at time n + 1. This is equivalent to using an updated
Lagrangian formulation [3, 12, 44, 59].

Remark 6. The tangent “bulk” stiffness matrix Kv in the iteration matrix Hv of Eq.(28b) accounts for the
changes of the pressure due to the velocity. Including matrix Kv in Hv has proven to be essential for the fast
convergence, mass preservation and overall accuracy of the iterative solution [11, 45].

Remark 7. The parameter θ in Kv (0 < θ ≤ 1) has the role of preventing the ill-conditioning of the iteration
matrix Hv for very large values of the speed of sound in the fluid that lead to a dominant role of the terms
of the tangent bulk stiffness matrix Kv. An adequate selection of θ also improves the overall accuracy of the
numerical solution and the preservation of mass for large time steps. Details of the derivation of Eq.(28c) can
be found in [45].

Remark 8. The iteration matrix Hv in Eq.(28a) is an approximation of the exact tangent matrix in the updated
Lagrangian formulation for a quasi/fully incompressible fluid [44]. The simplified form of Hv used in this work
has yielded very good results with convergence achieved for the nodal velocities and pressure in 3–4 iterations
in all the problems analyzed.

Remark 9. The time step within a time interval [n, n + 1] has been chosen as ∆t = min
(

nlemin
|nv|max

, ∆tb

)
where

nlemin is the minimum characteristic distance of all elements in the mesh, with l
e computed as explained in

Section 6, |nv|max is the maximum value of the modulus of the velocity of all nodes in the mesh and ∆tb is the
critical time step of all nodes approaching a solid boundary [45].



Lagrangian analysis of multiscale particulate flows with the particle finite element method 11

10 About the particle finite element method (PFEM)

10.1 The basis of the PFEM

Let us consider a domain V containing fluid and solid subdomains. Each subdomain is characterized by a set of
points, hereafter termed virtual particles. The virtual particles contain all the information for defining the geometry
and the material and mechanical properties of the underlying subdomain. In the PFEM both subdomains are
modelled using an updated Lagrangian formulation [3, 44, 59].

The solution steps within a time step in the PFEM are as follows:

1. The starting point at each time step is the cloud of points C in the fluid and solid domains. For instance nC
denotes the cloud at time t = nt (Figure 5).

2. Identify the boundaries defining the analysis domain nV , as well as the subdomains in the fluid and the solid.
This is an essential step as some boundaries (such as the free surface in fluids) may be severely distorted
during the solution, including separation and re-entering of nodes. The Alpha Shape method [10] is used for
the boundary definition. Clearly, the accuracy in the reconstruction of the boundaries depends on the number
of points in the vicinity of each boundary and on the Alpha Shape parameter. In the problems solved in this
work the Alpha Shape method has been implementation as described in [17, 35].

3. Discretize the the analysis domain nV with a finite element mesh nM.We use an efficient mesh generation
scheme based on an enhanced Delaunay tesselation [17, 35].

4. Solve the Lagrangian equations of motion for the overall continuum using the standard FEM. Compute the
state variables in at the next (updated) configuration for nt + ∆t: velocities, pressure and viscous stresses in
the fluid and displacements, stresses and strains in the solid.

5. Move the mesh nodes to a new position n+1C where n+1 denotes the time nt + ∆t, in terms of the time
increment size.

6. Go back to step 1 and repeat the solution for the next time step to obtain n+2C.

n+1
x ,  

n+1
u , n+1v, n+1a ,n+1ε , n+1ε , n+1σ 

n
M → n+1 C  

n+1
V → n+1M  

n+1 
C → n+1 V  

n+1
M → n+2 C  

n
V → n M  

n 
C → n V  

Solid node 

Fixed boundary node 
Fluid node 

Initial “cloud” of nodes n C 

Domain n
 

Flying Sub-domains 

Fixed 
boundary 

n

Γ 

Mesh n
 

M 

n
x ,  

n
u , nv, na ,nε , nε , nσ 

. 
. 

Cloud  n+2 C 

Domain n+1
 Fixed 

boundary 

nΓ 

Mesh n+1
 

M 

Cloud 
n+1 

C 

. 

etc…  

Fig. 5: Sequence of steps in the PFEM to update a “cloud” of nodes representing a domain containing a fluid and
a solid part (in darker shadow) from time n (t =n t) to time n+ 2 (t =n t+ 2∆t)

Note that the key differences between the PFEM and the classical FEM are the remeshing technique and the
identification of the domain boundary at each time step.



12 Eugenio Oñate et al.

The CPU time required for meshing grows linearly with the number of nodes. As a general rule, meshing
consumes for 3D problems around 15% of the total CPU time per time step [43].

Application of the PFEM in fluid and solid mechanics and in fluid-structure interaction problems can be found
in [4, 5, 8, 11, 17–20, 25, 27, 28, 35, 36, 38, 40, 42–46], as well in www.cimne.com/pfem.

10.2 Treatment of contact conditions

Known velocities at boundaries in the PFEM are prescribed in strong form to the boundary nodes. These nodes
might belong to fixed external boundaries or to moving boundaries linked to the interacting solids. Surface tractions
are applied to the Neumann part of the boundary, as usual in the FEM.

Contact between fluid particles and fixed boundaries is accounted for by adjusting the time step so that fluid
nodes do not penetrate into the solid boundaries [45].

The contact between two large particles (and between two bodies, in general) is treated by introducing a layer
of contact elements between the two interacting particles. This contact interface layer is automatically created
during the mesh generation step by prescribing a minimum distance (hc) between two interacting particles. If the
distance exceeds the minimum value (hc) then the generated elements are treated as fluid elements. Otherwise the
elements are treated as contact elements where a relationship between the tangential and normal forces and the
corresponding displacement is introduced [35, 40, 43] (Figure 6).

(a) (b)

Fig. 6: (a) Large particles (in dark shadow) surrounded by a finite element mesh. The contact interface is shown
in lighter shadow. (b) Contact interface between two objects treated as large particles and between an object and
a wall

This algorithm allows us to model complex frictional contact conditions between two or more interacting
bodies moving in water in an a simple manner. The algorithm has been used to model frictional contact situations
between rigid and elastic solids in structural mechanics applications, such as soil/rock excavation problems [4, 5].
The frictional contact algorithm described above has been extended by Oliver et al. [27, 28] for analysis of metal
cutting and machining problems.

Figure 7 shows an example of the analysis with the PFEM of a collection of large particles submerged in a
tank containing water in sloshing motion.

10.3 Treatment of surface erosion

Prediction of bed erosion and sediment transport in open channel flows are important tasks in many areas of
river and environmental engineering. Bed erosion can lead to instabilities of the river basin slopes. It can also
undermine the foundation of bridge piles thereby favouring structural failure. Modeling of bed erosion is also



Lagrangian analysis of multiscale particulate flows with the particle finite element method 13

Fig. 7: PFEM results for the motion of large particles submerged in a tank containing water in sloshing motion

relevant for predicting the evolution of surface material dragged in earth dams in overspill situations. Bed erosion
is one of the main causes of environmental damage in floods.

Oñate et al. [36] have proposed an extension of the PFEM to model bed erosion. The erosion model is based
on the frictional work at the bed surface originated by the shear stresses in the fluid.

The algorithm for modeling the erosion of soil/rock particles at the fluid bed is briefly the following:

1. Compute at every point of the bed surface the tangential stress τ induced by the fluid motion.
2. Compute the frictional work Wf originated by the tangential stress at the bed surface.
3. The onset of erosion at a bed point occurs when nWf exceeds a critical threshold value Wc.
4. If nWf > Wc at a bed node, then the node is detached from the bed region and it is allowed to move with the

fluid flow. As a consequence, the mass of the patch of bed elements surrounding the bed node vanishes in the
bed domain and it is transferred to the adjacent fluid node. This mass is subsequently transported with the
fluid as an immersed macroscopic particle.

5. Sediment deposition can be modeled by an inverse process to that described in the previous step. Hence, a
suspended node adjacent to the bed surface with a velocity below a threshold value is attached to the bed
surface.

Figure 8 shows an schematic view of the bed erosion algorithm described. Details of the algorithm can be found
in [36].

Fig. 8: Modeling of bed erosion with the PFEM. The mass of the eroded domain is assigned to the fluid node k



14 Eugenio Oñate et al.

11 A nodal algorithm for transporting microscopic and macroscopic particles within a finite
element mesh

The fact that in the PFEM a new mesh is regenerated at each time step allows us to make microscopic and
macroscopic particles to be coincident with fluid nodes. An advantage of this procedure is that it provides an
accurate definition of the particles at each time step which is useful for FSI problems.

The algorithm to compute the position of the particles using the nodal algorithm is as follows.
At each time step nt:

1. Compute the converged value of the position of the fluid nodes (n+1xi, i = 1, · · · , N) and the particles
(n+1xj , j = 1, · · · , Np) using the algorithm of Section 9. The Np particles coinciding with Np fluid nodes
(Np ≤ N) will typically move to a different position than that of the corresponding fluid nodes (Figure 9).

2. Regenerate the mesh discretizing the fluid domain treating the position of the Np particles as fluid nodes and
ignore the fluid nodes originally coinciding with the Np particles at

n+1t.
3. Interpolate the velocity of the fluid nodes at the position of the Np particles surrounding the fluid nodes.

The algorithm is schematically described in Figure 9.
Figures 10 show an example of the application of the nodal algorithm to the study of the motion of an individual

particle within a rectangular domain filled with water. The correct end velocity for the individual particle is
obtained as shown in Figure 10c. Figures 11–13 show other examples of application of the nodal algorithm to the
motion of macro-particles in water containers.

Other examples of application of this algorithm are shown in the next section.

Fig. 9: Nodal algorithm for tracking the motion of particles submerged in a fluid. (a) Particle i is coincident with
a fluid node. (b) Update the position of the particle and the adjacent nodes. (c) Regeneration of the fluid mesh
consistent with the new particle position

12 Examples

We present the study of a several problems involving the transport of macroscopic and large particles in fluid
flows. The problems are schematic representations of particulate flows occurring in practical problems of civil and
environmental engineering and industrial problems.

Most problems studied have been solved with the PFEM using the nodal algorithm for the transport of
macroscopic particles described in the previous section. An exception are the problems in Section 12.6 dealing



Lagrangian analysis of multiscale particulate flows with the particle finite element method 15

(a) (b)

(c)

 

0

0,02

0,04

0,06

0,08

0,1

0,12

0,14

0,16

0 0,5 1 1,5 2 2,5

V
e

lo
c

it
y
 (

m
/s

) 

Time (s) 

Velocity of a falling particle 

PFEM simulation
Analytical…

particle diameter = 0.002 m 
particle density = 3000 Kg/m3 
fluid density = 1000 Kg/m3 
fluid viscosity = 0.001 Pa · s 

Fig. 10: Cylindrical particles falling in a water container. 2D PFEM solution using the nodal algorithm for tracking
the particle motion. (a) Mesh and particle at a certain instant. (b) Contours of the vertical velocity module. (c)
Evolution of the vertical velocity of the particle until a steady state solution is found [6, 15]

(a) (b)

Fig. 11: Motion of ascending and descending particles of different density in a fluid domain. PFEM results using
the nodal algorithm for tracking the particles motion

with the vertical transport of spherical particles in a cylinder where the standard immersed approach for the
transport macroparticles described in Sections 1–4 was used and the fluid equations were solved with an Eulerian
flow solver implemented in the Kratos open-source software platform of CIMNE [24].

12.1 Erosion of a slope adjacent to the shore due to sea waves

Figure 14 shows a representative example of the progressive erosion of a soil mass adjacent to the shore due to sea
waves and the subsequent falling into the sea of a 2D object representing the section of a lorry. The object has
been modeled as a rigid solid. Note that the eroded soil particles accumulate at the sea bottom.

This example, although still quite simple and schematic, evidences the possibility of the PFEM for modeling
FSSI problems involving soil erosion, free surface waves and rigid/deformable structures.



16 Eugenio Oñate et al.

Fig. 12: Motion of three macroscopic particles in a water sloshing problem within a tank. PFEM results obtained
using the nodal algorithm for particle tracking

Fig. 13: PFEM analysis of the penetration of a collection of spherical (macroscopic) particles into a water container

12.2 Landslide falling on houses

Figure 15 shows two instants of the 2D simulation with PFEM of the motion of a collection of macroscopic particles
as they slide over an inclined wall and fall into a water container.

The PFEM is particularly suited for the modelling and simulation of landslides and their effect in the surround-
ing structures. Figure 16 shows an schematic 2D simulation of a landslide falling on two adjacent constructions.
The landslide material has been assumed to behave as a pure viscoplastic material modelled as a non-Newtonian
viscous incompressible fluid [57]. Other applications of the PFEM to the modelling of landslides can be found in
[8, 49].



Lagrangian analysis of multiscale particulate flows with the particle finite element method 17

(a) (b) (c) (d)

Fig. 14: Falling of a lorry into the sea by erosion of the underlying soil mass due to the action of waves

Fig. 15: Sliding of macroscopic particles over an inclined wall entering a container with water

(a) (b)

Fig. 16: 3D PFEM simulation of a landslide falling on four houses

12.3 Dragging of rocks by a water stream

Figure 17 shows the dragging of a collection of rocks modelled as large rigid particles of arbitrary shape by the
action of a water stream. The particles move due to the action of the water forces on the particles computed by
integrating the pressure and the viscous stresses in the elements surrounding each particle.

12.4 Suction of cohesive material submerged in water

Figures 18 and 19 show two examples of the detachment, suction and transport of particles of a cohesive material
submerged on water. Figure 18 shows how the particles detatch from the cohesive soil bed and are transported
within the suctioning tube (modelled as a 2D problem). The last picture shows the erosion in the soil as the
mixture of water and eroded particles falls down from within the tube and hits the soil surface due to a stop in
the suction pressure.

Figure 19 shows a similar 3D problem. The suction in the tube erodes the surface of the soil bed in the right
hand container. The mixture of water and eroded particles is transported to the adjacent containers.



18 Eugenio Oñate et al.

(a) (b)

(c) (d)

Fig. 17: 3D PFEM results for the dragging of a collection of large rocks by a water stream

Fig. 18: 2D PFEM analysis of the detachment and suction of cohesive material submerged in water. The last
picture shows the erosion of the bed material after the impact of the mixture of water and eroded particles falling
from within the tube

12.5 Filling of a water container with particles

Figure 20 shows a 3D example of the filling of a cylindrical container with water containing macroscopic spherical
particles. Water is allowed to exit the cylinder by a lateral hole while particles enter from two other holes at different
height and fall down by gravity until they progressively fill the cylinder. The figures show different instants of the
filling process.



Lagrangian analysis of multiscale particulate flows with the particle finite element method 19

(a) (b)

(c) (d)

Fig. 19: 3D PFEM simulation of the detachment, suction and transport of submerged cohesive material from one
recipient to another

Fig. 20: Filling of a container by injecting water containing macroscopic particles from two holes. Water is allowed
to exit through a third hole at the upper right hand side of the cylinder. 3D PFEM results at four instants

12.6 Transport of spherical particles in a tube filled with water

The example in Figure 21 models the vertical transport of some 120.000 spherical particles to the surface of a tube
filled with water and the subsequent deposition of the particles on the free water surface at the top of the tube.
Particles move upwards within the tube due to a fluid velocity of 1 m/s. The average size of the particles radius
is 2 mm and their density is 2300 Kg/m3. Particles move vertically until they reach the top of the fluid domain
and accumulate there due to the combined effect of their weight and the effect of the interaction force from the
fluid. Figure 21 shows two instants of the particles ascending process. The accumulation of particles in the water
free surface at the top of the tube is clearly seen.

Figure 22 shows the interaction of eigth jets of ascending air bubbles with 200.000 spherical solid particles that
fall down within a cylinder filled with water.



20 Eugenio Oñate et al.

Fig. 21: Transport of spherical macroparticles up to the free surface of a tube filled with water. Particles move up
with a prescribed velocity until they accumulate on the free surface. Results obtained with a coupled DEM-Eulerian
CFD code [24]

(a) (b) (c) (d)

Fig. 22: Interaction of eight jets of ascending air bubbles with a thick layer of 200.000 spherical particles that fall
down within a cylinder filled with water. Numerical results obtained with a coupled DEM-Eulerian CFD code [24]

12.7 Dragging of large objects and small particles in a tsunami type flow

The last example is the dragging of cars, barrels and debris (modelled as macroscopic particles) by a water stream
that flows over a vertical wall. The problem represents an schematic study of a real situation corresponding to the
tsunami in Fukushima (Japan) on March 2011 (Figure 23). Figures 24 show two snapshots of the PFEM solution
of this complex problem.

Fig. 23: Dragging of cars and large and small objects in the Fukushima tsunami (Japan)



Lagrangian analysis of multiscale particulate flows with the particle finite element method 21

(a)

(b)

Fig. 24: Dragging of large objects and macroscopic particles in a tsunami type flow passing over a vertical wall.
3D PFEM results

13 Concluding remarks

We have presented a Lagrangian numerical technique for analysis of flows incorporating physical particles of
different sizes. The numerical approach is based on the Particle Finite Element Method (PFEM) and a stabilized
Lagrangian mixed velocity-pressure formulation. The examples presented in the paper evidence the possibilities of
the PFEM for analysis of practical multiscale particulate flows in industrial and environmental problems.

Acknowledgements

This research was supported by the Advanced Grant project SAFECON of the European Research Council.

References

1. Anderson T, Jackson R. Fluid mechanical description of fluidized beds: equation of motion. Industrial &
Engineering Chemical Fundamentals, 6(4):527–539

2. Avci B, Wriggers P, (2012) A DEM-FEM coupling approach for the direct numerical simulation of 3D partic-
ulate flows. Journal of Applied Mechanics, 79(1), 7 pages

3. T. Belytschko, W.K. Liu, B. Moran, Non linear finite element for continua and structures, 2d Edition, Wiley,
2013.

4. Carbonell JM, Oñate E, Suárez B (2010) Modeling of ground excavation with the Particle Finite Element
Method. Journal of Engineering Mechanics (ASCE) 136(4):455–463

5. Carbonell JM, Oñate E, Suárez B (2013) Modelling of tunnelling processes and cutting tool wear with the
Particle Finite Element Method (PFEM). Accepted in Comput. Mech. (2013) DOI:10.1007/s00466-013-0835-x

6. Clift R, Grace JR, Weber ME (1978) Bubbles, drops and particles. Academic Press, New York
7. Coussy O (2004) Poromechanics. Wiley
8. Cremonesi M, Frangi A, Perego U (2011) A Lagrangian finite element approach for the simulation of water-

waves induced by landslides. Computers & Structures 89:1086–1093
9. Donea J, Huerta A (2003) Finite element method for flow problems. J. Wiley



22 Eugenio Oñate et al.

10. Edelsbrunner H, Mucke EP (1999) Three dimensional alpha shapes. ACM Trans. Graphics 13:43–72
11. Franci A, Oñate E, Carbonell JM (2013) On the effect of the tangent bulk stiffness matrix in the analysis of

free surface Lagrangian flows using PFEM. Research Report CIMNE PI402
12. Franci A, Oñate E, Carbonell JM (2014b) Unified updated Lagrangian formulation for fluid-structure inter-

action problems. Research Report CIMNE PI404
13. Gidaspow D (1994) Multiphase flow and fluidization. Continuum and Kinetic Theory Description, Academic

Press, 467 pages
14. Healy DP, Young DB (2005) Full Lagrangian method for calculating particle concentration field in dilute gas-

particle flows. Proc. Roy. Soc., London A: Mathematical, Physical and Engineering Sciences, 461(205a):2197–
2225

15. Heider A, Levespiel O (1989) Drag coefficient and terminal velocity of spherical and nonspherical particles.
Powder Technol. 58:63–70

16. Hilton J, Cleary P (2013) Dust modelling using a combined CFD and discrete element formulation. Int. J.
Num. Meth. Fluids, 72(5):528-549

17. Idelsohn SR, Oñate E, Del Pin F (2004) The particle finite element method: a powerful tool to solve incom-
pressible flows with free-surfaces and breaking waves. Int. Journal for Numerical Methods in Engineering,
61(7):964–989

18. Idelsohn SR, Marti J, Limache A, Oñate E (2008) Unified Lagrangian formulation for elastic solids and
incompressible fluids: Application to fluid-structure interaction problems via the PFEM. Comput Methods
Appl Mech Engrg. 197:1762–1776

19. Idelsohn SR, Mier-Torrecilla M, Oñate E (2009) Multi-fluid flows with the Particle Finite Element Method.
Comput Methods Appl Mech Engrg. 198:2750–2767

20. Idelsohn SR, Oñate E (2010) The challenge of mass conservation in the solution of free-surface flows with the
fractional-step method: Problems and solutions. Int. J. Numer. Meth. Biomed. Engng. 26:1313-1330

21. Jajcevic D, Siegmann E, Radeke C, Khinast JG (2013) Large-scale CFD-DEM simulations of fluidized granular
systems. Chemical Engineering Science, 98:298–310

22. Jackson R (2000), The dynamics of fluidized particles. Cambridge Monographs on Mechanics, Cambridge Univ.
Press

23. Kafui DK, Thornton C, Adams MJ (2002) Discrete particle-continuum fluid modelling of gas-solid fluidised
beds. Chemical Engng. Science, 57(13):2395–2410

24. Kratos (2014) Open source software platform for multiphysics computations. CIMNE, Barcelona,
www.cimne.com/kratos

25. Larese A, Rossi R, Oñate E, Idelsohn SR (2008) Validation of the Particle Finite Element Method (PFEM)
for simulation of free surface flows. Engineering Computations 25(4):385–425

26. Liu SH, Sun DA (2002). Simulating the collapse of unsaturated soil by DEM. Int. J. Num. Anal. Meth. in
Geomechanics, 26:633646

27. Oliver X, Cante JC, Weyler R, González C, Hernández J (2007) Particle finite element methods in solid
mechanics problems. In: Oñate E, Owen R (Eds) Computational Plasticity. Springer, Berlin, pp 87–103

28. Oliver X, Hartmann S, Cante JC, Wyler R, Hernández J (2009) A contact domain method for large deformation
frictional contact problems. Part 1: theoretical basis. Comput Methods Appl Mech Eng 198:2591–2606

29. Oñate E (1998) Derivation of stabilized equations for advective-diffusive transport and fluid flow problems.
Comput. Meth. Appl. Mech. Engng. 151:233–267

30. Oñate E (2000) A stabilized finite element method for incompressible viscous flows using a finite increment
calculus formulation. Comput Methods Appl Mech Engrg. 182(1–2):355–370

31. Oñate E, Garćıa J (2001) A finite element method for fluid-structure interaction with surface waves using a
finite calculus formulation. Comput. Meth. Appl. Mech. Engrg. 191:635–660

32. Oñate E (2003) Multiscale computational analysis in mechanics using finite calculus: an introduction. Comput.
Meth. Appl. Mech. Engrg. 192(28-30):3043–3059

33. Oñate E (2004) Possibilities of finite calculus in computational mechanics. Int. J. Num. Meth. Engng.
60(1):255–281

34. Oñate E, Rojek J, (2004b) Combination of discrete element and finite element methods for dynamic analysis
of geomechanics problems. Comput. Meth. Appl. Mech. Engrg. 193:3087–3128

35. Oñate E, Idelsohn SR, Del Pin F, Aubry R (2004c) The particle finite element method. An overview. Int. J.
Comput. Methods 1(2):267–307



Lagrangian analysis of multiscale particulate flows with the particle finite element method 23

36. Oñate E, Celigueta MA, Idelsohn SR (2006a) Modeling bed erosion in free surface flows by the Particle Finite
Element Method, Acta Geotechnia 1(4):237–252

37. Oñate E, Valls A, Garćıa J (2006b) FIC/FEM formulation with matrix stabilizing terms for incompressible
flows at low and high Reynold’s numbers. Computational Mechanics 38 (4-5):440–455

38. Oñate E, Garćıa J, Idelsohn SR, Del Pin F (2006c) FIC formulations for finite element analysis of incompress-
ible flows. Eulerian, ALE and Lagrangian approaches. Comput. Meth. Appl. Mech. Engng. 195(23-24):3001–
3037

39. Oñate E, Valls A, Garćıa J (2007) Computation of turbulent flows using a finite calculus-finite element for-
mulation. Int. J. Numer. Meth. Engng. 54:609–637

40. Oñate E, Idelsohn SR, Celigueta MA, Rossi R (2008) Advances in the particle finite element method for
the analysis of fluid-multibody interaction and bed erosion in free surface flows. Comput. Meth. Appl. Mech.
Engng. 197(19-20):1777–1800

41. Oñate E (2009), Structural analysis with the finite element method. Linear statics. Volume 1. Basis and Solids.
CIMNE-Springer

42. Oñate E, Rossi R, Idelsohn SR, Butler K (2010) Melting and spread of polymers in fire with the particle finite
element method. Int. J. Numerical Methods in Engineering, 81(8):1046–1072

43. Oñate E, Celigueta MA, Idelsohn SR, Salazar F, Suárez B (2011) Possibilities of the particle finite element
method for fluid-soil-structure interaction problems. Computational Mechanics, 48(3):307–318.

44. Oñate E, Carbonell JM (2013) Updated Lagrangian finite element formulation for quasi and fully incompress-
ible fluids. Research Report PI393, CIMNE. Submitted to Comput. Mechanics

45. Oñate E, Franci A, Carbonell JM (2014) Lagrangian formulation for finite element analysis of quasi-
incompressible fluids with reduced mass losses. Accepted for publication in Int. J. Num. Meth. in Fluids

46. Oñate E, Franci A, Carbonell JM (2014b) A Particle Finite Element Method (PFEM) for analysis of industrial
forming processes. Accepted for publication in Comput. Mechanics

47. Patankar NA, Joseph DD (2001) Lagrangian numerical simulation of particulate flows. Int. J. Multiphase
Flow, 27:1685–1706

48. Ryzhakov P, Oñate E, Rossi R, Idelsohn SR (2012) Improving mass conservation in simulation of incompressible
flows. Int. J. Numer. Meth. Engng. 90(12):1435–1451

49. Salazar F, Oñate E, Morán R (2012) Modelación numérica del deslizamiento de ladeu en embalses mediante
el método de part́ıculos y elementos finitos (PFEM). Rev. Int. Meth. Num. Cal. Dis. Ing., 28(2):112–123

50. Shamy UE, Zeghal M (2005) Coupled continuum–discrete model for saturated granular soils. J. Engineering
Mechanics (ASCE), 131(4):413-426

51. Sommerfeld M, van Wachen B, Oliemans R (Eds) (2008) Best practice guideliens for computational fluid
dynamics of dispersed multiphase flows. European Research Community on Flow, Turbulence and Combustion
(ERCOFTAC), Imperial College London.

52. Tang B, Li JF, Wang TS (2009) Some improvements on free surface simulation by the particle finite element
method. Int. J. Num. Methods in Fluids, 60(9):1032-1054

53. van Wachen B, Oliveira ES (2010) An immersed boundary method for interacting particles. ERCOFTAC
Bulletin 82, 17–22 March 2010

54. Wang X, Zhang LT, Liu WK (2009) On computational issues of the immersed finite element method. J. Comp.
Physics, 228:2535–2551

55. Li X, Chu X, Sheng DC (2007) A saturated discrete particle model and characteristic-based SPH method in
granular materials. Int. J. Numer. Meth. Engng., 72:858–882

56. Zhang LT, Gerstenberg A, Wang X, Liu WK (2004) Immersed finite element method, 193:2051–2067
57. Zienkiewicz OC, Jain PC, Oñate E (1978) Flow of solids during forming and extrusion: some aspects of

numerical solutions. Int. J. Solids Struct., 14:15–38
58. Zienkiewicz OC, Taylor RL, Zhu JZ (2005) The finite element method. The basis. 6th Ed., Elsevier
59. Zienkiewicz OC, Taylor RL (2005) The finite element method for solid and structural mechanics. 6th Ed.,

Elsevier
60. Zienkiewicz OC, Taylor RL, Nithiarasu P (2005) The finite element method for fluid dynamics. 6th Ed.,

Elsevier
61. Zohdi T (2007) An introduction to modelling and simulation of particulate flows. SIAM, Computational Science

and Engineering
62. Zohdi T, Wriggers P (2007) Computation of strongly coupled multifield interaction in particle-fluid systems.

Comput. Meth. Appl. Mech. Engng., 196:3927–3950


