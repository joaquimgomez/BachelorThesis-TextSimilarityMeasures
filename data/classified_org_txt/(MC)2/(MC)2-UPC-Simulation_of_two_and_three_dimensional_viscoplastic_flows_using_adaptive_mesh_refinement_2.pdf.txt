

























































Simulation of two and three-dimensional

viscoplastic flows using adaptive mesh refinement

Jordi Cotela-Dalmau1,2, Riccardo Rossi1,2, Antonia Larese1,2
1 CIMNE - Centre Internacional de Metodes Numerics en Enginyeria,

Campus Nord UPC, c/Gran Capità s.n. 08034 Barcelona, Spain.
2 Universitat Politècnica de Catalunya,

UPC Barcelona Tech, c/Gran Capità s.n. 08034 Barcelona, Spain.

Abstract

This paper presents a finite element solver for the simulation of steady
non-Newtonian flow problems, using a regularized Bingham model, with
adaptive mesh refinement capabilities.

The solver is based on a stabilized formulation derived from the vari-
ational multiscale (VMS) framework. This choice allows the introduction
of an a posteriori error indicator based on the small scale part of the solu-
tion, which is used to drive a mesh refinement procedure based on element
subdivision.

This approach applied to the solution of a series of benchmark exam-
ples, which allow us to validate the formulation and assess its capabilities
to model 2D and 3D non-Newtonian flows.

Keywords

Adaptive mesh refinement; Bingham model; Viscoplastic fluids; Variational mul-
tiscale stabilization;

1 Introduction

The choice of a computational mesh is a crucial aspect of practical finite element
analysis. The use of unstructured meshes allows us to obtain a higher level of
detail for parts of the domain where the solution changes rapidly, or around
regions of interest. At the same time, a coarser resolution can be used where
the solution is smooth to reduce the computational requirements. Clearly, the
use of a single static mesh limits the advantages of the approach for evolving
solutions, and requires the analyst to adequately design the mesh, guided by an
intuition on the expected behavior. Indeed a good choice is often not possible a
priori, especially when studying complex geometries. This represents a partic-
ularly problematic issue in the case of viscoplastic fluids, where adequate mesh
resolution is crucial to properly describe the flow and, in particular, to capture
the transition between yielded and unyielded regions.

For complex problems or in cases where it is difficult to draw from previous
experience, dynamically adapting the mesh may be the only viable method
to reduce computational time. For this reason, a variety of adaptive mesh

1



refinement (AMR) techniques have been developed over the years to adjust the
computational mesh in response to the obtained solution (see for example [1]
or [2]).

An AMR technique typically involves two components: an indicator that
can be used to identify regions where the obtained solution has a large error
and a refinement strategy to locally modify mesh resolution in response to a
large detected error. Both aspects of the problem are addressed in turn in the
current paper to provide a picture of our proposed technique.

An extensive literature exists on error estimation techniques, starting from
the pioneering work of Babuška and Rheinboldt [3]. One of the most widespread
options is the use of a posteriori error estimation techniques to quantify the
error in the solution (as for example [4, 5, 2, 6, 7]). The general idea in such
approaches is to use the computed solution to assess its own accuracy.

The use of AMR techniques for viscoplastic flows remains comparatively un-
explored. In the specific case of Bingham fluids, previous studies have applied
adaptive remeshing techniques to plane and axisymmetric flows [8, 9, 10]. The
same approach has been extended to three-dimensional free surface flows [11],
described using a shallow water approximation. In these cases, refinement is
driven by an indicator based on the dissipative energy in the solution, which
is larger in areas with high velocity gradients, and the mesh is completely re-
generated using a size distribution obtained from the values of the indicator.
Another application of AMR techniques for viscoplastic materials can be found
in forging processes [12]. In this reference, mesh refinement was used to preserve
mesh quality in the simulation of metal casting.

In the current paper we explore the use of an error indicator motivated
by variational multiscale (VMS) stabilization techniques [13, 14], which pro-
vide the basis for the underlying finite element formulation. The forerunner of
the technique employed here was originally presented for convection-diffusion
problems [15] and more recently has been extended to the Navier-Stokes equa-
tions [16, 17] and used to solve incompressible Newtonian flow problems. The
key idea for the proposed error indicator is actually rather simple: VMS solvers
are based on the construction of a model for the fine scale variables (representing
the part of the solution that is not resolved by the mesh) in terms of the large
scale ones (the part that can be described using the finite element mesh). Since
the small scale model is designed to provide consistent solutions, it should tend
to zero as the mesh is refined. Thus, the small scale can be used to construct
an error indicator: if, for a given element or patch of elements, the magnitude
of the small scale solution is large, the mesh is likely to be relatively coarse for
that region of the model. This provides an indicator that can be used to identify
areas in need of a refinement.

Such approach is closely related to the solver technology being employed.
Crucially, it can be derived naturally from any VMS formulation once it has
been defined for the problem at hand. As such, it can be applied to the case
of nonlinear rheologic behavior, which is the focus in the current work, by
extending the mentioned Newtonian version of the method. To our knowledge
the approach we describe has not been applied before in this context.

Once we are able to identify areas with large error within the domain, we
can modify the computational mesh to increase the overall accuracy. Many
different grid modification strategies have been proposed since the late eight-
ies [18, 19, 20], involving for example local mesh modifications [21], movement

2



of mesh nodes through the solution of an auxiliary elasticity problem [22], mesh
morphing techniques [23] or edge stretching [24]. Many of such techniques re-
quire the user to specify a nodal or edge-based refinement target, which involves
obtaining a measure of the error (or its indicator) at the nodes or edges of the
mesh to be improved.

On the contrary the technique we employ here is based on a elemental (rather
than nodal) refinement strategy [16, 25]. The approach followed is thus that
the error indicator signals the list of elements to be refined. Such elements are
subdivided and their neighbor modified so that mesh conformity is preserved.
The approach thus represents a good match for the chosen error indicator, which
can be evaluated on each element independently. The proposed procedure was
originally developed for refinement in a distributed memory context [16] and
allows MPI-parallel refinement.

The present paper is organized as follows: In Section 2, the VMS finite ele-
ment formulation used for the solution of the stationary Bingham flow problem
is introduced. Section 3 describes the mesh refinement algorithm and the error
indicator used to identify the regions that will be refined. We present the results
of the simulation of several two and three-dimensional Bingham flow test cases
in Section 4, which allow us to evaluate the capabilities of the present approach.
Finally, some concluding remarks are given in Section 5.

2 Non-Newtonian flow solver

2.1 Governing equations

The problems considered in the present work can be described using the sta-
tionary form of the Navier-Stokes equations. Given a domain Ω ⊂ Rd (with
d = 2, 3) containing a fluid with density ρ and external forces f acting on it, the
relationship between the fluid stresses σ and the velocities u is given by

ρu · ∇u−∇ · σ = f in Ω (1)
∇ · u = 0 in Ω. (2)

Eqs. (1) and (2) are combined with conditions over the boundary of the domain
Ω, which is defined as ∂Ω = ΓD ∪ΓN , where ΓD and ΓN represent the Dirichlet
and Neumann parts of the boundary, respectively. Such boundary conditions
can be expressed as

u = u0 on ΓD (3)

σ · n = t on ΓN , (4)

where u0 is the imposed velocity on the Dirichlet boundary ΓD, n is the outwards
unit normal on the Neumann boundary ΓN and t is the imposed traction.

The stress tensor in Eq. (1) can be decomposed into a volumetric part, which
depends on the pressure p, and the deviatoric stress tensor, τ , as

σ = −p I + τ (5)

where I is the second order identity tensor.
A constitutive model is required to close the formulation, giving an expres-

sion for the deviatoric stresses τ . The behavior of a broad class of fluids can be

3



described using a generalized Newtonian law with apparent viscosity η, given
by

τ = 2ηS (6)

where the apparent viscosity is, in general, variable and depends on the charac-
teristics of the flow, and S is the strain rate tensor, defined as

S = ∇su = 1
2

(
∇u + (∇u)T

)
. (7)

Since stress and strain rate are tensorial quantities, we introduce the follow-
ing invariants to measure their magnitude

γ̇ =
√

2 S : S τ =

√
1

2
τ : τ , (8)

which allow us to use the constitutive relation of Eq. (6) in a multi-dimensional
setting.

In the present work we use a regularized Bingham model to describe the flow.
A Bingham fluid [26, 27] is a material that resists shear stresses lower than a
threshold value, known as the yield stress τ0, and flows with a constant viscosity
µp, called plastic viscosity, when larger shear stresses are applied. This behavior
can be represented using the notation of Eq. (6) if the apparent viscosity is
defined as

η →∞ if τ < τ0
η = µp +

τ0
γ̇

if τ ≥ τ0.
(9)

Unfortunately, the discontinuous nature of the Bingham model introduces
numerical difficulties, as the apparent viscosity η is infinite for strain rates lower
than the yield stress. Two possible approaches have been explored in the litera-
ture to address this issue. The first is to reformulate the problem as a variational
inequality [28, 29, 30] and to use either operator splitting methods [31, 32, 33, 34]
or an augmented Lagrangian approach [35, 36] to solve the problem. The second
is the introduction of a regularized constitutive relation [37, 38, 39, 40, 41]. We
use the latter technique, replacing Eq. (9) with a regularized expression that is
better suited to numerical simulation. We have adopted the expression proposed
by Papanastasiou [39], given by

η = µp +
τ0
γ̇

(
1− e−mγ̇

)
, (10)

where m is a regularization coefficient with dimensions of time. The relationship
between the two laws is shown in Fig. 1, where it can be seen that the regularized
law of Eq. (10), represented by the dotted lines, tends to the ideal model of
Eq. (9) as the value of the regularization coefficient m is increased.

It must be remarked that the use of a regularized model introduces an error in
the solution, which may be significant in determining, for example, if a particular
problem is stable (the solution is static) or yields, developing a flowing solution.
This was quantified in [42], which addresses the Papanastasiou regularization,
among others. This effect is magnified for small values of the regularization
coefficient m and is at odds with the fact that large values of m result in a
problem that is harder to solve numerically. As such, one must be careful in
choosing a value for m to avoid compromising the obtained solution.

4



Strain rate γ̇

τ0
S
tr
e
s
s
τ

Increasing m
Regularized

Ideal

µp

Figure 1: Bingham model.

2.2 Weak formulation

We use the standard Galerkin approach to obtain a variational form of our
problem, multiplying Eqs. (1) and (2) by test functions w, q and integrating
over the simulation domain Ω. If we integrate by parts the terms corresponding
to stresses, we can incorporate the Neumann boundary condition of Eq. (4) in
the expression, obtaining

∫

Ω

w ρu · ∇u dΩ +
∫

Ω

2η∇sw : ∇su dΩ−
∫

Ω

∇ ·w p dΩ =
∫

Ω

wf dΩ +

∫

ΓN

wt dΓ

(11)
∫

Ω

q∇ · u dΩ =0. (12)

To ensure that the problem given by Eqs. (11) and (12) is well-posed, we
need to specify appropriate function spaces for the unknowns u, p and test
functions w, q to guarantee that all integrals are bounded. In the case of
velocities, we require that both the functions and their spatial derivatives are
square-integrable, that is, u ∈ VD ⊂ [H1(Ω)]d. Furthermore, we require that all
functions in VD verify the Dirichlet boundary conditions of the problem, given
by Eq. (3). A similar requirement is made on the momentum test functions
w, which have to be zero on the Dirichlet boundary ΓD. This is denoted as
w ∈ V0 ⊂ [H1(Ω)]d. In the case of the pressure and the continuity equation test
function q, it is enough to ensure that they are square-integrable in the domain,
which is denoted by p, q ∈ Q ⊂ L2(Ω).

The finite element solution of the problem defined by Eqs. (11) and (12)
is known to suffer from stability issues that, in particular, preclude the use of
equal-order interpolations for velocity and pressure. To solve this problem we
introduce a VMS formulation [13, 14].

Denoting the finite element discretization of the problem domain as Ωh =⋃
e Ωe, where Ωe represents the subdomain corresponding to element e, we in-

troduce the discrete solution of the problem uh ∈ Vh,ph ∈ Qh, where Vh ⊂ VD
and Qh ⊂ Q are the discrete spaces defined by the finite element interpolation.
The VMS approach is based on decomposing the problem variables into a large

5



scale part, identified with the finite element solution, and a small scale part

u = uh + ũ p = ph + p̃, (13)

where the small scale variables ũ, p̃ represent the part of the continuous solution
that is not resolved by the finite element approximation.

The scale separation of Eq. (13) can be introduced in Eqs. (11) and (12) to
obtain the VMS formulation of the problem. Using test functions belonging to
the discrete spaces wh ∈ Vh0 ⊂ V0 and qh ∈ Qh, we obtain

∫

Ω

wh ρuh · ∇uh dΩ +
∫

Ω

2η∇swh : ∇suh dΩ

−
∫

Ω

∇ ·wh ph dΩ−
∑

e

∫

Ωe

ρuh · ∇wh ũ dΩ

−
∑

e

∫

Ωe

∇ · (2η∇swh) ũ dΩ−
∑

e

∫

Ωe

∇ ·wh p̃ dΩ =
∫

Ω

whf dΩ +

∫

ΓN

wht dΓ

(14)
∫

Ω

qh∇ · u =
∑

e

∫

Ωe

∇qhũ dΩ. (15)

In deriving Eqs. (14) and (15) from Eqs. (11) and (12), we have integrated
by parts on elemental subdomains Ωe for several terms involving the small scale
variables ũ and p̃. This allows us to obtain an expression that depends on small
scale values but not on small scale spatial derivatives. Note that, to do so,
we have neglected terms involving elemental boundary integrals. This can be
understood as considering that the small scale functions vanish on the elemental
boundaries (see for example [43] for a detailed derivation).

A model for the small scale part of the solution is required to close the
formulation. A possibility is to use algebraic sub-grid scales (ASGS), defined
in [44]. In ASGS, the small scales are considered proportional to the residual
of the strong form of the momentum and continuity equations, when they are
evaluated using the discrete solution. This results in the following expression
for the small scales:

ũ = τ1R
m (uh, ph) = τ1 (f − ρuh · ∇uh +∇ · 2η∇suh −∇ph) (16)

p̃ = τ2R
c (uh) = τ2 (−∇ · uh) , (17)

where Rm (uh, ph) and R
c (uh) correspond to the residual forms of Eqs. (1)

and (2) evaluated using the finite element solution uh, ph, and τ1 and τ2 are
scalar stabilization parameters. The value of τ1 and τ2 is chosen following [45,
46], that is, we take the parameters originally designed for the Newtonian version
of the method [44] and replace the Newtonian viscosity by the apparent viscosity
η. This can be seen as equivalent to neglecting the dependence of η on the
velocity to design the stabilization parameters. Following this approach, the
stabilization parameters are defined in terms of a characteristic element length
h as

τ1 =

(
2ρ ‖uh‖

h
+

4η

h2

)−1
τ2 = η +

ρ ‖uh‖h
2

, (18)

where ‖ · ‖ is used to denote the standard Euclidean vector norm.

6



An alternative choice for the small scales is the use of orthogonal sub-grid
scales (OSS) [43, 47, 48, 49, 46]. In the OSS formulation, only the part of the
large scale residuals that is orthogonal to the finite element space is used to
model the small scale variables. This can be expressed as

ũ = τ1 (f − ρuh · ∇uh +∇ · 2η∇suh −∇ph − πm) (19)
p̃ = τ2 (−∇ · uh − πc) , (20)

where πm (uh, ph) and π
c (uh) are the L2 projections of the residuals onto the

finite element space, that is, the solution of the auxiliary projection problem

∫

Ω

wh π
m dΩ =

∫

Ω

wh (f − ρuh · ∇uh +∇ · 2η∇suh −∇ph) dΩ (21)
∫

Ω

qh π
c dΩ =−

∫

Ω

qh∇ · uh dΩ. (22)

It is worth mentioning that the viscous term ∇ · 2η∇suh that appears in
Eqs. (16) and (19), as well as in the momentum projection in Eq. (21), is zero
on element interiors when evaluated using linear finite elements, since it involves
second derivatives of piecewise linear functions. Since all examples in the present
work use linear elements, this term will be neglected in the following.

Introducing the OSS small scale model into the variational form of the prob-
lem, given by Eqs. (14) and (15), the following weak formulation is obtained

∫

Ω

ρwh uh∇uh dΩ +
∫

Ω

2η∇swh : ∇suh dΩ−
∫

Ω

∇ ·wh ph dΩ

+
∑

e

∫

Ωe

ρuh∇whτ1 (ρuh · ∇uh +∇ph) dΩ−
∑

e

∫

Ωe

∇ ·whτ2 (−∇ · uh −Πc) dΩ

=

∫

Ω

whf dΩ +

∫

ΓN

wht dΓ +
∑

e

∫

Ωe

ρuh∇whτ1 (f −Πm) dΩ

(23)

∫

Ω

qh∇·u +
∑

e

∫

Ωe

∇qhτ1 (ρuh∇uh +∇ph) dΩ =
∑

e

∫

Ωe

∇qhτ1 (f −Πm) dΩ.

(24)
Similarly, the ASGS formulation can be recovered by dropping all terms

involving Πm and Πc in Eqs. (23) and (24).
As a final remark, note that VMS represents a general framework to write

stabilized weak formulations. In this sense, the final weak problems engendered
by both the ASGS and OSS can be seen as encompassing other well-known
stabilization techniques such as SUPG/PSPG [50] or Galerkin-Least Squares
(GLS) [51].

2.3 Matrix formulation

We use standard linear finite element functions to interpolate the large scale
velocity and pressure solutions. Introducing this interpolation in Eqs. (23)

7



and (24) and using the shape functions of each node as test functions wh, ph in
succession, we obtain the following system of equations

[
C + K + SK G + SG

D + SD L

] [
U
P

]
=

[
F + SM

SC

]
, (25)

where U and P represent the vectors of nodal values for velocity and pressure,
respectively. The blocks that appear in the system matrix and the right hand
side vector of Eq. (25) are obtained by the finite element assembly of the different
integrals that appear in the stabilized equations. If a and b represent node
indices, i, j correspond to the spatial directions and Na is the finite element
function associated with node a, the Galerkin terms in Eqs. (23) and (24) give
rise to the the following block matrices

Cabij =

∫

Ωe

Na

(
ρ uh k

∂Nb
∂xk

)
δij dΩ K

ab =

∫

Ωe

BTaCηBb dΩ

Gabi = −
∫

Ωe

∂Na
∂xi

Nb dΩ D
ab
j =

∫

Ωe

Na
∂Nb
∂xj

dΩ

Fai =

∫

Ωe

Na fi dΩ +

∫

ΓN

Nati dΓ,

(26)

where δij corresponds to the Kronecker delta. To define the viscous matrix K
ab,

we used the strain rate matrix B and the constitutive matrix Cη, which in 2D
are given by

Ba =



∂xNa 0

0 ∂yNa
∂yNa ∂xNa


 Cη = η




2 0 0
0 2 0
0 0 1


 (27)

and in 3D can be defined as

Ba =




∂xNa 0 0
0 ∂yNa 0
0 0 ∂zNa

∂yNa ∂xNa 0
0 ∂zNa ∂yNa

∂zNa 0 ∂xNa




Cη = η




2 0 0 0 0 0
0 2 0 0 0 0
0 0 2 0 0 0
0 0 0 1 0 0
0 0 0 0 1 0
0 0 0 0 0 1



, (28)

where we introduced the notation ∂(·)Na = ∂Na/∂(·) for compactness.
Analogously, the discretization of the terms arising from the VMS stabiliza-

8



tion allows us to write

SK
ab
ij =

∫

Ωe

(
ρ uh k

∂Na
∂xk

)
τ1

(
ρ uh l

∂Nb
∂xl

)
δij dΩ +

∫

Ωe

∂Na
∂xi

τ2
∂Nb
∂xj

dΩ

SG
ab
i =

∫

Ωe

(
ρ uh k

∂Na
∂xk

)
τ1
∂Nb
∂xi

dΩ

SD
ab
j =

∫

Ωe

∂Na
∂xj

τ1

(
ρ uh k

∂Nb
∂xk

)
dΩ

Lab =

∫

Ωe

∂Na
∂xk

τ1
∂Nb
∂xk

dΩ

SM
a
i =

∫

Ωe

(
ρ uh k

∂Na
∂xk

)
τ1 (fi −Πmi ) dΩ−

∫

Ωe

∂Na
∂xi

τ2Π
c dΩ

SC
a =

∫

Ωe

∂Na
∂xk

τ1 (fk −Πmk ) dΩ.

(29)

The system of Eq. (25) contains multiple non-linear terms: besides the con-
vective term, terms involving either the apparent viscosity η, the stabilization
parameters τ1, τ2 and, for OSS, the projections, all have a non-linear dependency
on velocity. The problem is linearized using a fixed-point iteration.

In the case of OSS stabilization, an associated problem is solved to calculate
the projections. This problem corresponds to the discrete form of Eqs. (21)
and (22), and can be defined as

[
MM 0

0 MC

] [
ΠM
ΠC

]
=

[
RM
RC

]
, (30)

where ΠM and ΠC represent the vectors of nodal values for the momentum
and mass projections, respectively, and the different terms in the matrix and
right hand side vector can be obtained by the finite element assembly of local
contributions given by

MM
ab
ij =

∫

Ωe

NaNbδij dΩ RM
a
i =

∫

Ωe

Na

(
fi − ρ uh k

∂uh i
∂xk

− ∂ph
∂xi

)
dΩ

MC
ab =

∫

Ωe

NaNb dΩ RC
a =

∫

Ωe

Na

(
−∂uh i
∂xi

)
dΩ.

(31)
Note that both non-zero matrix blocks on the left hand side of Eq. (30)

have the structure of a mass matrix. In practice, they are approximated by a
diagonal mass matrix, which allows us to obtain the projections through the
solution of a diagonal linear system.

3 Mesh refinement strategy

3.1 Error estimation

The mesh refinement strategy is driven by an error indicator, which identifies
regions of the simulation domain where the mesh resolution has to be increased.
We use an error indicator based on the scale separation introduced by VMS
models, following the ideas of Hauke et al. in [15]. This approach, originally

9



presented for the convection-diffusion problem, has been extended to the Navier-
Stokes equations in [16] and [17].

The main idea behind this approach is to use the magnitude of the small
scale velocity model, which, in our case, is given by either Eq. (16) for ASGS
or Eq. (19) for OSS as the error indicator. Since the small scale velocity is
ultimately proportional to the residual form of the original momentum equation
(or its projection onto the mesh), its magnitude can be interpreted as a measure
of the error in the solution. With this in mind, we define our indicator of the
error within element e as

(Ie)
2

= ‖ũ‖2Ωe =
∫

Ωe

ũ · ũ dΩ. (32)

Introducing the definition of the small scale velocity in Eq. (32), this expres-
sion can be particularized for the considered stabilized formulations as

(
IASGSe

)2
=

∫

Ωe

τ21 ‖Rm‖
2

dΩ (33)

(
IOSSe

)2
=

∫

Ωe

τ21 ‖Rm −Πm‖
2

dΩ. (34)

The indicator thus obtained is derived from the small scale model used in the
stabilization and, on the element level, is proportional to the local residual,
weighted by the square of the stabilization parameter τ1. In the OSS variant,
the indicator of Eq. (34) involves the difference between the local residual and
the projected residual. This idea of comparing local and smooth fields for the
same quantity can be related to the error estimator of Zienkiewicz and Zhu [52].

By measuring Ie on all elements, we obtain a distribution of the error indi-
cator across the domain. We identify the elements where the estimate is larger
than a prescribed tolerance, which are then split according to the algorithm
described in the following section.

3.2 Refinement algorithm

Once the elements that have larger error have been identified, we use a mesh re-
finement algorithm to improve mesh resolution. We have adopted the algorithm
presented in [16], which can be used to improve the resolution of an existing tri-
angular or tetrahedral mesh. This refinement strategy was originally developed
to be easily applicable in a distributed memory environment and is designed to
require a minimal amount of information that is not local to the elements to be
refined.

Given a triangular mesh, the idea of the procedure is to refine the iden-
tified elements by introducing new nodes on the mid-points of its edges and
quadrisecting each original triangle. Neighboring elements are then divided to
maintain mesh consistency: these that have one refined edge are bisected along
that edge, while elements that have two refined edges are divide into three new
triangles. The same procedure can be applied to tetrahedral meshes, with fully
refined elements being divided into eight new tetrahedra and adjacent elements
refined accordingly. The main steps of the refinement procedure are illustrated
by Figure 2 for a 2D case and can be described as follows

10



(a) (b)

(c) (d)

Figure 2: Refinement procedure: (a) identify elements to refine; (b) divide
edges and insert new nodes; (c) remove all elements with split edges; (d) create
new elements to recover a conforming mesh.

1. Iterate over mesh elements, evaluating the error indicator given by Eq. (33)
for ASGS or that of Eq. (34) for OSS.

2. If the error indicator is larger than a predefined tolerance in a given ele-
ment, mark it and its edges as needing refinement. This step is represented
by Fig. 2(a).

3. A new node is created in the mid-point of all the edges that have been
identified as needing refinement, as shown in Fig. 2(b). All nodal data and,
in particular, initial guesses for velocity and pressure, are interpolated
from the nodes that define the original edge.

4. All elements with refined edges are deleted (see Fig. 2(c)). Note that
this includes elements where the error indicator was not larger than the
tolerance.

5. New elements are created using predefined patterns, depending on which
and how many edges of the original element were split. This step is repre-
sented in Fig. 2(d). While this step is relatively straightforward in the 2D
case, it is more involved for 3D problems, where the number of possible
edge splitting patterns is much larger. We direct the interested reader to
the original reference on this algorithm [16] for details. Note that, in some
cases, 3D refinement involves the creation of an extra node on the center
of the original tetrahedron.

Note that the refinement procedure preserves the quality of fully refined
elements, since the new elements have the same angles as the original one.
Unfortunately, this is not the case for elements where only some of the edges
are refined, and mesh quality can be significantly degraded if this type of partial
refinement is performed repeatedly over the same patch of elements.

There are multiple techniques that can alleviate such issue. Mesh quality
could be trivially preserved by only allowing complete refinement (quadrisection)

11



of elements, but maintaining conformance under such requirement would imply
refining the entire domain. It is possible to relax this by introducing non-
conforming meshes with hanging nodes, but this typically requires constraining
successive refinements so that two neighboring elements do not not differ by
more than one refinement level.

Alternatively, one could use a different algorithm for marking and refining el-
ements (see for example [53, 54]) that can limit the mesh degradation produced
by successive refinement. While such alternatives are viable and well docu-
mented in the literature, they require comparatively more information about its
neighbors. Given that this is not always easily available in a distributed memory
environment, which was the main consideration when designing the employed
algorithm [16], they will not be used here.

In the present paper, we follow a different strategy: we allow repeated par-
tial refinement, but apply local improvement strategies after each refinement
iteration to improve the quality of the final mesh. For the 2D examples pre-
sented in Section 4 we use the algorithm described in [55], which is based on
reconnecting the nodes of adjacent elements. For the 3D cases, we use the pro-
cedure presented in [56], which consists in taking clusters of adjacent elements
and changing the local topology, adding or deleting nodes and reconnecting
elements to improve mesh quality.

4 Numerical results

The formulation presented in the previous pages has been implemented within
the Kratos Multiphysics framework for finite element solvers [57]. We use this
implementation to simulate several benchmark problems with the intention of
evaluating the capabilities of the adaptive refinement techniques. The same fi-
nite element formulation, without mesh refinement, has been used by the authors
in combination with the Particle Finite Element Method (PFEM) to simulate
non-Newtonian flows [58, 59, 60]. The choice of parameters, including both
the regularization parameter m and problem-specific values, such as load incre-
ments, is based on the previous experience of the authors on these or similar
problems (see [45]). The linear systems of equations that appear in the solution
procedure have been solved using the AMGCL algebraic multigrid solver [61].

4.1 Poiseuille flow

The first test case is a simple Poiseuille flow under an imposed pressure gradient.
We define a 6 × 1 m plane channel, shown in Fig. 3, and prescribe a pressure
variation ∆p = −2 × 103 Pa between its right and left extremes. A no-slip
condition is imposed along the remaining sides of the channel. The fluid density
is ρ = 1 Kg/m3 while the plastic viscosity is µp = 10 Pa ·s and the regularization
coefficient is set to m = 103 s.

We consider two cases: a Bingham flow with yield stress τ0 = 100 Pa and a
Newtonian case, recovered by taking a viscosity η = µp in Eq. (6).

We start the simulation using the unstructured mesh shown in Fig. 4, con-
taining 66 nodes and 92 triangular elements. The problem is solved iteratively:
the solution of the flow problem is followed by the mesh refinement algorithm,

12



L = 6 m 

H = 1 m

no-slip condition

no-slip condition

x

y

left external

presure A

A'

right external

presure

Figure 3: Poiseuille flow – geometry and boundary conditions.

Figure 4: Poiseuille flow – initial mesh.

and this procedure is repeated until the error indicator is smaller than a fixed
tolerance for all elements in the mesh.

We simulate a series of cases with absolute indicator tolerances in the range
10−3–10−6m2s−1 to study the sensitivity of the proposed approach to the tol-
erance for the value of the error indicator, testing both the ASGS and OSS
approaches. The number of elements obtained in each case is shown in Fig 5,
while the velocity profiles on the central transversal section of the domain, which
corresponds to section A–A′ in Fig. 3, are shown in Fig. 6 for the Newtonian
fluid test and in Fig. 7 for the Bingham flow. In both cases, the obtained results
are compared to the analytic solution of the Poiseuille flow, which is given by
Eq. (35) (see for example [62]).

10−6 10−5 10−4 10−3

Tolerance

102

103

104

105

106

N
u
m
.
e
le
m
e
n
ts

ASGS

OSS

(a) Newtonian fluid.

10−6 10−5 10−4 10−3

Tolerance

101

102

103

104

105

106

N
u
m
.
e
le
m
e
n
ts

ASGS

OSS

(b) Bingham fluid.

Figure 5: Poiseuille flow – number of elements at the end of the simulation for
different error indicator tolerances.

13



−0.4 −0.2 0.0 0.2 0.4
y (m)

0.0
0.5
1.0
1.5
2.0
2.5
3.0
3.5
4.0
4.5

u
(m

/
s
)

Analytic

tol. 10−6

tol. 10−4

(a) Newtonian fluid (ASGS).

−0.4 −0.2 0.0 0.2 0.4
y (m)

0.0
0.5
1.0
1.5
2.0
2.5
3.0
3.5
4.0
4.5

u
(m

/
s
)

Analytic

tol. 10−6

tol. 10−4

(b) Newtonian fluid (OSS).

Figure 6: Newtonian Poiseuille flow – streamwise velocity profiles for different
error indicator tolerances.

−0.4 −0.2 0.0 0.2 0.4
y (m)

−0.1
0.0

0.1

0.2

0.3

0.4

0.5

0.6

u
(m

/
s
)

Analytic

tol. 10−6

tol. 10−4

(a) Bingham fluid (ASGS).

−0.4 −0.2 0.0 0.2 0.4
y (m)

−0.1
0.0

0.1

0.2

0.3

0.4

0.5

0.6

u
(m

/
s
)

Analytic

tol. 10−6

tol. 10−4

(b) Bingham fluid (OSS).

Figure 7: Bingham Poiseuille flow – streamwise velocity profiles for different
error indicator tolerances.

14



ux (y) =





1
2µp

(
−∆p

∆x

)((
h1 +

H
2

)2 − (h1 − y)2
)

if − H
2
≤ y < h1 = −τ0

(
−∆p

∆x

)−1

1
2µp

(
−∆p

∆x

)
h21 if h1 ≤ y < h2 = τ0

(
−∆p

∆x

)−1

1
2µp

(
−∆p

∆x

)((
H
2
− h2

)2 − (y − h2)2
)

if h2 ≤ y ≤ H2
uy = 0

(35)
In the Newtonian case, the solution reduces to a parabolic profile while, in

the Bingham case, the flow has two yielded regions close to the wall, where shear
stresses are concentrated, and a central region that moves rigidly. This central
region has a constant streamwise velocity and can be solved with small error
using relatively coarse meshes. As a result, refinement is concentrated close to
the walls in the Bingham case and the overall number of elements is lower, as
can be observed in Fig. 5(b). This is confirmed by Fig. 8, which shows a detail
of the final mesh obtained using the lowest tolerance and the OSS formulation
for both Newtonian and Bingham fluids. As can be seen in the figure, the
spatial distribution of the refinement is different in both cases, uniform for
the Newtonian fluid and concentrated close to the walls, corresponding to the
yielded regions, in the Bingham case.

As can be seen in Fig. 5(a), the OSS formulation results in roughly five times
less elements than the ASGS one for a given tolerance. In the same figure, we
can also observe that, for small tolerances, refinement may fail to start. This can
be seen in in Fig. 5(b) for the ASGS simulation with a tolerance of 10−3m2s−1

and for the OSS cases with tolerances 10−3m2s−1 and 10−4m2s−1, where no
new elements are added. These cases produce a solution that is close to zero
everywhere, where the yielded regions fail to appear.

In Fig. 6 we can observe a good agreement with the analytic solution for the
Newtonian case, but the number of elements required is quite large, as can be
seen in Fig. 5(a). To understand the results, we calculate the efficiency of our
chosen indicators. The efficiency ε of an error indicator is the ratio between the
estimator and the real error, which in our case is given by:

ε =
Ie

‖u− uh‖Ωe
with ‖u− uh‖Ωe =

(∫

Ωe

(u− uh) · (u− uh) dΩ
)1/2

(36)
where u is the exact solution, given by Eq. (35), and uh is the approximate
finite element solution. We are also interested in comparing the global value of
the indicator to the global error, computed from the sums of the square of the
values on each element as

Ig =

(
∑

e

I2e

)1/2
Eg =

(
∑

e

‖u− uh‖2Ωe

)1/2
. (37)

The distribution of the efficiency index on a given solution step for the
different cases is shown in Fig. 9. It can be observed that, except for the
Newtonian ASGS case, the efficiency is far from the ideal value of 1. In spite
of this, the efficiency index tends to be larger in the areas that are in need of
refinement, as for example close to the borders in the Bingham cases, where the
gradients of the solution are larger.

15



(a) Initial mesh. (b) Newtonian fluid.

(c) Bingham fluid.

Figure 8: Poiseuille flow – refined meshes in the OSS case with error indicator
tolerance 10−6m2s−1.

16



(a) Newtonian fluid (ASGS).

(b) Bingham fluid (ASGS).

(c) Newtonian fluid (OSS).

(d) Bingham fluid (OSS).

Figure 9: Poiseuille flow – distribution of the efficiency index ε for the different
test cases.

The evolution of the global value of the indicator and the error, evaluated
according to Eq. (37), for the cases with an indicator tolerance of 10−6m2s−1

is presented in Fig. 10. As can be observed in the plots, the error indicator has
the same behavior as the true error, but its value is not directly related to the
magnitude of the true error. This can explain how the general behavior of the
refinement algorithm is correct, even when the efficiency index for a given case
is not necessarily close to one.

4.2 Plane extrusion

We simulated the plane extrusion of a Bingham fluid through a die with a 3
to 1 reduction of the cross-section. This problem was presented in [63] and
revisited in [45], where it was solved using a fixed fluid mesh and the ASGS
formulation presented in Section 2 and in [46, 64], where it was simulated using
OSS stabilization.

The simulation domain can be seen in Fig. 11, where we use the symmetry of
the problem to simulate only one half of the domain. A slip boundary condition
is imposed on the wall and only the wall-normal component of the velocity is
restricted. The flow is driven by a ram pressure applied on the left side of the
domain, which generates a pressure gradient. The fluid parameters are reported
in Table 1.

As argued in [63], using the present settings, with smooth walls and a very
small plastic viscosity, the problem is analog to a perfect plasticity problem.

17



0 2 4 6

Iteration

10−3

10−2

10−1

100

M
a
g
n
it
u
d
e

Indicator

Error

(a) Newtonian fluid (ASGS).

0 5 10 15

Iteration

10−4

10−3

10−2

10−1

100

M
a
g
n
it
u
d
e

Indicator

Error

(b) Bingham fluid (ASGS).

0 5 10 15

Iteration

10−4

10−3

10−2

10−1

100

M
a
g
n
it
u
d
e

Indicator

Error

(c) Newtonian fluid (OSS).

0 5 10

Iteration

10−4

10−3

10−2

10−1

100

M
a
g
n
it
u
d
e

Indicator

Error

(d) Bingham fluid (OSS).

Figure 10: Poiseuille flow – global indicator values and errors for the different
test cases.

18



6 m 6 m 

3 m

1 m
symmetry

slip  wall

slip  wallA

Figure 11: Plane extrusion – geometry and boundary conditions.

Parameter Value
Fluid density ρ = 100 Kg/m3

Yield stress τ0 = 1000 Pa
Fluid viscosity µp = 10

−6 Pa · s
Regularization coefficient m = 1000 s

Table 1: Plane extrusion – flow parameters for the problem.

An exact solution for the plasticity problem, obtained using slip line theory, is
reported by Lubliner in [65]. This solution predicts the formation of slip lines
once the applied pressure reaches

p =
4

3

(
1 +

π

2

)
τ0 ≈ 3427 Pa. (38)

The simulation is performed using both the ASGS and OSS variants of our
formulation. An increasing normal pressure is applied on the left end of the
domain in increments of 2 Pa per step, starting from 0 to a maximum value of
pmax = 5000 Pa. After each step, the mesh refinement algorithm is used to im-
prove the mesh resolution, using an absolute tolerance for the error indicator of
10−6m2s−1. In light of the results of the previous example, we set an additional
control, limiting the minimum area of refined elements to 10−4 m2 to prevent
excessive refinement in localized regions. The domain is initially discretized
with an unstructured mesh composed of 102 nodes and 152 linear triangles.

The evolution of the strain rate and the refined mesh for different values
of the ram pressure in the OSS case is shown in Fig. 12. As the ram pressure
increases, a yielded region characterized by high strain rates develops, matching
the slip line mechanism. The finite element mesh is refined accordingly, following
the high strain rates.

Fig. 13 shows the evolution of mesh size as the simulation evolves. The
number of elements required to solve the problem is uniform for low values of
the ram pressure until the yielded zone develops. At this point, the number
of elements increases rapidly as the material starts to flow. The new elements
are concentrated on the yielded regions, as can be observed in Fig. 12, and
the refinement process continues as the yielded region expands. The mesh at
the end of the simulation, corresponding to an external pressure of 5000 Pa, is
composed by approximately 14500 nodes and 28700 elements for the OSS test
and 15100 nodes and 30100 elements for the ASGS case.

The velocity of the fluid on the left boundary (measured on point A in
Fig. 11) is related to the ram pressure in Fig. 14. The value of yield pressure
expected from perfect plasticity, given by Eq. (38), is indicated in Fig. 14 using a
dotted line. We can observe that velocity is very low until the pressure reaches

19



  0.72

0.613

0.507

0.4

0.293

0.167

  0.08

(a) 0 Pa (152 elements). (b) 3448 Pa (2203 elements).

(c) 3454 Pa (3572 elements). (d) 3462 Pa (9932 elements).

(e) 3500 Pa (19846 elements). (f) 3750 Pa (23388 elements).

(g) 4000 Pa (24781 elements). (h) 4500 Pa (27075 elements).

Figure 12: Plane extrusion, OSS case – detail of the evolution of the strain rate
(left) and computational mesh (right) for increasing values of the applied ram
pressure.

20



0 1000 2000 3000 4000 5000

Applied pressure

0

10

20

30

N
u
m
.
e
le
m
e
n
ts

( ×
1
0
3
)

OSS

ASGS

Figure 13: Plane extrusion – evolution of the number of elements.

0.0 0.1 0.2 0.3

V elocity (m/s)

3100

3200

3300

3400

3500

3600

R
a
m

P
r
e
s
s
u
r
e
(P

a
)

OSS–refined.

ASGS–refined.

OSS–uniform 30k elem.

OSS–uniform 700k elem.

P lasticity solution.

Figure 14: Plane extrusion – applied pressure vs. inlet velocity.

roughly 3460 Pa, when the material starts to flow, accelerating rapidly. This
change corresponds to the formation of a yielded zone just before the extrusion
section, which can be observed in Fig. 12. This is found to be in agreement with
the expected behavior, although the material starts flowing at higher pressures
than predicted using perfect plasticity theory. While plasticity theory predicts
yielding for p = 3427 Pa, the simulated solution predicts yielding for pressures
in the range of p = 3450− 3460 Pa. In this sense, we recall that this plasticity
solution does not correspond exactly to our problem, as it does not account for
the presence of a convective term in the equations nor for the fact that we are
using a regularized constitutive equation instead of a purely plastic behavior.

To evaluate the effect of the refinement procedure, we compare the results
obtained using adaptive mesh refinement to those obtained using a uniform
mesh size. With the same numerical settings, we simulate the problem using
two uniform triangular meshes. The first is designed to contain about 28000
elements, a number close to that of the finest mesh used during the refinement
procedure, and predicts yielding on the p = 3540− 3550 Pa range. The second
mesh is designed so that all elements have a size similar to that of the small-
est element produced by the refinement procedure and contains about 700000
elements and predicts yielding for p = 3460 − 3470 Pa range, much closer to
the dynamically refined result. The velocity–pressure relation for each of these
cases is also plotted in Fig. 14. Comparing the solution obtained using adap-
tive mesh refinement to that produced by a comparable number of uniform size
elements, we can observe that adaptive mesh refinement has a positive effect in
the quality of the solution, producing a yielding pressure that is closer to that
obtained using a much finer mesh.

21



100 101 102 103

Bingham number

0.75

0.80

0.85

0.90

0.95

1.00

y
/
H

Reference.

ASGS solution.

OSS solution.

Figure 15: 2D cavity flow – vertical position of the vortex center, compared to
the results of [66].

4.3 Cavity flow

Next we consider the flow in a 2D cavity filled with a Bingham fluid. The
problem is set up following Mitsoulis and Zisis [66]. Defining a square domain
Ω = (0, H)× (0, H), we impose a horizontal velocity ux = 1 m/s on the y = H
side and zero velocity on the remaining contour nodes. Our model is configured
as a leaky cavity, that is, the top left and top right corner nodes have a fixed
horizontal velocity. This condition is re-imposed after each refinement step, so
that the wall node immediately next to the corner always has zero velocity, even
if this node did not exist in previous iterations.

The fluid density is set to ρ = 1 Kg/m3 and the dynamic viscosity for the
yielded region to µp = 1 Pa · s. We simulate multiple cases with different yield
stresses, which correspond to a range of values of the Bingham number, defined
as

Bn =
τ0H

µp ux
. (39)

The regularization coefficient is set to m = 300 s. Again, we start from a
relatively coarse uniform mesh composed of 2900 nodes and 5600 triangular ele-
ments and we solve the problem iteratively, with a mesh refinement phase after
each solution. The absolute tolerance for the error indicator is set to 10−6m2s−1

and a maximum of 10 refinement steps are allowed over the same original ele-
ment. For the range of Bingham numbers considered, this problem results on
a single recirculating vortex in the interior of the cavity, which develops closer
to the top wall as the Bingham number increases. The vertical position of the
vortex center for the different cases is compared to the results reported by [66]
in Fig. 15. The results are in agreement with the reference, although we obtain
a slightly higher position for the center in the higher Bingham numbers. The
final distribution of yielded and unyielded regions and the corresponding veloc-
ity streamlines are shown in Fig. 16 for the OSS simulations. The number of
elements obtained after each refinement is shown in Fig. 17 for the ASGS cases
and in Fig. 18 for the OSS cases. In this case, we observe that the ASGS indi-
cator results on a significantly larger number of elements for a given tolerance.

Although the cavity flow is essentially a 2D problem for the range of values
we are testing, we also simulated a 3D case in order to validate our approach
for tetrahedra. The geometry of the problem is shown in Fig. 19 and follows the

22



(a) Bn = 2. (b) Bn = 20. (c) Bn = 200.

(d) Bn = 5. (e) Bn = 50. (f) Bn = 500.

Figure 16: 2D cavity flow – velocity streamlines and distribution of yielded
(light) and unyielded (dark) regions for the OSS simulations.

5 10 15 20

Refinement steps

20

40

60

N
u
m
.
e
le
m
e
n
ts

( ×
1
0
3
)

Bn = 2.

Bn = 20.

Bn = 200.

(a) Bn = 2, 20, 200

5 10 15 20

Refinement steps

10

20

30

40

50

N
u
m
.
e
le
m
e
n
ts

( ×
1
0
3
)

Bn = 5.

Bn = 50.

Bn = 500.

(b) Bn = 5, 50, 500

Figure 17: 2D cavity flow – evolution of the number of elements for the ASGS
simulations.

23



5 10 15 20

Refinement steps

4

6

8

10

12

14

16
N
u
m
.
e
le
m
e
n
ts

( ×
1
0
3
)

Bn = 2.
Bn = 20.
Bn = 200.

(a) Bn = 2, 20, 200

5 10 15 20

Refinement steps

4

6

8

10

12

14

16

N
u
m
.
e
le
m
e
n
ts

( ×
1
0
3
)

Bn = 5.
Bn = 50.
Bn = 500.

(b) Bn = 5, 50, 500

Figure 18: 2D cavity flow – evolution of the number of elements for the OSS
simulations.

x,uxz,uz

y,uy

ux=uy=uz=0

ux=1 uy=uz=0

ux=uy=uz=0

ux=uy=uz=0
uz=0

uz=0

Figure 19: 3D cavity flow – geometry and velocity boundary conditions.

definition of Elias et al. in [67]. The domain is a cube of side H = 1 m, where
velocity is fixed to (ux, 0, 0) on the top side. Taking y to be the vertical axis,
the velocity is set to zero on the bottom and on the sides of the cube normal to
the flow. On the two remaining sides, parallel to the flow on the top, only the
normal (z) component of velocity is restricted.

For the 3D case, we use a Reynolds number Re = 1 and a Bingham number
Bn = 5. All fluid parameters are defined as in the 2D case, fixing the top
velocity to ux = 1m/s and the yield stress is τ0 = 5 Pa. The regularization
coefficient is set to m = 1000 s.

Given the over-refinement observed for the ASGS case, the 3D simulation
has been performed using only OSS. The flow is simulated in 10 solution steps,
refining after each solution. Starting from a uniform tetrahedral mesh with 30
divisions along each edge, containing approximately 51000 nodes and 277000
elements, a final mesh with 113000 nodes and 612000 elements is obtained. The
final distribution of yielded and unyielded regions and velocity streamlines is
shown in Fig. 20. The vortex center in this case is placed at a vertical position
y/H = 0.848, in agreement with the 2D results shown in Fig. 15.

4.4 Flow through a sudden expansion

As a final 3D test case, we simulate the flow through a square sudden expan-
sion using OSS. This problem is studied in [68, 69] for Herschel-Bulkley fluids
and represents a three-dimensional version of the more common planar or ax-

24



Figure 20: 3D cavity flow – velocity streamlines and distribution of yielded
(light) and unyielded (dark) regions.

isymmetric expansions (see for example [70, 71, 72]). The cross section of the
problem is shown in Fig. 21 We model the flow through two different geometries,
corresponding to expansions with width ratios W/H = 2 and W/H = 4.

5H 15H

2H 2W
symmetry

solid wall

solid wall

Figure 21: Sudden expansion – geometry.

Taking into account the symmetries of the problem, only one fourth of the
expansion is simulated, resulting in the computational domains shown in Fig. 22.
No-slip boundary conditions are used to model the solid walls, while a no-
penetration condition is set for the symmetry planes. The flow is driven by
a pressure gradient imposed between the inflow and the outlet sections of the
domain.

The problem is solved for Reynolds and Bingham numbers equal to one,
calculated using H as the reference length and a reference velocity U0 defined
in [68] as

U0 =
1

µp

(
H

∣∣∣∣
∆p

∆x

∣∣∣∣− τ0
)
H, (40)

where ∆p/∆x is the imposed pressure gradient.
We apply the external pressure in 10 incremental load steps, refining after

each iteration. Once the loading process is finished, we simulate 5 extra steps
under full load to ensure that the final solution does not require additional re-
finement. The distribution of yielded and unyielded regions on different sections
can be observed in Fig. 23 for the W/H = 2 expansion and in Fig. 24 for the
W/H = 4 case.

Both cases exhibit a qualitatively similar behavior, in agreement with the
results obtained in the references. Far from the expansion, a yielded region
appears close to the walls due to the shear produced by wall friction, while a
core of unyielded material remains in the center. Close to the expansion, high
velocity gradients develop as the flow adapts to the change in cross-section and

25



(a) W/H = 2 (b) W/H = 4

Figure 22: Sudden expansion – simulation domains.

A

A'

B

B'

C

C'

(a) Side view.

(b) A–A′ (c) B–B′ (d) C–C′

Figure 23: Sudden expansion,
W/H = 2 – yielded (dark) and un-
yielded (light) regions.

A

A'

B

B'

C

C'

(a) Side view.

(b) A–A′ (c) B–B′ (d) C–C′

Figure 24: Sudden expansion,
W/H = 4 – yielded (dark) and un-
yielded (light) regions.

26



2 4 6 8 10 12 14

Step

0

100

200

300

400

500

600

700

N
u
m
.
e
le
m
e
n
ts

( ×
1
0
3
)

W/H = 2

W/H = 4

Figure 25: Sudden expansion – evolution of the number of elements during the
simulation.

(a) Initial mesh.

(b) Final mesh.

Figure 26: Sudden expansion, W/H =
2 – side view of the computational
meshes.

(a) Initial mesh.

(b) Final mesh.

Figure 27: Sudden expansion, W/H =
4 – side view of the computational
meshes.

the central core has yielded completely. On the corner of the expansion a region
of stationary unyielded material appears, unaffected by the main flow.

As in the previous cases, the simulation is initialized with a uniform tetrahe-
dral mesh, composed of approximately 5000 nodes and 22000 elements for the
W/H = 2 case or 10000 nodes and 53000 elements for the W/H = 4 case. The
evolution of the number of elements during the solution is shown in Fig. 25.
The number of elements grows as the applied pressure gradient increases and
stabilizes once the loading process finishes, resulting in a final grid of 106000
nodes and 596000 elements for the W/H = 2 case and 123000 nodes and 694000
elements for the W/H = 4 expansion.

The initial and final meshes for the two expansion cases are shown in Fig. 26
for the W/H = 2 test and Fig. 27 for the W/H = 4 case. It can be observed
that refined areas coincide with yielded regions, where higher velocity gradients
are generally found: close to the solid walls and just after the expansion section.

5 Concluding remarks

We have presented a VMS finite element formulation for non-Newtonian flow
problems. Using an error indicator based on the scale separation introduced
by VMS methods, we have combined this formulation with a mesh refinement
procedure to obtain a solver with adaptive mesh refinement. The chosen mesh

27



refinement strategy, based on edge splitting, works on triangular and tetrahedral
meshes, which has allowed us to simulate both 2D and 3D problems.

We have used this approach to solve multiple benchmark examples found in
the literature, starting from uniform, relatively coarse meshes and letting the
refinement procedure increase mesh resolution on regions of interest. Results
suggest that the use of adaptive mesh refinement helps obtain good quality
solutions starting from meshes without sufficient resolution. This validation
procedure has also allowed us to identify some issues with the proposed error
indicator, in particular when evaluating its efficiency in Section 4.1. While the
indicator tends to be larger in areas with a larger error, its value is not directly
related to the magnitude of the error, and the ratio between the two quantities
appears to be problem-dependent. This introduces a difficulty in choosing the
tolerances for the error indicator, since the magnitude of the estimator can not
be immediately deduced from quantities of interest. Most notably, it can not
be understood as a maximum admissible local error.

In practice, this introduces potential over- or under-refinement issues, since
the indicator tolerance is difficult to set a priori. We have observed this in
Section 4.3, where, for a fixed tolerance, the use of the ASGS indicator results in
significantly more elements than the OSS one for the same simulation, although
this has little effect on the accuracy of the obtained solution. A first step to
mitigate this issue has been to introduce controls for the minimum element size
allowed, ensuring that the refinement procedure will always stop.

In view of these issues, an obvious venue for improvement would be to test the
same refinement approach with other indicators. Since the refinement procedure
itself is independent of the choice of indicator, this should be a straightforward
modification. In addition, the refinement procedure could be extended to more
complex geometries, such as quadrilateral and hexahedral elements, by intro-
ducing splitting patterns for these geometries. Similarly, by introducing more
nodes on each split edge, the scheme could be used with higher order elements.

We note that, although we have limited our tests to Bingham flow problems,
the presented formulation is directly applicable to other fluids with yield, and
in particular would be straightforward to use for the more general Herschel–
Bulkley model. Another venue for future work is the application of the present
solver to time-dependent problems. The OSS formulation used here is extended
to (fixed mesh) dynamic problems in [46] and the refinement procedure was used
in the setting of evolving turbulent flows in [16]. However, as noted in this last
reference, expanding the adaptive refinement procedure to allow the possibility
of coarsening the mesh in response to small values of the error indicator would
be a welcome addition in this context. This would allow us to move the refined
areas in accordance with the evolution of the flow, optimizing the number of
elements used throughout the simulation.

Finally, the use of a regularized formulation raises some questions that de-
serve further investigation. While necessary to eliminate the singularity on the
Bingham law and accelerate the convergence of the method to a solution, reg-
ularization does introduce an error on the solution, independent of the mesh
and of our error indicator. Gaining a better understanding of this fact could
open the door to an improved approach, where the value of the regularization
parameter m is adjusted as part of the adaptive procedure.

28



Acknowledgments

The first author gratefully acknowledges the support of the Spanish Ministe-
rio de Educación through a doctoral grant in the FPU program. The research
was partially supported by the Spanish Ministry of Economy and Competitive-
ness (Ministerio de Economı́a y Competitividad, MINECO) through the project
EACY (MAT2013-48624-C2-1-P). The financial support of the ERC Advanced
Grant project SAFECON (AdG-267521) of the European Research Council and
of the T-MAPPP project (FP7 PEOPLE 2013 ITN-G.A.n607453) is also greatly
acknowledged.

References

[1] Carey GF. Computational Grids: Generations, Adaptation & Solution
Strategies. CRC Press, 1997.

[2] Ainsworth M, Oden JT. A Posteriori Error Estimation in Finite Element
Analysis. John Wiley & Sons, Ltd, 2000.

[3] Babuška I, Rheinboldt WC. Error estimates for adaptive finite element
computations. SIAM Journal on Numerical Analysis 1978; 15(4):736–754,
doi:10.1137/0715049.

[4] Babuška I, Rheinboldt WC. A-posteriori error estimates for the finite ele-
ment method. International Journal for Numerical Methods in Engineering
1978; 12(10):1597–1615, doi:10.1002/nme.1620121010.

[5] Ainsworth M, Oden JT. A posteriori error estimation in finite element
analysis. Computer Methods in Applied Mechanics and Engineering 1997;
142(12):1 – 88.

[6] John V. A numerical study of a posteriori error estimators for convection-
diffusion equations. Computer Methods in Applied Mechanics and Engi-
neering 2000; 190(5-7):757 – 781.

[7] Papastavrou A, Verfürth R. A posteriori error estimators for station-
ary convection-diffusion problems: a computational comparison. Computer
Methods in Applied Mechanics and Engineering 2000; 189(2):449 – 462.

[8] Saramito P, Roquet N. An adaptive finite element method for viscoplastic
fluid flows in pipes. Computer Methods in Applied Mechanics and Engi-
neering 2001; 190(40–41):5391 – 5412.

[9] Roquet N, Saramito P. An adaptive finite element method for bingham
fluid flows around a cylinder. Computer Methods in Applied Mechanics and
Engineering 2003; 192(31-32):3317 – 3341.

[10] Roquet N, Saramito P. An adaptive finite element method for viscoplastic
flows in a square pipe with stick-slip at the wall. Journal of Non-Newtonian
Fluid Mechanics 2008; 155(3):101 – 115.

29



[11] Bernabeu N, Saramito P, Smutek C. Numerical modeling of non-newtonian
viscoplastic flows: Part II. Viscoplastic fluids and general tridimensional
topographies. International Journal of Numerical Analysis and Modeling
Jan 2014; 11(1):213–228. Dedicated to Professor Francisco J. Lisbona on
the occasion of his 65th Birthday.

[12] Boussetta R, Coupez T, Fourment L. Adaptive remeshing based on a
posteriori error estimation for forging simulation. Computer Methods in
Applied Mechanics and Engineering 2006; 195(4849):6626 – 6645, doi:
http://dx.doi.org/10.1016/j.cma.2005.06.029. Computational Metal Form-
ing.

[13] Hughes TJR. Multiscale phenomena: Green’s functions, the Dirichlet–to–
Neumann formulation, subgrid scale models, bubbles and the origins of sta-
bilized methods. Computer Methods in Applied Mechanics and Engineering
1995; 127(1-4):387–401.

[14] Hughes TJR, Feijóo GR, Mazzei L, Quincy JB. The variational multiscale
method–a paradigm for computational mechanics. Computer Methods in
Applied Mechanics and Engineering 1998; 166(1-2):3–24. Advances in Sta-
bilized Methods in Computational Mechanics.

[15] Hauke G, Doweidar MH, Miana M. The multiscale approach to error esti-
mation and adaptivity. Computer Methods in Applied Mechanics and En-
gineering 2006; 195(13-16):1573–1593. A Tribute to Thomas J.R. Hughes
on the Occasion of his 60th Birthday.

[16] Rossi R, Cotela J, Lafontaine NM, Dadvand P, Idelsohn SR. Parallel adap-
tive mesh refinement for incompressible flow problems. Computers & Fluids
2013; 80(0):324 – 355.

[17] Hauke G, Fuster D, Lizarraga F. Variational multiscale a posteriori error
estimation for systems: The Euler and Navier-Stokes equations. Computer
Methods in Applied Mechanics and Engineering 2015; 283:1493 – 1524.

[18] Peraire J, Vahdati M, Morgan K, Zienkiewicz OC. Adaptive remeshing for
compressible flow computations. Journal of Computational Physics 1987;
72(2):449 – 466.

[19] Löhner R. Adaptive remeshing for transient problems. Computer Methods
in Applied Mechanics and Engineering 1989; 75(1–3):195 – 214.

[20] Selmin V, Formaggia L. Simulation of hypersonic flows on unstructured
grids. International Journal for Numerical Methods in Engineering 1992;
34(2):569–606.

[21] Zienkiewicz OC, Wu J. Automatic directional refinement in adaptive anal-
ysis of compressible flows. International Journal for Numerical Methods in
Engineering 1994; 37(13):2189–2210.

[22] Chiandussi G, Bugeda G, Oñate E. A simple method for automatic up-
date of finite element meshes. Communications in Numerical Methods in
Engineering 2000; 16(1):1–19.

30



[23] Sieger D, Menzel S, Botsch M. RBF morphing techniques for simulation-
based design optimization. Engineering with Computers 2014; 30(2):161–
174.

[24] Hachem E, Feghali S, Codina R, Coupez T. Anisotropic adaptive meshing
and monolithic Variational Multiscale method for fluid–structure interac-
tion. Computers & Structures 2013; 122(0):88 – 100. Computational Fluid
and Solid Mechanics 2013 Proceedings Seventh MIT Conference on Com-
putational Fluid and Solid Mechanics.

[25] Cotela Dalmau J. Applications of turbulence modelling in civil engineerng.
PhD Thesis, Universitat Politècnica de Catalunya 2016.

[26] Bingham EC. Fluidity and Plasticity. McGraw-Hill, 1922.

[27] Oldroyd JG. A rational formulation of the equations of plastic flow for a
bingham solid. Mathematical Proceedings of the Cambridge Philosophical
Society 1 1947; 43:100–105.

[28] Duvaut G, Lions JL. Inequalities in Mechanics and Physics. Springer-Verlag
Berlin Heidelberg, 1976.

[29] Glowinski R. Numerical methods for nonlinear variational problems.
Springer, 1984.

[30] Huilgol R. Fluid Mechanics of Viscoplasticity. Springer, Berlin Heidelberg,
2015.

[31] Dean EJ, Glowinski R, Guidoboni G. On the numerical simulation of Bing-
ham visco-plastic flow: old and new results. Journal of Non-Newtonian
Fluid Mechanics 2007; 142:36–62.

[32] Huilgol R, You Z. Prolegomena to variational inequalities and numeri-
cal schemes for compressible viscoplastic fluids. Journal of Non-Newtonian
Fluid Mechanics 2009; 158:113–126.

[33] Huilgol RR, Kefayati GHR. Natural convection problem in a Bingham fluid
using the operator-splitting method. Journal of Non-Newtonian Fluid Me-
chanics 2015; 220:22–32.

[34] Sanchez FJ. Application of first-order operator splitting method to Bing-
ham fluid flow simulation. Computers & Mathematics with Applications
1998; 36 (3):71–86.

[35] Glowinski R, Tallec PL. Augmented Lagrangian and operator-splitting
methods in nonlinear mechanics. SIAM, Philadelphia, 1989; .

[36] Zhang J. An augmented Lagrangian approach to Bingham fluid flows in a
lid-driven square cavity with piecewise linear equal-order finite elements.
Computer Methods in Applied Mechanics and Engineering 2010; 199:3051–
3057.

[37] Bercovier M, Engelman M. A finite-element method for incompressible non-
newtonian flows. Journal of Computational Physics 1980; 36(3):313 – 326.

31



[38] Tanner RI, Milthorpe JF. Numerical simulation of the flow of fluids with
yield stress. Numerical Methods for Laminar and Turbulent Flow, Taylor C,
Johnson JA, Smith WR (eds.), Pineridge Press, 1983; 680–690. Proceedings
of the Third International Conference, Seattle.

[39] Papanastasiou TC. Flows of materials with yield. Journal of Rheology
(1978-present) 1987; 31(5):385–404.

[40] Souza Mendes PR, Dutra ESS. Viscosity function for yield-stress liquids.
Applied Rheology 2004; 14(6):296–302.

[41] Mitsoulis E. Flows of viscoplastic materials: models and computations.
Rheology Reviews 2007., British Society of Rheology, 2007; 135–178.

[42] Frigaard IA, Nouar C. On the usage of viscosity regularisation methods
for visco-plastic fluid flow computation. Journal of Non-Newtonian Fluid
Mechanics 2005; 127(1):1 – 26.

[43] Codina R. Stabilized finite element approximation of transient incompress-
ible flows using orthogonal subscales. Computer Methods in Applied Me-
chanics and Engineering 2002; 191(39-40):4295 – 4321.

[44] Codina R. A stabilized finite element method for generalized stationary
incompressible flows. Computer Methods in Applied Mechanics and Engi-
neering 2001; 190(20-21):2681 – 2706.

[45] Larese A. A coupled Eulerian-PFEM model for the simulation of overtop-
ping in rockfill dams. PhD Thesis, Universitat Politècnica de Catalunya.
UPC BarcelonaTech 2012.

[46] Moreno E, Larese A, Cervera M. Modelling of Bingham and Herschel–
Bulkley flows with mixed P1/P1 finite elements stabilized with orthogonal
subgrid scale. Journal of Non-Newtonian Fluid Mechanics 2016; 228:1 –
16.

[47] Rossi R, Larese A, Dadvand P, Oñate E. An efficient edge-based level set
finite element method for free surface flow problems. International Journal
for Numerical Methods in Fluids, DOI: 10.1002/fld.3680 2013; 71 (6):687–
716.

[48] Larese A, Rossi R, Oate E. Finite element modeling of free surface flow
in variable porosity media. Archives for Numerical Methods in Engineering
DOI: 10.1007/s11831-014-9140-x 2014; .

[49] Moreno E, Cervera M. Elementos finitos mixtos estabilizados para flujos
confinados de Bingham y de Herschel–Bulkley parte I: Formulación. Revista
Internacional de Métodos Numéricos para Cálculo y Diseño en Ingenieŕıa
2015; In press.

[50] Tezduyar T. Stabilized finite element formulations for incompressible flow
computations. Advances in Applied Mechanics 28, Hutchinson JW, Wu TY
(eds.). Elsevier, 1991; 1 – 44.

32



[51] Hughes TJR, Franca LP, Hulbert GM. A new finite element formulation for
computational fluid dynamics: VIII. The Galerkin/least-squares method
for advective-diffusive equations. Computer Methods in Applied Mechanics
and Engineering 1989; 73(2):173–189.

[52] Zienkiewicz OC, Zhu JZ. A simple error estimator and adaptive pro-
cedure for practical engineerng analysis. International Journal for Nu-
merical Methods in Engineering 1987; 24(2):337–357, doi:10.1002/nme.
1620240206.

[53] Dörfler W. A convergent adaptive algorithm for Poissons equation.
SIAM Journal on Numerical Analysis 1996; 33(3):1106–1124, doi:10.1137/
0733054.

[54] Nochetto RH, Siebert KG, Veeser A. Multiscale, nonlinear and adaptive
approximation. Multiscale, Nonlinear and Adaptive Approximation: Dedi-
cated to Wolfgang Dahmen on the Occasion of his 60th Birthday, DeVore R,
Kunoth A (eds.). chap. Theory of adaptive finite element methods: An in-
troduction, Springer Berlin Heidelberg: Berlin, Heidelberg, 2009; 409–542,
doi:10.1007/978-3-642-03413-8 12.

[55] Frey PJ, George PL. Mesh Generation: Application to finite elements. 2nd
edn., John Wiley & Sons, Ltd, 2008.

[56] D’Amato JP, Vénere M. A CPU–GPU framework for optimizing the qual-
ity of large meshes. Journal of Parallel and Distributed Computing 2013;
73(8):1127 – 1134.

[57] Dadvand P, Rossi R, Gil M, Martorell X, Cotela J, Juanpere E, Idelsohn
SR, Oñate E. Migration of a generic multi–physics framework to HPC en-
vironments. Computers & Fluids 2013; 80(0):301 – 309.

[58] Larese A, Rossi R, Oñate E, Toledo M. Physical and numerical modeliza-
tion of the behavior of rockfill dams during overtopping scenarios. Dam
Maintenance and Rehabilitation II. CRCpress Balkema. ISBN:978-0-415-
61648-5 2010; :479–487.

[59] Larese A, Rossi R, Oñate E, Idelsohn S. A coupled PFEM-Eulerian ap-
proach for the solution of porous FSI problems. Computational Mechanics,
DOI: 10.1007/s00466-012-0768-9 2012; 50 (6):805–819.

[60] Larese A, Rossi R, Oñate E, Toledo M, Moran R, Campos H. Numerical
and experimental study of overtopping and failure of rockfill dams. Interna-
tional Journal of Geomechanics (ASCE) 2013; :10.1061/(ASCE)GM.1943–
5622.0000 345.

[61] Demidov D, Shevchenko D. Modification of algebraic multigrid for effective
gpgpu-based solution of nonstationary hydrodynamics problems. Journal
of Computational Science 2012; 3(6):460 – 462, doi:http://dx.doi.org/10.
1016/j.jocs.2012.08.008. Next Generation Computational Scientists: Rus-
sian Federation.

33



[62] Moreno E. Elementos finitos mixtos estabilizados para flujos viscoplásticos.
PhD Thesis, Universitat Politècnica de Catalunya. UPC BarcelonaTech
2014.

[63] Peric D, Slijepcevic S. Computational modelling of viscoplastic fluids based
on a stabilised finite element method. Engineering Computations 2001;
18(3/4):577–591.

[64] Moreno E, Cervera M. Elementos finitos mixtos estabilizados para flu-
jos confinados de Bingham y de Herschel–Bulkley parte II: Soluciones
numéricas. Revista Internacional de Métodos Numéricos para Cálculo y
Diseño en Ingenieŕıa 2015; In press.

[65] Lubliner J. Plasticity Theory. Macmillan Publishing Company: New York,
1990.

[66] Mitsoulis E, Zisis T. Flow of Bingham plastics in a lid-driven square cavity.
Journal of Non-Newtonian Fluid Mechanics 2001; 101(1–3):173 – 180.

[67] Elias R, Martins M, Coutinho A. Parallel edge-based solution of viscoplastic
flows with the SUPG/PSPG formulation. Computational Mechanics 2006;
38(4-5):365–381.

[68] Burgos GR, Alexandrou AN. Flow development of Herschel–Bulkley fluids
in a sudden three–dimensional square expansion. Journal of Rheology 1999;
43(3):485–498.

[69] Alexandrou AN, McGilvreay TM, Burgos G. Steady Herschel–Bulkley fluid
flow in three-dimensional expansions. Journal of Non-Newtonian Fluid Me-
chanics 2001; 100(13):77 – 96.

[70] Sheen HJ, Chen WJ, Wu JS. Flow patterns for an annular flow over
an axisymmetric sudden expansion. Journal of Fluid Mechanics 11 1997;
350:177–188.

[71] Alleborn N, Nandakumar K, Raszillier H, Durst F. Further contributions
on the two–dimensional flow in a sudden expansion. Journal of Fluid Me-
chanics 1 1997; 330:169–188.

[72] Mitsoulis E, Huilgol RR. Entry flows of Bingham plastics in expan-
sions. Journal of Non-Newtonian Fluid Mechanics 2004; 122(1–3):45 – 54.
XIIIth International Workshop on Numerical Methods for Non-Newtonian
Flows.

34


	1 Introduction
	2 Non-Newtonian flow solver
	2.1 Governing equations
	2.2 Weak formulation
	2.3 Matrix formulation

	3 Mesh refinement strategy
	3.1 Error estimation
	3.2 Refinement algorithm

	4 Numerical results
	4.1 Poiseuille flow
	4.2 Plane extrusion
	4.3 Cavity flow
	4.4 Flow through a sudden expansion

	5 Concluding remarks

