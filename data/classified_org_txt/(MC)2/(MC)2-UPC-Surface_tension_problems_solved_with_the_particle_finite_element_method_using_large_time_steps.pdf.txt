


























































Surface tension problems solved with the Particle Finite

Element Method using large time-steps

Juan M. Gimeneza,, Norberto M. Nigroa,b, Sergio R. Idelsohna,b,c,d, Eugenio
Oñatec,d

aCentro de Investigación de Métodos Computacionales (CIMEC) - UNL/CONICET,
Predio Conicet-Santa Fe Colectora Ruta Nac 168 Paraje El Pozo, Santa Fe, Argentina.
bFacultad de Ingenieŕıa y Ciencias Hı́dricas, Universidad Nacional del Litoral, Santa Fe,

Argentina
cInternational Center for Numerical Methods in Engineering (CIMNE), Barcelona, Spain

dInstitució Catalana de Recerca i Estudis Avançats (ICREA), Barcelona, Spain

Abstract

In previous works [1, 2], the authors have presented an highly efficient

extension of the Particle Finite Element Method, called PFEM-2, to solve

two-phase flows. The methodology which uses X-IVS[3] to treat convection

terms allowing large time-steps was validated for problems where the gravity

forces and/or the inertial forces dominate the flow. Although that is the

target range of problems to solve with PFEM-2, most of real problems that

fall in these categories also includes other flow regimes in certain regions of

the domain. Maybe the most common secondary regime is when the surface

tension dominates, as an example when drops or bubbles are released from

the main flow, and this feature must be taken into account in any complete

numerical strategy.

Attending to that, in this work the treatment of the surface tension to

IFully documented templates are available in the elsarticle package on CTAN.
∗Juan Marcelo Gimenez
Email address: jmarcelogimenez@gmail.com (Juan M. Gimenez)

Preprint submitted to Computers & Fluids September 3, 2015

http://www.ctan.org/tex-archive/macros/latex/contrib/elsarticle


PFEM-2 is included. An implicit CSF methodology is employed together

with a coupling between the marker function with a Level Set function

to obtain a smooth representation of the normal of the interface which

allows an accurate curvature calculation. Examples for curvature calculation

and isolated bubbles and drops are presented where the accuracy and the

computational efficiency are analyzed and contrasted with other numerical

methodologies. Finally, a simulation of a jet atomization is analyzed. This

case presents the above mentioned features: it is a inertia-dominant flow with

a surface tension phenomena on drops and ligaments break up that can not

be neglected.

Keywords: PFEM, surface tension, two-phase flows, SCLSVOF

2010 MSC: 00-01, 99-00

1. Introduction

Solving efficiently multi-phase flows is still an open challenge. Although

the dynamics of single phase flows are well understood and can be solved

accurately without loss of efficiency, the computational modeling of two or

more phases is an underdevelopment field with growing interest. In multi-5

phase flows the behavior of the fluid at each phase depends on the interface

and its shape depends on the flow, then solving this complex coupling is a

challenging task.

According to the framework used to derive the formulation, the numerical

methods can be split in two main approaches, named Eulerian (fixed10

framework) and Lagrangian (mobile framework). Former formulations were

the first ones to be developed and they provide a natural evolution from

2



single-phase flows since most of Computational Fluid Dynamics (CFD)

software are formulated within a fixed framework, while latter formulations

offer a more natural choice for simulations in which deformations are not15

negligible, such as in multi-phase problems.

In the Eulerian strategies, the Finite Element Method (FEM) is a

standard tool to solve both structural and fluid problems. In the case of

standard FEM, the exact solution cannot be represented in the space spanned

by the shape functions, then they will not be able to capture it accurately,20

but an averaged solution will be obtained. This is particularly important

for multi-phase models, since domains composed by different phases usually

lead to discontinuities in the properties along the interface, which translates

into discontinuities in the unknowns or in their gradients. An alternative

to overcome this limitation is to use Enriched Finite Elements [4–7], which25

adds degrees of freedom to elements that are cut by the interface in order to

capture the part of the solution that escapes from the standard shape function

field. Coppola-Owen et al. [8] proposed a simple enrichment functions that

is capable of capturing accurately gradient discontinuities (kinks) in the

pressure field. Moreover, Ausas et al. [9] proposed a set of three enrichment30

functions that are able to capture both kinks and jumps in the pressure.

Another option in the Eulerian framework is the Finite Volume Method

(FVM), which has more followers than the FEM for fluid dynamics. The

domain is discretized with cells, and the solution is obtained by calculating

fluxes through the faces of each of them. This leads to a formulation that is35

automatically conservative on the fluxes, unlike FEM.

No matter which Eulerian strategy is used to solve the fluid dynamics,

3



an accurate and efficient simulation of interface evolution is of fundamental

importance. For example, in FEM, the use of enriched space is still

insufficient to simulate multi-fluids unless it is coupled with a second tool40

to locate precisely the position of the interface, necessary to build the

extra shape functions. It is possible to distinguish two broad classes of

computational methods used to describe the evolution of interfaces, namely:

interface capturing and interface tracking methods.

Purely Eulerian algorithms, which solve the fluid in a fixed underlying45

mesh, use capturing methods. In this approach the interface is determined by

an implicit function that is advected in the computational domain. Popular

methods of this type are the Level Set Method (LSM)[10], which has become

widely used when the interface undergoes extreme topological changes, e.g.

merging or pinching off; and the Volume of Fluid (VoF) technique[11], which50

is naturally employed with FVM.

The LSM consists in using a distance function that is convected according

to the fluid velocity. This function represents the distance from a point to the

interface. By definition, the interface will be located where its value is zero.

This level function is variable in the space, but if it has large variations55

in time, after some time steps it does not represent the distance to the

interface anymore, leading to diffusion of the interface and mainly loss of

mass. For this reason a reinitialization of the level set must be done to

recover a distance function which guarantees that the properties are better

conserved. Moreover, an Eulerian advection of the level set function produces60

large diffusion and requires small time-steps to achieve accurate solutions.

On the other hand, VOF is based on the conservative nature of the

4



FVM, where instead of tracking an interface, it is more natural to save the

content of different phases at each cell and define the shape and position

from this data later on. The method defines a function that is the fraction65

occupied by one of the phases in each cell of the domain. Therefore the

interface position is not tracked, but the fraction of fluid instead. Once fluids

have been convected among cells, the interface position can be reconstructed

(accepting some accuracy loss). This exchange between cells, inherited from

the conservative nature of the FVM, allows to guarantee mass conservation.70

This is an important advantage respect to the LSM, in which mass loss is a

critical topic which must be addressed and treated. Moreover, the FVM is

very robust and is likely to be the most used one in commercial/widespread

codes. As an example of application, OpenFOAM R©[12] uses this strategy to

solve multi-fluid problems.75

Formulations clustered in the Lagrangian framework are a more natural

choice for simulations where there are large deformations. The original

idea, proposed by Monaghan et al. [13] and later works applied to

fluid mechanics[14], was a meshless method named Smoothed Particle

Hidrodynamics (SPH). Using particles that are advected carrying its own80

properties over the domain, they are able to almost avoid the numerical

diffusion. In the context of incompressible flow, the Lagrangian perspective

makes it possible to use a material derivative formulation where the absence

of the non-linear convective terms transform the Navier-Stokes system into

a transformed linear coupled problem between points and velocities. In85

the case of multi-phase problems, the calculation of the interface evolution

is naturally done using particles [15, 16]. However most of Lagrangian

5



formulations have the uncomfortable drawback of requiring a particle position

treatment. In the case of meshless methods a constant track of all the

moving points must be kept where searching algorithms have to be used90

to speed up the computational time to calculate the interaction forces.

On the other hand, the mesh-based methods must lead with the necessity

of constructing or controlling the mesh quality during each time-step the

simulation if the accuracy of the solution has to be maintained. Searching

algorithms, evaluation of the mesh distortions or the re-meshing processes95

are always computationally expensive and it would be interesting to explore

the possibility of avoiding those steps.

Alternatives, that combines both Eulerian and Lagrangian tools, have

provided to be a good alternative to pure methods. In [17] a pure Eulerian

solver for the fluid is used, but Lagrangian marker particles are used to100

improve the LSM, then the interface tracking. This method proves to be

more accurate than the pure Eulerian or pure Lagrangian counterpart in

the tracking of the interface. Another option is the named Particle Finite

Element Method (PFEM)[18] which consists of using a set of particles that

define the nodes of a finite element mesh. Since fluids have no deformation105

limit, remeshing must be done at each time step. As all Lagrangian methods,

the PFEM offers a more natural solution to problems where the particles of

the domain can move freely. Unlike LSM, there is no need to recalculate

the surface since the location of the interface is obtained trivially; since

each particle is associated with a material no extra function is needed.110

Combining the original idea of Particle in Cell (PIC)[19] where a fixed mesh

is used to calculate forces and pressures and moving particles to convect

6



properties, the PFEM method was extended leading to a novel strategy

so-called PFEM-2 method[3][20]. This proposal not only tracks material

propertiesas density, viscosity, etc., therefore eliminating the need of the115

non-linear convective term. Also, using an improved explicit integration

named X-IVS (eXplicit Integration following the Velocity Streamlines) added

to an implicit correction of diffusive terms, there is no limitation in the time

step, being the required precision the only bound for the time-step[21]. The

enhanced PFEM-2 version to solve multiphase problems, presented in [1] and120

validated in [2], preserves the large time-step goodnesses of the single-phase

strategy, also includes enrichment strategies to capture discontinuities in the

pressure gradient, i.e. pressure kinks. However, the range of application of

this strategy does not cover an important group of two-phase problems such

as those where the surface tension is dominant.125

In those problems, a surface tension model must be implemented at the

interface being a validated strategy the Continuous Surface Force model

(CSF) [22] which is based on an approximation of the interface curvature

from the gradient of the marker function. In the case of VoF function,

the gradient cannot be calculated accurately since it is a discontinuous step130

function, and its discrete approximations are known to generate unphysical

spurious currents at the interface [23]. Strategies to reduce the spurious

currents based on either interface reconstruction or smoothing kernels are

available, a literature review can be found in [24], but most of them must

be employed only on structured meshes. The coupling achieved by advecting135

the interface using the conservative VoF function, calculating the interface

normal using the smoothed LS function and updating the physical properties

7



from a smoothed Heaviside function is an improved strategy called CLSVOF

[25]. In [26], Albadawi et al. present a less expensive option called S-CLSVOF

which uses an one-way coupling strategy. This approach was successfully140

applied on surface tension dominant problems.

The current work proposes a strategy to enlarge the capabilities of PFEM-

2 adding the S-CLSVOF method so as to improve the solution of surface

dominant problems. In Section 1 the governing equations are presented

together with the numerical methodology proposed to solve it, doing focus145

on the interface and surface tension term treatment. Next sections present

a set of test properly chosen to show the capabilities of the strategy:

starting from pure-convective tests to show the goodness of the Lagrangian

framework to transport with neither diffusion nor distortion an arbitrary

shape, next surface tension dominant cases where the interface treatment150

and the method accuracy are quantitatively tested, being PFEM-2 forced

to enlarge the time-step where other numerical approaches can not work.

Finally, a preliminar simulation of a jet atomization problem is presented.

In this type of inertial dominant problem PFEM-2 has demonstrated to be

the best numerical option, however a proper treatment of surface tension155

must be taken into account if an accurate solution of ligaments and droplets

formation is searched.

2. Equations and Numerical Formulation

2.1. Governing Equations

The problem to solve is the case of unsteady laminar flow of two

immiscible incompressible fluids. Both phases are assumed to be viscous and

8



Newtonian. Isothermal conditions are assumed, and reaction mass transfer

and phase transition are not considered. Taking into account all the physical

assumptions, both the fluids are then governed by the incompressible Navier-

Stokes equation with additional surface tension force along the interface.

The government equations include the continuity, momentum, and interface

capturing advection equations which, written in the Eulerian framework,

read: 


ρ

[
∂V

∂t
+ V · ∇V

]
= ∇ · σ + ρg + FΓ

∇ ·V = 0

∂λ

∂t
+∇ · (λV) = 0

(1)

where ρ is the fluid density, V the fluid velocity vector, g the gravitational

acceleration, and σ = −pI + µ
(
∇V + (∇V)T

)
with p the scalar pressure

and µ the dynamic viscosity of the fluid. The fluid domain is defined for a

single mixture where the function λ is used to distinguish between the two

phases. The calculation of the fluid physical properties, the density ρ and

viscosity µ, vary according to the scalar field λ. The surface tension force FΓ

is the concentrated load along the interface, defined as

FΓ = σκδΓnΓ (2)

where σ is the surface tension coefficient between the two phases, κ is the160

local curvature of the interface, δΓ is the Dirac delta function that localizes

the surface tension force to point load on the interface and nΓ as the unit

normal to the interface.

Employing the material derivative instead of the temporal derivative plus

the convective term, the Equation (1) can be reformulated in its Lagrangian165

9



version. In this framework, a kinematic problem has to be solved in order to

follow the particle trajectories, which leads to a equation system as:




ρ
DV

Dt
= ∇ · σ + ρg + FΓ

∇ ·V = 0

Dλ

Dt
= 0

Dx

Dt
= V

(3)

Due to the multiplication of the velocity and its gradient, the convective

term in Equation (1) is non-linear. The presence of this non-linear

term demands iterative algorithms to converge to the solution including170

linearisation techniques to solve the system. On the other hand, the Navier

Stokes equations written in a Lagrangian framework lead to a system of linear

equations due to the absence of the convective term. Moreover, the resulting

system changes the non-symmetric equations in the Eulerian frame into a

symmetric and positive definite one.175

2.2. Discretization Strategy

The PFEM-2 algorithm consists of solving the equations presented in

Section 2.1 using a mixed Eulerian-Lagrangian discretization. This choice

leads to a simplification of complex terms, as the convective one, and to

a higher accuracy in the results due to lower error in the approximation180

comparing with its pure Lagrangian or pure Eulerian counterparts [27]. As

it was mentioned, since material points move and the configuration changes

continuously in time, it is necessary to couple this set of equations with a

10



strategy that solves for the movement of the material points. This is achieved

in PFEM-2 by using a set of Lagrangian particles combined with a fixed FEM185

mesh as is shown in Figure 1. The main advantage of using the Lagrangian

particles is that the convection is obtained by simply moving the particles

across the space and therefore the system to be solved does not have the

convective term. The remaining set of equations will be calculated on the

mesh employing a typical fractional step strategy.190

Figure 1: Discretization employed in PFEM-2. A cloud of Lagrangian particles are

advected over a fixed FEM mesh. Nodal states are projected from neighbor particles

states. The neighbor particles are those which are inside the grey region.

It must be remarked that the particles used in the scheme do not represent

a fixed amount of mass but rather material points with certain properties and

velocity. This allows for different amount of particles to be used depending on

the zone to ensure a better accuracy on those areas. Also, it should be noted

that in the algorithm presented in this document, the particles are only used195

to transport the information (solve convective terms of equations). However,

in certain cases where the viscosity is low and there is only one fluid phase,

it is possible to solve partially the momentum equation in the particles, as

explained by [20]. Although this strategy leads to higher accuracy in the

cases analyzed in the article, it lacks the generality that is required for the200

11



simulation of two-phase problems. Readers interested in a deep explanation

of method basis can read [3, 20] and the extension to two-phase problems in

[1, 2] or to fluid-structure interaction in [28].

2.3. Interface Treatment and Surface Tension

In a PFEM-2 simulation, the Lagrangian particles are integrated following

a strategy called X-IVAS [3], where the streamlines fixed at time n are

employed to update the particle movements and velocities. In order to extend

this approach to track the interface, each particle is initially marked with a

sign function λp depending if it belongs to the first or second phase, and this

value is preserved over the particle during the entire simulation guaranteeing

boundedness. After X-IVS step, the particle data, i.e. velocity and marker

function, must be projected to the nodes to continue with next algorithm

steps. Although projection strategies are out of scope of this work (a review

and recent improvements of this step can be found in [29]), in order to fix

ideas the original algorithm used by PFEM-2 [2] to project a given field

φ between nodes using subindices (j) and particles using subindices (p) is

presented in this work, which is of the following form:

φj =

∑
P

φpWj(xp)∑
P

Wj(xp)
(4)

where the function Wj, associated with the node j, can be either the typical205

kernel functions used in particle methods such as SPH[13] or the linear shape

functions elevated to a power α (it is Wj(x) = Nj(x)
α), while xp is the

position of the particle p with state φp and P is the number of particles in

a region around the node j. The region around the node j can be selected

12



in different ways, being a possibility choosing the zone colored with grey in210

Figure 1. Mesh nodes thus obtain real values after the projection which can

be different to the integer values ±1 that the particles transport. Finally,

the interface is defined as the set of points that satisfy the equation λ = 0.

Once projected over nodes, the function λ has similar properties to a VoF

function: the mass is preserved but the discontinuous shape impossibilities

an accurate gradient calculation then a poor curvature is estimated which

often lead to unphysical flows around the interface when surface tension

is included, resulting in unrealistic interface shapes. As it was mentioned,

there are several strategies to overcome this limitation, and in this work the

approach called S-CLSVOF [26] is selected. An advantage of this approach

is that only the λ function is needed to advect (in contrast with CLSVOF),

then the initial level set-like function φ0 is obtained following

φ0 =
3

4
∆xλ (5)

The main criterion in choosing this value is to satisfy an initial value of φ

which is close to the mesh step size. This initial function is a signed function

since it has a positive value in the denser fluid and a negative value in the

lighter. However, in order to obtain a |∇φ| = 1 around the interface, the

function is then re-distanced by solving the re-initialization equation:

∂φ

∂τ
= sign(φ0)(1− |∇φ|) (6)

with the initial condition of φ(x, 0) = φ0(x), being τ an artificial time

discretized with ∆τ = 0.1∆x. Because the re-distancing starts from the215

initial interface and moving towards both fluids, and we are interested only

13



on the zone around the interface, only few iterations φcorr =
�

∆τ
are required,

with � representing the width around the interface, typically 1.5∆x.

After solving (6) the φ is now a continuous smooth function around the

interface, which helps in determining accurately the interface normal n as

usual in LSM, it is

n =
∇φ
|∇φ|

(7)

Hence, it provides a more precise and smoother interface curvature

κ = ∇ · n (8)

Some details are important to remark when Equations (7) and (8) are solved

in the FEM framework. An initial strategy is to replace (7) into (8), and

to use weighted residuals with the linear piecewise trial functions N solving

directly for κ, it is∫
Ω

Nκ dΩ = −
∫

Ω

∇N
∇φ
|∇φ|

dΩ−
∫

Γ

N
∇φ
|∇φ|

· η dΓ (9)

However this approach leads to spurious results because ∇φ is discontinuous

between the elements. A further option which obtain better results is first

obtain a field n̂ with continuous ∇φ between the elements (linear field in the

elements), doing ∫
Ω

Nn̂ dΩ =

∫
Ω

N∇φ dΩ (10)

then, obtain the curvature as usual∫
Ω

Nκ dΩ = −
∫

Ω

∇Nn dΩ−
∫

Γ

Nn · η dΓ (11)

with n =
n̂

|n̂|
and η the normal to the boundary Γ.

14



One of the most difficult tasks in front-capturing techniques is to

accurately identify the interface to directly impose the term FΓ. This

difficulty can be alleviated by interpreting the surface tension as a continuous

body force spread across a transition region of thickness avoiding the

need of reconstructing the interface explicitly. In this way, the continuum

surface force model (CSF) of Brackbill et al. [22] provides an approach to

approximate the term of surface tension force FΓ as a force per unit volume

as

Fσ = σκ∇φδs(φ) (12)

where δs is the regularized interface delta function defined as follows

δs(φ) =


 0, φ > |�|1

2�
(1 + cos(πφ

�
)), φ ≤ |�|

(13)

It has been presented [22, 30] that if the surface tension term on Equation

12 is discretized explicitly, i.e. the surface tension forces are evaluated on the

interface at the previous time step, the stability of the scheme imposes the

following restriction on the time step size ∆tmax:

∆tmax =

√
ρ∆x3

σ
(14)

With this restriction the propagation of capillary waves is resolved and their220

unstable amplification avoided. The Equation 14 can be rather limiting for

fine meshes and large surface tension coefficients then is a relevant issue in

order to preserve the large time step proposed by PFEM-2. A solution to

partially overcome this limitation is to treat the force term (12) implicitly.

In this proposal, the surface tension term is included into the implicit225

calculation of the momentum equation over the mesh using the updated

15



interface position. This helps to extend the time step limitation but is not a

fully implicit approach because the interface movement is not coupled with

the surface tension imposition. An analysis of the stability of this proposal

is presented in Section 4.1.230

Finally, the material properties are calculated with the smoothed

Heaviside function H

H(φ) =




0, φ < �

1
2

[
1 + φ

�
+ 1

π
sin(πφ

�
)
]
, φ ≤ |�|

1, φ > �

(15)

ρ(φ) = ρ1 + (ρ2 − ρ1)H(φ) (16)

µ(φ) = µ1 + (µ2 − µ1)H(φ) (17)

It must be noticed the relevance of the parameter � in this strategy.

This parameter, which determines the extent of the interface smearing, has235

been analyzed in other works [26], concluding on the necessity of using

the previously mentioned value that preserves a narrow thickness. There

are alternative sharp interface methods such as the Ghost Fluid approach

[31] which respects jump discontinuities across the interface and avoids an

interface thickness. However, in these type of strategies the extension to240

unstructured meshes is far from straightforward. A FEM framework strategy

to treat surface tension without thickness is employing enriched shape

functions to treat pressure jumps as proposed by Ausas[9]. In spite of the

possibility of capturing jumps, the curvature calculation still being a difficult

task. Height functions [32] seems to be the best option, but its formulation245

for 3d unstructured meshes is still an open challenge. The Laplace-Beltrami

16



formulation [33] appears as a interesting alternative because the curvature

does not appear explicitly. However, this strategy also presents drawbacks: it

is only accurate with small surface deformations, and requires the computing

of the interfacial mesh leading to expensive computations.250

2.4. PFEM-2 with surface tension

In order to decouple the unknown fields: velocity and pressure, the

projection method known as fractional step [34] is chosen in PFEM-2. This

segregated strategy consist on three main steps: velocity predictor, pressure

calculation and velocity corrector. The particularity of this predictor step255

is that the convective term is decoupled from the rest of the momentum

equation: the Lagrangian formulation allows to solve it only transporting

the particles, which is done employing X-IVS. Then, the particles states are

projected to nodal positions, and the remaining terms (including surface

tension) are solved implicitly over the mesh, finishing the predictor step with260

a predictor velocity V̂n+1 that satisfies the boundary conditions. Pressure

calculation pn+1 and velocity correction to obtain Vn+1 (a divergence free

field) are done as usual, but the latter step also includes the particle velocity

updating.

It is assumed that all fluid variables are known at time tn for both the265

particles and the mesh nodes. Subindexes ()j y ()p represent a generic mesh

node j and a generic particle p respectively (P represents the number of

particles). Let N the finite element linear basis functions. According to

this notation, the steps are presented in Algorithm 1, where x is a spatial

coordinate, δp = pn+1− pn, δV = V− ̂̂V, θp can be 0 or 1 depending on the270
pressure restart choice. Also, θµ can be 0 or 1 depending on the necessity

17



or not of an accurate diffusion calculation when large Fourier numbers

are employed, F =

∫
Ω

Nj (ρg + Fσ) dΩ, and M and K are the standard

mass and stiffness matrices of any FEM assembling. The computational

implementation was done extending the high performing library presented in275

[21] and each test presented in this work was simulated with that house-made

code.

3. Interface evolution Tests

This section will deal with an exhaustive validation of the proposed

PFEM-2 method to transport arbitrary shapes with neither interface280

disturbances or mass loss. It is well known that employing the Lagrangian

scheme is relatively easy to solve pure-advective problems as presented in

this section, but we consider that it is important for the reader to reach

a strong conclusion about the goodness of this framework in contrast with

the problems observed with the typical Eulerian schemes. The latter are285

represented by the suite OpenFOAM R©which implements a VoF strategy with

interface compression. As will be shown, the larger time step is employed,

the more relevant are the differences between the frameworks.

3.1. Rigid Body Rotation of Zalesak’s Disk

This test consists in the advection of a region composed of a circle with a

slot [35]. If the interface tracking is accurate enough, after several revolutions,

the shape must remain identical. The computational domain employed is

Ω ∈ R2 : [0; 100] × [0; 100]. The advected region is a circle centered at

(50; 75) with a radius of 15 and a slot of width 5 and height 25. The velocity

18



field is a rigid body rotation around the center of the domain with a period

of 628 time units:

u = (π/314)(50− y), (18)

v = (π/314)(x− 50) (19)

The grid has 100 points in each direction, conforming a cartesian mesh (in290

the case of PFEM simulations the mesh was split into 20000 triangles).

The Courant number used in simulations is aproximately CFL = 4.5.

Both the initial field and the solution after two revolutions are shown on

Figure 2. In the case of PFEM simulation, approximately five particles by

element were used. Most relevant OpenFOAM R©settings are: SuperBee as the295

divergence scheme for the linear term in volume fraction advection equation,

MULES as the time integration scheme, the number of alphaSubCycles is

20 (to guarantee interface Courant number less than 0.5) and the interface-

compression factor cAlpha is set to 1.

PFEM evolution shows a good agreement with the expected result300

(shape preservation). Some small errors, which are more evident when the

magnitude of velocity is higher, appear due to approximate a curve with a

sequence of straight trajectories. Even though in OpenFOAM R©simulation

the interface-compression method combined with the advection scheme

avoids numerical diffusion, they modify the disk shape excessively, finishing305

in a poor prediction of the final status.

3.2. Single Vortex Case

While Zalesak’s disk test is a good indicator of numerical diffusion in an

interface-capturing method, it does not test the ability to preserve small scale

19



Figure 2: Zalesak’s disk results after two full revolutions with 100 grid point per direction

and CFL = 4.5. The grey region represents the initial condition.

structures of the fluid flow. A well known test to evaluate the ability of the

method to solve structures of different sizes and their evolution is given by

the vortex-in-a-box problem introduced by Puckett et al. [36]. The difficulty

of this tests is that requires the solution of an interface stretching problem.

The computational domain is Ω ∈ R2 : [0; 1] × [0; 1], where the interest

region is a circle centered at (0.5; 0.75) with a radius of 0.15, advected with

a velocity field defined by the stream function

ψ(x) =
1

π
sin2(πx) sin2(πy) cos(

πt

T
)

being the velocity components

u = ψx = sin
2(πx) sin(2πy) cos(

πt

T
)

v = −ψy = − sin2(πy) sin(2πx) cos(
πt

T
)

The grid has 256 points in each direction, and the Courant number used in

simulations is aproximately CFL = 4.8.

20



The setting employed for each numerical method in this case is310

almost equal to the previous test, with the only one difference that in

OpenFOAM R©the interface-compression factor cAlpha is set to 0.25 to give

more stability through relaxing in some level the strong sharpness imposition.

Using a larger factor, the simulation turns unstable. PFEM-2 t=TOpenFOAM t=Tx
Figure 3: Single vortex test using 256 grid points per direction and CFL = 4.8 (T = 8).

Grey region represents the initial condition.

The results presented in Figure 3 show, for PFEM-2, good agreement with315

the expected result (shape preservation) after the cycle. Although the first

half of the evolution is well captured by OpenFOAM R©, the reconstruction of

the original shape is not good enough.

3.3. LeVeque Deformation Case

LeVeque [37] proposed a three dimensional incompressible flow field which320

combines a deformation in the x− y plane with one in the x− z plane. This

21



problem can be considered an extension of the previous case, requiring the

correct capturing of the stretching phenomenon in three dimensions.

• The computational domain is Ω ∈ R2 : [0; 1]× [0; 1]× [0; 1].

• The advected region is a circle centered at (0.35; 0.35; 0.35) with a325

radius of 0.15.

• The velocity field is given by

u = 2 sin2(πx) sin(2πy) sin(2πz) cos(
πt

T
)

v = − sin(2πx) sin2(πy) sin(2πz) cos(
πt

T
)

w = − sin(2πx) sin(2πy) sin2(πz) cos(
πt

T
)

• The grid has 50 points in each direction.

• Courant number used in simulations is aproximately CFL = 4.

Since the flow is reversed for t > T/2, after one period the function must

return to its original shape. Figure 4 shows that PFEM-2 successfully330

recovers almost the initial shape, which is a very complicated task for other

numerical strategies [38, 39].

22



(a) t = 0 (b) t = T/2 (c) t = T

Figure 4: Snapshots of 3D deformation field test with PFEM-2. There were used 50

points per direction and CFL = 4. Results were smoothed by post-processing purposes.

23



Algorithm 1 - Time-Step PFEM-2 for two-phase incompressible fluids.
1. Convective Stage: 


xn+1p = x

n
p +

n+1∫
n

Vn(xτp) dτ

̂̂
V
n+1

p = V
n
p

λn+1p = λ
n
p

2. Projection Stage:

Mij
̂̂
V
n+1

j = Mip
̂̂
V
n+1

p

MLijλ
n+1
j = Mipλ

n+1
p

3. Momentum Stage:

(
M(

ρ

∆t
) + K(µ)

)
V̂n+1 = M(

ρ

∆t
)
̂̂
V
n+1

− θpGpn + Fn+1

4. Poisson Stage:

K

(
∆t

ρ
+ τ

)
pn+1 = BV̂n+1 + K(

∆t

ρ
)pn + B(τ)πn

5. Correction Stage:

M(ρ) + Vn+1 = M(ρ)V̂n+1 −∆tG
(
pn+1 − pn

)
+ θµK(

µ

ρ
)
(
Vn+1 − V̂n+1

)
ρpV

n+1
p = ρp

̂̂
V
n+1

p +
∑
j

δVn+1j Nj(x
n+1
p )

24



4. Surface Tension Test cases

In this section several two-phase incompressible tests are presented. The

selected cases are focused in problems where the surface tension play an335

important role. Therefore, the algorithm 1 is exhaustive tested in different

situations. The preliminary case analyzes the stability of the surface tension

modeling measuring the spurious currents and its dissipation level. Being

the advection almost negligible, this case allows to show that the Eulerian

parts of the algorithm works as other standard codes. Next case consists340

in a bubble which rises due to buoyancy force under two different regime,

one more rigid where the surface tension is stronger and other more inertial

where a skirted shape must be found. An analysis of the parasitic currents

and mesh convergence is done for the case where the gravity is neglected.

Moreover, the same cases simulated with larger time-steps are stable but345

with more errors when surface tension increases, in contrast to Eulerian

algorithms which tends to turn unstable. The second test is a standing wave

dominated by capillarity. Although this problem is not the most indicated to

be solved by PFEM-2 due the lack of inertial dominance, the method shows

good accuracy even using reasonable large time-steps. Finally, a preliminary350

simulation of a primary atomization of a liquid jet is done. Being an inertia

dominated case, large time-steps can be employed but a proper capture of

drops and ligaments depends on the local Weber number.

Herein, the efficient distributed-memory implementation presented in [21]

and extended to the free-surface treatment (see Algorithm 1) is used to355

simulate each of next cases presented. Also, the numerical parameter θp

is set to 0 in every case so as to restart the pressure at each time step to

25



allow larger time-steps and 3 iterations of steps 4 and 5 are done to improve

the global first order [2]. On the other hand, the parameter θµ is set to 0

except when the Fourier number Fo = µ∆t/∆x is greater than 10 where is360

set to 1. The latter allows to increase the accuracy of the fractional step

strategy for highly diffusive problems.

4.1. Stability Analysis

The most critical numerical artifact introduced by the modeling of the

surface tension is the generation of spurious currents which appear in the365

form of vortices around the interface. The employed method, CSF, is

not excepted from that drawback. These flows, also named as parasitic

currents, are generated solely due to numerical artifacts through the discrete

approximation of the interface which acts as a perturbation on the physically

smooth interface.370

If the surface tension term is discretized explicitly, i.e. the surface tension

forces are evaluated at the interface at the previous time step, the stability

of the scheme places a stability condition on a time step [22] as

∆t <

√
ρ∆x3

σ
(20)

which results in a limiting for fine meshes and large surface tension

coefficients. The implicit treatment of surface tension terms is shown to

alleviate this restriction [40]. Instead of evaluating the surface tension with

the interface at the previous time-step n, the PFEM-2 employees the interface

at time n + 1. However, the interface movement is not coupled with the375

surface tension force calculation leading to a sort of semi-implicit scheme.

26



Then, to evaluate the range of stability of this methodology, an analysis

similar to that presented by Deshpande et al. [41] is done here.

In order to include the effect of viscosity in the case of low Reynold

number, Galusinski and Vigneaux [42] have revisited the time step constrain

leading to the following generalized time step criterion

∆t ≤ τσ =
1

2


C2µ∆xσ +

√(
C2
µ∆x

σ

)2
+ 4C1

ρ∆x3

σ


 = 12

{
C2τµ +

√
(C2τµ)

2
+ 4C1τ 2ρ

}
(21)

with τµ and τρ two independent time-scales depending on the viscosity and

density respectively. The constants C1 and C2 are independent of fluid380

properties and are only solver specific and in this work are determined

experimentally from the simulations.

Following [41], the proposed case has a domain of 1 × 1[mm] discretized

with a uniform grid of ∆x = 10[µm]. Centered is a droplet of radius

R = 0.25[mm]. Both density ρ and viscosity µ are the same for the fluid385

inside or outside the drop and their value depend on the time scale considered.

The coefficient of surface tension (σ = 0.01[N/m]) and simulation time step

( ∆t = 10−4[s]) are always maintained constant. Gravity is neglected in all

simulations. The final simulation time is set to Tf = 10[s].

The set of cases simulated covers the values of τρ/∆t and τµ/∆t desired390

varying ρ and µ properly. The Figure 5 presents the stability charts for the

behavior of each test. Three categories of simulations are taken into account:

• Stable: kinetic energy calculated over the entire domain decays and

center of mass of the droplet remains fixed.

• Unstable type 1: simulation ends, but the center of mass of the droplet395

27



Current work

Deshpande et. al.

Figure 5: Stability chart for integration times Tf = 10[s]. Dashed lines represent the

boundary between the stable and unstable computations found by Deshpande [41] and by

the current work with PFEM-2.

finishes displaced more than the size of one element of the mesh and/or

the kinetic energy does not decay.

• Unstable type 2: simulation crashes after completion.

From the results, the constants C1 = 0.1 and C2 = 1 can be obtained. It

should be noted that this set of simulations has an ideal number of Reynolds400

of Re = 0 which is in the opposite side of a proper application range of

Lagrangian strategies. Then, which is actually tested is the performance

of the fractional step method employed by PFEM-2 to couple velocity

and pressure plus a constant projection/interpolation from/to particles.

Comparing with the reference work of Deshpande et al. [41], PFEM-2 is405

more robust against the density time scale than FVM+VoF, but it is weaker

regarding to viscosity time scale. The former is expectable because the

density is related to the unsteady and inertia terms. The latter can be

28



understood due to either excessive noise at interface because of the use of

particles, which requires more viscosity to dissipate that phenomena than410

Eulerian strategies and due to failures of the first order fractional step where

the iterations do not recompose the solution. Anyway, it has been shown by

Deshpande that the generation of spurious currents is only secondary for a

moving interface, therefore the time step analysis shown here represents a

conservative estimate. It is expected when the convection takes part in the415

simulation, the advantages of PFEM-2 will be clearer.

4.2. Rising Bubble Case

A widely used surface-tension benchmark is the case of an air bubble

rising in a liquid column. Beyond qualitative results, as the bubble shape,

Hysing et. al. [43] have presented a set of quantitative results obtained420

with several CFD multiphase codes solving two cases varying some physical

properties. The first one considers a bubble in the ellipsoidal regime which

undergoes moderate shape deformation, while in the second one the bubble

belongs to the skirted regime and experiences much larger deformation. Both

fluids are Newtonian, incompressible and isothermal, with properties listed425

in Table 1.

Test ρ1 ρ2 µ1 µ2 g σ Re Eo

1 1000 100 10 1 0.98 24.5 35 10

2 1000 1 10 0.1 0.98 1.96 35 125

Table 1: Physical parameters for the rising bubble case.

In the Fig. 6 the case configuration and the boundary conditions are

29



presented. The initial condition is null velocity with the phase marker

imposed as shown. In comparison with other reported works, for example

[44], where the initial condition had to be relaxed in order to smooth430

the interface between the two regions, with the current strategy this pre-

processing is not necessary because the initial marker field is imposed over

particles then projected to the nodes, obtaining a naturally smoothed field

over the mesh which diminishes, but not remove, the typical parasitic current

of staircase profiles.435

Figure 6: Rising bubble case configuration and boundary conditions.

The reference solutions presented in [43] have been run with three different

numerical approaches: the TP2D of Turek [45], the FreeLIFE of Parolini &

Burman [46], and the MooNMD of Ganesan et al. [47]. They all use the finite

element method, but the two first approaches describe the interface with the

level set, while the latter tracks it in an arbitrary Lagrangian-Eulerian way.440

In [44] Klostermann et al. validated the results of the open source library

OpenFOAM R©, which implements the finite volume method, and particularly

30



for two-phase flows a VoF strategy with interface compression. The following

bubble quantities are used to compare the results:

• Shape at the final time t = 3[s]445

• Center of mass: xc =
∫

Ω2
x dΩ2∫

Ω2
1 dΩ2

• Rise velocity: Vc =
∫

Ω2
V dΩ2∫

Ω2
1 dΩ2

The computations have been performed on structured meshes divided

in triangles with element sizes of h = 1/40, 1/80, 1/160 (levels 1, 2 and 3

respectively), to reach the final simulation time (Tf = 3[s]). During the first450

group of tests a grid size-dependent time-step of ∆t = h/2 is employed in

order to calibrate the simulation to obtain similar results to the reference.

Once proved, the time step is increased to analyze the stability and accuracy

of the method when it is enforced.

4.2.1. Zero Gravity Condition455

In order to estimate some first errors and uncertainties of the numerical

model a transient simulation with surface tension but without gravity is

carried out. The simulations were done up to reach Tfinal = 3[s]. The

pressure jump over the droplet interface and parasitic velocities are analyzed

in the simulation. The value of the pressure jump over the interface due to

surface tension in two dimensions can be analytically calculated as

∆p =
σ

R
(22)

where R = 0.25 is the bubble radius. Using the physical conditions of the

most surface-tension dominant case (Test 1), it leads to ∆p = 98[Pa]. A

31



normalized pressure P can be obtained in the case of a static bubble, it

should read in Ω1: P = 0 and in Ω2: P = 1 with a sharp pressure jump at

the surface.460

Various numerical methods are known to generate spurious artificial

numerical flows instead of keeping steady cylindrical drops [48]. The order of

magnitude of parasitic velocities up can be estimated according to the surface

tension coefficient σ and dynamic viscosity µ of the bubble:

up =
Cpσ

µ
(23)

where Cp is a numerical constant, a characteristic of the quality of the

numerical modeling of surface tension forces (a non-dimensional number

similar to a capillary number). The optimal value of Cp is zero. Typical

values of Cp are found between 10
−3 and 10−10.

A set of simulations were done employing different numerical strategies465

and various meshes in order to calculate the curvature and comparing results.

The Table 2 presents the tests and its numerical results, while Figure 7

shows the final pressure field for some simulations. In the set of cases

presented, spurious velocities are found on both sides of the interface, which

are interpreted as parasitic currents. These observations are in agreement470

with those found in, for example, [44, 48] for a static viscous droplet in

equilibrium. The current proposal of PFEM-2 with S-CLSVOF + CSF was

tested employing both curvature FEM calculation strategies above cited, i.e.

using discontinuous and continuous normals (Equations 9 and 11) showing

a clear advantage for the latter option in the parasitic current indicator, i.e.475

Cp, and similar results about the pressure jump found P . On the other

hand, the strategy that solves with VoF + interface compression + CSF is

32



also included in the analysis. This approach, employed by the open source

library OpenFOAM R©and analyzed in [44], shows acceptable accuracy only

when grids composed by quads are used. In the case of meshes of triangles,480

the curvature results are noisy leading to unphysical spikes (overshoots and

undershoots) of the pressure and large spurious currents.

So as to completion, the Table 2 also presents the results obtained with

PFEM-2+CSF but without smoothing, i.e. calculating the normal and

curvature directly with the marker function λ. As expected, the spurious485

currents are one order above than the results with smoothing and the pressure

jump is over estimated.

The employment of meshes composed by triangles leads to more efficient

implementations of the PFEM-2 method, therefore a solution for the

curvature in this type of meshes is essential so as not to resign performance.490

The results presented in this subsection guarantee accurate enough solutions

for PFEM-2. However, one of the most important drawbacks of this strategy

is that almost no grid convergence was found because the values of P and

Cp remain almost constant even the mesh is refined. It is known that the

integral effect of curvature (i.e. average pressure jump) actually converges to495

a value that is systematically different from the analytical value [41].

As a footnote comment, in contrast with the set of simulations presented

in [44], in our case we did not found the noisy behavior of OpenFOAM R©with

the quads mesh when finer meshes are used. However, as in that publication,

there is not found grid convergence of the method.500

33



Method 1/h P Cp

PFEM-2 with κ as Eq. 9 40 0.975 1.9 10−3

PFEM-2 with κ as Eq. 11 40 0.95 4.1 10−4

PFEM-2 with κ as Eq. 11 80 0.954 5.3 10−4

PFEM-2 with κ as Eq. 11 160 0.955 5.8 10−4

VoF quads (ref [44]) 40 0.83 4.6 10−4

VoF quads (ref [44]) 320 0.7 2.1 10−4

VoF triangles 40 0.78 6.7 10−3

PFEM-2 with no smoothing 40 1.81 3.0 10−3

Table 2: Pressure jump and parasitic currents comparison between PFEM-2 and the

simulations of [44].

4.2.2. Ellipsoidal Regime Test

For the Test 1, Figure 8b shows the PFEM-2 bubble shapes at final

time Tf for the meshes h = 1/40, 1/80, 1/160, the convergence to the shape

of the finest mesh can be observed, which is in good agreement with the

OpenFOAM R©solution reported in [44] as shown in Figure 8a. PFEM-2 shape505

is less similar to FreeLIFE solution, but keeps good agreement. The plots of

the bubble rise velocity in Figure 8c show that our bubble reaches a slightly

larger maximum, but the evolution of the center of mass in Figure 8d is again

in good agreement.

4.2.3. Skirted Regime Test510

The same type of results are shown for test 2 in Figures 9a to 9d. Although

the bubbles in both test cases rise with similar velocity, the decrease in

surface tension as well as higher viscosity and density ratios causes bubble 2

34



(a) PFEM-2 κ as Eq.

11

(b) VoF quads (c) VoF triangles

Figure 7: Zero Gravity test with a mesh of 1/h = 40. Analytical pressure is shown in

grey.

to undergo a much larger deformation and to develop thin filaments. In both

FreeLIFE and OpenFOAM solutions these filaments break up, which also515

happens in PFEM-2 simulation (Figure 9c). In the physical reality, breakup

occurs due to capillary waves present on the interface, which trigger the

three-dimensional Plateau-Rayleigh instability when the filament radius is

small enough. Thus, capillary waves can cause the skirt filament to fragment

during flow, though this response requires very large elongations, typically520

greater than 20 times the initial bubble radius [30]. The Figure 9b shows

that the PFEM-2 solution converges to the shape of the finest mesh, mainly

the size of the two bubbles detached from the filaments (the coarser mesh is

employed the larger unphysical satellite bubbles are obtained). The problem

here is the use of the interface thickness parameter � which is mesh-dependent525

35



(a) Bubble shape vs reference data (b) Bubble shape mesh convergence

(c) Rising Velocity (d) Center of mass y-coordinate

Figure 8: Rising bubble Test 1. Comparison of benchmark quantities: PFEM-2

vs. FreeLIFE and OpenFOAM results. Mesh size h = 1/160, excepting in the mesh

convergence.

36



and introduce several distortions in coarser ones.

4.2.4. Extending Time-Step

In order to emphasize the capability of the method to manage large time-

steps, the current case is also simulated with a range of ∆t using the in-house

implementation of PFEM-2 and comparing with results obtained by the530

widely known OpenFOAM R©suite which implement, as it was mentioned, VoF

with interface compression. The problem setup and domain discretization is

the same as presented above. In the case of OpenFOAM R©, the solver and

the configuration used in [44] is used in this subsection, which ensured good

results in the rising bubble case. Compression flux treatment, time schemes535

and momentum predictor employment are analyzed in the mentioned work,

deriving a recommended solver configuration for this case. The time-step

employed is ∆t = 3h, which enforce to obtain CFL = |V|∆t/∆x > 1 number

that is critical for Eulerian framework solvers, mainly when it is measured

at the interface.540

Figure 10 presents PFEM-2 solutions with ∆t = h/2, 3h and 6h solving

the most surface-tension dominant case, i.e. Test 1. Although the solution

is stable for each time-step, the higher surface tension relevance respect to

Test 2 generates non accurate solutions in the interface zone: unphysical

disturbances like Rayleigh-Taylor instabilities are observed showing that the545

surface tension term is not imposed properly when the largest time-step is

used. However, the solution with ∆t = 3h is good enough and can be used

as an accurate initial appearance of the solution. This preliminary and fast

solution can not be done with OpenFOAM R©, because the solution diverges

when ∆t > h is employed, due to the strong interface compression imposition.550

37



(a) Bubble shape vs reference data (b) Bubble shape mesh convergence

(c) Rising Velocity (d) Center of mass y-coordinate

Figure 9: Rising bubble Test 2. Comparison of benchmark quantities: PFEM-2

vs. FreeLIFE and OpenFOAM results. Mesh size h = 1/160, excepting in the mesh

convergence.

38



(a) PFEM-2 ∆t = h/2 (b) PFEM-2 ∆t = 3h (c) PFEM-2 ∆t = 6h

Figure 10: Rising bubble Test 1. Comparison of PFEM-2 solutions when the time step is

increased.

39



On the other hand, Figure 11 the solutions obtained at Tf = 3[s] for

the Test 2 can be shown. PFEM-2 solution when the time-step is increased

is stable and keeps similar shape and quantitative values as rise velocity

and center of mass, but loosing some definition of the satellite bubbles. On

the other hand, OpenFOAM R©(OF) solution with large time-step diverges555

approximately at t = 1.1[s] because of the disturbance introduced by the

interface compression term trying to force a sharp interface. Reducing the

interface compression coefficient could preserve the stability, but the final

shape is highly diffusive, as presented by [44].

(a) PFEM-2 ∆t = h/2 (b) PFEM-2 ∆t = 3h (c) OpenFOAM R©∆t =

h/2

(d) OpenFOAM R©∆t =

3h

Figure 11: Rising bubble Test 2. Comparison of solutions when the time step is increased.

Figure 12 shows an application of the stability analysis to the case of560

the rising bubble. Same axis are presented and in this case the simulations

40



presented correspond to the ellipsoidal and skirted regimes with the three

time step employed. As it was mentioned before, the stability limits are

a conservative estimation due the generation of spurious currents is only

secondary for a moving interface. The simulated cases prove this fact:565

although every test fall into the unstable region (see Figure 5), when

convective term is included these numerical artifacts, which are not dissipated

in unstable type 1 simulations, does not produce large errors in the results.

Therefore, a stronger limit is used here which separates divergent (crashing)

and non-divergent (no crashing) simulations.570

It should be noted that the region of divergence of PFEM-2 is smaller

than the obtained with OpenFOAM R©. Therefore, almost every rising bubble

simulation falls over the non-divergent region in PFEM-2, but only those that

use the smallest time-step do not blow-up with OpenFOAM R©. This results

is proven experimentally in the cases presented above. Although both large575

time-step tests theoretically are almost into the unstable region in PFEM-2,

only the ellipsoidal test is experimentally unstable. The inclusion of new

tests around that region could improve the determination of this limit.

4.3. Standing capillary wave

In previous work [2], authors have presented the results of the PFEM-2580

method solving the case of the standing gravity wave. In those simulations,

several number of Reynolds were analyzed obtaining good agreement with

analytical solutions. The flow were dominated by the gravity force, therefore

the enrichment strategy to capture properly the density jump (the pressure

gradient) was mandatory.585

In the current work, the case to analyze is governed by a totally different

41



Current work

Deshpande et. al.

Test 1
Test 2

divergent
region

non-divergent
region

inc
rea

sin
g

Figure 12: Rising bubble simulation in the stability chart. Filled line represent

the boundary between the non divergent and divergent computations (unstable type 2

simulations) found by Deshpande [41] and by the current work with PFEM-2. Points

represent the placement of ellipsoidal and skirted tests employing different time-steps.

force but leading to similar results. In this test the density jump is secondary,

instead a good resolution of the surface tension forces, which dominate the

flow behavior, is of transcendental relevance.

The setup used is taken from [41] in this simulation is shown in Figure590

13. A perturbation of amplitude A = λ/20 where λ is the wavelength

width is imposed as initial condition of the phases positioning, which is

allowed to evolve under the influence of surface tension alone. The heavier

phase (fluid I) has a density of ρI = 1000[kg/m
3] and a kinematic viscosity

of νI = 10
−6[m2/s], while the lighter phase has ρII = 1[kg/m

3] and595

νII = 0[m
2/s] respectively. Regarding to boundary conditions, bottom is

set as slip, left and right sides have a symmetry conditions and the top is

considered as atmosphere fixing the pressure as p = 0.

42



Figure 13: Configuration setup of standing capillary wave case.

Lamb [49] presented an analytical solution of this problem when small-

amplitude waves are considered. In this regime, the standing wave evolution600

can be obtained through the linearization of the Navier-Stokes equations for

traveling waves. Therefore, the frequency of oscillation in this linear limit is

ω =

√
σκ3

ρI + ρII
(24)

where κ = 2π/λ. Analytically, the frequency of change in kinetic energy K

is twice the frequency of oscillation of the free surface. The analytical period

of oscillation of kinetic energy is therefore τA = 1/2(2π/ω) = 2.385×10−5[s].

In addition, the rate of decay of kinetic energy due to viscous effects is given

as
K(t)

K(0)
= e−4ν

∗t∗ (25)

where ν∗ = νIκ
2
√
ρI/(κ3σ) and t

∗ = t/
√
ρI/(κ3σ).

Three different grid densities were tested with λ/∆x = 40, 80 and 160. In

order to obtain a more accurate dissipative forces calculation, the numerical605

parameter θµ is set to 1. This selection introduces a diffusion term in the

equation of the corrector step as proposed Blasco, Codina and Huerta [50].

43



Under our experience, without that term would not be possible to obtain the

proper decay of kinetic energy with the classical fractional step method used

due to the large Fourier number involved in this case.610

The evolution of kinetic energy for these grids is plotted in Figure 14

along with the exponential decay of kinetic energy due to viscous effects,

calculated from Equation (25).

Figure 14: Comparison of the period of kinetic energy for the configuration in Figure 13,

with the analytical solution of [49].

Name λ/∆x ∆t[s] τA[s] calculated

Test A 40 5 10−7 2.56 10−5

Test B 80 2.5 10−7 2.49 10−5

Test C 160 6.25 10−8 2.47 10−5

Table 3: Errors of the computed period of kinetic energy for different grids. Case: standing

capillary wave.

The numerical parameters employed in each test with its corresponding

computed oscillation periods, averaged over 8 cycles, are shown in Table 3.615

44



The period of oscillation for the coarsest grid has the largest error and it is

reduced employing finer meshes, achieving an error in period with respect

to the analytical solution of 3% with the finer grid. The last shows that, in

spite of the inaccuracies in curvature, the results show trends of convergence

to a value close to the theory. The observed loss in rate of convergence can620

be explained as a combination of systematic error in curvature, as it was

shown in the zero gravity test, and also the fact that the analytical solution

also contains a systematic error, since it is based on the linearized version of

the equations, whereas PFEM-2 solves the full version of the Navier-Stokes

equations.625

4.4. Towards a simulation of 3D Jet Atomization

Liquid atomization is an important process which found interest in several

engineering applications such as aerospace propulsion systems, automotive

engines, food processing, and ink-jet printing. Its numerical simulation

allows to investigate physical processes of the atomization because our630

understanding on physical mechanisms of such phenomena is still not

sufficient. Our investigation group is doing its first steps in this research

area and we report in this work our early results using the numerical method

presented in this work contrasted with the use of the widely validated tool

OpenFOAM R©[12].635

The main properties of the case analyzed are the following: the size of

the domain is (2.1[mm], 0.3[mm], 0.3[mm]), where the first dimension is

the streamwise direction and the other two, the spanwise directions. At

the injection level, the jet diameter D is equal to 0.1[mm], while the liquid

jet Reynolds number is equal to Re = 4659. A summary of the physical640

45



parameters, for this configuration, can be found in Table 4. Also, the

geometry and boundary conditions are presented in Figure 15. Boundary

condition over borders is slip, over bottom zero gradient velocity and pressure

equal to zero. Top boundary has two patches: on inlet a mean inlet of

Ûz = −100[m/s] is imposed and over wall no-slip condition is set.645 borders bottom wallinlet 2.1mm0.3mm
Figure 15: Geometry and boundary conditions for the case of the 3d jet.

As a first reference result, we can cite the work of Ménard et al. [51, 52],

which employ the LSM to track the interface added to the Ghost Fluid

Method (GFM) to describe the interface discontinuites and manage the

pressure, density and viscosity jumps. Also, the Level Set method is coupled

with the Volume of Fluid method (VoF) to ensure mass conservation. The650

mesh used by Chesnel and Ménard and co-workers in [52] is a 2048×256×256

Cartesian grid with regularly spaced nodes (∆x = 1.17[µm]). Liquid surface

instabilities close to the injector are visible. Their deformation leads to

the formation of ligaments and droplets of various sizes. At the end of the

46



Parameter Symbol / Unit Value

Gas density ρg [kg/m
3] 25

Liquid density ρl [kg/m
3] 696

Gas viscosity µg [kg/m s] 1× 10−5

Liquid viscosity µl [kg/m s] 1.18× 10−3

Surface Tension Coefficient σ [N/m] 0.06

Injection Diameter D0 [µm] 100

Liquid Reynolds Rel 4659

Liquid Weber Wel 7239

Turbulent Intensity u′u′/U2 0.05

Turbulent Scale Lt [m] 0.1D0

Table 4: Simulation parameters.

domain, the liquid core has almost disappeared and a dense spray of droplets655

leaves the computational domain. The key of the quickly drop production is

the use of a space-time correlated turbulent flow at the inlet: Ménard uses a

syntetized correlated turbulence with a method proposed by Klein et al. [53].

In the work of Desjardins et al. [54], authors employ a forerunner simulation

to impose the inlet turbulent boundary condition, obtaining similar results660

to the above mentioned. Both works have a relevant conclusion: by the end

of the computational domain, the liquid core has been fully disintegrated.

Another approach in the numerical characterization of jet atomization is

reported by Shinjo et al. in [55, 56]. In this work, the authors report that

the grid resolution used by Ménard was coarse for the chosen Reynolds and665

47



Weber numbers, so this was not a direct numerical simulation in a true sense:

the produced ligaments and droplets did not exhibit smooth shapes or wave

dynamics driven by surface tension, but the overall liquid jet motion was

captured in that simulation. Shinjo solved with a mesh with 400 million of

cells (∆x = 0.3[µm]). In contrast to Ménard, the ligament drop is done far670

from the inlet, being the main responsible the plain velocity front imposed

at the inlet by Shinjo instead of using a turbulent-induced flow [57].

Our initial simulations using PFEM-2 and OpenFOAM R©employ plain

inlet, therefore more similarities with Shinjo results are found. It must

be taken into account that in the most refined case simulated with675

OpenFOAM R©, the geometry was meshed with a cartesian base grid of

32 × 32 × 256 but the solver employed, named interDyMFoam, works with

adaptive refinement at interface reaching a minimum grid size of ∆x ≈

1.15[µm]. On the other hand, PFEM simulation has an uniform mesh size of

∆x ≈ 2.75[µm] conforming a mesh with 24 millons of tetrahedra, but even680

far from the refinement degree used in reference works.

Figure 16 shows a comparison between the simulations. The picture shows

that the droplet formation and the like-mushroom shape are comparable, but

the minimum drop size is better described using a finer mesh. The great

advantage of using PFEM-2 is when the computing time is analyzed because685

simulation was done employing a Courant number at interface CFLint ≈ 10

while OpenFOAM R©crashes when CFLint > 1 was tried. As it was shown

in the rising bubble case, the simulation of drops can not be accurate when

these large time-steps are used, however the stability of the method allows

to obtain a very approximate solution, mainly of the jet core, even spending690

48



10% of time comparing with Eulerian methodologies.

(a) OpenFOAM R©with ∆x = 1.15[µm]

(b) PFEM-2 with ∆x = 2.75[µm]

Figure 16: Overall shape of the liquid jet atomization. Figures correspond to iso-surfaces

of λ = 0 (interface). PFEM-2 simulation with CFLint ≈ 10 and OpenFOAM R©with

CFLint < 1

Future works must enhance the simulation with PFEM-2, preferably

employing finer meshes to contrast more adequately with reference works.

An analysis of droplet size distribution is a relevant pending task which

must be done in a future analysis.695

5. Conclusions

In this work, the PFEM-2 methodology for two-phase fluids has been

extended to the case of problems with surface tension dominant where

the surface tension term is solved with the CSF approach. A strategy,

49



which is based in a simple coupling between Level Set and Volume of700

Fluid approaches, allows to calculate accurate curvatures then reducing the

spurious velocities produced by the surface tension term in the case of sharp

interfaces.

Despite obtaining a smooth mesh solution at interface, the primary data

set in PFEM-2 are the particles, which advects a sharp interface. This feature705

makes PFEM-2 a method with several goodness in inertia dominant flows

that distinguish it from other numerical alternatives: the interface is moved

without diffusion, the mass is automatically conserved and the time-step can

be enforced to CFLint > 1 resigning some accuracy, mainly in zones where

the surface tension is relevant, but not losing stability. The results for pure710

advective, surface tension dominant, and a jet atomization tests presented in

the current work, together with the facts mentioned above, locate PFEM-2

as one of the fastest algorithms to solve two-phase flow problems.

Acknowledgments

Authors gratefully thank the help and contributions of Dr. Santiago715

Márquez Damián and Dr. Pedro Morin. Simulations were done in the

cluster Bora at the CIMEC-UNL-Argentina and in the Mendieta cluster

of the Centro de Computación de Alto Desempeño CCAD-UNC-Argentina.

Also, authors want to thank to CONICET, Universidad Nacional del Litoral

and ANPCyT for their financial support (grants PICT 0830 (2013), PIP-720

2012 GI 11220110100331 and CAI+D 2011 501 201101 00435 LI. J. Gimenez

gratefully acknowledges the support of the Argentinian National Scientific

and Technical Research Council (CONICET) through a type-II doctoral

50



scholarship and the program ERASMUS MUNDUS action 2 ARCOIRIS

project for financial support through a six-month doctoral scholarship. This725

work was also partially supported by the European Research Council under

the Advanced Grant: ERC-2009-AdG Real Time Computational Mechanics

Techniques for Multi-Fluid Problems.

[1] S. R. Idelsohn, J. Marti, P. Becker, E. Oñate, Analysis of multifluid

flows with large time steps using the particle finite element method,730

International Journal for Numerical Methods in Fluids 75 (9) (2014)

621–644. doi:10.1002/fld.3908.

URL http://dx.doi.org/10.1002/fld.3908

[2] Juan M. Gimenez and Leo M. González, An extended validation of

the last generation of particle finite element method for free surface735

flows, Journal of Computational Physics 284 (0) (2015) 186 – 205.

doi:http://dx.doi.org/10.1016/j.jcp.2014.12.025.

URL http://www.sciencedirect.com/science/article/pii/

S0021999114008420

[3] S. Idelsohn, N. Nigro, A. Limache, E. Oñate., Large time-step explicit740

integration method for solving problems with dominant convection,

Comp. Meth. in Applied Mechanics and Engineering 217-220 (2012)

168–185.

[4] N. Mos, J. Dolbow, T. Belytschko, A finite element method for

crack growth without remeshing, International Journal for Numerical745

Methods in Engineering 46 (1) (1999) 131–150. doi:10.1002/(SICI)

1097-0207(19990910)46:1<131::AID-NME726>3.0.CO;2-J.

51

http://dx.doi.org/10.1002/fld.3908
http://dx.doi.org/10.1002/fld.3908
http://dx.doi.org/10.1002/fld.3908
http://dx.doi.org/10.1002/fld.3908
http://dx.doi.org/10.1002/fld.3908
http://www.sciencedirect.com/science/article/pii/S0021999114008420
http://www.sciencedirect.com/science/article/pii/S0021999114008420
http://www.sciencedirect.com/science/article/pii/S0021999114008420
http://www.sciencedirect.com/science/article/pii/S0021999114008420
http://www.sciencedirect.com/science/article/pii/S0021999114008420
http://dx.doi.org/http://dx.doi.org/10.1016/j.jcp.2014.12.025
http://www.sciencedirect.com/science/article/pii/S0021999114008420
http://www.sciencedirect.com/science/article/pii/S0021999114008420
http://www.sciencedirect.com/science/article/pii/S0021999114008420
http://dx.doi.org/10.1002/(SICI)1097-0207(19990910)46:1<131::AID-NME726>3.0.CO;2-J
http://dx.doi.org/10.1002/(SICI)1097-0207(19990910)46:1<131::AID-NME726>3.0.CO;2-J
http://dx.doi.org/10.1002/(SICI)1097-0207(19990910)46:1<131::AID-NME726>3.0.CO;2-J
http://dx.doi.org/10.1002/(SICI)1097-0207(19990910)46:1<131::AID-NME726>3.0.CO;2-J
http://dx.doi.org/10.1002/(SICI)1097-0207(19990910)46:1<131::AID-NME726>3.0.CO;2-J
http://dx.doi.org/10.1002/(SICI)1097-0207(19990910)46:1<131::AID-NME726>3.0.CO;2-J


URL http://dx.doi.org/10.1002/(SICI)1097-0207(19990910)46:

1<131::AID-NME726>3.0.CO;2-J

[5] J. Alfaiate, New developments in the study of strong embedded750

discontinuities in finite elements, Advances in Fracture and Damage

Mechanics 251 (2) (2003) 109–114.

[6] J. Simo, J. Oliver, An analysis of strong discontinuities induced by strain

softening in rate-independent inelastic solids, Computational Mechanics

12 (1993) 277–296.755

[7] J. Oliver, A. Huespe, Continuum approach to material failure in strong

discontinuity settings, Computer Methods in Applied Mechanics and

Engineering 193 (2004) 3195–3220.

[8] A. H. Coppola-Owen, R. Codina, Improving eulerian two-phase on

finite element approximation with discontinuous gradient pressure shape760

functions, International Journal for Numerical Methods in Fluids 49

(2005) 1287 – 1304.

[9] R. F. Ausas, G. C. Buscaglia, S. R. Idelsohn, A new enrichment

space for the treatment of discontinuous pressures in multi-fluid flows,

International Journal for Numerical Methods in Fluids 70 (7) (2012)765

829–850.

[10] S. Osher, R. Fedkiw, Level set methods: an overview and some recent

results, Journal of Computational Physics 169 (2001) 463 – 502.

[11] C. Hirt, B. Nichols, Volume of fluid (vof) method for the dynamics of

free boundaries, J. Comput. Phys 39(1) (1981) 201–225.770

52

http://dx.doi.org/10.1002/(SICI)1097-0207(19990910)46:1<131::AID-NME726>3.0.CO;2-J
http://dx.doi.org/10.1002/(SICI)1097-0207(19990910)46:1<131::AID-NME726>3.0.CO;2-J
http://dx.doi.org/10.1002/(SICI)1097-0207(19990910)46:1<131::AID-NME726>3.0.CO;2-J


[12] H. G. Weller, G. Tabor, H. Jasak, C. Fureby, A tensorial approach to

computational continuum mechanics using object-oriented techniques,

Computers in Physics 12 (6) (1998) 620–631.

[13] R. A. Gingold, J. J. Monaghan, Smoothed particle hydrodynamics,

theory and application to non-spherical stars, Royal Astronomical775

Society 181 (1977) 375–389.

[14] J. Monaghan, An introduction to sph, Computational Physics Commu-

nications 48 (1988) 89–96.

[15] F. H. Harlow, J. E. Welch, Numerical Calculation of Time De-

pendent Viscous Incompressible Flow of Fluid with Free Sur-780

face, Physics of Fluids (1958-1988) 8 (12) (1965) 2182–2189.

doi:http://dx.doi.org/10.1063/1.1761178.

URL http://scitation.aip.org/content/aip/journal/pof1/8/

12/10.1063/1.1761178

[16] S. E. Hieber, P. Koumoutsakos, A lagrangian particle level set method,785

Journal of Computational Physics 210 (2) (2005) 342 – 367.

[17] D. Enright, R. Fedkiw, J. Ferziger, I. Mitchell, A hybrid particle level

set method for improved interface capturing, Journal of Computational

Physics 183 (1) (2002) 83 – 116.

[18] S. Idelsohn, E. Oñate, F. Del Pin, The particle finite element method790

a powerful tool to solve incompressible flows with free-surfaces and

breaking waves., International Journal of Numerical Methods 61 (2004)

964–989.

53

http://scitation.aip.org/content/aip/journal/pof1/8/12/10.1063/1.1761178
http://scitation.aip.org/content/aip/journal/pof1/8/12/10.1063/1.1761178
http://scitation.aip.org/content/aip/journal/pof1/8/12/10.1063/1.1761178
http://scitation.aip.org/content/aip/journal/pof1/8/12/10.1063/1.1761178
http://scitation.aip.org/content/aip/journal/pof1/8/12/10.1063/1.1761178
http://dx.doi.org/http://dx.doi.org/10.1063/1.1761178
http://scitation.aip.org/content/aip/journal/pof1/8/12/10.1063/1.1761178
http://scitation.aip.org/content/aip/journal/pof1/8/12/10.1063/1.1761178
http://scitation.aip.org/content/aip/journal/pof1/8/12/10.1063/1.1761178


[19] M. Evans, F. Harlow, E. Bromberg, The particle-in-cell method for

hydrodynamic calculations, Tech. rep., DTIC Document (1957).795

[20] S. Idelsohn, N. Nigro, J. Gimenez, R. Rossi, J. Marti., A fast and

accurate method to solve the incompressible navier-stokes equations,

Engineering Computations 30-Iss:2 (2013) 197–222.

[21] J. Gimenez, N. Nigro, S. Idelsohn, Evaluating the performance of

the particle finite element method in parallel architectures, Journal of800

Computational Particle Mechanics 1 (2014) 103–116.

[22] J. Brackbill, D. Kothe, C. Zemach, A continuum method for modeling

surface tension, Journal of Computational Physics 100 (2) (1992) 335 –

354. doi:http://dx.doi.org/10.1016/0021-9991(92)90240-Y.

[23] S. J. Cummins, M. M. Francois, D. B. Kothe, Estimating curvature from805

volume fractions, Computers and Structures 83 (67) (2005) 425 – 434.

doi:http://dx.doi.org/10.1016/j.compstruc.2004.08.017.

[24] K. W. Lam, A numerical surface tension model for two-phase flow

simulations, Ph.D. thesis, University of Groningen (2009).

[25] M. Sussman, E. G. Puckett, A coupled level set and volume-of-fluid810

method for computing 3d and axisymmetric incompressible two-phase

flows, Journal of Computational Physics 162 (2) (2000) 301 – 337.

[26] A. Albadawi, D. Donoghue, A. Robinson, D. Murray, Y. De-

laur, Influence of surface tension implementation in volume

54

http://dx.doi.org/http://dx.doi.org/10.1016/0021-9991(92)90240-Y
http://dx.doi.org/http://dx.doi.org/10.1016/j.compstruc.2004.08.017
http://www.sciencedirect.com/science/article/pii/S0301932213000190
http://www.sciencedirect.com/science/article/pii/S0301932213000190


of fluid and coupled volume of fluid with level set meth-815

ods for bubble growth and detachment, International Jour-

nal of Multiphase Flow 53 (0) (2013) 11 – 28. doi:http:

//dx.doi.org/10.1016/j.ijmultiphaseflow.2013.01.005.

URL http://www.sciencedirect.com/science/article/pii/

S0301932213000190820

[27] S. Idelsohn, E. Oñate, N. Nigro, P. Becker, J. Gimenez, La-

grangian versus eulerian integration errors, Computer Methods

in Applied Mechanics and Engineering 293 (0) (2015) 191 – 206.

doi:http://dx.doi.org/10.1016/j.cma.2015.04.003.

URL http://www.sciencedirect.com/science/article/pii/825

S0045782515001401

[28] P. Becker, S. Idelsohn, E. Oñate, A unified monolithic approach for

multi-fluid flows and fluidstructure interaction using the particle finite

element method with fixed mesh, Computational Mechanics (2014) 1–

14doi:10.1007/s00466-014-1107-0.830

URL http://dx.doi.org/10.1007/s00466-014-1107-0

[29] J. Gimenez, N. Nigro, P. Morin, S. Idelsohn, Numerical comparison

of the particle finite element method against an eulerian formulation,

in: K. Takizawa, Y. Bazilevs (Eds.), AFSI 2014, Springer International

Publishing, 2015, p. in revision.835

[30] M. D. Mier, Numerical simulation of multi-fluid flows with the particle

finite element method, Ph.D. thesis, Barcelona (2009).

55

http://www.sciencedirect.com/science/article/pii/S0301932213000190
http://www.sciencedirect.com/science/article/pii/S0301932213000190
http://www.sciencedirect.com/science/article/pii/S0301932213000190
http://dx.doi.org/http://dx.doi.org/10.1016/j.ijmultiphaseflow.2013.01.005
http://dx.doi.org/http://dx.doi.org/10.1016/j.ijmultiphaseflow.2013.01.005
http://dx.doi.org/http://dx.doi.org/10.1016/j.ijmultiphaseflow.2013.01.005
http://www.sciencedirect.com/science/article/pii/S0301932213000190
http://www.sciencedirect.com/science/article/pii/S0301932213000190
http://www.sciencedirect.com/science/article/pii/S0301932213000190
http://www.sciencedirect.com/science/article/pii/S0045782515001401
http://www.sciencedirect.com/science/article/pii/S0045782515001401
http://www.sciencedirect.com/science/article/pii/S0045782515001401
http://dx.doi.org/http://dx.doi.org/10.1016/j.cma.2015.04.003
http://www.sciencedirect.com/science/article/pii/S0045782515001401
http://www.sciencedirect.com/science/article/pii/S0045782515001401
http://www.sciencedirect.com/science/article/pii/S0045782515001401
http://dx.doi.org/10.1007/s00466-014-1107-0
http://dx.doi.org/10.1007/s00466-014-1107-0
http://dx.doi.org/10.1007/s00466-014-1107-0
http://dx.doi.org/10.1007/s00466-014-1107-0
http://dx.doi.org/10.1007/s00466-014-1107-0
http://dx.doi.org/10.1007/s00466-014-1107-0
http://dx.doi.org/10.1007/s00466-014-1107-0


[31] R. P. Fedkiw, T. Aslam, B. Merriman, S. Osher, A non-oscillatory

eulerian approach to interfaces in multimaterial flows (the ghost fluid

method), Journal of Computational Physics 152 (2) (1999) 457 – 492.840

doi:http://dx.doi.org/10.1006/jcph.1999.6236.

URL http://www.sciencedirect.com/science/article/pii/

S0021999199962368

[32] D. Lorstad, M. Francois, W. Shyy, L. Fuchs, Assessment of volume

of fluid and immersed boundary methods for droplet computations,845

International Journal for Numerical Methods in Fluids 46 (2) (2004)

109–125. doi:10.1002/fld.746.

URL http://dx.doi.org/10.1002/fld.746

[33] E. Bnsch, Finite element discretization of the navierstokes equations

with a free capillary surface, Numerische Mathematik 88 (2) (2001) 203–850

235. doi:10.1007/PL00005443.

URL http://dx.doi.org/10.1007/PL00005443

[34] J. Donea, A. Huerta, Finite Element Method for Flow Problems, Wiley,

Chichester England, 1983.

[35] S. Zalesak, Fully multidimensional flux-corrected transport algorithms855

for fluids, J. Comput. Phys. 31(3) (1979) 335 – 362.

[36] E. Puckett, A. Almgren, J. Bell, D. Marcus, W. Rider, A high-

order projection method for tracking fluid interfaces in variable density

incompressible flows, J. Comput. Phys. 130(2) (1997) 269 – 282.

56

http://www.sciencedirect.com/science/article/pii/S0021999199962368
http://www.sciencedirect.com/science/article/pii/S0021999199962368
http://www.sciencedirect.com/science/article/pii/S0021999199962368
http://www.sciencedirect.com/science/article/pii/S0021999199962368
http://www.sciencedirect.com/science/article/pii/S0021999199962368
http://dx.doi.org/http://dx.doi.org/10.1006/jcph.1999.6236
http://www.sciencedirect.com/science/article/pii/S0021999199962368
http://www.sciencedirect.com/science/article/pii/S0021999199962368
http://www.sciencedirect.com/science/article/pii/S0021999199962368
http://dx.doi.org/10.1002/fld.746
http://dx.doi.org/10.1002/fld.746
http://dx.doi.org/10.1002/fld.746
http://dx.doi.org/10.1002/fld.746
http://dx.doi.org/10.1002/fld.746
http://dx.doi.org/10.1007/PL00005443
http://dx.doi.org/10.1007/PL00005443
http://dx.doi.org/10.1007/PL00005443
http://dx.doi.org/10.1007/PL00005443
http://dx.doi.org/10.1007/PL00005443


[37] R. LeVeque, High-resolution conservative algorithms for advection in860

incompressible flow, SIAM J. Numer. Anal. 33(2) (1996) 627 – 665.

[38] D. Enright, F. Losasso, R. Fedkiw, A fast and accurate semi-lagrangian

particle level set method, Comput. Struct. 83 (6-7) (2005) 479–490.

doi:10.1016/j.compstruc.2004.04.024.

URL http://dx.doi.org/10.1016/j.compstruc.2004.04.024865

[39] S. D. Costarelli, M. A. Storti, R. R. Paz, L. Dalcin, S. R. Idelsohn,

Gpgpu implementation of the bfecc algorithm for pure advection

equations, Cluster Computing accepted.

[40] S. Hysing, A new implicit surface tension implementation for interfacial

flows, International Journal for Numerical Methods in Fluids 51 (6)870

(2006) 659–672. doi:10.1002/fld.1147.

URL http://dx.doi.org/10.1002/fld.1147

[41] S. Deshpande, L. Anumolu, M. Trujillo, Evaluating the performance of

the two-phase flow solver interfoam, Comput. Sci. Disc 5 014016 (36pp).

doi:10.1088/1749-4699/5/1/014016.875

[42] C. Galusinski, P. Vigneaux, On stability condition for bifluid

flows with surface tension: Application to microfluidics, Jour-

nal of Computational Physics 227 (12) (2008) 6140 – 6164.

doi:http://dx.doi.org/10.1016/j.jcp.2008.02.023.

URL http://www.sciencedirect.com/science/article/pii/880

S0021999108001253

57

http://dx.doi.org/10.1016/j.compstruc.2004.04.024
http://dx.doi.org/10.1016/j.compstruc.2004.04.024
http://dx.doi.org/10.1016/j.compstruc.2004.04.024
http://dx.doi.org/10.1016/j.compstruc.2004.04.024
http://dx.doi.org/10.1016/j.compstruc.2004.04.024
http://dx.doi.org/10.1002/fld.1147
http://dx.doi.org/10.1002/fld.1147
http://dx.doi.org/10.1002/fld.1147
http://dx.doi.org/10.1002/fld.1147
http://dx.doi.org/10.1002/fld.1147
http://dx.doi.org/10.1088/1749-4699/5/1/014016
http://www.sciencedirect.com/science/article/pii/S0021999108001253
http://www.sciencedirect.com/science/article/pii/S0021999108001253
http://www.sciencedirect.com/science/article/pii/S0021999108001253
http://dx.doi.org/http://dx.doi.org/10.1016/j.jcp.2008.02.023
http://www.sciencedirect.com/science/article/pii/S0021999108001253
http://www.sciencedirect.com/science/article/pii/S0021999108001253
http://www.sciencedirect.com/science/article/pii/S0021999108001253


[43] S. Hysing, S. Turek, D. Kuzmin, N. Parolini, E. Burman, S. Ganesan,

L. Tobiska, Quantitative benchmark computations of two-dimensional

bubble dynamics, International Journal for Numerical Methods in Fluids

60 (11) (2009) 1259–1288. doi:10.1002/fld.1934.885

URL http://dx.doi.org/10.1002/fld.1934

[44] J. Klostermann, K. Schaake, R. Schwarze, Numerical simulation of

a single rising bubble by vof with surface compression, International

Journal for Numerical Methods in Fluids 71 (8) (2013) 960–982. doi:

10.1002/fld.3692.890

URL http://dx.doi.org/10.1002/fld.3692

[45] S. Turek, Efficient Solvers for Incompressible Flow Problems, Springer,

1998.

[46] N. Parolini, E. Burman, A finite element level set method for viscous

free-surface flows, in: 7th Conference on Applied and Industrial895

Mathematics in Italy, 2005, pp. 416–427.

[47] S. Ganesan, G. Matthies, L. Tobiska, On spurious velocities in

incompressible flow problems with interfaces, Computer Methods in

Applied Mechanics and Engineering 196 (7) (2007) 1193 – 1202. doi:

http://dx.doi.org/10.1016/j.cma.2006.08.018.900

[48] L. Strubelj, I. Tiselj, B. Mavko, Simulations of free sur-

face flows with implementation of surface tension and inter-

face sharpening in the two-fluid model, International Journal

of Heat and Fluid Flow 30 (4) (2009) 741 – 750. doi:http:

58

http://dx.doi.org/10.1002/fld.1934
http://dx.doi.org/10.1002/fld.1934
http://dx.doi.org/10.1002/fld.1934
http://dx.doi.org/10.1002/fld.1934
http://dx.doi.org/10.1002/fld.1934
http://dx.doi.org/10.1002/fld.3692
http://dx.doi.org/10.1002/fld.3692
http://dx.doi.org/10.1002/fld.3692
http://dx.doi.org/10.1002/fld.3692
http://dx.doi.org/10.1002/fld.3692
http://dx.doi.org/10.1002/fld.3692
http://dx.doi.org/10.1002/fld.3692
http://dx.doi.org/http://dx.doi.org/10.1016/j.cma.2006.08.018
http://dx.doi.org/http://dx.doi.org/10.1016/j.cma.2006.08.018
http://dx.doi.org/http://dx.doi.org/10.1016/j.cma.2006.08.018
http://www.sciencedirect.com/science/article/pii/S0142727X0900037X
http://www.sciencedirect.com/science/article/pii/S0142727X0900037X
http://www.sciencedirect.com/science/article/pii/S0142727X0900037X
http://www.sciencedirect.com/science/article/pii/S0142727X0900037X
http://www.sciencedirect.com/science/article/pii/S0142727X0900037X
http://dx.doi.org/http://dx.doi.org/10.1016/j.ijheatfluidflow.2009.02.009
http://dx.doi.org/http://dx.doi.org/10.1016/j.ijheatfluidflow.2009.02.009


//dx.doi.org/10.1016/j.ijheatfluidflow.2009.02.009.905

URL http://www.sciencedirect.com/science/article/pii/

S0142727X0900037X

[49] H. Lamb, Hydrodynamics, no. 6th Edition.

[50] J. Blasco, R. Codina, A. Huerta, A fractional-step method for

the incompressible navier-stokes equations related to a predictor-910

multicorrector algorithm, Int. J. Numer. Methods Fluids 28 (10) (1998)

1391–1419.

[51] T. Ménard, S. Tanguy, A. Berlemont, Coupling level set/vof/ghost fluid

methods: Validation and application to 3d simulation of the primary

break-up of a liquid jet, International Journal of Multiphase Flow 33 (5)915

(2007) 510 – 524.

[52] J. Chesnel, T. Ménard, J. Reveillon, F.-X. Demoulin, Subgrid analysis

of liquid jet atomization, Atomization and Sprays 21 (1) (2011) 41–67.

[53] M. Klein, A. Sadiki, J. Janicka, A digital filter based generation of

inflow data for spatially developing direct numerical or large eddy920

simulations, Journal of Computational Physics 186 (2) (2003) 652 –

665. doi:http://dx.doi.org/10.1016/S0021-9991(03)00090-1.

URL http://www.sciencedirect.com/science/article/pii/

S0021999103000901

[54] O. Desjardins, V. Moureau, H. Pitsch, An accurate conservative level925

set/ghost fluid method for simulating turbulent atomization, Journal of

Computational Physics 227 (18) (2008) 8395 – 8416.

59

http://dx.doi.org/http://dx.doi.org/10.1016/j.ijheatfluidflow.2009.02.009
http://www.sciencedirect.com/science/article/pii/S0142727X0900037X
http://www.sciencedirect.com/science/article/pii/S0142727X0900037X
http://www.sciencedirect.com/science/article/pii/S0142727X0900037X
http://www.sciencedirect.com/science/article/pii/S0021999103000901
http://www.sciencedirect.com/science/article/pii/S0021999103000901
http://www.sciencedirect.com/science/article/pii/S0021999103000901
http://www.sciencedirect.com/science/article/pii/S0021999103000901
http://www.sciencedirect.com/science/article/pii/S0021999103000901
http://dx.doi.org/http://dx.doi.org/10.1016/S0021-9991(03)00090-1
http://www.sciencedirect.com/science/article/pii/S0021999103000901
http://www.sciencedirect.com/science/article/pii/S0021999103000901
http://www.sciencedirect.com/science/article/pii/S0021999103000901


[55] J. Shinjo, A. Umemura, Simulation of liquid jet primary breakup:

Dynamics of ligament and droplet formation, International Journal of

Multiphase Flow 36 (7) (2010) 513 – 532.930

[56] J. Shinjo, A. Umemura, Surface instability and primary atomization

characteristics of straight liquid jet sprays, International Journal of

Multiphase Flow 37 (10) (2011) 1294 – 1304.

[57] H. P. Trinh, C. P. Chen, Modeling of turbulence effects on liquid jet

atomization, in: 43rd AIAA Aerospace Sciences Meeting and Exhibit,935

2005.

60


	Introduction
	Equations and Numerical Formulation
	Governing Equations
	Discretization Strategy
	Interface Treatment and Surface Tension
	PFEM-2 with surface tension

	Interface evolution Tests
	Rigid Body Rotation of Zalesak's Disk
	Single Vortex Case
	LeVeque Deformation Case

	Surface Tension Test cases
	Stability Analysis
	Rising Bubble Case
	Zero Gravity Condition
	Ellipsoidal Regime Test
	Skirted Regime Test
	Extending Time-Step

	Standing capillary wave
	Towards a simulation of 3D Jet Atomization

	Conclusions

