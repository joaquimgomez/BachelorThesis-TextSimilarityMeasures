



















































notes


INTERNATIONAL JOURNAL FOR NUMERICAL METHODS IN ENGINEERING

Int. J. Numer. Meth. Engng 0000; 00:1–33
Published online in Wiley InterScience (www.interscience.wiley.com). DOI: 10.1002/nme

Parameter-free, weak imposition of Dirichlet boundary conditions
and coupling of trimmed patches

S. Kollmannsberger1∗, A. Özcan1, J. Baiges2, M. Ruess3, E. Rank1, A. Reali4

1Computation in Engineering, Technische Universität München; Munich, Germany
2International Center for Numerical Methods in Engineering, Universitat Politcnica de Catalunya, Barcelona, Spain

3Aerospace Structures and Computational Mechanics, Delft University of Technology, Delft, Netherlands
4Department of Civil Engineering and Architecture, University of Pavia, Italia

SUMMARY

We present a parameter-free domain sewing approach for low- as well as high-order finite elements. Its
final form contains only primal unknowns, i.e., the approach does not introduce additional unknowns at
the interface. Additionally, it does not involve problem dependent parameters which require an estimation.
The presented approach is symmetry-preserving, i.e. the resulting discrete form of an elliptic equation
will remain symmetric and positive definite. It preserves the order of the underlying discretization and we
demonstrate high order accuracy for problems of non-matching discretizations concerning the mesh size h
as well as the polynomial degree of the order of discretization p. We also demonstrate how the method may
be used to model material interfaces which may be curved and for which the interface does not coincide
with the underlying mesh. This novel approach is presented in the context of the p- and B-spline versions of
the finite cell method, an embedded domain method of high order, and compared to more classical methods
such as the penalty method or Nitsche’s method. Copyright c© 0000 John Wiley & Sons, Ltd.

Received . . .

KEY WORDS: Dirichlet boundary conditions, embedded domain, trimmed patches, Isogeometric
Analysis, p-FEM, finite cell method

1. INTRODUCTION

We reconsider the imposition of Dirichlet boundary conditions in the context of the finite element

method. We focus on the case, where the Dirichlet boundary conditions are imposed independent of

the underlying discretization, i.e., they do not coincide with nodes, edges or faces of the mesh but

may cut elements in an arbitrary fashion.

∗Correspondence to: Computation in Engineering, Technische Universität München; Munich, Germany. E-mail:
kollmannsberger@bv.tu-muenchen.de

Contract/grant sponsor: S. Kollmannsberger and A. Reali greatly acknowledge the funds granted under DAAD grant No.
54577652 ’Patching trimmed surfaces in isogeometric analysis’. The last author also acknowledges the funds granted
under the ERC grant ’ISOBIO’, No. ’259229’. These grants made this contribution possible.

Copyright c© 0000 John Wiley & Sons, Ltd.

Prepared using nmeauth.cls [Version: 2010/05/13 v3.00]



2 S. KOLLMANNSBERGER ET. AL

Whereas this problem has been investigated for decades, it has gained increased attention recently,

for example in the context of Isogeometric Analysis (IGA) [1, 2]. The main motivation in IGA is to

facilitate the transition from geometric models to computational analysis and thereby render mesh-

generation unnecessary. This is achieved by an isoparametric approach, based on applying typical

functions (e.g., B-Splines and NURBS) from Computer Aided Design (CAD) systems directly in

order to discretize the differential equations that describe the underlying physics. The Dirichlet

boundary conditions, however, are not always associated with the boundary of the geometric model.

Another problem class in which the need for a mesh independent imposition of Dirichlet boundary

conditions arises are embedded domain methods. By definition, they do not represent the underlying

physical domain with a boundary conforming mesh. In this contribution, we consider the finite cell

method [3, 4], an embedded domain method of high-order which is also applicable to IGA [5].

Numerous approaches and a vast body of literature exist for the imposition of Dirichlet boundary

conditions, each of them with different properties, advantages and disadvantages. None of them is

perfect for all applications. Our wish-list for an ideal imposition of Dirichlet boundary conditions

would require the method

• to be independent of the underlying discretization not only geometrically but such that, for
example, a change of the approximation basis does not require a modification of the method;

• to be numerically stable and variationally consistent;
• to preserve a symmetric, positive definite system matrices for elliptic problems;
• to be applicable to hyperbolic and parabolic problems;
• not to introduce additional degrees of freedom;
• not to deteriorate the order of approximation of the underlying discretization;
• to be suitable for high-order accuracy;
• to be free from problem-dependent parameters.

We will first provide a quick and non-exhaustive review of some methods which comply with at

least some of the properties mentioned above. For a more general review see, for example, [6, 7].

In the contribution at hand we are only interested in methods which were shown to be suitable for

high-order discretizations and/or set the stage for the approach to be presented.

In principle, there are two choices for the imposition of Dirichlet boundary conditions. First,

the Dirichlet boundary conditions may be directly built into the basis functions by modification,

extrapolation or augmentation of the basis. Methods belonging to the first group include web-

splines [8], i-splines [9, 10], max-ent interpolation [11], the extended finite element method (X-

FEM), the generalized finite element method (GFEM) and level-set like approaches [12, 13, 14].

Second, one may enforce Dirichlet boundary conditions by augmenting the governing equations

with suitable constraint conditions. This second group emanates from enforcing constraints in

variational problems and is, thus, very general. The most commonly used is the penalty method [15,

16], which is easy to implement and which produces a positive definite system matrix for elliptic

problems. However, it is not a variationally consistent method which renders the results to be

strongly dependent on the choice of the penalty parameter. Additionally, the need to select a high

penalty value results in an ill-conditioned system of equations.

A classic alternative to the penalty method is to enforce the constraints through Lagrange

multipliers [17]. This produces a variationally consistent method with additional degrees of

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 3

freedom. However, the Lagrange multiplier space must satisfy the inf-sup condition [17, 18]. Thus,

the choice of the discretization of the Lagrange multiplier is not always obvious. It depends on the

discretization including the mesh, which turns out to be quite restrictive. The restrictions can be

circumvented by means of especially developed stabilized Lagrange multiplier methods. They can

be interpreted as an attempt to combine penalty and Lagrange multiplier methods and have become

a popular choice in the context of embedded domain modeling [19, 20, 21, 22, 23].

Another attractive and very general alternative is Nitsche’s method [24]. It can be interpreted as

a stabilized Lagrange multiplier technique in which the Lagrange multiplier is directly identified

to be the flux normal to the Dirichlet boundary. The close relation of Nitsche’s method to the

Lagrange multipliers method was first analyzed by Stenberg [25]. Even though Nitsche’s method

eliminates the need to discretize the Lagrange multipliers with additional variables, the stabilization

term remains in the formulation and continues to contain a problem-dependent parameter. Nitsche’s

method is much less sensitive to the choice of a stabilization parameter than the simple penalty

method. However, for optimal performance, such a parameter still needs to be estimated. A suitable

estimation for a lower bound is, for example, given by Griebel and Schweitzer [26] who propose

to solve an auxiliary generalized eigenvalue problem. Beyond the Poisson’s equation originally

investigated by Nitsche, his idea has been extended to other problem classes. The potential of

Nitsche’s method is nicely laid out in a review article by Hansbo [6]. It has been further extended,

for example, to thin plate problems [27], three-dimensional elasticity [28], thermo-elasticity [29],

and fluid dynamics [30].

Recently, different schemes have been proposed that are neither dependent on additional degrees

of freedom nor on the solution of auxiliary problems to estimate the stabilization terms. Among

these are schemes using degrees of freedom of certain nodes of the finite element mesh to minimize

the difference between the exact and the approximated boundary condition [31]. They are robust

but yield a non-symmetric equation, also for symmetric problems. In the contribution at hand, we

follow a different approach, namely to use Discontinuous Galerkin techniques. Herein, the material

law is discretized with functions being discontinuous across element boundaries. The additional

degrees of freedom can then be condensed out at the discrete level prior to the solution of the

system matrix, so they will not appear in the final formulation. These approaches can yield automatic

stabilization terms, i.e., terms that add stability without the need to compute auxiliary eigenvalue

problems, see e.g. [7]. The method proposed in [32] is a recently proposed variant but again leads to

unsymmetric systems for symmetric problems. However, the formulation was symmetrized in [33].

This formulation will mark the point of departure in the paper at hand in which we will start by

investigating its suitability for high-order embedded domain discretizations.

Imposing Dirichlet boundary conditions is also of importance for weak coupling of different

discretizations. Geometric models in CAD systems, for example, are usually comprised of many

trimmed patches of splines of all types, such as B-Splines, NURBS, T-Splines, etc. These trimmed

patches should serve as the geometric model in IGA. If this model is to be directly transferred

to computational analysis without mesh generation, the trimmed patches have to be glued at their

common and usually non-matching interface by means of enforcing continuity of the unknowns

and/or their derivatives to yield a consistent computational model.

The same task needs to be addressed in embedded domain analysis. They are popular for

geometries which are difficult to mesh or for cases in case a geometry and/or topology changes

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



4 S. KOLLMANNSBERGER ET. AL

over time. Chimera approaches, for example, resolve the domain with one or multiple overlapping

meshes each of which represents a different physical domain. The continuity at their common

boundary is then enforced either iteratively or monolithically. Throughout this treatise, we only

consider monolithic coupling, i.e., the coupling terms will directly appear in the resulting system

matrix and the solution of the coupled system is obtained in one step only.

Monolithic approaches using Lagrange multipliers to satisfy continuity constraints along the

domain interfaces are mostly named Mortar methods. Many variants of this technique have been

proposed [34, 35, 36, 37, 38], to list just a few. As in the case of the weak imposition of Dirichlet

boundary conditions with Lagrange multipliers, its straightforward application results in rather

restrictive stability conditions, which is why stabilized versions are advocated. Again, an alternative

for monolithic coupling is to use Nitsche’s method to impose the constraints. The use of Nitsche’s

method to couple subdomains was extensively analysed in [39, 40]. Hansbo et al. [41] extended this

concept to overlapping domains. It was also used to represent strong and weak singularities [42].

The concept of using Nitsche’s method for coupling domains has been applied to a variety of fields

such as linear elasticity [43, 44], contact [45] and fluid-structure interaction [46]. As in the case of

imposing Dirichlet boundary conditions, using Nitsche’s idea for coupling requires the solution of

an auxiliary generalized eigenvalue problem for an estimation of the optimal stabilization parameter.

In this contribution, we derive a method which sets out to eliminate the need for solving auxiliary

equations to estimate stabilization parameters and, at the same time, leads to symmetric system

matrices for elliptic problems.

In order to set up our main field of application of our proposed technique we begin with the

introduction of the finite cell method in section 2 before continuing with the weak imposition of

Dirichlet boundary conditions in section 3, embarking from classical Nitsche’s formulation. Next,

we recall the recently introduced boundary conditions for Poisson’s problem as presented in [33]

but put them in the context of the finite cell method. We show that the concept in [33] can be

straightforwardly utilized in the framework of high-order finite elements in general. We investigate

the performance of the boundary conditions and compare their results to the penalty method as well

as to Nitsche’s method for Poisson’s equation in one and two dimensions. The two-dimensional

examples are computed by discretizing the continuous problems with the classical p-version of

the finite element method utilizing the hierarchical integrated Legendre polynomials as introduced

in [47]. Additionally, we evaluate the performance of this new type of boundary conditions in the

context of patches of B-Splines which form the basis for Isogeometric Analysis.

Section 4 is devoted to the new, parameter-free and symmetry-preserving weak coupling of

domains. Again, we start by recalling the more classical Nitsche’s method for the problem under

consideration. The derivation of the new scheme is carried out in sections 4.3 and 4.4. We prove

the scheme to be stable in section 4.5 and show that in all tested cases the resulting discrete system

is positive definite. Utilizing the presented methodology, we demonstrate high convergence rates

in all cases. Specifically, we first evaluate the new method’s capabilities for Poisson’s equation

with non-conform discretizations in h and p and constant coefficients in a boundary-conform

setting (section 4.6.1) before we move to an overlapping discretization with an inclined coupling

boundary (section 4.6.2). We then demonstrate the method for a bimetal strip. Naturally, this

example possesses discontinuous coefficients and we apply non-conforming discretizations in h and

p (section 4.6.3). The last example is an inclusion problem. It has discontinuous coefficients and

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 5

we discretize it in a Chimera-like fashion by using an overlapping discretizations (section 4.6.4).

All examples are computed by using B-Spline patches and classical p-FEM and are compared to

Nitsche’s method. Finally, we draw conclusions in section 5.

2. FINITE CELL METHOD

2.1. Applications of the finite cell method

The finite cell method was first introduced in [3, 4], where its potential was demonstrated

for linear-elastic examples in two and three dimensions. Various extensions of the FCM

confirm its versatility in the context of topology optimization [48], geometrically nonlinear

continuum mechanics [49], adaptive mesh-refinement [50, 51, 52], computational steering [53,

54], biomedical engineering [55], numerical homogenization [56], elastoplasticity [57], wave

propagation in heterogeneous materials [58], local enrichment for material interfaces [14],

convection-diffusion problems [59, 60], thin-walled structures [61], design-through-analysis and

isogeometric analysis [51, 52, 5], and multi-physical applications [29].

A free FCM-MATLAB-toolbox is provided at http://fcmlab.cie.bgu.tum.de/ under

the GNU Licence along with extensive online documentation [62] as well as numerous examples.

It serves as a library to solve one-, two-, and three-dimensional elasto-static and elasto-dynamic

problems. It utilizes advanced software development techniques such as Design Patterns [63] to

provide maximum flexibility to users as well as Unit Testing to ensure code consistency throughout

the development process.

2.2. Formulation

The finite cell method is an embedded domain method based on higher order shape functions.

The primary goal of the method is to avoid the generation of boundary-conforming meshes.

Nevertheless, it provides high-order convergence rates. For this purpose, it assumes a three-

dimensional physical domain Ω and an embedding domain Ωe such that Ωe ⊃ Ω whereby Ωe is
of a simpler, typically rectangular shape. Their boundaries are defined as ∂Ω = Γ and ∂Ωe = Γe.

Let us consider the following bilinear form (·, ·)Ω defined on Ωe:

(u,v)
α
Ωe

=

∫

Ωe

[Lv]
T
C

α
e [Lu] dΩ (1)

in which u is a scalar- or vector-valued function, v is a test function, and L is a differential operator.

The material matrix of the embedding domain is defined as Cαe = αC where C is the material

matrix of the physical domain Ω and α is an indicator function defined as:

α (x) =




1 ∀x ∈ Ω
0 ∀x ∈ Ωe \ Ω

(2)

The finite cell method is depicted in fig. 1. It is important to note that eq. (2) implies α (x) =

1.0 ∀x ∈ Γ as, otherwise, it would not be possible to apply non homogeneous boundary conditions

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme

http://fcmlab.cie.bgu.tum.de/


6 S. KOLLMANNSBERGER ET. AL

α=1

α=0

Γ

Ω

Ω
e

Γ
e

=

Figure 1. The finite cell method: Physical domain Ω and embedding domain Ωe.

on Γ. Furthermore, the definition of α (x) in eq. (2) ensures that the bilinear forms defined on the

embedding domain Ωe and on the physical domain Ω are equivalent:

(u,v)
α
Ωe

=

∫

Ωe

[Lv]
T
αC [Lu] dΩ (3)

=

∫

Ω

[Lv]
T
C [Lu] dΩ+

∫

Ωe\Ω

[Lv]
T
0 [Lu] dΩ (4)

=

∫

Ω

[Lv]
T
C [Lu] dΩ (5)

= (u,v)Ω (6)

The linear functional F

〈F ,v〉 =
∫

Ωe

v
T (αf) dΩ+

∫

Γn

v
T
t dΓ ≡ 〈F ,v〉αe (7)

is identical for the extended and the physical domain and also takes the volume sources f inside Ω

and prescribed fluxes t̄ = σ · n on the Neumann part of the boundary of the physical domain Γ into
account. The solution of

(u,v)
α
Ωe

= 〈F ,v〉αe (8)

is equivalent to solving (u,v)Ω = 〈F ,v〉. In the sequel we will, therefore, drop the subindex e unless
we want to specifically stress one viewpoint or the other.

A discretized view of the finite cell method is depicted in fig. 2. For the numerical approximation

of eq. (8) it is convenient to define a computational grid on the extended domain Ωe. This grid

forms the support of the basis functions. In principle, we can use a uniform Cartesian grid, as was

applied in the first implementations of the FCM [3, 4]. Hierarchically refined grids can be defined

alike [64, 65, 66], if local features of the solution are to be resolved in more detail. Note that the

boundary of the physical domain is not resolved or even approximated by the grid. In order not to

change the problem, the geometry needs to be recovered at the integration level. A natural strategy

is the following:

Let us denote elements of the computational grid such as cells ΩC to distinguish them from

classical finite elements. It is convenient to categorize cells into three different types which are

depicted in fig. 2:

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 7

ΩC1

ΩC2

ΩC3

ΩΓin

ΩΓoutΓD

ΩC1: α (x) = 0 → not computed
ΩC2: α (x) = 1 → treated as regular FEM
ΩC3: α (x) = 0 or 1 → adaptive integration

→ and 2-field problem, iff ΓD

Figure 2. The discrete point of view of the finite cell method. The cells ΩC provide the support of the shape
functions much like finite elements do. The important case is ΩC3 In addition to an adaptive integration
we advocate solving the 2-field problem on ΩC3 if and only if a Dirichlet boundary condition is imposed
on Γ parts of it (see section 3.2.). The part of Γ on which Dirichlet boundary conditions are imposed is

labeled ΓD .

1. ΩC1: Cells where α(x) = 0 ∀x ∈ Ωc, which are not computed.
2. ΩC2: Cells where α(x) = 1 ∀x ∈ Ωc, which are computed as if they were regular finite

elements.

3. ΩC3: Cells cut by the boundary Γ, which receive special treatment as described in the

following.

Cells of type ΩC3 are decomposed into two parts ΩΓin in which α(x) = 1, and ΩΓout in which

α(x) = 0. In practical computations, we assume the parameter α(x) not to be exactly zero. Instead,

we chose ǫ ≪ 1 to ease numerical round-off issues in the solution process. Thus, we explicitly
accept a modeling error of the order ǫ which is controllable as it tends to zero if ǫ approaches zero.

We usually choose ǫ to have very small magnitude, typically about 10−8 smaller than the material

constant.

The numerical integration of the bilinear form must be carried out accurately enough on the cut

cells as to recover the bilinear form of eq. (6) at the discrete level. For this purpose, the integration

of the bilinear form is ideally only carried out on ΩΓin . One way to perform the domain-integration

numerically is to approximate ΩΓin adaptively by recursive bisection, allowing for a simple and

efficient refinement towards the boundary [64, 5, 67]. Geometrically more involved, but also more

efficient schemes utilize straight sided triangles, —see, e.g., [28]. Precise numerical integration

schemes for complex geometries based on the blending function method [68] are also possible.

Homogeneous Neumann boundary conditions are easy to deal with. They are equivalent to

assuming material with zero stiffness in the domain Ωe \ Ω and, therefore, need no special treatment
in the framework of the finite cell method. Inhomogeneous Neumann boundary conditions are

realized by including the second term in eq. (7), i.e., by directly integrating over Γ. The integrand

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



8 S. KOLLMANNSBERGER ET. AL

is simply a product of a function living on the surface (the load) and the shape functions u defined

over the cells, yet evaluated at the surface Γ.

The imposition of Dirichlet type boundary conditions on Γ or on parts of it, i.e., ΓD cuts ΩC3, is

a central topic of this paper and is discussed in section 3.

3. WEAK IMPOSITION OF DIRICHLET BOUNDARY CONDITIONS

3.1. Nitsche’s method

We consider the following scalar-valued single field problem:

−k∆u = f in Ω (9)
u = u on Γ = ∂Ω (10)

For simplicity, we assume a pure Dirichlet-problem, i.e. ΓD = Γ. If Dirichlet conditions are imposed

only on parts of the boundary, corresponding integrals in the following formulations have to be taken

only over these parts. If the boundary conditions eq. (10) are imposed by Nitsche’s method [24], the

potential corresponding to eqs. (9) and (10) reads:

Π(u,σ) =

∫

Ω

(
1

2
k (∇u)2 − fu

)
dΩ−

∫

Γ

n · σ (u− u) dΓ +
1

2
β

∫

Γ

(u− u)2 dΓ (11)

The first term in eq. (11) is clearly the potential associated to eq. (9). The second term enforces

the boundary conditions of eq. (10) by means of a Lagrange multiplier λ which has already been

identified to be equal to the fluxes at the boundary λ = −n · σ. This allows a formulation in primal
variables, i.e., no additional degrees of freedom are needed to approximate λ. However, the negative

sign of the Lagrange multiplier may lead to a loss of coercivity which is restored by the third term

in the potential of eq. (11) which again enforces u to be equal to u at Γ by means of a penalization.

Coercivity is only restored for a sufficiently high choice of β. Unfortunately, a closer look reveals

that the penalty parameter β is problem-dependent. Fortunately, it has turned out that the precise

choice of β does not have a large influence on the solution above a certain threshold. However, an

optimal value for β is not easily obtained and the threshold above which its influence on the result

is of only minor importance is unknown a priori.

The weak form of the imposition of the boundary conditions by Nitsche’s method may either be

obtained by multiplication of eqs. (9) and (10) by a suitable test function and integration by parts,

or by variation of the potential given in eq. (11). In any case, both approaches lead to the following

weak form [24]:

k (∇u,∇v)Ω − k (n · ∇u, v)Γ − k (u,n · ∇v)Γ + kβ (u, v)Γ = 〈f, v〉Ω − k〈ū,n · ∇v〉Γ + kβ〈ū, v〉Γ
(12)

where we used the common short hand notation of the L2 product (·, ·) and < ·, · > denotes the
integral of two functions over a domain.

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 9

A lower bound to estimate the parameter β in eq. (12) to ensure coercivity may be obtained by

solving the following auxiliary eigenvalue problem as, for example, suggested in [69, 28]:

Ax = ΛBx (13)

A =

∫

Γ

(∇u · n)(∇v · n)dΓ

B =

∫

Ω

(∇u · ∇v)dΩ

3.2. Alternative to Nitsche’s method

The symmetric form of the imposition of boundary conditions presented in this section closely

follows the work of Baiges et al. [33] but puts the methodology into the context of the finite cell

method. Even though the presentation starts from a mixed-field formulation, its final form contains

only the primal unknowns.

3.2.1. Weak form Equations (9) and (10) can be recast into the following two-field problem:

−k∆u = f in Ω (14)
1

k
σ = ∇u in ΩΓin (15)

u = u on Γ (16)

As usual for mixed-field formulations, u and σ in eqs. (14) to (16) are discretized independently.

The associated potential to eqs. (14) to (16) is

Π(u,σ) =

∫

Ω

(
1

2
k (∇u)2 − fu

)
dΩ−

∫

Γ

n · σ (u− u) dΓ−
1

2nk

∫

ΩΓin

(σ − k∇u)2 dΩΓin
(17)

where n is any real number greater than two. The only difference between eq. (11) and eq. (17) is

that the latter enforces the boundary condition with the help of the material law of eq. (15) which is

imposed weakly on ΩΓin . In essence, the potential eq. (17) enforces the Lagrange multiplier to be

the trace of the unknown in a least squares sense.

The variation of the potential given in eq. (17) leads to the following weak form of eqs. (14)

to (16):

k (∇u,∇v)Ω − 〈n · σ, v〉Γ +
1

n
(∇v,σ)ΩΓin −

1

n
k (∇v,∇u)ΩΓin = 〈f, v〉Ω (18)

−
1

nk
(τ ,σ)ΩΓin

+
1

n
(τ ,∇u)ΩΓin − 〈τ · n, u〉Γ = −〈τ · n, u〉Γ (19)

This formulation still contains the primal unknown u and the flux variable σ. However, as we shall

see later, σ can be condensed out at the discrete level in such a way that no additional unknowns

will be necessary to impose the boundary conditions.

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



10 S. KOLLMANNSBERGER ET. AL

3.2.2. Discretization in the context of the finite cell method. The finite element subspaces are

constructed to ensure that Vh ⊂ H1 (Ωh)d, so Vh consists of continuous functions. Further, we
construct Sh ⊂ L2 (Ωh)d. Functions in Sh are considered to be discontinuous only within the
elements cut by Γ and are zero elsewhere. The discretized weak form given in eqs. (18) and (19)

now reads:

k (∇uh,∇vh)Ω − 〈n · σh, vh〉Γ +
1

n
(∇vh,σh)ΩΓin −

1

n
k (∇vh,∇uh)ΩΓin = 〈f, vh〉Ω ∀vh ∈ Vh

(20)

−
1

nk
(τh,σh)ΩΓin

+
1

n
(τh,∇uh)ΩΓin − 〈τh · n, uh〉Γ = −〈τh · n, u〉Γ ∀τh ∈ Sh

(21)

At this point it is worthwhile to discuss the meaning of discontinuity in the context of the finite cell

method. The primary goal is to simplify the implementation process as far as possible by reusing

the shape functions from Vh for Sh. In the context of the finite cell method, the first term in eq. (20)

reads

(∇uh,∇vh)αΩe =
nc∑

c=1

∫

Ωc

[Lvh]
T
αC [Luh] dΩ (22)

The following, alternative view is naturally possible:

(∇uh,∇vh)αΩe =
nc∑

c=1

∫

Ωc

[
Lvh

√
α
]T

C
[
Luh

√
α
]
dΩ (23)

Hereby, the shape and the weighting functions u and v are both multiplied by the square root of

the indicator function α defined in eq. (2). We now have two views on the discontinuity of u and v:

(a) we may view them to smoothly extend across Γ into the embedding domain under the condition

that this extension does not contribute to the energy described by the bilinear form. Clearly, this

view is expressed in eq. (22). (b) we might view the shape functions uh and vh to exhibit a jump to

zero from whatever value that satisfies the conditions on Γ internal to ΩC3. This view is represented

in eq. (23). From the implementational point of view there is, thus, no need to define a new set of

discontinuous shape functions for the discretization of either σh or τh. Instead, one may simply

reuse the shape functions from the discretization of uh and vh for the discretization of σh and τh.

Thus, we discretize uh and vh in a Bubnov-Galerkin sense as follows:

uh = NU =
[
Ni=1 . . . Ni=n

]



ûi=1
...

ûi=n


 (24)

vh = NV =
[
Ni=1 . . . Ni=n

]



v̂i=1
...

v̂i=n


 (25)

σh = NΣ =

[
Ni=1 . . . Ni=n

Ni=1 . . . Ni=n

]



σ̂i=1x σ̂i=1y
...

...

σ̂i=nx σ̂i=ny


 (26)

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 11

variational eqn. k (∇uh,∇vh)Ω,ΩΓin −
1
nk

(τh,σ)ΩΓin
1
n
(τh,∇u)ΩI

Γin

1
n
(∇vh,σh)ΩΓin

algebraic form KuuU KσσΣ KσuU KuσΣ

variational eqn. −〈σh · n, vh〉Γ −〈τh · n, u〉Γ -〈n · τh, ū〉Γ 〈f, vh〉Ω
algebraic form GuσΣ GσuU gσū f

Table I. Terms concerned with the internal part of each domain of the discrete variational and algebraic form
of eqs. (20) and (21).

τh = nNT =

[
n̂1

n̂2

] [
Ni=1 . . . Ni=n

]



τ̂i=1 x τ̂i=1 y
...

...

τ̂i=nx τ̂i=n y


 (27)

for scalar-valued Poisson’s problem. In eqs. (24) to (27) Ni denote the ith shape function

and n = (p+ 1)d for a tensor product space in d dimensions. The corresponding coefficients

ûi, v̂i, σ̂ix, σ̂iy, τ̂ix, τ̂iy are organized in the respective matrices U , V , Σ, and T . We would like

to emphasize that, in the following, we will use an equal order discretization for all fields and that,

therefore, all N ’s given in eqs. (24) to (27) are completely identical.

Note that the definition of τh includes the multiplication by the normal vector n. We apply the

following definition for n: n at ΓD is the outward pointing normal vector. Logically, then, inside

ΩΓin , n is defined to deliver a smooth extension of Γ into ΩΓin which is obtained by taking n to be

the normal vector towards Γ from the considered point in ΩΓin
†.

3.2.3. Static condensation and final formulation. With the definitions given in table I the system

given by eqs. (20) and (21) can be written in compact form as:




(
1− 1

n

)
Kuu Kuσ +Guσ

Kσu +Gσu Kσσ







U

Σ


 =




f

gσū


 (28)

The fluxes may be computed as follows:

Σ = K−1σσ (− (Kσu +Gσu)U + gσū) (29)

Kσσ is always positive definite and, therefore, invertible. Additionally, Kσσ must only be computed

on the elements cut by Γ. The fluxes may, thus, be condensed out of eq. (28) analytically on element

level prior to computation. Equation (28), therefore, simplifies to:

[(
1−

1

n

)
Kuu − (Guσ +Kuσ)K−1σσ (Kσu +Gσu)

]
U =

[
f − (Guσ +Kuσ)K−1σσ gσū

]
(30)

†This definition is applied, for example, in the evaluation of Kσσ in eqs. (35), (53) and (54).

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



12 S. KOLLMANNSBERGER ET. AL

variational eqn. −k (n · ∇u, v)Γ
βk
h
(vh, uh)Γ −k (n∇vh, ū)Γ

βk
h
(vh, ū)Γ

algebraic form GuuU GβuuU guū g
β
uū

Table II. Nitsche’s method: Linear and bilinear forms used in eq. (36).

The system given in eq. (30) can be written in a simpler way with the help of the following identities:

1

n
KuuU = −

[
KuσK

−1
σσKσu

]
U (31)

G
T
uuU = −

[
KuσK

−1
σσGσu

]
U (32)

guūU = −
[
KuσK

−1
σσ gσū

]
(33)

GuuU = −
[
GuσK

−1
σσKσu

]
U (34)

to give:
[
Kuu +Guu +G

T
uu −GuσK−1σσGσu

]
U =

[
f + gσū −GūσK−1σσ gσū

]
(35)

Equation (35) is the final formulation of the method presented in [33]. For means of comparison,

the discrete form of Nitsche’s method is given in eq. (36)

[
Kuu +Guu +G

T
uu +G

β
uu

]
U =

[
f + guū + g

β
uū

]
(36)

where the linear forms of guū and g
β
uū and the bilinear forms of G

T
uu and G

β
uu are given in table II.

Now it can be clearly seen that eq. (35) and eq. (36) only differ in the last terms in the brackets. The

new terms GuσK−1σσGσu and GūσK
−1
σσ gσū are now responsible for counterbalancing the Nitsche

terms resulting from the identified Lagrange multiplier Guu and its transpose. Stability of eq. (35)

was proven in the sense of an inf-sup condition in [33] for low order discretizations. We will provide

examples to show that the system given by eq. (35) even remained positive definite.

It is interesting to note how the method given by eq. (35) avoids the estimation of a problem-

dependent parameter. Let us consider the simple case in which ΩΓin is small. Then, the magnitude

of K−1σσ is large and the term GuσK
−1
σσGσu automatically adds the needed stabilization. In this

process, the dependency of the penalty term on a characteristic mesh size h and a specific p is

respected quite naturally.

3.3. Two-dimensional Poisson’s problem

In this section, we investigate the 2D Poisson’s problem proposed in [70]. The same example was

studied in the context of the finite cell method in [28] as well, and is depicted in fig. 3. It consists

of a square domain with edge a = 1 and k = 1. Homogeneous Dirichlet boundary conditions are

imposed on the left, right and upper boundary of the domain while u(x, 0) = sin(πx) is imposed on

the lower boundary. We discretize the domain by 8× 8 elements using both the p-version and the
B-Spline version of the finite cell method and study pure p-refinements, keeping the discretization

grid as it is. All boundary conditions are imposed weakly as presented above either by the Nitsche’s

method or by eq. (35). For Nitsche’s method, we estimate the penalty parameter for each polynomial

degree as suggested in [69] and multiply it by two. We expect the solution to converge to the

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 13

Ωe

Ω

a = 1∆a ∆a

AΩ = 1.0

u(x, 0) = sin(πx)
u(x, 1) = 0.0
u(x, 1) = 0.0
u(y, 0) = 0.0
u(y, 1) = 0.0

x

y

Figure 3. two-dimensional Poisson’s problem as proposed in [70].

analytical one given in eq. (37) which has the strain energy given by eq. (38):

Uex(x, y) = (cosh(πy)− coth(π) sinh(πy)) sin(πx) (37)

Uex =
k

4
π coth(π) (38)

With no singularities in the solution, we expect an exponential convergence in the energy norm

under pure p-refinement.

We begin by studying the case where the discretization of the domain conforms to all boundaries.

A first overall impression of the solution is given in fig. 4a, where the case p = 3 is considered. The

exact solution is not depicted as the approximation is already so close to it. More insight is only

gained by looking at the convergence of its energy, as depicted in fig. 4b. All methods converge

exponentially as expected. With no even-odd behavior present, almost no difference in the p- or

B-Spline version of the finite cell method is observable. This is not surprising as we are performing

a pure p-extension on both meshes starting with p=1 and, therefore, stay C0 continuous at inter-

element level for both discretization schemes. It is explicitly pointed out that at p=8 the example is

computed to numerical accuracy for all methods. Figure 4b depicts the error in the energy norm in

per cent. The absolute difference of the analytic strain energy to its numeric approximation is in the

order of 10−12. Figure 4c depicts the condition number of the stiffness matrix. It is of no surprise

that the p-version has a clear advantage over B-Splines in terms of conditioning for this boundary

conforming example. The minimum eigenvalues of the overall stiffness matrix including its weak

boundary conditions are depicted in fig. 4d. They decrease to small values but always stay positive.

We now look at the performance of the boundary conditions for an embedded problem which we

solve using the finite cell method. We use the same mesh consisting of a single patch with 8× 8
elements for the B-Spline version or 8× 8 p-elements. The discretization is plotted along with the
integration mesh and the solution in fig. 5a. Note that there are now all three types of cells ΩC1,

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



14 S. KOLLMANNSBERGER ET. AL

(a) solution and discretization

 

 

BSpline: Nitsche
BSpline: eq. (35)
PFEM: Nitsche
PFEM: eq. (35)

re
la

ti
ve

er
ro

r
in

st
ra

in
en

er
gy

[%
]

DOF

101 102 103 104
10−6

10−4

10−2

100

102

(b) convergence behaviour

 

 

BSpline: Nitsche
BSpline: eq. (35)
PFEM: Nitsche
PFEM: eq. (35)

lo
g1

0(
co

nd
it

io
n

nu
m

be
r)

polynomial degree
1 2 3 4 5 6 7 8

0

2

4

6

8

10

(c) condition number of left hand side of eq. (35)

 

 

BSpline: Nitsche
BSpline: eq. (35)
PFEM: Nitsche
PFEM: eq. (35)

lo
g1

0(
sm

al
le

st
ei

ge
nv

al
ue

)

polynomial degree
1 2 3 4 5 6 7 8

−8

−6

−4

−2

0

(d) smallest eigenvalue

Figure 4. 2D ∆a = 0 (conforming boundary conditions).

ΩC2, and ΩC3 and that the computations are carried out as described in section 2: the cells in ΩC1
are located completely outside the physical domain and are neither computed nor assembled. The

cells in ΩC2 are computed as regular finite elements of high order. The cells in ΩC3 are adaptively

integrated. As we chose a very favorable situation — namely that the boundary Γ cuts the cells in

ΩC3 exactly in half — an adaptive integration on a quadtree is chosen, leading to an exact integration

already at the first level of refinement. Figure 5a explicitly depicts the entire solution, including the

integration tree and the unphysical solution in the fictitious domain ΩΓout outside the boundary

depicted by a thick black line. The physical solution is similar to the non-embedded case, only the

color-scale is shifted due to the smooth extension. The convergence behavior as percent error in the

energy norm is depicted in fig. 5b, whereby the reference solution is the strain energy computed

analytically from the solution given in eq. (37). The convergence is of higher order until p=6, where

it levels off and, in case of the method given by eq. (35) version, increases. The increase is non-

physical and clearly shows the limits of the numerics to compute this situation. At this level, the

condition number depicted in fig. 5c rises above 1015 which imposes difficulties for the solver

used. This deserves a closer look. Apart from the inversion of the stiffness matrix K, there are

more places where matrices have to be inverted. For the Nitsche’s version of imposing boundary

conditions, one must solve the eigenvalue problem given in eq. (13) as accurately as possible. The

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 15

 

 

y

x
−0.3 0.1 0.5 1.1 1.3

0

1

−0.3

−0.1

0.5

1.1

1.3

(a) solution, discretization and integration cells

 

 

BSpline: Nitsche
BSpline: eq. (35)
PFEM: Nitsche
PFEM: eq. (35)

re
la

ti
ve

er
ro

r
in

st
ra

in
en

er
gy

[%
]

DOF

102 103
10−4

10−2

100

(b) convergence behaviour

 

 

BSpline: Nitsche
BSpline: eq. (35)
PFEM: Nitsche
PFEM: eq. (35)

lo
g1

0(
co

nd
it

io
n

nu
m

be
r)

polynomial degree
1 2 3 4 5 6 7 8

0

5

10

15

20

(c) condition number of left hand side of eq. (35)

 

 

BSpline: Nitsche
BSpline: eq. (35)
PFEM: Nitsche
PFEM: eq. (35)

lo
g1

0(
sm

al
le

st
ei

ge
nv

al
ue

)

polynomial degree
2 4 6 8

−20

−15

−10

−5

0

(d) smallest eigenvalue

Figure 5. non-conforming boundary

eigenvalue problem is defined on the cut cells and therefore suffers from the conditioning problems

as well.

The crucial point for the method given in eq. (35) is the inversion of Kσσ, also defined on the

cut cells. It constitutes the core part of the lower bound for the stability term. In the current Matlab

implementation of the method, the inversion of Kσσ is most stable using the pseudo inverse instead

of the inverse but it is still less accurate than the solution of the corresponding eigenvalue problem

necessary for Nitsche’s method. It is worthwhile noting that Kσσ is similar to a mass matrix and,

therefore, neither basis is optimized to render optimal conditioning here. At p=7, the condition of

Kσσ reaches 1018 and a correct solution is no longer guaranteed. However, all eigenvalues of the

overall stiffness matrix of the discrete system are very small but always remain positive as depicted

in fig. 5d.

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



16 S. KOLLMANNSBERGER ET. AL

3.4. Curved boundary

We compute the example depicted in fig. 6. It consists of a Poisson problem solved on a quarter of

an annulus, embedded in a Cartesian mesh. Two Dirichlet boundary conditions are set weakly at the

inner and outer ring to 1 and 3, respectively. The analytical solution in polar coordinates is given by

x

y

Γi

Γo

ro

ri

k = 1.0

ri = 0.25

r0 = 1.0

u(x, y) = 3 on Γi
u(x, y) = 1 on Γo

Figure 6. Quarter of an annulus.

u(r) = 1−
ln(r)

ln(2)
(39)

where r denotes the radial distance. It possesses a strain energy of

Uex =
π

ln(4)
≈ 2.266180071.

The results are plotted in fig. 7. In addition to the Cartesian mesh spanning the shape functions,

we plot the integration mesh in figs. 7a to 7c. Note that, instead of the adaptive sub-cells we

use sub-triangles here to integrate the cut-cells. This increases the accuracy of the integration and

the solution, see e.g.[28]. The results are snapshots for p = 3 whereby we do not plot the smooth

extension for the sake of clarity.

The error in the energy norm, the condition number and the smallest eigenvalues are depicted

in figs. 7d to 7f, respectively. The new method practically delivers results of comparible accuracy

and conditioning for non-conforming, curved boundaries.

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 17

 

 1

1.2

1.4

1.6

1.8

2

2.2

2.4

2.6

2.8

3

(a) Numerical solution for p = 3, discretization, and
integration domains

 

 

−5

−4

−3

−2

−1

0

(b) Numerical flux for p = 3 in x-direction

 

 

−5

−4

−3

−2

−1

0

(c) Numerical flux for p = 3 in y-direction

 

 

BSpline: Nitsche
BSpline: eq. (35)
PFEM: Nitsche
PFEM: eq. (35)

re
la

ti
ve

er
ro

r
in

st
ra

in
en

er
gy

[%
]

DOF

101 102 103
10−2

10−1

100

101

102

(d) convergence behaviour

 

 

BSpline: Nitsche
BSpline: eq. (35)
PFEM: Nitsche
PFEM: eq. (35)

lo
g1

0(
co

nd
it

io
n

nu
m

be
r)

polynomial degree
0 2 4 6 8

0

5

10

15

20

(e) Condition number of left hand side of eq. (35)

 

 

BSpline: Nitsche
BSpline: eq. (35)
PFEM: Nitsche
PFEM: eq. (35)

lo
g1

0(
sm

al
le

st
ei

ge
nv

al
ue

)

polynomial degree
0 2 4 6 8

−20

−15

−10

−5

0

(f) Smallest eigenvalue

Figure 7. Example: Quarter ring, results.

4. PARAMETER-FREE, WEAK COUPLING OF TWO DOMAINS

4.1. General setting

In the following, we consider two domains ΩI and ΩII , which are sewed together along the

common boundary Γ = ΓI = ΓII . On this common boundary, we will demand the continuity of

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



18 S. KOLLMANNSBERGER ET. AL

the displacements as well as the continuity of the fluxes in a weak from. The continuous view of this

general setting is depicted in fig. 8. The coupling conditions of ΩI and ΩII at the common boundary

=
ΩI

ΩI

ΩII Ω
II

nII
nI

Γ Γ
I

ΓIIΓext

Figure 8. Two physical domains ΩI and ΩII weakly coupled at Γ.

Γ in strong form are:

uI − uII = 0 on Γ (40)
σ

I · nI − σII · nII = 0 on Γ (41)

4.2. Weak coupling using Nitsche’s method

Nitsche’s method applied to the coupled Poisson’s system is given by:

kI
(
∇uI ,∇vI

)
ΩI

−
1

2

(
n

I · kI∇uI − nII · kII∇uII , vI
)
Γ
−

1

2

(
uI ,nI · kI∇vI − nII · kII∇vII

)
Γ

+ β
(
uI − uII , vI

)
Γ
= 〈f, vI〉ΩI

(42)

kII
(
∇uII ,∇vII

)
ΩII

−
1

2

(
n

II · kII∇uII − nI · kI∇uI , vII
)
Γ
−

1

2

(
uII ,nII · kII∇vII − nI · kI∇vI

)
Γ

+ β
(
uII − uI , vII

)
Γ
= 〈f, vII〉ΩII

(43)

where the weak boundary conditions on Γext =
(
∂ΩI ∪ ∂ΩII

)
\ Γ are not written down for the sake

of simplicity. The use of Nitsche’s method for coupling domains weakly has already extensively

been studied, for example in [39]. We refer to [6], for an overview of its properties and to the

introduction for further references. Again, an estimator for β is needed and we use the one provided

by eq. (13), wherein now

A =




AI 0

0 AII


 (44)

and likewise for B.

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 19

variational eqn. k (∇uh,∇vh)Ω,ΩΓin −
1
nk

(τh,σ)ΩΓin
1
n
(τh,∇u)ΩI

Γin

1
n
(∇vh,σh)ΩΓin

algebraic form KuuU KσσΣ KσuU KuσΣ

variational eqn. −〈σh · n, vh〉Γ −〈τh · n, u〉Γ 〈f, vh〉Ω
algebraic form GuσΣ GσuU f

Table III. Terms concerned with the internal part of each domain of the discrete variational and algebraic
form of eqs. (45) to (48).

4.3. New formulation for parameter-free, symmetry-preserving weak coupling

We first reconsider the weak form given in eqs. (20) and (21) and note that the parts of the

equations on Ω and ΩΓin only concern the interior Ω. They may thus be written independently

of each other for each subdomain ΩI and ΩII . On the contrary, the coupling conditions at Γ

i.e., eqs. (40) and (41), are concerned with both domains. For reasons of consistency, we equally

distribute their contribution between both subdomains. Let us define the subspace for the unknowns

in each subdomain as V Ih ⊂ H1(ΩIh) and V IIh ⊂ H1(ΩIIh ). Similarly, we define SIh ⊂ L2(ΩIh) and
SIIh ⊂ L2(ΩIIh ). Utilizing eqs. (40) and (41), the variational form of the problem consists of finding
uIh ∈ V Ih , σIh ∈ SIh, uIIh ∈ V IIh , σIIh ∈ SIIh such that:

k
(
∇uIh,∇vIh

)
ΩI

−
1

2
〈σII

h
· nI + σI

h
· nI , vIh〉Γ +

1

n

(
∇vIh,σIh

)
ΩI

Γin

+

−
1

n
k
(
∇vIh,∇uIh

)
ΩI

Γin

= 〈f, vh〉ΩI ∀vIh ∈ V Ih
(45)

−
1

nk

(
τ
I
h ,σ

I
h

)
ΩI

Γin

+
1

n

(
τ
I
h ,∇uIh

)
ΩI

Γin

−
1

2
〈τ Ih · nI , uIh − uIIh 〉Γ = 0 ∀τ Ih ∈ SIh

(46)

k
(
∇uIIh ,∇vIIh

)
ΩII

−
1

2
〈σIh · nII + σIIh · nII , vIIh 〉Γ +

1

n

(
∇vIIh ,σIIh

)
ΩII

Γin

+

−
1

n
k
(
∇vIIh ,∇uIIh

)
ΩII

Γin

= 〈f, vIIh 〉ΩII ∀vIIh ∈ V IIh
(47)

−
1

nk
(τh,σh)ΩII

Γin

+
1

n
(τh,∇uh)ΩII

Γin

−
1

2
〈τ IIh · nII , uIIh − uIh〉Γ = 0 ∀τ IIh ∈ SIIh (48)

where the coupling terms from the respective other domain are marked in blue. The first two

equations correspond to the first subdomain, while the last two equations correspond to the second

subdomain.

Let U and Σ be the vectors of the unknown coefficients of uh and σh, respectively. For the

algebraic version of eqs. (45) to (48) we utilize the notation given in table III for the terms

only concerned with one domain. The new terms concerned with the sewing of the domains are

collected in table IV, where we have used the fact that nI = −nII . Further, we utilize the fact that
GI,IIσu = G

II,I
T

uσ and G
II,I
σu = G

I,II
T

uσ . The coupled problem written in matrix form then reads:

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



20 S. KOLLMANNSBERGER ET. AL

Discrete variational eqn. −〈σII · nI , vIh〉Γ −〈σI · nII , vIIh 〉Γ
Algebraic form GI,IIuσ Σ

II GII,Iuσ Σ
I

Discrete variational eqn. −〈τ Ih · nII , uII〉Γ −〈τ IIh · nI , uI〉Γ
Algebraic form GI,IIσu U

II GII,Iσu U
I

Table IV. Coupling terms of the discrete variational and algebraic form eqs. (45) to (48).




(
1− 1

n

)
KIuu K

I
uσ +

1
2
GIuσ 0

1
2
GI,IIuσ

KIσu +
1
2
GIσu K

I
σσ

1
2
GI,IIσu 0

0
1
2
GII,Iuσ

(
1− 1

n

)
KIIuu K

II
uσ +

1
2
GIIuσ

1
2
GII,Iσu 0 K

II
σu +

1
2
GIIσu K

II
σσ







U I

Σ
I

U II

Σ
II




=




f I

0

f II

0




(49)

4.4. Static condensation

We may compute the fluxes in eq. (49) as:

Σ
I =

(
K

I
σσ

)−1
(
−
(
K

I
σu +

1

2
G

I
σu

)
U

I −
1

2
G

I,II
σu U

II

)
(50)

Σ
II =

(
K

II
σσ

)−1
(
−
(
K

II
σu +

1

2
G

II
σu

)
U

II −
1

2
G

II,I
σu U

I

)
(51)

and condense ΣI and ΣII out of the system eq. (49). The equation for subdomain I reads:

((
1−

1

n

)
K

I
uu −

(
1

2
G

I
uσ +K

I
uσ

)(
K

I
σσ

)−1
(
K

I
σu +

1

2
G

I
σu

)
−

1

4
G

I,II
uσ

(
K

II
σσ

)−1
G

II,I
σu

)
U

I

(
−
(
K

I
uσ +

1

2
G

I
uσ

)(
K

I
σσ

)−1 1
2
G

I,II
σu −

1

2
G

I,II
uσ

(
K

II
σσ

)−1
(
K

II
σu +

1

2
G

II
σu

))
U

II

(52)

We then use the definitions given in eqs. (31), (32) and (34) to simplify the terms only concerned

with domain I. Equation (52) then reduces to:

(
K

I
uu +

1

2

(
G

I
uu +

(
G

I
uu

)T)−
1

4
G

I
uσ

(
K

I
σσ

)−1
G

I
σu −

1

4
G

I,II
uσ

(
K

II
σσ

)−1
G

II,I
σu

)
U

I

(
−
1

2

(
K

I
uσ +

1

2
G

I
uσ

)(
K

I
σσ

)−1
G

I,II
σu −

1

2
G

I,II
uσ

(
K

II
σσ

)−1
(
K

II
σu +

1

2
G

II
σu

))
U

II (53)

Likewise, for subdomain II we have:

(
−
1

2
G

II,I
uσ

(
K

I
σσ

)−1
(
K

I
σu +

1

2
G

I
σu

)
−

1

2

(
K

II
uσ +

1

2
G

II
uσ

)(
K

II
σσ

)−1
G

II,I
σu

)
U

I

(
K

II
uu −

1

4
G

II
uσ

(
K

II
σσ

)−1
G

II
σu +

1

2

(
G

II
uu +

(
G

II
uu

)T)−
1

4
G

II,I
uσ

(
K

I
σσ

)−1
G

I,II
σu

)
U

II (54)

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 21

variational eqn. −kI〈∇uhI · nII , vIIh 〉Γ −kII〈∇uhII · nI , vIh〉Γ
algebraic form GII,Iuu U

I GI,IIuu U
II

variational eqn. −kI〈∇vhI · nII , uIIh 〉Γ −kII〈∇vhII · nI , uIh〉Γ
algebraic form (GII,Iuu )

TU II (GI,IIuu )
TU I

Table V. Coupling terms from Nitsche’s method.

Further, we introduce the following identities:

−KIIuσ(KIIσσ)−1GII,Iσu U I = (GI,IIuu )TU I (55)
−GII,Iuσ (KIσσ)−1KIσuU I = GII,Iuu U I (56)
−KIuσ(KIσσ)−1GI,IIσu U II = (GII,Iuu )TU II (57)
−GI,IIuσ (KIIσσ)−1KIIσuU II = GI,IIuu U II (58)

which arise from Nitsche’s method as defined in table V. Equation (52) then reads (terms in blue

now mark the terms which differ from Nitsche’s method, that is, the stabilization terms):

(
K

I
uu +

1

2

(
G

I
uu +

(
G

I
uu

)T)−
1

4
G

I
uσ

(
K

I
σσ

)−1
G

I
σu−

1

4
G

I,II
uσ

(
K

II
σσ

)−1
G

II,I
σu

)
U

I

(
1

2

(
G

I,II
uu +

(
G

II,I
uu

)T)−
1

4
G

I
uσ

(
K

I
σσ

)−1
G

I,II
σu −

1

4
G

I,II
uσ

(
K

II
σσ

)−1
G

II
σu

)
U

II (59a)

Likewise, for subdomain II we have:

(
1

2

(
G

II,I
uu +

(
G

I,II
uu

)T)−
1

4
G

II,I
uσ

(
K

I
σσ

)−1
G

I
σu −

1

4
G

II
uσ

(
K

II
σσ

)−1
G

II,I
σu

)
U

I

(
K

II
uu +

1

2

(
G

II
uu +

(
G

II
uu

)T)−
1

4
G

II
uσ

(
K

II
σσ

)−1
G

II
σu−

1

4
G

II,I
uσ

(
K

I
σσ

)−1
G

I,II
σu

)
U

II (59b)

It is interesting to note that the penalty terms have a contribution which arises from subdomain I

and a contribution from subdomain II. They ensure the stability of the method independently of the

geometry of the meshes in subdomain I and II, as proven in section 4.5.

4.5. Stability Analysis

In this subsection we prove that the formulation for weak coupling given by eqs. (59a) and (59b)

is stable. To do so, we follow a strategy similar to the one presented in [33]. In order to show

the stability of the method for weak coupling, we will consider the unknowns uI to vanish on

the external boundary Γext of subdomain I , and the normal component of the stresses σII to be

null in the external boundary in subdomain II . Further, to keep the proof as concise as possible, we

consider only the case in which the material constants k are the same for both domains. Additionally,

we assume the common boundary Γext to be a straight line.

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



22 S. KOLLMANNSBERGER ET. AL

uI = 0 on Γext (60)

σ
II · nII = 0 on Γext (61)

In this setting, we redefine V Ih ⊂ H10 (ΩIh), where the zero subscript denotes functions vanishing
in the external boundary Γext. We define the norm:

|||[uI ,σI , uII ,σII ]|||2 =

k||∇uI ||2
L2(ΩI) + k||∇u

II ||2
L2(ΩII) +

k

h
||uI − uII ||2L2(Γ) +

1

k
||σI ||2

L2(ΩI
Γ,in

)
+

1

k
||σII ||2

L2(ΩII
Γ,in

)

(62)

where h is the cell size. The bilinear form for the global problem defined on both subdomains is:

B
([
uIh,σ

I
h, u

II
h ,σ

II
h

]
,
[
vIh, τ

I
h , v

II
h , τ

II
h

])
=

k
(
∇uIh,∇vIh

)
ΩI

−
1

2
〈σIIh · nI + σIh · nI , vIh〉Γ +

1

n

(
∇vIh,σIh

)
ΩI

Γin

−
1

n
k
(
∇vIh,∇uIh

)
ΩI

Γin

+

−
1

nk

(
τ
I
h ,σ

I
h

)
ΩI

Γin

+
1

n

(
τ
I
h ,∇uIh

)
ΩI

Γin

−
1

2
〈τ Ih · nI , uIh − uIIh 〉Γ+

k
(
∇uIIh ,∇vIIh

)
ΩII

−
1

2
〈σIh · nII + σIIh · nII , vIIh 〉Γ +

1

n

(
∇vIIh ,σIIh

)
ΩII

Γin

−
1

n
k
(
∇vIIh ,∇uIIh

)
ΩII

Γin

+

−
1

nk

(
τ
II
h ,σ

II
h

)
ΩII

Γin

+
1

n

(
τ
II
h ,∇uIIh

)
ΩII

Γin

−
1

2
〈τ IIh · nII , uIIh − uIh〉Γ (63)

We suppose that Vh and Sh are such that

∀vh ∈ Vh ∃τh ∈ Sh | δ1‖vh‖2L2(Γ) ≤ 〈τh · n, vh〉Γ + δ0h‖∇vh‖
2 (64)

‖τh‖L2(Γ) = ‖vh‖L2(Γ), ‖τh‖2 ≤ δ2h‖vh‖2L2(Γ) (65)

where δ0, δ1, δ2 are positive non-dimensional constants which depend on the geometry of the mesh.

Conditions in eqs. (64) and (65) are an assumption of the formulation, but these conditions hold for

the most common interpolation spaces (see [33]).

We will show the stability of eq. (63) by obtaining an inf-sup condition in the norm of eq. (62).

Let us take
[
vIh, τ

I
h , v

II
h , τ

II
h

]
=

[
uIh,−σIh −

β
h
kτ̃ Ih , u

II
h ,−σIIh −

β
h
kτ̃ IIh

]
, where τ̃ Ih is the function

in SIh which makes eqs. (64) and (65) hold for u
II
h − uIh, and τ̃ IIh is the function in SIIh which makes

eqs. (64) and (65) hold for uIIh − uIh. β is a dimensionless constant to be defined. We have:

B

([
u
I
h,σ

I
h, u

II
h , u

II
h ,σ

II
h

]
,

[
u
I
h,−σ

I
h −

β

h
kτ̃

I
h , u

II
h ,−σ

II
h −

β

h
kτ̃

II
h

])
=

k

(
∇u

I
h,∇u

I
h

)

ΩI
−

1

2
〈σ

II
h · n

I
+ σ

I
h · n

I
, u

I
h〉Γ +

1

n

(
∇u

I
h,σ

I
h

)

ΩI
Γin

−
1

n
k

(
∇u

I
h,∇u

I
h

)

ΩI
Γin

+

+
1

nk

(
σ

I
h,σ

I
h

)

ΩI
Γin

−
1

n

(
σ

I
h,∇u

I
h

)

ΩI
Γin

+
1

2
〈σ

I
h · n

I
, u

I
h − u

II
h 〉Γ +

+
β

nh

(
τ̃
I
h ,σ

I
h

)

ΩI
Γin

−
βk

nh

(
τ̃
I
h ,∇u

I
h

)

ΩI
Γin

+
βk

2h
〈τ̃

I
h · n

I
, u

I
h − u

II
h 〉Γ +

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 23

k

(
∇u

II
h ,∇u

II
h

)

ΩII
−

1

2
〈σ

I
h · n

II
+ σ

II
h · n

II
, u

II
h 〉Γ +

1

n

(
∇u

II
h ,σ

II
h

)

ΩII
Γin

−
1

n
k

(
∇u

II
h ,∇u

II
h

)

ΩII
Γin

+

+
1

nk

(
σ

II
h ,σ

II
h

)

ΩII
Γin

−
1

n

(
σ

II
h ,∇u

II
h

)

ΩII
Γin

+
1

2
〈σ

II
h · n

II
, u

II
h − u

I
h〉Γ +

+
β

nh

(
τ̃
II
h ,σ

II
h

)

ΩII
Γin

−
βk

nh

(
τ̃
II
h ,∇u

II
h

)

ΩII
Γin

+
βk

2h
〈τ̃

II
h · n

II
, u

II
h − u

I
h〉Γ ≥

(
1 −

1

n

)
k||∇u

I
h||

2
+

1

nk
||σ

I
h||

2
+

−
βδ

1/2
2

nh1/2
‖u

II
h − u

I
h‖L2(Γ)||σ

I
h|| −

βkδ
1/2
2

nh1/2
‖u

II
h − u

I
h‖L2(Γ)||∇u

I
h|| +

βkδ1

2h
‖u

II
h − u

I
h‖

2
L2(Γ)

−
βkδ0

2
‖∇(u

II
h − u

I
h)‖

2
+

(
1 −

1

n

)
k||∇u

II
h ||

2
+

1

nk
||σ

II
h ||

2
+

−
βδ

1/2
2

nh1/2
‖u

II
h − u

I
h‖L2(Γ)||σ

II
h || −

βkδ
1/2
2

nh1/2
‖u

II
h − u

I
h‖L2(Γ)||∇u

II
h || +

βkδ1

2h
‖u

II
h − u

I
h‖

2
L2(Γ)

−
βkδ0

2
‖∇(u

II
h − u

I
h)‖

2
≥

(
1 −

1

n

)
k||∇u

I
h||

2
+

1

nk
||σ

I
h||

2
+

(
1 −

1

n

)
k||∇u

II
h ||

2
+

1

nk
||σ

II
h ||

2
+

βkδ1

h
‖u

II
h − u

I
h‖

2
L2(Γ)

+

−
δ
1/2
2

2γh1/2

βδ
1/2
2

nh1/2
‖u

II
h − u

I
h‖L2(Γ) −

γh
1/2

2δ
1/2
2

βδ
1/2
2

nh1/2
||σ

I
h|| −

δ
1/2
2

2γh1/2

βδ
1/2
2

nh1/2
‖u

II
h − u

I
h‖L2(Γ) −

γh
1/2

2δ
1/2
2

βδ
1/2
2

nh1/2
||∇u

I
h|| +

−
δ
1/2
2

2γh1/2

βδ
1/2
2

nh1/2
‖u

II
h − u

I
h‖L2(Γ) −

γh
1/2

2δ
1/2
2

βδ
1/2
2

nh1/2
||σ

II
h || −

δ
1/2
2

2γh1/2

βδ
1/2
2

nh1/2
‖u

II
h − u

I
h‖L2(Γ) −

γh
1/2

2δ
1/2
2

βδ
1/2
2

nh1/2
||∇u

II
h || +

− βkδ0‖∇u
II
h ||

2
− βkδ0‖∇u

I
h‖

2
≥

(
1 −

1

n
− β

(
γ

2n
+ δ0

))
k||∇u

I
h||

2
+

1

n

(
1 −

βγ

2

)
1

k
||σ

I
h||

2
+

(
1 −

1

n
− β

(
γ

2n
+ δ0

))
k||∇u

II
h ||

2
+

1

n

(
1 −

βγ

2

)
1

k
||σ

II
h ||

2
+

β

(
δ1 −

2δ2

γn

)
k

h
‖u

II
h − u

I
h‖L2(Γ)

where γ is an arbitrary dimensionless constant. We now take

n > 1, γ >
2δ2
δ1n

, β < min

(
1− 1

n

( γ
2n

+ δ0)
,
2

γ

)
, (66)

and we take into account that:

|||

[
u
I
h,−σ

I
h −

β

h
kτ̃

I
h , u

II
h ,−σ

II
h −

β

h
kτ̃

II
h

]
|||

2
=

k||∇u
I
h||

2
L2(ΩI )

+ k||∇u
II
h ||

2
L2(ΩII )

+
k

h
||u

I
h − u

II
h ||

2
L2(Γ)

+
1

k
||σ

I
h −

β

h
kτ̃

I
h ||

2
+

1

k
||σ

II
h −

β

h
kτ̃

II
h ||

2
≤

k||∇u
I
h||

2
L2(ΩI )

+ k||∇u
II
h ||

2
L2(ΩII )

+
k

h
||u

I
h − u

II
h ||

2
L2(Γ)

+
2

k
||σ

I
h||

2
+

2kβ2

h2
||τ̃

I
h ||

2
+

2

k
||σ

II
h ||

2
+

2kβ2

h2
||τ̃

II
h ||

2
≤

k||∇u
I
h||

2
L2(ΩI )

+ k||∇u
II
h ||

2
L2(ΩII )

+
k

h
(1 + 4β

2
δ2)||u

I
h − u

II
h ||

2
L2(Γ)

+
2

k
||σ

I
h||

2
+

2

k
||σ

II
h ||

2
≤

max(1 + 4β
2
δ2, 2)|||[u

I
h,σ

I
h, u

II
h ,σ

II
h ]|||

2

which gives us the following theorem:

Theorem. Suppose that eqs. (64) and (65) hold and n > 1. Then, the bilinear form eq. (63) satisfies

that for all [uIh,σ
I
h, u

II
h ,σ

II
h ] there exist

[
vIh, τ

I
h , v

II
h , τ

II
h

]
and α > 0 such that

B
([
uIh,σ

I
h, u

II
h ,σ

II
h

]
,
[
vIh, τ

I
h , v

II
h , τ

II
h

])
≥ α|||

[
uIh,σ

I
h, u

II
h ,σ

II
h

]
||| |||

[
vIh, τ

I
h , v

II
h , τ

II
h

]
|||

4.6. Examples

In this section we present various examples, where the performance of the new method is compared

to Nitsche’s method in the framework of both p- and B-spline version of the FCM.

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



24 S. KOLLMANNSBERGER ET. AL

4.6.1. Constant coefficients, non-conform discretizations in h and p. This introductory example is

to provide a first insight into the performance of the weak coupling method given by eqs. (59a)

and (59b). The starting point is the 2D Poisson’s problem with a smooth solution already presented

in section 3.3. This time, however, the problem is split into two domains ΩI and ΩII which are

weakly coupled. The continuous situation is depicted in fig. 9a. We choose to discretize ΩI with

1.0

ΩI

ΩII

Γ

u(x, 0) = sin(πx)
u(x, 1) = 0.0
u(x, 1) = 0.0
u(y, 0) = 0.0
u(y, 1) = 0.0

0
.2
5

0
.7
5

x

y

(a) Continuous view (b) Numerical solution with the BSpline version
and a non-conforming discretization in h and p

(ΩI with p = 3 and ΩII with p = 2) computed with
eqs. (59a) and (59b)

Figure 9. 2D Poisson’s problem as in fig. 3 but consisting of two domains ΩI and ΩII , weakly coupled at Γ.

8× 4 elements while ΩII is discretized by 3× 4 elements. The discretization is depicted in fig. 9b
among with a snapshot of the solution. The non-conformity of the discretization on Γ manifests

itself not only in the appearance of hanging nodes. Additionally, we discretize ΩI with p and ΩII

with p− 1. The discretizations are, thus, non-conforming in h and p across the interface. However,
in a first step, the domains do not overlap, i.e., they are coupled along Γ. The coupled solution

depicted in fig. 9b does not show any (visible) kinks or jumps across Γ. This demonstrates that

eq. (40) is satisfied.

The corresponding fluxes depicted for both directions x and y are depicted in fig. 10. They are

smooth across Γ which demonstrates that eq. (41) is also satisfied.

Figure 11a depicts the convergence in the energy norm as we increase p from 2 to 9 for ΩI

and from 1 to 8 for ΩII . We consider the p- and B-spline version of FCM, using both standard

Nitsche and the method proposed here for patch coupling. The rate of convergence is exponential

until numerical accuracy is reached and the curves for all methods are practically congruent to one

another. The condition numbers are depicted in fig. 11b. They remain quite low for the p-version

and are once again higher for the B-Spline version due to the sub-optimality of the BSpline basis

with respect to the condition numbers. The plot of the smallest eigenvalue of the stiffness matrix

fig. 11c again shows that all discrete eigenvalues remain positive.

4.6.2. Constant coefficients, overlapping discretizations. We now change the discretization of the

example given in section 4.6.1, (fig. 9a) such that the domains ΩI and ΩII are overlapping in the

region (0 ≤ x < 1.0) ∧ (0.45 ≤ y < 0.55). We weakly enforce the continuity (eqs. (40) and (41)) at
the boundary Γ and explicitly note that Γ is now inclined and internal to the discretization of both

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 25

(a) Numerical flux in x-direction (b) Numerical flux in y-direction

Figure 10. Flux corresponding to fig. 9b.

 

 

BSpline: Nitsche
BSpline: eq. (59)
PFEM: Nitsche
PFEM: eq. (59)

re
la

ti
ve

er
ro

r
in

st
ra

in
en

er
gy

[%
]

DOF

102 103
10−4

10−2

100

(a) convergence behaviour

 

 

BSpline: Nitsche
BSpline: eq. (59)
PFEM: Nitsche
PFEM: eq. (59)

lo
g1

0(
co

nd
it

io
n

nu
m

be
r)

polynomial degree
2 3 4 5 6 7 8 9

0

2

4

6

8

10

12

(b) condition number of system stiffness matrix

 

 

BSpline: Nitsche
BSpline: eq. (59)
PFEM: Nitsche
PFEM: eq. (59)

lo
g1

0(
sm

al
le

st
ei

ge
nv

al
ue

)

polynomial degree
0 2 4 6 8

−10

−8

−6

−4

−2

0

(c) smallest eigenvalue

Figure 11. analysis corresponding to fig. 9b

domains. The continuous situation is depicted in fig. 12a. The solution is depicted in fig. 12b along

with its Cartesian discretization and the triangular integration mesh. The integration is carried out on

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



26 S. KOLLMANNSBERGER ET. AL

1.0

ΩI

ΩII

Γ

0
.4
5

0
.4
5

0
.5
5

0
.5
5

∂ΩI

∂ΩII

x

y

(a) Continuous view

 

 

y

x
0 0.2 0.4 0.6 0.8 1

0

0.2

0.4

0.6

0.8

1

0

0.2

0.4

0.6

0.8

1

(b) Numerical solution with the B-Spline version (ΩI with
p = 3 ∧ ΩII with p = 2)

Figure 12. Constant coefficients, overlapping discretizations: Both computational domains ΩI and ΩII have
an extension of x× y = 1.0× 0.55. They overlap on (0 ≤ x < 1.0) ∧ (0.45 ≤ y < 0.55).

ΩΓin only. Note that ΩΓin ∈ ΩI lies below Γ and ΩΓin ∈ ΩII lies above Γ. The obtained numerical
solution is smooth, already at low polynomial orders. This is particularly eminent on the plot of the

flux in y-direction in fig. 13a. The plot of the fluxes in x-direction is omitted as it provides no further

insight. Again, we note an exponential convergence in fig. 13b before it levels off at a low strain

energy due to the bad conditioning depicted in fig. 13c. The corresponding lowest eigenvalues are

depicted in fig. 13d.

4.6.3. Bimetal strip: discontinuous coefficients, non-conforming discretizations in h and p. This

example serves to show that the proposed method has no difficulties in representing discontinuities

in the derivatives of the solution across material interfaces which arise if the material coefficients

jump as well. The first example with jumping coefficients is a bimetal strip on which the Laplace

problem is solved. Its solution is depicted in fig. 14a. Dirichlet boundary conditions are applied

at the lower end u(x, 0) = 0 and on the upper end u(x, 1) = 1. We split the domain into a lower

part ΩI in which the material coefficient is kI = 1∀x, y ∈ ΩI and an upper part ΩII in which
kII = 2∀x, y ∈ ΩII . The interface between the two domains Γ : y = 0.5 is a straight line, parallel
to the x-axis. We discretize ΩI with 5× 4 elements with p = 1 organized in one patch covering all
of ΩI and likewise ΩII with 3× 3 elements with p = 1. This results in hanging nodes at Γ.

We expect a linear solution in y and a constant solution in x with a kink at the interface Γ.

Since the solution is already represented exactly at p = 1, convergence-studies are not carried out.

Figure 14a depicts the numerical solution along with the discretization. The fluxes are expected to

exhibit a jump at Γ and should remain constant within the domains. Figure 14b depicts a view of

the fluxes in y-direction along with the chosen discretization. The exact solution is matched up to

machine-precision, as expected.

4.6.4. Inclusion problem: discontinuous coefficients and embedded domain. The last example aims

at demonstrating the performance of the method given by eqs. (59a) and (59b) in an embedded

domain situation. The problem consists of an infinite medium, where the material coefficient is

kI = 1, with a circular inclusion, where the material coefficient is kII = 0.2. A constant flux is

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 27

 

 

y

x
0 0.2 0.4 0.6 0.8 1

−3

−2.5

−2

−1.5

−1

−0.5

0

0

0.2

0.4

0.6

0.8

1

(a) Numerical flux in y-direction

 

 

BSpline: Nitsche
BSpline: eq. (59)
PFEM: Nitsche
PFEM: eq. (59)

re
la

ti
ve

er
ro

r
in

st
ra

in
en

er
gy

[%
]

DOF

102 103
10−4

10−2

100

102

(b) convergence behaviour

 

 

BSpline: Nitsche
BSpline: eq. (59)
PFEM: Nitsche
PFEM: eq. (59)

lo
g1

0(
co

nd
it

io
n

nu
m

be
r)

polynomial degree
1 2 3 4 5 6 7 8

0

5

10

15

(c) Condition number of system stiffness matrix

 

 

BSpline: Nitsche
BSpline: eq. (59)
PFEM: Nitsche
PFEM: eq. (59)

lo
g1

0(
sm

al
le

st
ei

ge
nv

al
ue

)

polynomial degree
2 4 6 8

−15

−10

−5

0

(d) Smallest eigenvalue

Figure 13. Analysis corresponding to fig. 12a.

(a) discretization and solution (b) discretization and derivative of u(x, y) in y

Figure 14. Bimetal strip: solution u(x, y) and derivative of u(x, y) in y along with discretization

applied along the x-direction at large distances from the inclusion. The analytical solution is given

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



28 S. KOLLMANNSBERGER ET. AL

x

y

Γ
Ω1

Ω2

r

w

ΓD2

ΓD2ΓD2

ΓD2ΓD1

ΓD1

w

k1 = 1.0

k2 = 0.2

r = 1.0

w = 3.0

ΓD1 : u(x, y) =
2k1

k1+k2
x
r

ΓD2 : u(x, y) = (1− k1−k2k1+k2
r
2

x2+y2
)x
r

Figure 15. Example: circular inclusion

by

u(x, y) =





2k1
k1+k2

x
r

if x2 + y2 < r2

(1− k1−k2
k1+k2

r
2

x2+y2
)x
r

if x2 + y2 ≥ r2
(67)

where r denotes the radius of the inclusion. Due to its symmetry, only a quarter of the domain is

modeled and the Dirichlet boundary conditions are applied to the boundaries ΓD1 and ΓD2 according

to the analytical solution. The continuous view of the example is depicted in fig. 15. The results are

depicted in figs. 16a to 16f. The performance of the new method carries over from the rest of the

examples provided in this section. This example shows how well discontinuities in the derivatives

are approximated, also in an embedded domain situation (see figs. 16b and 16c). To clear the view,

we omit depicting the integration mesh and only show the Cartesian discretization on which the

shape functions are spanned.

5. SUMMARY, CONCLUSIONS AND SUGGESTIONS FOR FURTHER RESEARCH

Starting point of this paper was the formulation given in [33] for the application of boundary

conditions which must not necessarily conform to the finite element mesh. It is attractive in the

sense that there is no need to compute a stabilization parameter. We demonstrated, that this method

is able to provide results of similar accuracy as the more classical Nitsche’s formulation which calls

for the computation of stabilization parameters.

We have then used the fundamental ideas provided in [33] for the derivation of a new formulation

for the weak coupling of domains. It is, as well, free from problem-dependent stabilization

parameters which need estimation. The new, coupled formulation works well for discretizations of

high order, too. It is not specific to the underlying discretization and preserves symmetry. It is thus

well suited for the weak coupling of trimmed B-Spline patches and high-order embedded domain

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



WEAK COUPLING OF TRIMMED PATCHES 29

(a) solution, discretization and integration (b) derivative of u(x, y) in x along

(c) derivative of u(x, y) in y along

 

 

BSpline: Nitsche
BSpline: eq. (59)
PFEM: Nitsche
PFEM: eq. (59)

re
la

ti
ve

er
ro

r
in

st
ra

in
en

er
gy

[%
]

DOF

101 102 103
10−1

100

101

102

(d) convergence behaviour

 

 

BSpline: Nitsche
BSpline: eq. (59)
PFEM: Nitsche
PFEM: eq. (59)

lo
g1

0(
co

nd
it

io
n

nu
m

be
r)

polynomial degree
1 2 3 4 5 6 7 8

0

5

10

15

20

(e) condition number of left hand side of eqs. (20) and (21)

 

 

BSpline: Nitsche
BSpline: eq. (59)
PFEM: Nitsche
PFEM: eq. (59)

lo
g1

0(
sm

al
le

st
ei

ge
nv

al
ue

)

polynomial degree
2 4 6 8

−15

−10

−5

0

(f) smallest eigenvalue of left hand side of eqs. (20) and (21)

Figure 16. Circular inclusion, results.

situations. We are able to prove stability and clearly point out the difference to Nitsche’s method.

While this are very nice features, we see some room for improvement as well.

The formulation carries the material matrix in the Nitsche terms as well as in the automatic

stabilization terms. This poses no extra effort as long as geometric nonlinearities are not considered.

In this case one would need the directional derivative of practically all terms involved in the

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme



30 S. KOLLMANNSBERGER ET. AL

entire formulation. If one sets out to perform these analytically, this will result in a complicated

formulation. Automatic differentiation would probably be the best way to go in this case, especially

if one intends to avoid redoing the derivatives for each material law employed. The same is true,

of course, for Nitsche’s method but we would like to point out that the new formulation does not

alleviate this burden.

The most important advantage compared to Nitsche’s method is the avoidance of the solution

of auxiliary eigenvalue problems for the estimation of the stability parameters. This is replaced by

computing the inverse of a matrix similar to a mass matrix defined on the remaining part of the cut

element. However, it is to be remarked that both problems are formulated on the cut elements and

this leads to badly conditioned problems. Throughout the computations we noticed a very close

correspondence between the results of Nitsche’s method and the new method in the computed

examples.

REFERENCES

1. Hughes TJR, Cottrell JA, Bazilevs Y. Isogeometric analysis: CAD, finite elements, NURBS, exact geometry and
mesh refinement. Computer Methods in Applied Mechanics and Engineering 2005; 194:4135–4195.

2. Cottrell JA, Hughes TJR, Bazilevs Y. Isogeometric analysis: Towards Indegration of CAD and FEM. John Wiley &
Sons, 2009.

3. Parvizian J, Düster A, Rank E. Finite cell method – h- and p-extension for embedded domain problems in solid
mechanics. Computational Mechanics 2007; 41:121–133.

4. Düster A, Parvizian J, Yang Z, Rank E. The finite cell method for three-dimensional problems of solid mechanics.
Computer Methods in Applied Mechanics and Engineering 2008; 197:3768–3782.

5. Rank E, Ruess M, Kollmannsberger S, Schillinger D, Düster A. Geometric modeling, isogeometric analysis and
the finite cell method. Computer Methods in Applied Mechanics and Engineering 2012; 249-252:104–115, doi:
doi:http://dx.doi.org/10.1016/j.cma.2012.05.022.

6. Hansbo P. Nitsche’s method for interface problems in computational mechanics. GAMM-Mitteilungen 2005;
28(2):183206.

7. Lew AJ, Buscaglia GC. A discontinuous-Galerkin-based immersed boundary method. International
Journal for Numerical Methods in Engineering 2008; 76(4):427–454, doi:10.1002/nme.2312. URL
http://doi.wiley.com/10.1002/nme.2312.

8. Höllig K. Finite Element Methods with B-Splines. Frontiers in Applied Mathematics, SIAM Society for Industrial
and Applied Mathematics, 2003.

9. Sanches R, Bornemann P, Cirak F. Immersed b-spline (i-spline) finite element
method for geometrically complex domains. Computer Methods in Applied Mechan-
ics and Engineering 2011; 200(13-16):14321445, doi:10.1016/j.cma.2010.12.008. URL
http://linkinghub.elsevier.com/retrieve/pii/S0045782510003531.

10. Rüberg T, Cirak F. Subdivision-stabilised immersed b-spline finite elements for moving boundary flows. Computer
Methods in Applied Mechanics and Engineering 2012; 209-212:266–283, doi:10.1016/j.cma.2011.10.007. URL
http://linkinghub.elsevier.com/retrieve/pii/S0045782511003197.

11. Arroyo M, Ortiz M. Local maximum-entropy approximation schemes: a seamless bridge between finite elements
and meshfree methods. International Journal for Numerical Methods in Engineering 2006; 65(13):2167–2202,
doi:10.1002/nme.1534. URL http://doi.wiley.com/10.1002/nme.1534.

12. Legrain G, Chevaugeon N, Drau K. High order x-FEM and levelsets for complex
microstructures: Uncoupling geometry and approximation. Computer Methods in Applied
Mechanics and Engineering 2012; 241-244:172189, doi:10.1016/j.cma.2012.06.001. URL
http://linkinghub.elsevier.com/retrieve/pii/S0045782512001880.

13. Duarte CA, Reno LG, Simone A. A high-order generalized FEM for through-the-thickness branched cracks.
International Journal for Numerical Methods in Engineering 2007; 72(3):325–351, doi:10.1002/nme.2012. URL
http://doi.wiley.com/10.1002/nme.2012.

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme

http://doi.wiley.com/10.1002/nme.2312
http://linkinghub.elsevier.com/retrieve/pii/S0045782510003531
http://linkinghub.elsevier.com/retrieve/pii/S0045782511003197
http://doi.wiley.com/10.1002/nme.1534
http://linkinghub.elsevier.com/retrieve/pii/S0045782512001880
http://doi.wiley.com/10.1002/nme.2012


WEAK COUPLING OF TRIMMED PATCHES 31

14. Joulaian M, Düster A. Local enrichment of the finite cell method for problems with
material interfaces. Computational Mechanics 2013; doi:10.1007/s00466-013-0853-8. URL
http://link.springer.com/10.1007/s00466-013-0853-8.

15. Babuška. The finite element method with penalty. Mathematics of Computation April 1973; 27(122):221.
16. Zhu T, Atluri SN. A modified collocation method and a penalty formulation for enforcing the essential boundary

conditions in the element free galerkin method. Computational Mechanics April 1998; 21(3):211–222.
17. Babuška I. The Finite Element Method with Lagrangian Multipliers. Numerische Mathematik 1973; 20:179–192.
18. Brezzi F. On the existence, uniqueness and approximation of saddle-point problems arising from lagrangian

multipliers. ESAIM: Mathematical Modelling and Numerical Analysis - Modlisation Mathmatique et Analyse
Numrique 1974; 8(R2):129–151.

19. Barbosa HJC, Hughes TJR. Boundary Lagrange multipliers in finite element methods: Error analysis in natural
norms. Numerische Mathematik 1992; 62(1):1–15.

20. Glowinski R, Pan TW, Periaux J. A fictitious domain method for dirichlet problem and applications. Computer
Methods in Applied Mechanics and Engineering 1994; 111(34):283–303.

21. Hansbo P, Lovadina C, Perugia I, Sangalli G. A Lagrange multiplier method for the finite element solution
of elliptic interface problems using non-matching meshes. Numerische Mathematik 2005; 100(1):91–115, doi:
10.1007/s00211-005-0587-4. URL http://link.springer.com/10.1007/s00211-005-0587-4.

22. Mourad HM, Dolbow J, Harari I. A bubble-stabilized finite element method for dirichlet constraints on embedded
interfaces. International Journal for Numerical Methods in Engineering 2007; 69(4):772–793, doi:10.1002/nme.
1788. URL http://doi.wiley.com/10.1002/nme.1788.

23. Burman E, Hansbo P. Fictitious domain finite element methods using cut elements: I. a stabilized Lagrange
multiplier method. Computer Methods in Applied Mechanics and Engineering 2010; 199(4144):2680–2686.

24. Nitsche J. Über ein variationsprinzip zur Lösung von Dirichlet-Problemen bei Verwendung von Teilräumen, die
keinen Randbedingungen unterworfen sind. Abhandlungen aus dem Mathematischen Seminar der Universität
Hamburg 1971; 36(1):9–15.

25. Stenberg R. On some techniques for approximating boundary conditions in the finite element method. Journal of
Computational and Applied Mathematics 1995; 63(1-3):139148, doi:10.1016/0377-0427(95)00057-7.

26. Griebel M, Schweitzer M. A Particle-Partition of Unity Method Part v: Boundary Conditions.
Geometric Analysis and Nonlinear Partial Differential Equations, Hildebrandt S, Karcher H
(eds.). Springer Berlin Heidelberg, 2003; 519–542, doi:10.1007/978-3-642-55627-2 27. URL
http://dx.doi.org/10.1007/978-3-642-55627-2_27.

27. Harari I, Shavelzon E. Embedded kinematic boundary conditions for thin plate bending by Nitsche’s approach.
International Journal for Numerical Methods in Engineering 2012; 92(1):99–114, doi:10.1002/nme.4337. URL
http://doi.wiley.com/10.1002/nme.4337.

28. Ruess M, Schillinger D, Bazilevs Y, Varduhn V, Rank E. Weakly enforced essential boundary conditions
for NURBS-embedded and trimmed NURBS geometries on the basis of the finite cell method.
International Journal for Numerical Methods in Engineering 2013; 95(10):811–846, doi:10.1002/nme.4522. URL
http://doi.wiley.com/10.1002/nme.4522.

29. Zander N, Kollmannsberger S, Ruess M, Yosibash Z, Rank E. The Finite Cell Method for Linear Thermoelasticity.
Computers & Mathematics with Applications 2012; 64(11):3527–3541, doi:10.1016/j.camwa.2012.09.002. URL
http://linkinghub.elsevier.com/retrieve/pii/S0898122112005688.

30. Bazilevs Y, Hughes T. Weak imposition of Dirichlet boundary conditions in fluid mechanics. Computers & Fluids
2007; 36(1):12–26, doi:10.1016/j.compfluid.2005.07.012.

31. Codina R, Baiges J. Approximate imposition of boundary conditions in immersed boundary methods. International
Journal for Numerical Methods in Engineering 2009; 80:13791405, doi:10.1002/nme.2662.

32. Gerstenberger A, Wall W. An embedded Dirichlet formulation for 3D continua. International Journal for Numerical
Methods in Engineering 2010; 82:537–563.

33. Baiges J, Codina R, Henke F, Shahmiri S, Wall WA. A symmetric method for weakly imposing Dirichlet boundary
conditions in embedded finite element meshes. International Journal for Numerical Methods in Engineering 2012;
90(5):636–658, doi:10.1002/nme.3339. URL http://dx.doi.org/10.1002/nme.3339.

34. Bernardi C, Maday Y, Patera A. A new non conforming approach to domain decomposition: The mortar element
method. Collège de France Seminar, Brezis H, Lions JL (eds.). Pitman, 1994; 53–63.

35. Flemisch B, Puso M, Wohlmuth B. A new dual mortar method for curved interfaces:2d linear elasticity.
International Journal for Numerical Methods in Engineering 2000; 63:813–832.

36. Wohlmuth B. A mortar finite element method using dual spaces for the Lagrange multiplier. SIAM Journal on
Numerical Analysis 2000; 38:989–1012.

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme

http://link.springer.com/10.1007/s00466-013-0853-8
http://link.springer.com/10.1007/s00211-005-0587-4
http://doi.wiley.com/10.1002/nme.1788
http://dx.doi.org/10.1007/978-3-642-55627-2_27
http://doi.wiley.com/10.1002/nme.4337
http://doi.wiley.com/10.1002/nme.4522
http://linkinghub.elsevier.com/retrieve/pii/S0898122112005688
http://dx.doi.org/10.1002/nme.3339


32 S. KOLLMANNSBERGER ET. AL

37. Puso MA. A 3d mortar method for solid mechanics. International Journal for Numerical Methods in Engineering
2004; 59:315–336.

38. Lamichhane B, Stevenson R, Wohlmuth B. Higher order mortar finite element methods in 3d with dual Lagrange
multiplier bases. Numerische Mathematik 2005; 102:93–121.

39. Hansbo A, Hansbo P. An unfitted finite element method, based on Nitsche’s method,
for elliptic interface problems. Computer Methods in Applied Mechanics and Engi-
neering 2002; 191(47-48):5537 – 5552, doi:DOI:10.1016/S0045-7825(02)00524-8. URL
http://www.sciencedirect.com/science/article/pii/S0045782502005248.

40. Becker R, Hansbo P, Stenberg R. A finite element method for domain decomposition with non-matching grids.
ESAIM: Mathematical Modelling and Numerical Analysis November 2003; 37(2):209–225.

41. Hansbo A, Hansbo P, Larson MG. A finite element method on composite grids based on Nitsche’s method. ESAIM:
Mathematical Modelling and Numerical Analysis 2003; 37(03):495–514.

42. Hansbo A, Hansbo P. A finite element method for the simulation of strong and weak discontinuities in solid
mechanics. Computer Methods in Applied Mechanics and Engineering 2004; 193(33-35):3523–3540.

43. Sanders JD, Laursen T, Puso M. A Nitsche embedded mesh method. Computational Mechanics September 2011;
49(2):243257.

44. Ruess M, Schillinger D, Özcan A, Rank E. Weak coupling for isogeometric analysis of non-matching and trimmed
multi-patch geometries. Computer Methods in Applied Mechanics and Engineering 2014; :46–71.

45. Wriggers P, Zavarise G. A formulation for frictionless contact problems using a weak form introduced by Nitsche.
Computational Mechanics Februar 2008; 41(3):407–420.

46. Hansbo P, Hermansson J. Nitsche’s method for coupling non-matching meshes in fluid-structure vibration problems.
Computational Mechanics September 2003; 32(1-2):134–139.

47. Szabó B, Babuška I. Finite element analysis. John Wiley & Sons, 1991.
48. Parvizian J, Düster A, Rank E. Topology optimization using the finite cell method. Optimization and Engineering

2011; :1–22URL http://dx.doi.org/10.1007/s11081-011-9159-x, 10.1007/s11081-011-9159-x.
49. Schillinger D, Ruess M, Zander N, Bazilevs Y, Düster A, Rank E. Small and large deformation analysis with

the p- and B-spline versions of the finite cell method. Computational Mechanics 2012; 50:445–478, doi:DOI:
10.1007/s00466-012-0684-z.

50. Schillinger D, Düster A, Rank E. The hp-d-adaptive finite cell method for geometrically nonlinear problems
of solid mechanics. International Journal for Numerical Methods in Engineering 2012; 89:1171–1202, doi:
DOI10.1002/nme.3289.

51. Schillinger D, Dedè L, Scott MA, Evans JA, Borden MJ, Rank E, Hughes TJ. An isogeometric design-through-
analysis methodology based on adaptive hierarchical refinement of NURBS, immersed boundary methods, and
T-spline CAD surfaces. Computer Methods in Applied Mechanics and Engineering 2012; 249–252:116–150, doi:
10.1016/j.cma.2012.03.017.

52. Schillinger D. The p- and b-spline versions of the geometrically nonlinear finite cell method and hierarchical
refinement strategies for adaptive isogeometric and embedded domain analysis. Dissertation, Technische
Universität München 2012.

53. Yang Z, Kollmannsberger S, Düster A, Ruess M, Burgkart R, Garcia E, Rank E. Computational Steering for
Orthopeadics. Computing and Visualization in Science 2012; 14:207–216.

54. Yang Z, Ruess M, Kollmannsberger S, Düster A, Rank E. An efficient integration technique for the voxel-based
Finite Cell Method. International Journal for Numerical Methods in Engineering 2012; 91:457–471.

55. Ruess M, Tal D, Trabelsi N, Yosibash Z, Rank E. The finite cell method for bone simulations: verification and
validation. Biomechanics and modeling in mechanobiology 2012; 11:425–437.

56. Düster A, Sehlhorst HG, Rank E. Numerical homogenization of heterogeneous and cellular materials utilizing the
finite cell method. Computational Mechanics 2012; 50:413–431, doi:doi:10.1007/s00466-012-0681-2.

57. Abedian A, Parvizian J, Düster A, Rank E. The finite cell method for the j2 flow theory of plasticity. Finite Elements
in Analysis and Design 2013; 69:37–47, doi:10.1016/j.finel.2013.01.006.

58. Duczek S, Joulaian M, Düster A, Gabbert U. Modeling of ultrasonic guided waves using the finite and spectral cell
method. International Journal for Numerical Methods in Engineering 2014, accepted; .

59. Cai Q, Kollmannsberger S, Mundani R, Rank E. The finite cell method for spatially varying dispersions in coupled
multispecies reactive transprot problems. Proceedings of the International Conference on Computational Methods
for Coupled Problems in Science and Engineering, Kos Island, Greece, 2011.

60. Cai Q, Kollmannsberger S, Mundani R, Rank E. The finite cell method for solute transport problems in porous
media. Proceedings of the International Conference on Finite Elements in Flow Problems, Garching, Germany,
2011.

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme

http://www.sciencedirect.com/science/article/pii/S0045782502005248
http://dx.doi.org/10.1007/s11081-011-9159-x


WEAK COUPLING OF TRIMMED PATCHES 33

61. Rank E, Kollmannsberger S, Sorger C, Düster A. Shell Finite Cell Method: A High Order
Fictitious Domain Approach for Thin-Walled Structures. Computer Methods in Applied
Mechanics and Engineering 2011; 200:3200–3209, doi:DOI:10.1016/j.cma.2011.06.005. URL
http://www.sciencedirect.com/science/article/pii/S0045782511002234.

62. Zander N, Bog S, Elhaddad M, Espinoza R, Hu H, Joly A, Wu C, Zerbe P, Düster A, Kollmannsberger S,
et al.. FCMLab: A Finite Cell Research Toolbox for MATLAB. Advances in Engineering Software 2014; doi:
10.1016/j.advengsoft.2014.04.004.

63. Gamma E, Helm R, Johnson R. Design patterns: Elements of reusable object-oriented software. Addison-Wesley,
1995.

64. Schillinger D, Rank E. An unfitted hp adaptive finite element method based on hierarchical b-splines for interface
problems of complex geometry. Computer Methods in Applied Mechanics and Engineering 2011; 200:3358–3380.

65. Schillinger D, Düster A, Rank E. The hp-d-adaptive finite cell method for geometrically nonlinear problems
of solid mechanics. International Journal for Numerical Methods in Engineering 2012; 89:1171–1202, doi:
DOI10.1002/nme.3289.

66. Schillinger D, Kollmannsberger S, Mundani R, Rank E. The Finite Cell Method for Geometrically Nonlinear
Problems of Solid Mechanics. The World Congress on Computational Mechanics, Sidney, Australia, 2010, doi:
10.1088/1757-899X/10/1/012170.

67. Abedian A, Parvizian J, Düster A, Khademyzadeh H, Rank E. Performance of different integration schemes
in facing discontinuites in the Finite Cell Method. International Journal of Computational Methods 2013;
10(03):1350 002–1–1350 002–24.

68. Gordon W, Hall C. Transfinite element methods: Blending function interpolation over arbitrary curved element
domains. Numerische Mathematik 1973; 21:109–129.

69. Embar A, Dolbow J, Harari I. Imposing Dirichlet boundary conditions with Nitsche’s method and spline-based
finite elements. International Journal for Numerical Methods in Engineering 2010; 83(7):877–898.

70. Fernández-Méndez S, Huerta A. Imposing essential boundary conditions in mesh-free methods. Computer Methods
in Applied Mechanics and Engineering 2004; 193(12-14):1257 – 1275.

Copyright c© 0000 John Wiley & Sons, Ltd. Int. J. Numer. Meth. Engng (0000)
Prepared using nmeauth.cls DOI: 10.1002/nme

http://www.sciencedirect.com/science/article/pii/S0045782511002234

	1 Introduction
	2 Finite Cell Method
	2.1 Applications of the finite cell method
	2.2 Formulation

	3 Weak imposition of Dirichlet boundary conditions
	3.1 Nitsche's method
	3.2 Alternative to Nitsche's method
	3.2.1 Weak form
	3.2.2 Discretization in the context of the finite cell method.
	3.2.3 Static condensation and final formulation.

	3.3 Two-dimensional Poisson's problem
	3.4 Curved boundary

	4 Parameter-free, weak coupling of two domains
	4.1 General setting
	4.2 Weak coupling using Nitsche's method
	4.3 New formulation for parameter-free, symmetry-preserving weak coupling
	4.4 Static condensation
	4.5 Stability Analysis
	4.6 Examples
	4.6.1 Constant coefficients, non-conform discretizations in h and p.
	4.6.2 Constant coefficients, overlapping discretizations.
	4.6.3 Bimetal strip: discontinuous coefficients, non-conforming discretizations in h and p.
	4.6.4 Inclusion problem: discontinuous coefficients and embedded domain.


	5 Summary, conclusions and suggestions for further research

