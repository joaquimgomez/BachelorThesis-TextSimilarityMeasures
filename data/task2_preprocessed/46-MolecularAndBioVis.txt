rai trace volum render larg molecular data multi-cor many-cor architectur aaron knoll texa advanc comput center ingo wald intel corpor paul a. navrtil texa advanc comput center michael e. papka argonn nation laboratori kelli p. gaither texa advanc comput center abstract visual larg molecular data requir effici mean ren- dere million data element combin glyphs, geometri volumetr techniques. geometr volumetr load challeng tradit rasterization-bas vi methods. rai cast- ing present scalabl memory- effici alternative, mod- ern techniqu typic reli gpu-bas acceler achiev interact render rates. paper, present bnsview, molecular visual rai trace framework deliv fast vol- um render ball-and-stick rai cast multi-cor cpu many-cor intel rxeon phi tm co-processors, implement spmd languag gener effici simd vector code multipl platform sourc modification. approach run co- processor competit simi- lar techniqu run gpu accelerators, demonstr large-scal parallel remot visual tacc stamped supercomput large-format displai wall system. 1. introduct larg scientif data gener todai supercomput demand capabl analysi visual methods. molecular dy- namic (md) simul particular challeng current visualiza- tion techniqu frequent combin glyphs, geometr structur volum render singl image. ball-and-stick represent remain popular mean molecular visu- alization, bear similar physic erector-set models. how- ever, million atom nanospher dataset produc 100 gi- gabyt tessel ball-and-stick geometri data; mil- lion atom dataset produc nearli terabyt geometry. gener molecular surfac add precomput cost geometr data load. data test function limit tradit molecular model softwar (e.g. vmd [17]) gener visual packag (e.g. paraview [3], visit [9]), limit abil scientist explor model effectively. enabl better interact exploration, ultim in-transit visual comput steering, necessari increas effici render ball-and-stick models, emploi vol- permiss digit hard copi work person classroom us grant fee provid copi distribut profit commerci advantag copi bear notic citat page. copyright compon work own acm honored. abstract credit permitted. copi otherwise, republish, post server redistribut lists, requir prior specif permiss and/or fee. request permiss ultravi 13 novemb 17, 2013, denver co, usa copyright 2013 acm 978-1-4503-2500-4/13/11...$15.00 . umetr model molecular data similar underli charg densiti field quantum physics. rai cast particular attract option render molec- ular data, ball-and-stick glyph render directli with- tessellation, direct volum render place molecular surfac isosurfac illustr charg densiti potenti field. emploi rai casting, reduc comput cost memori footprint need render- ing, allow larg md data render effici singl node. however, exist rai cast approach [28] reli gpu achiev interact performance. gpu com- mon acceler world 500 supercomputers, (89% june 2013 500 list [30]) us cpu-bas process- ing. current ten, includ gpus, system us cpus, includ intel rxeon phi tm coprocessor (mics) includ tianhe-2, current world #1. effici md visual techniqu remov gpu dependency, allow- ing render comput resource, broaden in- sight discoveri potenti import class simulations. paper, present bnsview, molecular visual effici rai cast rai trace molecular data multi- core cpu many-cor mic (xeon phi tm ) architectures. central compon approach, present effici parallel rai trace framework written custom spmd languag (similar nvidia cuda [1]), enabl effici auto-vector code cpu mics. paper make follow contributions: techniqu effici molecular visual com- bine volum data ball-and-stick geometri rai trace framework, suitabl multi-cor many-cor architectures; comparison techniqu state-of-the-art accel- erat (gpu-based) technique; demonstr parallel remot visu- aliz stamped supercomput large-format tile display, enabl in-transit visual larg md simulations. rest paper organ follows. section 2 place approach context relat work. provid background essenti evalu techniqu section 3, present implement section 4. section 5 discuss methodolog results, consid futur work con- clude paper section 6. 2. relat work section, present work relat techniqu place figur 1: 655368192 (512 megapixel) frame buffer render tacc stamped 128 intel rxeon phi tm s stream 2 fp tacc stallion 328 megapixel tile display. contribut context. 2.1 molecular visual popular molecular visual applic vmd [17] pymol [12] focu biomolecular problem protein docking; avogadro [15] emphas build molec- ular geometri ab initio computations. generally, applica- tion design molecul thousand atoms, suit materi problem hundr thousand million atoms. larg bodi work polygon molecular surfac exists, survei connolli [10]. data vmd, molecular surfac isosurfac prohibit slow com- pute 740k nanospher data, 5m atom silicon fissur data represent raster point lines. figur 2: left: visit gener ball-and-stick models, fail data larger 90k nanosphere. right: paraview render larger volum data 740k nanosphere, slow us pre-classification, result poor imag qualiti compar post-classifi volum rendering. gener parallel visual toolkit paraview [3] visit [9] molecular visual capability. paraview visit mean render sphere impostors, cylinders. volum render packag rel slow (visit) poor-qual preclassif (paraview), shown figur 2. paraview visit capabl out-of-the-box gener bond 740k atom nanospher larger data. clearly, possibl construct parallel reader ren- dere pipelin larger md data paraview visit. however, reason imag quality, singl node perform lower memori utilization, direct rai cast approach compelling. special molecular visual tool devel- op gpu. bajaj et al. [5] emploi particl impostor- base method fast render gpu raster shader pipeline. us 3d texture-bas volum render rel small scale lod illumin purposes. tarini et al. [29] us similar techniqu approxim global illumin retain real-tim performance. megamol framework [14] emploi differ techniqu rai cast million atom impostor real-tim rates. compar work, megamol limit emploi raster reli lod performance, support rai trace high-qual rendering. limit general-purpos molecular vi tool serv motiv develop nanovol [20, 28], gpu rai cast applic built effici opengl volum rai caster structur grid [21]. us single-level uniform grid macrocel classifi skip space defin transfer function. macrocel contain pointer list ball stick glyphs, denot atom indic pair indices, re- spectively. glsl chosen compat multipl gpus, (at time implementation) better volum render perform cuda. similarly, grid acceler structur chosen effici gpu (e.g. [11]). recently, nanovol extend run multi-gpu environment, render million-atom md data real-tim frame rate 70- megapixel stereo 3d cave2 environ [28]. 2.2 cpu rai trace parker et al. [25] demonstr interact perform direct rai trace isosurfac 128-cpu smp supercomputer. algorithm emploi bnsview base coher rai trac- ing [35], rai trace group packet [35], reduc travers intersect cost exploit com- mon memori access pattern vector instructions. subsequ work emploi techniqu interact cpu visual system structur [22, 23] unstructur [33] isosurfac volum rendering. gribbl et al [13] emploi coher rai trace effici render multi-million atom sphere glyphs. work integr manta interact rai tracer [6] paraview [8] gener intercept polygon geometri opengl [7] proven advantag rai trace method vi- sualiz larg data parallel, particularli weak scaling. recent embre 2.0 framework [36] deliv interact rai trace polygon model cpu intel rxeon phi tm accelerators, intel spmd program compil (ispc) [26]. framework open-sourc counterpart rai trace framework develop ivl [24] molecular visualization. 3. background section provid background techniqu render- ing approach. reader experienc molecular visual concept vector rai trace proce section 4. 3.1 volumetr model molecular data volum visual molecular data, goal approxim charg densiti potenti model provid insight presenc molecular surfac materi interfaces. volu- metric represent let repres continuously, allow view distanc ball stick represent impractical. model radial basi function (rbf), continuous, real-valu function valu decai respect distanc atom. global field function consist sum radial basi function particl contribut point space, di = |xxi| = i(di) (1) common choic gaussian polynomi com- pact support. sophist model possibl [20], work simplic us gaussian height scale radiu i(r) = red 2/r2i (2) ri coval radius. r prefactor dampen height gaussian, distribut charg densiti evenli larg small atom (though rough approximation, similar behavior charg densiti plot densiti func- tional theori computation). us 2ri support width basi function corresponds, correspond roughli van der waal radius. outsid outer radiu clamp contribut basi function zero. precomput structur volum model, creat grid fix resolut (typic 1 4 voxel ngstrm), depend accuraci memori requirements. iter atom molecule, appli radial basi function voxel overlap outer radius. 3.2 spmd coher rai trace achiev good rai trace perform modern architectur requir make good us simd vector units. gpu typic achiev languag cuda, opencl, glsl special kernel e.g. [4, 16]. cpu co- herent rai tracing, rai bundl packet si- multan comput traversal, intersection, shade routin simd vector instruct [35]. advantag vector intrinsics, coher rai tracer organ data structure-of- arrai layout correspond vector width (e.g., sse oper 4 float once). however, simd width vector instruct set vari differ cpu acceler architectures. better exploit vector- thread-parallel differ- ent architectur instruct set, mechan abstract simd lane multipl thread increasingli order. ivl [24] experiment single-program, multiple-data (spmd) compil transpar target varieti instruct set includ intel rsse, intel ravx, intel rxeon phi tm . au- tomat gener structure-of-arrai (soa) layout vari data simd lane ensur properli vector control flow mask condit execution, enabl effi- cient us simd vector instructions. crucially, allow pro- grammer write code emit multipl vector backend (sse, avx, mic potenti others). ivl close relat publicli avail ispc [26], addit support dynam polymorphism, oper overloading, verbatim low-level c++ code embed spmd code, support transpar of- fload code data acceler applicable. time implementation, ivl offer concret featur perfor- manc advantag ispc. however, perform behavior similar reproduc ispc im- plement well. 4. implement section implement bnsview cpu mic. high level, bnsview us bound volum hierarchi (bvh) acceler opaqu ball stick geometry, singl level grid macrocel acceler volum render (similar nanovol). chose bvh base approach (in inspir experi embre [36]) anticip better perform coher rai trace algorithm simd hardware. time, volum render acceler single-level structur grid, similar nanovol. accelera- tion structur shown figur 3. (a) uniform grid (b) bvh figur 3: acceler structures. (a) uniform grid uniformli decompos world space. nanovol gpu, grid volum polygon data: macrocel store in- dice ball stick primit overlap it; primit referenc macrocell. (b) bnsview, us macrocel grid acceler travers volum data, us bound volum hierarchi (right) polygon data: bvh leaf node contain 4 primit (either ball sticks); node overlap object con- tain leaf. 4.1 preprocess pipelin data input set atoms, type (e.g., carbon) 3d posit ngstrms. follow preprocess step occur: 1. atom insert uniform grid particl (inde- pendent macrocel grid associ volum data). dimens grid chosen divid bound molecul minimum bond length (specifi- cally, space atoms). 2. bond built nearest-neighbor lookup grid structure. 3. comput bound box centroid ball stick primitives; comput global bound pass. 4. bvh construction, describ below. 5. structur volum precomput rbf model. implement multipl thread (openmp), resolut chosen voxel ngstrm paramet (de- fault four). 6. necessary, data transfer bu mic. implementation, data transfer transpar ivl compil runtime. bvh construct bin variant surfac area heurist (sah) build axis-align kd-tree bound volum hi- erarchi polygon data [31]. first, build list base primit (ball sticks), centroid bound boxes. sort primit separ index lists, x, y z axes. recurs routin proce follows: num- ber primit node leaf threshold (we us primit leaf), return. otherwise, initi best cost sah parent node. partit split plane, sweep left right chosen axes, extend bound partit comput heuristic, choos partit minim cost. recurs routin left right children, pass sort sub-list primitives. reason conveni already-impl sah builder rivl polygon rai tracer. builder design optim real-tim rebuild current limit static scene geome- try. however, embre framework [36] contain bvh builder applic need enabl interac- tive rebuild well. 4.2 rai trace framework bnsview built rivl, rai trace engin written ivl [24], precursor spmd modul embre 2.0 (which written publicli avail ispc [26]). spmd languages, kernel express scalar form perform traversal, intersection, render simd parallel rays. semantically, rai express vary- ing data ivl ispc, distribut simd lane compiler. scene data, camera, geometry, acceler- ation structure, transfer function, uniform, constant simd lanes. like rai tracer glsl, opencl cuda, task- parallel express subdivid screen tile schedul render parallel. insid tile ren- dere task spmd compil gang multipl rai simd-siz chunks/warp process spmd fash- ion. tile task schedul task thread pick task share task pool avail- able; spmd control flow handl compiler. like gpu programming, ivl maintain concept host device. step perform host-to-devic copi data precomput cpu (the bvh, balls, sticks, structur data exists). cpu backends, pointer data share kernel explicit data copi made. gener rays, pass frame buffer, camera scene data device- kernel, turn divid frame buffer tile tasks. ivl/ispc, involv write rendertil task, process tile pixel simd width-siz chunks, gener- at rai pixel (all simd-parallel), pass rai framework, begin rai cast trace process. trace rai consist separ passes: 1. opaqu geometri traversal, bound volum hier- archi ball stick geometry. store singl opaqu hit posit gradient, shaded. 2. volum render rbf-model structur data (front- to-back, camera viewpoint opaqu hitpoint), us- ing uniform grid acceleration. store integr color opacity. generally, volum render pass costly, us opaqu geometri pass occlus earli termin volum render pass. pass enabl disabled, depend need shader call it. approach limit secondari bounc occur opaqu geometri intersect rai termin volume. however, call trace function iter integr color between, fulli implement rai trace effects. 4.3 bvh traversal, ball stick intersect bvh travers similar practic coher bvh traver- sal [32], fewer optim (e.g. interv arithmet per-packet cull tests) simpler implementation. rai start root node descend children rai vary- ing packet intersect child bound box. activ rays, automat- ical mask conditionals, intersect ball stick geometri leaf nodes. then, rai travers stack subse- quent node, repeat process node remain travers ends. coher traversal, node travers singl rai intersects, stack maintain bvh traver- sal (a travers control flow associ it) uni- form. stand contrast gpu implement separ thread (correspond simd lane cpu/mic) separ stack. packet-bas travers typic suf- fer somewhat lower simd util gpu-styl inde- pendent rai travers (in particular complex model using), turn suffer control flow divergence, particular requir frequent scatter/gath requir gpu methods; weigh other, packet ap- proach prefer cpus. intersect ball stick emploi standard ray-spher ray- cylind intersect tests. like node bvh, sphere cylind uniform data. thus, test perform simd parallel multipl (active) vari rai singl geo- metric primitive. 4.4 structur volum render shade structur volum render implement straightforward fash- ion, rai cast uniform sampling, trilinear interpol structur grid, post-classification. transform rai volum grid coordinates, determin entri exit coordi- nate volum bound box, march fix step size. trilinear interpol implement seven linear interpo- lations, care taken reduc cost address translation. note volum data brick maxim cach efficiency; perform improv better cach strategies. improv volum render performance, bnsview emploi macrocel grid volum data similar nanovol. grid contain minimum maximum rang valu volum data, pointer ball stick geometry. unlik coher bvh traversal, rai travers volum grid intersect voxel independently. nonetheless, provid 3 per- formanc improv data signific space larg nanosphere. implement option volumetr shading. lighting, simpli return trilinear interpol classify. central differences, fetch interpol valu neighbor- ing voxel x,y z directions. ensur smooth gradi- ent costli particular architectur contain hardwar 3d textur unit dedic textur caches. in- terpol shade oper perform parallel (for vari rai data). 4.5 rai trace modal rai tracer determin shade result pass rang effects. bnsview fulli ray-trac molecular data opaqu geometry, volum data, wide rang visual effects. example, render ball-and-stick figur 4: rai trace modal bnsview. left right: ball-and-stick diffus illumin shadow (58 fp xeon phi), ambient occlus (1.8 fps), path trace metal brdf (0.25 fps); unlit volum render volumetr shadow (16 fps), gradient light (3.7 fps). ambient occlus reflect metal, us volum render occlus rays, achiev soft-shadow effect. exampl shown figur 4. 5. result present result experi below. state oth- erwise, follow benchmark conduct 1024 1024 frame buffer visual node stamped dual 8-core (16 core total) 2.7 ghz intel rxeon tm e5-2680 32 gb ram, intel rxeon phi tm se10p 61 core 1.1 ghz 8 gb ram, nvidia k20 (kepler) gpu 6 gb ram. comput carri single-precis float- ing point. cpu, 8-wide avx instruct set. 5.1 overal perform comparison evalu bnsview cpu, bnsview mic, nanovol gpu molecular dataset rang 20 thousand 15 million atoms. consid far near refer view, report performance. volum render methods, fix step size 0.5 sampl voxel unit. us pre-integr transfer function 256-bin lookup table. rbf volum data 4 voxel ngstrm data set silicon fissur (sio2) alumina nanospher (anp3), 1 voxel ngstrm fit memori con- straint gpu mic. save space, cast volum data float one-byt scalars. bnsview nanovol rai cast molecular data similarly, dif- ferent algorithms. algorithm chosen maxim per- formanc maintain flexibl respect systems, explicitli fairest comparison paper. chose coher bvh travers bnsview known effici method handl larg geometri cpu. likewise, nano- vol develop uniform grid perform travers structur data gpu [21]. develop- ment nanovol [28], assum volum render invari perform bottleneck, grid accelera- tion structur sufficient. gener hold true, larg molecular data coars grid chosen, cost ball- and-stick render increas rel cost volum render- ing. effici ball-and-stick rai tracing, exampl bvh travers [4] possibl gpu, like requir reimplement nanovol cuda opencl, fall outsid scope work. despit differ choic algorithm, bnsview nanovol function (and intention- ally) similar exhibit share behavior. compar system megamol, paraview visit, comparison systems, acknowledg differences, fair. all, abl achiev interact perform rai cast platforms. result tabl 3 refer scene fb size (mp) .0625 .25 1 4 16 bnsview 44 14 4 1.1 .3 nanovol 18 5 2 0.7 .19 tabl 1: perform fp scale frame buffer size (megapixels). n. core 1 2 4 8 16 bnsview .394 .779 1.54 3.05 5.93 tabl 2: perform fp scale number cores. figur 6. ball-and-stick geometri alone, bnsview cpu mic perform better nanovol gpu 2 5. explain effici coher bvh travers emploi bnsview, compar grid implementa- tion nanovol. particular, build coarser grid gpu memori constraint decreas efficiency, perform suffer ball stick resid grid cell, discuss above. volum render alone, nanovol gpu gener faster bnsview cpu (2 7, averag 5) mic (0.65 5.7, averag 2.5 ). bnsview nanovol emploi volum render algorithm (grid travers macrocells), gpu have advantag optim cache-align 3d textur built-in hardwar textur sampling, interpolation, caching. despit this, gpu volume-onli perform better: larger volum data nanosphere740k (1 gb) anp3 (2 gb) datasets, mic outperform gpu 1.5. especi surpris given bnsview us special brick page larg volum data, com- pare nativ 3d textur format gpu; suspect perform advantag better behavior mic cache- incoher memori access. gradient light central differ- enc expens bnsview, incur 1.5 3 perform penalti compar unlit volum rendering. contrast, light slightli (10-20%) costli nanovol gpu. al- volum light practice, worth note faster gpu, like platform ef- ficienc algorithm good cach locality. compar cpu gpu xeon phi tm performance, note cpu render slowli acceler co-processor (on aver- age, dual-socket cpu configur roughli 2 slower xeon phi tm acceler board), capabl interact performance, particular subject scene size limit gpu acceler are. generally, cpu bet- ter handl geometri wors volum rendering, arguabl sandybridge-bas cpu lack hardware-support gather avail gpu xeon phi tm (a newer cpu generations). figur 6: refer scenes. left right: al2o3 nanobowl (20k atoms), small carbon nanospher (90k atoms), larg carbon nanospher (740k atoms), sio2 fissur (5m atoms), anp3 alumina nanoparticl combust (15m atoms). dataset nanobowl ns90k ns740k sio2 anp3 num. atom (m) 0.020 0.092 0.742 4.8 14.7 data size timestep (mb) 0.8 3 40 160 950 geometri size (mb) 0.7 6 52 130 504 bvh size (mb) 0.5 4 34 160 430 str. vol size (mb) 1.1 11 720 92 2012 voxel ngstrm 4 4 4 1 1 bond build time (s) 0.03 0.18 2 10 28 bvh build time (s) 0.08 0.9 7.5 50 128 str. vol build time (s) 0.6 1.1 128 35 70 bnsview (cpu) b& 63 / 55 42 / 45 39 / 40 33 / 45 17.4 / 30 intel rxeon tm volum 15.1 / 7.94 8.75 / 9.31 6.82 / 7.91 15.3 / 7.67 1.3 / 4.0 e5-2680 vol+b& 22 / 15 8.6 / 10.2 6.07 / 7.85 13.3 / 7.65 1.31 / 6.4 vol+b&s, lit 6.15 / 4.02 2.42 / 2.97 1.57 / 2.46 4.51 / 2.02 0.35 / 1.91 bnsview (mic) b& 160 / 130 90 / 95 70 / 41 72 / 91 33 / 48 intel rxeon phi tm volum 53 / 32 26 / 28 19.6 / 22.5 36 / 40 3.59 / 12.3 se10p vol+b& 71 / 46 23.3 / 28.3 18.1 / 23.8 39 / 33 3.22 / 28.0 vol+b&s, lit 36 / 22 12.4 / 14.8 9.98 / 14.1 20.3 / 10.7 1.18 / 14.1 nanovol (gpu) b& 78 / 66 40 / 74 21 / 40 36 / 41 6.80 / 26 nvidia volum 73 / 60 36 / 54 12.9 / 24.3 105 / 88 3.51 / 70 tesla k20 vol+b& 34 / 30.5 20.7 / 29.9 7.0 / 11.6 20.1 / 24.4 2.63 / 19.5 vol+b&s, lit 41 / 32.5 19.5 / 26 6.0 / 10.7 19.6 / 20.9 2.50 / 17.3 tabl 3: perform (far / close) views, frame second, 10241024 resolut molecul rang 20k 15m atoms. fastest fp result render type bold font. refer imag (use vol+b&s) shown figur 6. 5.2 frame buffer size number core figur 5-left, benchmark nanosphere740k far scene us- ing volum render vari frame buffer size (2562 40962). generally, gpu perform increas faster rate respect frame buffer size, 4 mp mark system roughli 3 slower 1 mp (5 fp vs 1.5 fp bnsview, 2 fp vs 0.70 fp nanovol). impli gpu implement depend strongli coher perfor- mance, high resolut make difference. figur 5-right, examin bnsview perform (again nanosphere740k far scene) sixteen core 2.7 ghz e5-2680 sandi bridg xeon cpu. achiev 94% scalabil- iti 16 cores, like non-uniform memori access (numa) effects. 5.3 remot visual bnsview integr bnsview displayclust [18] framework enabl remot in-transit visual live molecular dynam- ic simul (a million atom version larg nanospher model figur 6). node stampede, mpi image-parallel render replic data, perform vi- sualiz intel rxeon phi tm co-processor sim- ulat (use lammp [27]) ran node cpus. abl achiev 20 fp 40962048 frame buffer stream stallion, tacc 80-panel, 328 megapixel tile displai uni- versiti texa austin. correspond close per-nod perform 1 mp tabl 3. sixteen node stam- pede, gener 32768 8192 imag 0.5 fps, successfulli util displai nativ resolution. 128 stam- -1 -0.5 0 0.5 1 1.5 2 0.0625 0.25 1 4 16 log (fps) frame buffer size (mp) bnsview nanovol -0.6 -0.4 -0.2 0 0.2 0.4 0.6 0.8 1 1 2 4 8 16 log (fps) number cpu core figur 5: log-scal frame rate plot frame buffer size (left) number core (right). pede nodes, abl 512 megapixel frame buffer 2 fp (see figur 1). bnsview updat geometri separ thread new timestep arrives, allow scientist interact run progresses. us platform-independ spmd compil open new possibl remote, in-transit situ visual- izat kind, cpu mic co-processor task render computation, render algorithm spmd code independ un- derli hardwar instruct set. 6. conclus present effici method larg molecular visu- aliz cpu mic architectures, capabl rai cast million ball stick glyph effici volum render- ing precomput structur data. coher bvh travers rai tracer implement spmd compil achiev high perform cpu intel rxeon phi tm co-processor have write dedic code platform. method competit nanovol gpu similar tasks. volum ball-and-stick rai cast- ing, bnsview 2 faster intel rxeon phi tm s, competit cpu rai caster perform similar task state-of-the-art k20 gpu. implement chosen, gpu capabl task (volumetr light- ing), cpu/intel rxeon phi tm (rai cast opaqu geometry). main barrier implement in-transit visual- izat preprocess time. particular, precomput structur data signific preprocess bottleneck. avoid altogeth directli render particl data; approach like like investig futur work. bottleneck comput structur data avoid biggest bottleneck bvh construct time, current implement clearli non-interactive. integr framework fast bvh builder recent ad embre framework interact re- build possibl non-trivi data sets. interest lazi (implicit) bvh builds, e.g. [2, 19, 34]. addition, futur work like investig larger distribut data system. ivl rivl closed-sourc experiment codebases, order soft- ware access plan futur develop open-sourc ispc embre rai trace framework [36]. ul- timately, like construct common framework evalu similar visual algorithm cpu, intel rxeon phi tm , gpu, stamped testbed. 7. acknowledg work fund nation scienc foundat grant oci-1134872 aci-1339863. addit fund provid comput postdoctor fellowship argonn nation laboratori american reinvest recoveri act (arra) research resourc argonn leader- ship comput facil argonn nation laboratory, support offic scienc u.s. de- partment energi contract de-ac02-06ch11357. ar- gonn nation laboratory, like thank maria chan center nanoscal materi kah chun lau materi scienc divis nanobowl nanospher data sets, respectively. thank ken-ichi nomura univers southern california sio2 fissur anp3 data sets. 8. refer [1] nvidia cuda comput unifi devic architectur - program guide, 2007. [2] a. t. fra. incoher rai trace acceler structures. eurograph (short papers), page 97100, 2012. [3] j. ahrens, b. geveci, c. law. paraview: end user tool larg data visualization. visual handbook. edit cd hansen cr johnson. elsevier, 2005. [4] t. aila s. laine. understand effici rai travers gpus. proc. high-perform graphic 2009, page 145149, 2009. [5] c. bajaj, p. djeu, v. siddavanahalli, a. thane. texmol: interact visual explor larg flexibl multi-compon molecular complexes. proceed confer visualization04, page 243250. ieee society, 2004. [6] j. bigler, a. stephens, s. g. parker. design parallel interact rai trace systems. interact rai trace 2006, ieee symposium on, page 187196. ieee, 2006. [7] c. brownlee, t. fogal, c. d. hansen. gluray: enhanc rai trace exist scientif visual applic opengl interception. eurograph symposium parallel graphic visualization, page 4150. eurograph association, 2012. [8] c. brownlee, j. patchett, l.-t. lo, d. demarle, c. mitchell, j. ahrens, c. d. hansen. studi rai trace large-scal scientif data wide parallel visual applications. eurograph symposium parallel graphic visualization, page 5160. eurograph association, 2012. [9] h. childs, e. brugger, k. bonnell, j. meredith, m. miller, b. whitlock, n. max. contract base larg data visualization. visualization, 2005. vi 05. ieee, page 191198. ieee, 2005. [10] m. connolly. molecular surfaces: review. network scienc online, 1996. [11] c. crassin, f. neyret, s. lefebvre, e. eisemann. gigavoxels: ray-guid stream effici detail voxel rendering. proceed 2009 symposium interact 3d graphic games, page 1522. acm, 2009. [12] w. l. delano. pymol molecular graphic system, 2002. [13] c. p. gribble, t. ize, a. kensler, i. wald, s. g. parker. coher grid travers approach visual particle-bas simul data. visual graphics, ieee transact on, 13(4):758768, 2007. [14] s. grottel, p. beck, c. muller, g. reina, j. roth, h.-r. trebin, t. ertl. visual electrostat dipol molecular dynam metal oxides. visual graphics, ieee transact on, 18(12):20612068, 2012. [15] m. d. hanwell, d. e. curtis, d. c. lonie, t. vandermeersch, e. zurek, g. r. hutchison. avogadro: advanc semant chemic editor, visualization, analysi platform. journal cheminformatics, 4(1):117, 2012. [16] d. hughes, i. lim, m. jones, a. knoll, b. spencer. ink-compact: in-kernel stream compact applic multi-kernel data visual general-purpos gpus. graphic forum. wilei onlin library, 2013. [17] w. humphrey, a. dalke, k. schulten, et al. vmd: visual molecular dynamics. journal molecular graphics, 14(1):3338, 1996. [18] g. p. johnson, g. d. abram, b. westing, p. navratil, k. gaither. displaycluster: interact visual environ tile displays. cluster comput (cluster), 2012 ieee intern confer on, page 239247. ieee, 2012. [19] t. karra t. aila. fast parallel construct high-qual bound volum hierarchies. proc. high-perform graphics, 2013. [20] a. knoll, m. chan, k. lau, b. lui, j. greeley, l. curtiss, m. hereld, m. papka. uncertainti classif visual molecular interfaces. intern journal uncertainti quantification, 3(2):157169, 2013. [21] a. knoll, y. hijazi, r. westerteiger, m. schott, c. hansen, h. hagen. volum rai cast peak find differenti sampling. visual graphics, ieee transact on, 15(6):15711578, 2009. [22] a. knoll, s. thelen, i. wald, c. d. hansen, h. hagen, m. e. papka. full-resolut interact cpu volum render coher bvh traversal. pacif visual symposium (pacificvis), 2011 ieee, page 310. ieee, 2011. [23] a. m. knoll, i. wald, c. d. hansen. coher multiresolut isosurfac rai tracing. visual computer, 25(3):209225, 2009. [24] r. leia, s. hack, i. wald. extend c-like languag portabl simd programming. proceed 17th acm sigplan symposium principl practic parallel programming, page 6574. acm, 2012. [25] s. parker, p. shirley, y. livnat, c. hansen, p. sloan. interact rai trace isosurfac rendering. visualization98. proceedings, page 233238. ieee, 1998. [26] m. pharr w. mark. ispc: spmd compil high-perform cpu programming. proceed innov parallel comput (inpar), 2012. [27] s. plimpton. lammp user manual. sandia nation laboratory, 2005. [28] k. reda, a. knoll, k. nomura, m. papka, a. johnson, j. leigh. visual large-scal atomist simul ultra-high resolut immers environments. ieee ldav (to appear), 2013. [29] m. tarini, p. cignoni, c. montani. ambient occlus edg cue enhanc real time molecular visualization. visual graphics, ieee transact on, 12(5):12371244, 2006. [30] top500.org. architectur share 6/2013, june 2013. [31] i. wald. fast construct sah-bas bound volum hierarchies. interact rai tracing, 2007. rt07. ieee symposium on, page 3340. ieee, 2007. [32] i. wald, s. boulos, p. shirley. rai trace deform scene dynam bound volum hierarchies. acm transact graphic (tog), 26(1):6, 2007. [33] i. wald, h. friedrich, a. knoll, c. d. hansen. interact isosurfac rai trace time-vari tetrahedr volumes. visual graphics, ieee transact on, 13(6):17271734, 2007. [34] i. wald, t. ize, s. g. parker. fast, parallel, asynchron construct bvh rai trace anim scenes. comput & graphics, 32(1):313, 2008. [35] i. wald, p. slusallek, c. benthin, m. wagner. interact render coher rai tracing. graphic forum (proceed eurographics), 20(3):153164, 2001. [36] s. woop, c. benthin, i. wald. intel embre 2.0: photorealist rai trace kernels, 2013. introduct relat work molecular visual cpu rai trace background volumetr model molecular data spmd coher rai trace implement preprocess pipelin rai trace framework bvh traversal, ball stick intersect structur volum render shade rai trace modal result overal perform comparison frame buffer size number core remot visual bnsview conclus acknowledg refer