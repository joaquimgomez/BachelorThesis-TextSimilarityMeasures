grow: gradient-bas optim workflow autom develop molecular model physic commun 181 (2010) 499513 content list avail sciencedirect physic commun www.elsevier.com/locate/cpc grow: gradient-bas optim workflow autom develop molecular model marco hlsmann a, thorsten kddermann a, jadran vrabec b, dirk reith a, fraunhofer-institut algorithm scientif comput (scai), schlo birlinghoven, 53754 sankt augustin, germani b institut fr thermodynamik und energietechnik (thet), universitt paderborn, warburg str. 100, 33098 paderborn, germani r t c l e n f o b s t r c t articl history: receiv 30 april 2009 receiv revis form 8 octob 2009 accept 22 octob 2009 avail onlin 27 octob 2009 keywords: forc field design molecular simul atomist model numer optim gradient-bas algorithm phase chang properti concept, issu implement file format gradient-bas optim workflow autom develop molecular model grow (version 1.0) softwar tool described. enabl user perform autom optim forc field paramet atomist molecular simul iterative, gradient-bas optim workflow. modularli construct tool consist main control script, specif implement secondari control script numer algorithm, analysi scripts. taken together, machineri abl automat optim forc field extens develop regard optim algorithm simul tools. result nitrogen briefli report proof concept. 2009 elsevi b.v. right reserved. 1. introduct molecular simul methods, promin molecular dynam (md) mont carlo (mc), nowadai scientif field power tools, e.g. gain insight microscop process govern macroscop behavior matter. driven ongo progress growth comput resources, expect molecular method us decades. kei element specifi accur possibl molecular simul forc field describ intra- intermolecular interactions. forc field compris semi-empir ansatz repres interactions, e.g. set lennardjon (lj) site [1] point charges, associ parameters. model approach usual straightforward, parameter forc field tedious. numer author work past decad develop forc field varieti areas, thermodynam properti fluid [28], mechan properti solid [911], phase chang phenomena [1214], transport process biolog tissu [15,16], protein fold [1719], transport process liquid [2022], polym properti differ length scale [2326] gener statist properti soft matter [27]. quantum mechan method us specifi forc field parameters, e.g. geometri electrostatics. however, weak short- rang interact like dispers hard tackl quantum mechanics, particularli regard molecul compos atoms. hence, forc field paramet weak interact fit experiment theoret target values. thereby, manual adjust usual feasibl best extrem time-consuming. hence, autom parameter essential, achiev iter procedures. faller et al. [30], neldermead simplex algorithm applied, order optim varieti atomist forc fields. algorithm robust find local optimum converg slow, * correspond author. e-mail address: (d. reith). 0010-4655/$ matter 2009 elsevi b.v. right reserved. doi:10.1016/j.cpc.2009.10.024 500 m. hlsmann et al. / physic commun 181 (2010) 499513 lead directli optimum, impli numer consecut iter associ time-consum molecular simul runs. furthermore, point, hop minimum. unger cowork [32,33] present direct gradient-bas approach, result solut linear equat (les). studi small molecul like olefins, method deliv accur results. however, drawback method number physic properti consid optim greater number forc field parameters. otherwise, problem underdetermined, matrix le singular method applicable. however, method enabl applic effici gradient-bas numer algorithm autom develop forc fields. recent years, automat parameter softwar packag developed, order solv special optim task differ kind granular levels. quantum mechan level, tool name parmscan publish [28,29], optim intramolecular forc field paramet only, e.g. bond length torsion angles, reason mention above. exampl coarse-grain level, softwar packag high-qual autom forc field design name cg-opt develop reith et al. [31]. map fulli detail atomist model polym coarse-grain mesoscal model parameter associ forc field automat simplex algorithm. work, optim workflow, base effici gradient-bas numer algorithms, autom develop atomist forc field presented. main advantag kind method converg faster search direct optimum us descent directions. moreover, algorithm handl overdetermin underdetermin optim problems. grow tool kit program script facilit us gradient-bas numer optim forc field parameters. compon present tool kit group follows: forc field paramet optimizers, simul programs, analysi scripts, input/output handling, gener comput utilities. script tool written python (version 2.4.3). help script written s+ (version 2.7.1), script languag origin statist packag r,1 shell (tcsh). reason choic fact python object-ori interfac tools, execut shell commands, easili realized. moreover, comput utilities, e.g. solut les, perform r-built-in functions. therefore, help script task written s+. proof concept, autom paramet optim forc field nitrogen performed. case, fit function develop stoll et al. [34] comput physic properti instead run molecular simulations, us save lot comput time give fast insight qualiti behavior numer optim algorithms. fit functions, however, contain statist nois success applic molecular simul data guaranteed. main problem gradient-bas algorithm given fact predict extent handl statist noise. detail assess numer optim algorithms, respect noise, given [35]. note approach allow clearli separ basic technic issu scientif question optim procedure. 2. problem definit central role optim workflow plai quadrat loss function calcul (e.g. simulation) target (e.g. experiment) data: f (x) = n i=1 wi ( f exp f simi (x) f exp )2 , (1) x = (x1, . . . , xn )t rn forc field paramet vector, n number forc field parameters, n number physic properti consid optimization, f simi (x) ith properti depend forc field parameters, f exp respect target value. weight wi account fact properti easier reproduc others. loss function minim respect x. ideal situation, xopt f (xopt) = 0. however, primari goal local minimum admiss compact paramet domain, rang forc field paramet defined. smooth depend f forc field paramet guaranteed, usual case. hence, aim minimum xopt f (xopt) = 0. (2) goal achiev gradient-bas numer optim algorithms, present section 4. gradient express term partial deriv f x j (x) = 2 n i=1 wi f exp f simi (x) ( f exp ) 2 f simi x j (x), j = 1, . . . , n . finally, partial deriv properti approxim numer 1 m. hlsmann et al. / physic commun 181 (2010) 499513 501 fig. 1. optim workflow: physic properti calcul initi guess forc field parameters. calcul physic properti agre suffici target properties, optim executed, stop criterion fulfil final paramet found. f simi x j (x) = f sim (x1, . . . , x j + h, . . . , xn ) f simi (x) h , h > 0. number physic properti obei constraints. hence, n > n required, case method develop unger cowork [32,33]. properti used. possibl consid properti differ temperatur pressures. note simul physic properti affect noise, necessari perform statist proof concern qualiti result forc field. discuss section 8. cases, forc field paramet target data physic units, make result physic interpretable. note effect loss function, target data differ constant factor, unit changed. rel error sum up, factor cancel out. loss function unit gradient unit axes, reciproc valu unit respect forc field parameter. extrem cases, happen compon gradient greater others, lead deform loss function. this, turn, caus numer problem find minimum norm gradient comput straightforward way. avoid this, simpli divid forc field paramet unit, certain physic meaning refer value, lead forc field physic better defined. however, retroactively, i.e. divid result optim forc field paramet refer values. clear choic reason unit handl automat li respons user. 3. optim workflow complet optim workflow shown fig. 1: optim algorithm requir initi paramet vector x0, reason close minimum. output simul tool, i.e. calcul physic properties, insert loss function (1). compar experiment theoret target data. specifi stop criterion fulfilled, paramet final workflow ends. otherwise, current paramet vector pass optim algorithm, find new paramet vector lower loss function valu differ investig gradient-bas methods. stop criterion depend expect molecular model optim workflow. e.g., problem overdetermin (n > n), loss function expect zero paramet vector. usual case, properti fit differ temperatur pressur simultaneously. furthermore, calcul physic properti contain statist noise, case, exact predict optim paramet possible. error specif properti situat error bar simul valu noise, result improved. nois high, gradient-bas method applicable. optim procedur perform admiss paramet domain, rang valid forc field paramet limited. moreover, problem underdetermined, infinit number minima present assur physic meaning minimum found. 502 m. hlsmann et al. / physic commun 181 (2010) 499513 order stai admiss domain, possibilities: us optim algorithm constraint us penalti functions, lagrangian multipli determin iter procedure. leads, firstly, excess complex and, secondly, penalti function need evalu prohibit domain. feasibl present context, simul tool execut forbidden parameters. possibl us step length control algorithm iter direct lead admiss domain. approach chosen main disadvantag fact fast converg step length control algorithm, significantli increas number function evaluations, expected. especi neighborhood minimum, converg slow, goal step length control new paramet vector lower loss function value, difficult close minimum. point, step length control capabl anymor significantli lower loss function valu reason number iter result step small relat norm descent direction. lead slower converg optim algorithm. additionally, graph loss function shape steep rain drain fall slowli minimum. shape handl gradient-bas algorithms, realiz function decreas wall rain drain smaller direct rain drain itself. compon direct wall greater higher impact. rain drain phenomenon discuss [36]. hence, stop criterion f (x) , > 0 small number, e.g. 103, fulfil reason number iter steps. hence, stop criterion used, refer loss function valu gradient. emploi stop criterion f (x) , = 104 = 105. course, attain valu depend loss function itself, number consid properti noise. grow, paramet specifi user. 4. numer optim algorithm suppos us gradient-bas iter procedures, i.e. start initi paramet vector x0 updat iter x1. general, optim algorithm describ updat formula xk+1 = g(xk). optim algorithm converg minimum xopt, e.g. c<1 k0 xk+1 xopt cxk xoptm, m > 0 (converg mth order). example, m = 1, converg term linear, m = 2, quadratic. behavior speed converg differ algorithm, differ choic g . study, state-of-the-art gradient- base method used, [37,38] group gener types: 1. descent methods, 2. trust region methods. choic fact algorithm good converg propertiesmost superlinearli convergentand search direct optimum. descent method consist iter instruct xk+1 = xk + tkdk, (3) dk descent direction, i.e. f (xk),dk < 0, tk step length, control far descent direct followed. mention section 3, boundari condit paramet vector requir effici step length control algorithm. therefore, descent direct divid norm xk+1 = xk + tk dk dk . then, step length tk control iter procedur length descent direction. particularli initi iter steps, dk huge lead far admiss domain. this, turn, lead small step length tk slow converg step length control, desir beginning, loss function steep. hence, case, larg step direct minimum wanted. course, neighborhood minimum, divid norm falsifi algorithm, converg further. therefore, descent direct normal here, soon f 1. step length control describ detail, descent method briefli outlined. import featur algorithm high converg qualiti converg superlinearli k0 xk+1 xopt ckxk xopt, limk ck = 0. m. hlsmann et al. / physic commun 181 (2010) 499513 503 steepest descent: dk = f (xk). simplest method, dk direct steepest descent. main drawback converg guaranteed: k f (xk+1) < f (xk), accumul point iter sequenc stationari point f . newton raphson: dk = (d2 f (xk))1 f (xk). multi-dimension analogon popular root find 1d-newton method. hessian d2 f lipschitz continu neighborhood xopt, converg quadratic. complex increas comput hessian, gain speed converg compens drawback. however, practice, hessian singular. therefore, case descent steep enough, i.e. f (xk),dk > dkp user-defin > 0, p n>2, steepest descent direct f (xk) taken. problem aris newton raphson method: 1. hessian comput reason time, 2. hessian robust respect noise. quasi newton: dk = h1k f (xk), hk approxim hessian. quasi newton method heurist solut problem mention above. approxim updat iteration: hk hk+1, h0 = d2 f (x0). thereby, so-cal secant condit theorem denni mor hk+1 ( xk+1 xk) = f (xk+1) f (xk) fulfilled. quasi newton method consid study, differ updat procedur hk: powel symmetr broyden (psb): hk symmetric, f lipschitz continu neighborhood x opt k=0 xk xopt < , converg superlinear. davidon fletcher powel (dfp): hk symmetr posit definit (spd), converg superlinear assump- tion case psb. broyden fletcher goldfarb shanno (bfgs): herein, invers hessian updated: bk bk+1, b0 = (d2 f (x0))1. f lipschitz continu neighborhood xopt d2 f (xk)f bound k 0, f frobeniu norm matrices, converg superlinear well. conjug gradient (cg): dk+1 = f (xk+1) + kdk , d0 = f (x0). descent direct updat step gradient follow step, comput before. method transfer cg method less, residuals, neg gradient respect quadrat form minimized, conjugated, i.e. k0 f (xk+1), f (xk) = 0, multi-dimension case. general, gradient conjug anymore. however, transfer work natur new converg proofs. main cg method optim tasks, calcul k different: fletcher reev (fr): frk = f (xk+1)2/ f (xk)2. direct transfer one-dimension case. converg guaranteed, level set l(x0) = {x | f (x) < f (x0)} compact f uniformli convex l(x0). condit global convergency. therefore, guarante converg local minimum case non-convexity. polak ribir (pr): prk = f (xk+1) f (xk), f (xk+1)/ f (xk)2. one-dimension case, success residu rk orthogonal, rk+12/rk2 = rk+1 rk, rk+1/rk2, therefore, prk instead frk multi- dimension case. heurist consider lead good cg method new converg proofs. level set compact f lipschitz continu ball contain level set, pr method converges. descent method follow assumpt common: all, initi paramet vector close minimum case quasi newton methods, initi hessian approxim h0 neighborhood d 2 f (xopt), respect matrix norm, e.g. frobeniu norm. often, challeng good initi paramet vector specifi user. automat procedur solv problem. furthermore, standard assumpt exist global (or local) optimum, i.e. f (xopt) = 0 d2 f (xopt) spd. iter matric d2 f (xk), hk bk spd regular. guaranteed, assumpt like lipschitz continuity, etc. natural. posit definit hessian guaranteed, loss function convex. case hk bk , not. spd, correspond direct dk descent direction. step length control essenti kind method well: beginning, function steep, larg step preferred, order rapidli possibl close minimum. hand, step large, otherwise, jump minimum. heurist approach simpli larg step far awai small step near minimum. so-cal heurist step length user-defin find good heurist step length trial-and-error procedure, effective, point, algorithm hop minimum. fact smaller step larg then. hence, aim adapted, so-cal effici step length tk , defin =(xk,dk), >0 f ( xk + tkdk ) f ( xk ) ( f (xk),dk xk )2 . type step length fulfil criterion, armijo wolfepowel step length. iter procedur requir function evalu xk +tkdk , 0, initi step length t0k . wolfepowel algorithm computation costly, requir f (xk + tkdk) , therefore, suitabl present case. here, armijo step length control used, search step length form t = max { = 0,1, . . . , f (x + d) f (x) + f (x),d}, (4) 504 m. hlsmann et al. / physic commun 181 (2010) 499513 0 < , < 1. armijo step length exists, d descent direction. then, converg guarante monotonous. hence, assumpt k f (xk+1) < f (xk) converg steepest descent algorithm fulfil us armijo step length control. note + instead , f (x),d < 0 required. drawback, compar wolf powel step length, li fact armijo step length rapidli small. particular, true complianc boundari condit control step length. achiev this, admiss step length calcul iter xk+1 remain admiss domain: let [minki ,maxki ] admiss interv ith compon xk (i = 1, . . . ,dim(xk)). then, admiss step length tadmk given tadmk = max { tk > 0 i=1,...,dim(xk) minki xki + tkdki maxki } , = tadmk set armijo step length control start = 1, = 1 allow solution, lead border admiss domain. note t > 1 possible, d k descent direction. case, t = s s > 1, gener armijo step length. particular, import point close minimum, f lead admiss domain anymore. then, sens eq. (3), t increas avoid small step lengths. especi true, t = 1 lead point minimum. however, armijo step length control converg reason number iter point t > 1 required. furthermore, 0 1a small relat rang forc field paramet boundari conditions, result step length small profit drawn. hence, lead optim procedur stop criterion f (xopt) = 0 reason number iterations. furthermore, rain drain phenomenon mention section 3 handl gradient-bas algorithms, step length efficient. hence, point, possibl anymor step length lead significantli smaller function value, descent direct parallel rain drain direction. therefore, optim termin work, step length control algorithm took certain number iterations, stop criterion fulfilled, conclud optim algorithm suitabl regard optim task. second type gradient-bas optim method trust region methods. step length control contain algorithm itself. iter k, step length k defin b k (x k) contain admiss domain. compact ball b k (x k) call trust region xk . k , search suitabl direct d k xk+1 = xk +dk computed. intern iter procedure: dk suitable, k decreas factor 0 < 1 < 1. otherwise, k increas reason precaut factor 2 > 1 certain assumptions. suitabl mean case? loss function interpol quadrat form stem taylor expans xk: qxk ( dk ) := f (xk + dk) = f (xk) + f (xk),dk + 1 2 ( dk )t d2 f ( xk ) dk. (5) qxk minim respect dk k compar origin loss function. evalu ratio rk := f (x k+1) f (xk) qxk (d k ) qxk (0) (5)= f (x k+1) f (xk) qxk (d k ) f (xk) . rk 0, quadrat model coincid origin loss function overestim decreas f . hand, rk 1, decreas f higher decreas quadrat model k increased. practice, user defin paramet 0 < 1 < 2, order decide, d k accept k increas not. direct accepted, rk 1, rk > 2, k increased. trust region method requir comput hessian qualiti converg better case descent methods: d2 f lipschitz continu xopt, t(0,1) k0 xk xopt cktk limk ck = 0. difficulti li minim qxk , nonlinear constrain optim problem. so-cal trust region subproblem solv ways: approxim solution, achiev doubl dog leg algorithm (dd), geometr base method consid descent directions. main drawback dd method assumpt hessian posit definite, fulfilled. second wai solv trust region subproblem exactly. eigenvalu decomposit hessian. solut obtained, hessian posit definite. detail concern step length control numer optim algorithms, cf. [37,38]. 5. practic aspects: trick trade detail descript grow optim tool given, specif practic adapt elucidated: 1. stop criterion chosen steepest descent method: armijo step length control converg reason number iter (usual 100), actual iter xk consid optim stop criterion f (x) algorithms, small upper bound f (xk). steepest descent method refer method heurist claim: method capabl paramet vector lower function value, follow steepest descent direction, method differ direct either. claim turn true case newton quasi newton methods, cg trust region methods. termin well, f (x) meaning comparison algorithm achieved. however, iter lead closer minimum perform addition. m. hlsmann et al. / physic commun 181 (2010) 499513 505 2. converg armijo step length control manipul control paramet . smaller , weaker accept constraint step length. lead lower function valu iter faster converg armijo step length control. default, = 0.5, cases, armijo constraint weaken = 0.1, drastic = 0.001. hold trust region control paramet 1, control qualiti quadrat model. default, 1 = 0.7, order avoid slow converg trust region subproblem, stop criterion weakened. then, 1 = 0.5 1 = 0.2 specified. 3. case noise, discret gradient hessian coarser: gradient calcul accurately, i.e. h = 105, algorithm stuck local minimum form oscil noise. desirable, h = 102 used, order comput drift loss function overal decreas considered. course, reason neighborhood minimum set h 105 meaningless, algorithm stuck artifici minimum again. hand, case noise, suffic reach neighborhood minimum, target paramet predict error bar minimum. therefore, stop criterion weaken well, i.e. f (x) > . 4. size admiss domain import criterion convergency. small, global minimum situat boundary. case, iter heurist step length performed, order reach new initi point boundary, new admiss domain defined. 5. idea normal d heurist lead better performance. case d descent direction, possibl quasi newton methods, d lead admiss domain, normal mean limit search lower loss function value, t (0,1) case, lead slower convergency. hand, normal mean armijo step length t rapidli small. d descent direction, possibl lower function valu armijo algorithm, depend d norm. therefore, case psb, descent direct normalized. otherwise, converg slower valu loss function chang significantly. 6. grow: implement issu input program grow consist configur file, input file program issu defin user. input/output files, trajectori files2 associ simul tool used, ascii format intend human-readable. optim start command python grow.pi <config-file> config-fil configur file, e.g. grow.cfg. 6.1. configur file configur file compris input file requir optim workflow. moreover, workflow option defined, e.g. numer optim algorithm used, step length control, correspond input parameters. file consist sections, sim opt: section contain input file paramet molecular simul output directories. second section contain specif adjust concern optim algorithms. typic configur file follow form: [sim] program: gromac # simul tool bin_path: /home/user/local/gromacs-4.0.2/bin/ # binari path simul tool topology: ../input/topology.top # topolog file simul tool coordinates: /home/user/input/start.pdb # coordin file simul tool sim_in: /home/user/input/sim.mdp # input file simul tool target: ../input/exp_properties.target # file contain target properti parameters: ../input/initial.para # file contain initi forc field paramet par_file_name: ../input/parameters.para # file optim tool intermedi paramet substance: il # text field: chemic simul optoutpath: steepest_descent/armijo/final_out # outpath contain result optim workflow tmppath: steepest_descent/armijo/tmp # temporari path contain intermedi help file outpath: steepest_descent/armijo/out # outpath simul tool delete: n # delet tmppath outpath? [opt] method: conjugate_gradi # numer optim method cg: fletcher_reev # cg algorithm gradient: numer # calcul gradient (grow version 1.0: numerically) 2 trajectori molecular simul describ tempor progress motion state total system. file contain trajectori usual huge human-readable. 506 m. hlsmann et al. / physic commun 181 (2010) 499513 sl_method: armijo # step length control (heuristic/armijo) zeta: 0.5 # regular paramet armijo step length control h: 0.00001 # discret paramet gradient hessian sigma_bound: 10 # lj size paramet chang 10% (adm. domain) epsilon_bound: 40 # lj energi paramet chang 40% (adm. domain) limit: 0.0001 # stop criterion example, gromacs3 (version 4.0.2) chosen molecular simul tool optim perform fletcher reev method. 6.2. program structur fig. 2 show structur grow. main control script grow.pi execut input handl read configur file. then, check exist consist paths, file scripts. furthermore, defin environ variables. main control script numer optim algorithm, e.g. conjugate_gradient.py, regul optim itself. creat object python class optimization, contain file name opt_class.py. class contain function handl optimization. e.g., chang forc field paramet gradient hessian calculation, start simul tool, read result physic properti comput loss function. moreover, necessari comput utilities, e.g. geometr statist calcul read write routines, implement class. note science, function class call methods. obviou reasons, term work. gradient calcul perform script call gradient.pi hessian calcul script name hessian.py. long f (xk) 1, descent direct normalized, case psb. evalu actual iter perform control script optim algorithm, i.e. check norm gradient smaller meaning threshold (usual 0.001) stop criterion loss function fulfilled. case, descent direct calcul subscript correspond algorithm step length control execut script name step_length_class.pi contain python class step_length_control. class contain necessari function task, e.g. comput admiss step length function execut step length control algorithm itself. case armijo step length control, subscript called: firstly, script armijo.pi calcul armijo step length secondly, script armijo_evaluate.pi check step length accept sens constraint (4), not. iter armijo step length control new iter optim algorithm. then, new simul perform new forc field parameters, algorithm continues. armijo step length control converg reason number iter (usual 100), optim algorithm interrupt actual paramet taken final parameters. algorithm terminates, stop criterion fulfilled. 6.3. subscript need optim algorithm following, script subscript support optim workflow indic explain alphabet order. python script end .py, script written s+, relat statist packag r, end .r shell (tcsh) script end .sh. note grow version 1.0 gener implement contain concret interfac molecular dynam simul tool gromac (version 4.0.2) yasp.4 moreover, calcul specif vaporliquid equilibrium (vle) properti forc field paramet realiz fit function develop [34]. however, possibl two-cent lj particl dipolar quadrupolar moment. armijo.pi calcul armijo step length t = a, = 2,3,4, . . . . note 1a comput class step_length_class function get_admissible_step_length. admiss step length admiss compact domain. armijo_evaluate.pi evalu armijo step length calcul armijo.py. armijo constraint (4) met, actual step length taken step length control ends. bfgs.r perform updat hk hk+1 hessian approxim case bfg method. bfgs_evaluate.pi calcul descent direct case bfg method. quasi newton methods, script newton_evalutate.pi taken task. case bfgs, le solv matrixvector multipl performed. 3 4 m. hlsmann et al. / physic commun 181 (2010) 499513 507 fig. 2. program structur grow: main control script grow.pi callsaft input handl check routinesth algorithm control script, name <algorithm>.py. script execut main algorithm specif workflow, call differ gener subscript like gradient.pi hessian.py. furthermore, call function implement python class optim step_length_control. class optim contain function name start_simulation, start simul tool handl comput util optim itself. class step_length_control execut armijo step length control algorithm, call subscript name armijo.pi armijo_evaluate.py. optim algorithm, help subscript implemented, calcul specif descent direction. calculate_hessian_inverse.r calcul invers hessian, perform r-built-in function solve. calculate_newton_descent.r calcul descent direct case newton raphson quasi newton method (except bfgs). solut les, perform r-built-in function solve. 508 m. hlsmann et al. / physic commun 181 (2010) 499513 cholesky.r perform choleski decomposit spd matrix, perform r-built-in function chol. required, trust region subproblem solv exactli eigenvalu decomposit hessian. conjugate_gradient.pi control script cg algorithms. determinant.r calcul determin matrix, perform r-built-in function determinant. script, decid matrix singular not. dfp.r perform updat hk hk+1 hessian approxim case dfp method. double_dog.pi solv trust region subproblem doubl dog leg algorithm return minimum quadrat form (5). exact_tr_solution.pi solv trust region subproblem exactli eigenvalu decomposit hessian return minimum quadrat form (5). fletcher_reeves_evaluate.pi calcul descent direct case fletcher reev method. grow.pi main control script. read configur file checks, input file exist consist other. then, start control script correspond numer optim algorithm. gradient.pi comput numer approxim gradient. gradient quadrat loss function determin analyt partial deriv physic properti approxim numer finit differences. hessian.pi comput hessian finit differ loss function relat second partial derivatives. korrmd.r calcul specif vle properti fit function [34] forc field parameters. consid molecul two-cent lj particl dipolar moment. korrmq.r calcul specif vle properti fit function [34] forc field parameters. consid molecul two-cent lj particl quadrupolar moment. mkjobequigromacs.sh control shell script gromacs, write actual forc field paramet gromac topolog file perform equilibra- tion runs. equilibrated, product run execut order calcul physic properti thermodynam averages. mkjobequiyasp.sh control shell script yasp have featur mkjobequigromacs.sh. newton.pi control script newton raphson algorithm. newton_evaluate.pi calcul descent direct case newton raphson quasi newton method (except bfgs). opt_class.pi contain main python class optim workflow. class, name optimization, function optim implemented. import function start_simulation, start molecular simul tool shell script. furthermore, class contain comput util requir optimization. m. hlsmann et al. / physic commun 181 (2010) 499513 509 polak_ribiere_evaluate.pi calcul descent direct case polak ribir method. positive_definiteness_test.r check matrix posit definit not. realiz r-built-in function eddcomp, calcul eigen- valu matrix. psb.r perform updat hk hk+1 hessian approxim case psb method. quasi_newton.pi control script quasi newton methods. solve_les.r solv les, perform r-built-in function solve. steepest_descent.pi control script steepest descent method. steepest_descent_evaluate.pi calcul descent direct case steepest descent method. step_length_class.pi contain python class step_length_class, function step length control implemented. admiss step length comput armijo step length control perform call subscript armijo.pi armijo_evaluate.py. trust_region.pi control script trust region method. 6.4. summari result file gener iter iterations, summari result file automat creat human use. written directori optoutpath, specifi configur file. contain actual paramet vector, gradient norm, calcul physic properti temperature, mean averag percent error (mape) properti temperatur range, valu loss function. finally, optim paramet vector, optim loss function value, number iter function evaluations, i.e. simul tool started, gradient optim paramet vector norm written. exampl summari file given below, gener steepest descent optim workflow fit function [34] order calcul physic properti quadrupolar two-cent lj model nitrogen. consid properti enthalpi vapor (vapor) satur liquid densiti (density) temperatur 65, 75, 85, 95, 105, 115 k. stop criterion f (x) 0.01. optim workflow 2009/3/23 10:52:38 program: fits, method: steepest_desc configur file: /home/user/nitrogen/steepest_descent/armijo/t_range/vap/grow.cfg valu x0: x0 = 0.3101 0.331 0.02073 0.10464 gradient = 28.17 4.56 15.38 -47.90 norm gradient = 57.84 t = 65.0: calc vapor = 6.3367, exp vapor = 5.9800, ab error = 0.3567, rel error = 0.0596 t = 65.0: calc densiti = 886.2005, exp densiti = 859.6000, ab error = 26.6005, rel error = 0.0309 t = 75.0: calc vapor = 6.2757, exp vapor = 5.6600, ab error = 0.6157, rel error = 0.1088 t = 75.0: calc densiti = 845.1734, exp densiti = 816.6700, ab error = 28.5034, rel error = 0.0349 t = 85.0: calc vapor = 6.2172, exp vapor = 5.2800, ab error = 0.9372, rel error = 0.1775 t = 85.0: calc densiti = 801.4362, exp densiti = 770.1300, ab error = 31.3062, rel error = 0.0407 t = 95.0: calc vapor = 6.2888, exp vapor = 4.8000, ab error = 1.4888, rel error = 0.3102 t = 95.0: calc densiti = 754.0496, exp densiti = 718.2600, ab error = 35.7896, rel error = 0.0498 t = 105.0: calc vapor = 5.3340, exp vapor = 4.1700, ab error = 1.1640, rel error = 0.2791 t = 105.0: calc densiti = 701.3797, exp densiti = 657.5200, ab error = 43.8597, rel error = 0.0667 t = 115.0: calc vapor = 4.4874, exp vapor = 3.2600, ab error = 1.2274, rel error = 0.3765 t = 115.0: calc densiti = 640.0994, exp densiti = 578.7000, ab error = 61.3994, rel error = 0.1061 mape densiti = 5.49 mape vapor = 21.86 loss = 0.384781 510 m. hlsmann et al. / physic commun 181 (2010) 499513 valu x1: x1 = 0.308706 0.330774 0.019966 0.107011 gradient = 21.70 4.15 11.56 -35.97 norm gradient = 43.76 t = 65.0: calc vapor = 6.2347, exp vapor = 5.9800, ab error = 0.2547, rel error = 0.0426 t = 65.0: calc densiti = 876.4636, exp densiti = 859.6000, ab error = 16.8636, rel error = 0.0196 t = 75.0: calc vapor = 6.1731, exp vapor = 5.6600, ab error = 0.5131, rel error = 0.0907 t = 75.0: calc densiti = 834.7286, exp densiti = 816.6700, ab error = 18.0586, rel error = 0.0221 t = 85.0: calc vapor = 6.1118, exp vapor = 5.2800, ab error = 0.8318, rel error = 0.1575 t = 85.0: calc densiti = 790.1106, exp densiti = 770.1300, ab error = 19.9806, rel error = 0.0259 t = 95.0: calc vapor = 5.9631, exp vapor = 4.8000, ab error = 1.1631, rel error = 0.2423 t = 95.0: calc densiti = 741.5581, exp densiti = 718.2600, ab error = 23.2981, rel error = 0.0324 t = 105.0: calc vapor = 5.0845, exp vapor = 4.1700, ab error = 0.9145, rel error = 0.2193 t = 105.0: calc densiti = 687.1901, exp densiti = 657.5200, ab error = 29.6701, rel error = 0.0451 t = 115.0: calc vapor = 4.2219, exp vapor = 3.2600, ab error = 0.9619, rel error = 0.2951 t = 115.0: calc densiti = 622.9822, exp densiti = 578.7000, ab error = 44.2822, rel error = 0.0765 mape densiti = 3.70 mape vapor = 17.46 loss = 0.239212 ... valu x50: x50 = 0.304200 0.326315 0.011931 0.114235 gradient = -0.29 0.12 0.06 0.42 norm gradient = 0.53 t = 65.0: calc vapor = 5.8284, exp vapor = 5.9800, ab error = -0.1516, rel error = -0.0254 t = 65.0: calc densiti = 866.5656, exp densiti = 859.6000, ab error = 6.9656, rel error = 0.0081 t = 75.0: calc vapor = 5.7651, exp vapor = 5.6600, ab error = 0.1051, rel error = 0.0186 t = 75.0: calc densiti = 820.6438, exp densiti = 816.6700, ab error = 3.9738, rel error = 0.0049 t = 85.0: calc vapor = 5.6910, exp vapor = 5.2800, ab error = 0.4110, rel error = 0.0778 t = 85.0: calc densiti = 770.9424, exp densiti = 770.1300, ab error = 0.8124, rel error = 0.0011 t = 95.0: calc vapor = 4.9639, exp vapor = 4.8000, ab error = 0.1639, rel error = 0.0342 t = 95.0: calc densiti = 715.7594, exp densiti = 718.2600, ab error = -2.5006, rel error = -0.0035 t = 105.0: calc vapor = 4.1979, exp vapor = 4.1700, ab error = 0.0279, rel error = 0.0067 t = 105.0: calc densiti = 651.6152, exp densiti = 657.5200, ab error = -5.9048, rel error = -0.0090 t = 115.0: calc vapor = 3.1471, exp vapor = 3.2600, ab error = -0.1129, rel error = -0.0346 t = 115.0: calc densiti = 568.8182, exp densiti = 578.7000, ab error = -9.8818, rel error = -0.0171 mape densiti = 0.73 mape vapor = 3.29 loss = 0.009933 optim set parameters: 0.304200 0.326315 0.011931 0.114235 valu loss function: 0.009933 number iterations: 50 number function evaluations: 346 gradient: -0.29 0.12 0.06 0.42 norm gradient: 0.53 6.5. extens possibl develop grow gener implement easili extend developers: interfac new simul tool realiz function start_simul class optimization. function new script handl equilibra- tion product run new simul tool, compar mkjobequigromacs.sh mkjobequiyasp.sh. physic properti written ascii files, contain tables. column contain time step second column consist properti time step. tabl read function get_properti class optimiza- tion. applic new numer optim algorithm, new control script algorithm written specif subscripts. gradient-based, us subscript gradient.pi requir calcul hessian, us hessian.py. perform step length control call class step_length_class. course, us comput util implement class optimization. necessari paramet new optim method indic configur file read main control script grow.py. 7. proof concept: case studi nitrogen proof concept, consid optim state-independ paramet quadrupolar two-cent lj (2cljq) model [34] nitrogen. 2cljq model consist ident lj sites, separ constant elong l point quadrupol site center mass moment q , orient molecular axis. pair potenti u2cljq given m. hlsmann et al. / physic commun 181 (2010) 499513 511 tabl 1 optim result loss function contain satur liquid densiti enthalpi vapor t = 75 k, vle fit function [34] instead molecular simulations. densiti enthalpi vaporization, t = 75 k, vle fit function algorithm # iter. # eval. xopt l hv f (x opt) f (xopt) steepest descent 9 62 0.300120 0.03% 0.19% 4 106 0.02 0.325710 0.013278 0.115343 newton raphson 9 152 0.300120 0.03% 0.19% 4 106 0.02 0.325710 0.013278 0.115343 psb (quasi newton) 2 x2 = 0.301444 0.58% 1.46% 2.5 105 0.17 0.327477 0.014151 0.114339 dfp (quasi newton) 4 x4 = 0.301445 0.58% 1.46% 2.5 105 0.17 0.327476 0.014145 0.114337 bfg (quasi newton) 8 x8 = 0.301446 0.83% 0.35% 8.1 105 7.21 0.327473 0.014145 0.114338 fletcher reev (cg) 36 235 0.300137 0.01% 0.16% 3 103 0.02 0.325656 0.013175 0.115355 polak ribir (cg) 6 41 0.300215 0.03% 0.29% 8 106 0.03 0.325784 0.013409 0.115276 trust region (dd) solut trust region partial problem found: hessian spd trust region (exact) 6 105 0.299802 0.03% 0.14% 2 106 0.02 0.325402 0.013067 0.115660 stop criterion f (x) 105. asterisk indic stop criterion fulfil armijo step length search converg 100 steps. case psb, converg slow. therefore, descent direct normal led better valu time. newton raphson result exactli concord steepest descent results, newton direct accepted. trust region constraint weakened. therefore, 1 = 0.2 chosen. u2cljq ( ri j,i, j, l, q 2 ) = 2 a=1 2 b=1 4 [( rab )12 ( rab )6] + 3 4 q 2 ri j5 [ 1 5(cos2 + cos2 j) 15 cos2 cos2 j + 2(sin sin j cosi j 4 co co j)2 ] . therein, ri j centercent distanc vector molecul j, rab lj sitesit distances, refer site molecul b site molecul j. furthermore, j repres orient molecules, azimuth angl axi molecul centercent connect line, j angl ax molecul j. details, cf. [34]. critic valu temperatur density, satur liquid density, satur vapor density, vapor pressur avail fit function forc field paramet [34]. cite work, vle data determin molecular simul 30 individu 2cljq fluids. calcul properti thereof fit nonlinear regress functions, coeffici determin individu property, rang temperatures. order obtain vle data rang q 2/( 5), l/ t kb/ , kb boltzmann constant, simul data global fitted. regard, critic data tc( , , q 2, l) c( , , q 2, l), satur liquid densiti l( , , q 2, l, t ), satur vapor densiti v( , , q 2, l, t ), vapor pressur p ( , , q 2, l, t ) consid kei vle data adjust real fluids. forc field paramet vector 2cljq model four-dimension vector ( , , q 2, l)t . consid physic properti satur liquid densiti l enthalpi vapor hv t = 75 k. calcul vapor pressur satur densiti clausiusclapeyron equation. initi paramet vector taken literatur [39] modifi littl optim workflow start optim paramet vector already. admiss domain defin follows: rang valid q 2 given q 2/( 5) [0,4] l, given l/ [0,0.8]. lj paramet chang 40% 10%, respectively. stop criterion f (x) 105. tabl 1 show result consid numer optim algorithms. contain follow details: 512 m. hlsmann et al. / physic commun 181 (2010) 499513 optim method (algorithm): mention numer optim methods. number iter (# iter.): iter step required, order fulfil stop criterion. hence, p n, xp = xopt, start x0. number iter indic qualiti convergency. number function evalu (# eval.): number indic loss function partial deriv evaluated, i.e. physic properti calcul molecular simul performed, stop criterion fulfilled. number increas comput gradient hessian number iter requir armijo step length control. algorithm interrupt reasons, stop criterion fulfilled, column contain x p =, p number iter far, follow paramet x p column. final paramet (xopt): final parameter, optim one, stop criterion fulfilled, optim interrupted. error liquid densiti (l): percent error satur liquid density. error enthalpi vapor ( hv ): percent error enthalpi vaporization. valu loss function (f (xopt)): valu loss function final parameter. stop criterion fulfilled, valu upper bound contain criterion. loss function close zero possible. norm gradient ( f (xopt)): norm gradient final iteration. valu close zero well, expect get small f (xopt) reason mention section 3. example, trust region method give lowest percent error l hv iterations. however, number molecular simul perform high general. best method regard polak ribir method, requir 41 simul only. comparison, simplex algorithm [30] need approxim 70100 molecular simul compar optim tasks. note quasi newton method suitabl kind optim tasks. cases, reach iter stop criterion fulfilled. origin quasi newton algorithms, step length control. hence, k tk = 1, hk spd, hk+1 spd well. otherwise, guarante hk spd, dk descent direction. lead iter locat far awai minimum, algorithm converge. furthermore, armijo step length control converg either, possibl lower loss function valu anymore. however, calcul physic properti affect noise, quasi newton method converg cases. case noise, like armijo step length control lower loss function value. afterwards, subsequ iteration, hessian approxim hk spd lower loss function valu found. therefore, quasi newton method perform better, properti noisi robust respect noise. 8. growa new basi develop high-qual forc field usag fit function make loss function smooth. question nois influenc behavior optim algorithm treat discuss thoroughli [35]. studi introduc artifici statist nois simul physic properti retest converg behavior. wai so, pursuit follow clearli separ problem class optim process far possible: influenc nois studi control fashion deal molecular simulation, final import step challenge. specif test simpl nitrogen model, steepest descent method, conjug gradient methods, trust region method exact solut subproblem turn suitabl case noise. note result qualiti forc field justifi success methods. proven loss function fall robustli specifi upper bound method mention above. conjug gradient method exact trust region method achiev better results. appli algorithm molecular simulations, consid long simul order reduc statist uncertainti nois handled. moreover, result forc field assess respect uncertainti simul target data. example, achiev choos wi = 1/s2i eq. (1), si rel standard deviat target data squar root sum rel varianc target simul data, accord maximum likelihood principle. however, assess numer optim algorithm perform [35] fit function instead molecular simulation, suffici prove good satisfactori forc field achiev robustli better forc field obtain numer method iterations. proof perform practic way, i.e. replic optim workflow. thereby, assess execut gener way, assum uniformli distribut instead normal distribut error simul data. furthermore, set wi = 1, assess algorithms, properti treat equally. present work present high-perform methodolog technic implementation. consist realiz high-qual forc field basi lot subsequ work achiev goal usag molecular simulations. acknowledg grate astrid maa florian mller-plath valuabl discuss appreci intellectu support work. furthermore, like thank axel arnold, christoph m. friedrich, roman klinger technic aid. marco hlsmann acknowledg financi support scholarship univers cologn (germany). m. hlsmann et al. / physic commun 181 (2010) 499513 513 refer [1] f. jensen, introduct comput chemistry, john wilei & sons, new york, 1999. [2] s.j. singer, g.l. nicolson, scienc 175 (1972) 720. [3] m.p. allen, d.j. tildesley, simul liquids, oxford science, oxford, 1987. [4] y. zhou, g. stell, j. chem. phys. 96 (1992) 1504. [5] j.i. siepmann, s. karaborni, b. smit, natur 365 (1993) 330. [6] s. oconnell, p.a. thompson, phys. rev. e 52 (1995) 5792. [7] j. kolafa, i. nezbeda, m. lisal, mol. phys. 99 (2001) 1751. [8] r. valiullin, s. naumov, p. galvosas, j. krger, h.-j. woo, f. porcheron, p.a. monson, natur 443 (2006) 965. [9] i.p. batra, b.i. bennett, f. herman, phys. rev. b 11 (1975) 4972. [10] t.p. fehlner, j. solid state chem. 154 (2000) 110. [11] c.n. della, s. dongwei, diffus. defect data pt. b solid state phenom. 136 (2008) 45. [12] s.-t. lin, m. blanco, w.a. goddard iii, j. chem. phys. 119 (2003) 11792. [13] d.e. bien, v.a. chiriac, in: proceed 9th intersocieti confer thermal thermomechan phenomena electron systems, ieee, new jersey, 2004, p. 748. [14] j. vrabec, j. gross, j. phys. chem. b 112 (2008) 51. [15] a. hodgkin, a. huxley, j. physiol. 117 (1952) 500. [16] b.j. barkla, o. pantoja, annu. rev. plant physiol. plant mol. biol. 47 (1996) 159. [17] m. levitt, a. warshel, natur 253 (1975) 694. [18] j. gsponer, a. caflisch, proceed nation academi scienc (pnas) (2002) 6719. [19] c.d. snow, e.j. sorin, y.m. rhee, v.s. pandel, annu. rev. biophys. biomol. struct. 34 (2005) 43. [20] f. mller-plathe, d. reith, comput. theor. polym sci. 9 (1999) 203. [21] p. bordat, d. reith, f. mller-plathe, j. chem. phys. 115 (2001) 8978. [22] g. guevara-carrion, c. nieto-draghi, j. vrabec, h. hasse, j. phys. chem. b 112 (2008) 16664. [23] g.s. grest, k. kremer, phys. rev. 33 (1986) 3628. [24] f. mller-plathe, acta polym 45 (1994) 259. [25] k. binder, mont carlo molecular dynam simul polym science, oxford univers press, oxford, 1995. [26] k. kremer, f. mller-plathe, mol. sim. 28 (2002) 729. [27] m. praprotnik, c. junghans, l. dell site, k. kremer, comput. phys. comm. 179 (2008) 51. [28] j. wang, p.a. kollman, j. comp. chem. 22 (2001) 1219. [29] j. wang, r.m. wolf, j.w. caldwell, p.a. kollman, d.a. case, j. comp. chem. 25 (2004) 1157. [30] r. faller, h. schmitz, o. biermann, f. mller-plathe, j. comp. chem. 20 (1999) 1009. [31] d. reith, h. meyer, f. mller-plathe, comput. phys. comm. 148 (2002) 299. [32] p. ungerer, c. beauvais, j. delhommelle, a. boutin, b. rousseau, a.h. fuchs, j. phys. chem. 112 (2000) 5499. [33] e. bourasseau, m. haboudou, a. boutin, a.h. fuchs, p. ungerer, j. chem. phys. 118 (2003) 3020. [34] j. stoll, j. vrabec, h. hasse, j. fischer, fluid phase eq. 179 (2001) 339. [35] m. hlsmann, j. vrabec, a. maa, d. reith, comput. phys. comm. (2010), submit publication. [36] s. roweis, levenbergmarquardt optimization, univers toronto, 1996, [37] w.h. press, s.a. teukolsky, w.t. vetterling, b.p. flannery, numer recip c, cambridg univers press, cambridge, 1992. [38] j. nocedal, s.j. wright, numer optimization, springer-verlag, new york, 1999. [39] j. vrabec, j. stoll, h. hasse, j. phys. chem. b 105 (2001) 12126. grow: gradient-bas optim workflow autom develop molecular model introduct problem definit optim workflow numer optim algorithm practic aspects: trick trade grow: implement issu configur file program structur subscript need optim algorithm summari result file gener iter extens possibl develop proof concept: case studi nitrogen grow-a new basi develop high-qual forc field acknowledg refer