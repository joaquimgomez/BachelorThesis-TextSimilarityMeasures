real-tim ambient occlus halo sum area tabl abstract volum model high depth complexity. pose difficulti observ judg spatial relationship accurately. illustr usual us certain techniqu improv shade shadows, halos, edg darken order enhanc depth percept certain structures. effect difficult gener real-tim volumetr models. import impact render time, requir precomput avoid chang transfer function interactively. paper present method fast gener ambient occlus volumetr models. screen-spac approach requir precomput data structure. second view independ store volumetr inform form sum area tabl densiti values, thus, allow interact chang transfer function demand, cost memori space. despit fact similar qualiti result obtain approaches, 3d version suitabl object discontinu structur vessel tree intestines, obtain better framerates. case, 2d version suitabl constrain gpu memori environ need extra 3d textur storage. extra result, screen-spac techniqu allow comput view dependent, interact configur halo data structure. kei words: gpu-bas volum rai casting, depth percept enhancement, ambient occlusion, halo render 1. introduct import goal visual provid adequ insight data analyzed. in- creas comput power improv cap- ture processes, volum visual algorithm fed complex datasets. understand space arrang complex volumetr model difficult task, especi render volum data acquir ct mri. render imag model difficult in- terpret present fine, overlap structures. special media, medicin books, illustr us set special techniqu order obtain depict reduc percept ambiguity, halos, contours, cut- awai views, on. graphic research borrow techniqu appli success- fulli visualization. improv percept volumetr mod- el usual face differ kind methods: realist shade model non-photorealist tech- niques. volumetr data typic illumin point light sourc shade sampl point volum calcul phong model. illumina- tion model provid good perceptu cue mainli orient isosurfaces. however, usual result im- ag poor depth cues. shadow solv problem, shadow gener costli introduc illumin discontinu surface. paper propos simpl fast approach enhanc depth percept medic models. case propos data structur algorithm fast render- ing effects. base sum area tables. one: vicin occlus map (vom), data struc- ture comput fly frame allow gener view depend ambient occlus halo rela- tive low cost. second one, densiti sum area ta- ble (dsat3d) us precomput 3d sum area tabl densiti valu model, allow comput view independ ambient occlus neglig impact render process. main differ view dependent, built depth map, similar recent ambient occlus methods, second take account 3d inform make approach view independent. paper extens [1], present vom data structur halo render ambient occlus simulation. paper, present new method us dsat3d data structure, cuda implement construct data structures. goal enhanc depth percept volumetr mod- els, so, add ambient occlus (vicin shading) halo real-time. main contribut summa- rize as: vicin occlus map (vom): data structur comput fly main advantag are: i) need precomputation. ii) limit (i. e. constant frame) impact rendering. iii) com- pute view-depend real-tim halo (with interact changeabl size color). denstiti sum area tabl (dsat3d): 3d sum area tabl densiti valu model allow fast comput ambient occlusion. main preprint submit comput graphic octob 15, 2009 (a) rai cast (b) vicin shade (c) halo vicin shade figur 1: perceptu enhanc render volumetr model. left imag show origin rai cast volume. center imag enhanc ad vicin shade (see rib darkened), right show halo emphas shape model. imag comput real time frame rates. featur are: i) view independ ambient occlus com- putation. ii) impact render performance. iii) requir precomput 3d texture, corre- spond space cost. vom requir precomput gener view de- pendent ambient occlus shadows, comput screen space. moreover, allow comput flex- ibl halos. hand, dsat3d requir precom- putat 3d textur (whose cost goe 40 millisecond seconds). second structur store gpu render stage, need extra memori space. however, render faster, penalti 8% render time model tested. vicin oc- clusion map larger impact framer (though real-tim origin model perform fast enough), mainli depend size imag download cpu. rest paper organ follows: first, section 2 overview previou work. section 3 present back- ground us remaind paper. section 4 present data structure: vicin occlus maps, algo- rithm us simul ambient occlus render- ing halos. section 5 introduc densiti 3d sum area tabl us fast ambient occlu- sion computation. result analyz section 6, discuss advantag disadvantag meth- od compar previou approaches. finally, section 7 conclud paper point line fu- ture research. 2. previou work section analyz previou method enhanc- ing percept depth volumetr models. main approach realist shade non-photorrealist tech- niques. realist shade models. method simul classic render effects, shadows, appli differ gener- ation processes. propos appli shad- ow volum render ([24]) gener pro- cess differ importantly. instance, yagel et al. us re- cursiv rai trace behren rater add shadow texture-bas volum renderings. kniss et al. [4] add effect phase function forward scattering. follow idea increas realism shad- ing model, stewart develop techniqu name vicin shad- ing enhanc depth percept us obscu- ranc [5]. concretely, propos model perform shad- ing accord presenc occlusor neighborhood voxel. obscur (also coin ambient occlus landi [6] others) model ambient illumin produc realist shade rel low cost. ambient oc- clusion-bas techniqu measur approximate, respect pixel, total solid angl occlud nearbi ele- ments. measur done, pixel darken proport it. techniqu allow fast comput approxim vicin shade need trac- ing extra rai volume. similar light techniqu appli tarini et al. [7] enhanc molecular vi- sualization, exploit fact render geometri built atoms, particular spheric shape. ambient occlus techniqu popular thank simplic efficiency. paper com- pute ambient occlus inform preprocess ([710]), new group paper estim occlus base depth map [11, 12]. ruiz et al. [13] implement obscur method vol- 2 um models. order determin ambient occlus point, rai trace sampl surround point. lead larg precomput time min- ut rel small model (up 256 256 415 slices). ropinski et al. [14] develop approach fast ambient occlusion-bas render volum models. method us precomput set local histogram (similar [15]). set big rel larg datasets. hand, like approach, gener ambient occlus imag fly, perform fast updat transfer function changes. comput color bleed volum glow data structure. non-photorealist techniques. express visual set techniqu provid visual cue certain featur model order achiev wide rang effect artist renderings, focu attention. differ- ent strategi differ accent differ part model, enhanc depth perception. con- tour gener base magnitud local gradient angl view direct gradient csebfalvi et al. [16]. hauser et al. [17] propos two-level vol- um render abl us differ render paradigm (direct volum rendering, maximum intens projection, on) differ structur dataset, us focus+context technique. nagi et al. [18] combin line draw direct volum render techniques. yuan chen [19] enhanc survei see volum render- ing imag silhouettes, ridge, vallei lines. bruckner groller [20] us volumetr halo enhanc high- light structur gpu-bas direct volum rendering. halo wenger et al. [21], ebert rheingan [22], svakhin ebert [23], ritter et al. [24], tarini et al. [7]. method usual calcu- late halo preprocess easili modifi fly. halo built bruckner groller similar flexibl chang size color. however, build process involv set step halo built singl step posterior rendering, vicin occlus map. yield roughli con- stant cost frame (that depend window size), smaller case algorithm. cases, render volum model gpu-bas rai cast [25], yield real time response. section introduc vicin occlus maps, present densiti sum area tables. 3. preliminari section introduc concept neces- sari remain paper: sum area tabl ambient occlusion. 3.1. sum area tabl sum area tabl [26] (from sat) structur stores, cell (x, y), sum valu initi posit (0, 0) (x, y) included. given tabl t, certain cell (x, y) correspond sat comput as: s [x, y] = x,y i=0, j=0 ti, j (1) vision community, data structur call integr imag ([27]). sat built, pro- vide wai filter arbitrarili larg rectangular region imag constant time. order comput sum rectangular region, 4 access requir (see figur 2), independ area size. allow com- pute approxim occlus neighbor region constant time (see follow section). sat[xl, yb] sat[xr, yb] - sat[xl, yb] sat[xr, yt] - sat[xl, yt] - sat[xr, yb] + sat[xl, yb] sat[xl, yt] - sat[xl, yb] sat xl xr yb yt figur 2: area calcul sum area table. sum area tabl built increment cpu simpl algorithm depict figur 3. therefore, construct cost linear number cells. 3.2. ambient occlus volumetr model ambient occlus ([6]) volumetr model in- troduc stewart vicin shade [28]. techniqu tailor increas depth percept vol- umetr models. origin idea zhukov et al. [5], develop fast estim global illumin dub obscurances. surfac point, algorithm attenu illumin come direct space measur occlus local vicin point. order this, occlus comput sampl environ- ment voxel shade 1000 sampl directions. develop algorithm trace rai effici way, sampl high number direct re- sult import impact render time. recent paper deal gener ambient occlus base shadow real-time. unfortunately, requir set precomput structures, need knowledg 3d ge- ometry. approach need precomput 3 step second step step 2dsat[0, 0] = input [0, 0] 2dsat[x, 0] = 2dsat[x-1, 0] + + input [x, 0] 2dsat[0, y] = 2dsat[0, y-1] + + input [0, y] 2dsat[x, y] = 2dsat[x-1, y] + 2dsat [x, y-1] - 2dsat[x-1, y-1] + input [x, y] 2dsat[x-1, y] 2dsat [x, y-1] 2dsat[x-1, y-1] figur 3: sum area tabl construct process cpu. requir knowledg geometry, avail- abl volum rendering, shade depend transfer function, chang interactively. given point p surfac model surfac normal np, irradi reach p defin as: e(p) = np l()d (2) l() scalar magnitud equal radianc come direct , set direct surface, i.e. direct np > 0. approxim evalu discret domain k sector possibl uniform solid angl measur |i|, and, sector, evalu radianc l sampl direct i: e(p) = k i=1 np il(i) |i| (3) consid environ light come uni- formli direction, simpler formu- lation, radianc reach point substitut binari function determin reachabl point (o()), is, o() evalu 1 point light oc- clude certain direction. result approxim render equation: e(p) = 1 4 k i=1 np io(i) (4) 4. ambient occlus halo render vicin occlus map work volumetr model render rai cast gpu [25], yield real time response. method con- sist gener depict increas insight model visualized. reduc ambigu addit depth cue simul stewart vicin shade render halos. fast gener ambient occlu- sion halos, develop new data structur dub vicin occlus map ([1]). 4.1. vom data structur concentr simul ambient occlusion. result new data structur render halo real time. main idea ambient occlus measure, cer- tain point, ambient light occlud neigh- bore geometry. actually, reduc light contribut proport occlus pro- duce geometri close point shaded. given render view associ opengl depth map, approxim valu analyzing, pixel, depth valu closer surround pixels, count number pixel depth smaller (thei closer viewer) shade. naiv count number element depth map result larg number textur queries, reduc framerate. solut develop crytek ([11]) consist subsampl region cer- tain pattern. yield nois artifact filter order reduc effect sampling. adopt complet differ approach: comput averag depth new data structure. vicin occlus map (vom) data structur en- code inform contain depth map tables, contain accumul depth neighborhood pixel, contain number valu contribut sum. build vom depth map 4 cpu gpu color maprai cast final imag medic imag 3d textur 2d textur + volum model depth map process 2d textur vicin occlus map gpu 2d shade 2dsat figur 4: applic architecture: cpu read volumetr model dicom file, build 3d textur it, upload gpu. then, perform gpu rai cast model gener color map depth map. depth map pass cpu. gener vicin occlus map (vom). vom color map, gpu composit new imag result. result rai cast volumetr model view- point. depth map contains, fragment, distanc observ moment opac rai get one. data structur built process depth map gener sum area tabl informa- tion concern number fragment effect con- tribut sum. therefore, vom consist tables, dub s atdepth (sum area tabl depth map) s ndepth (sum area tabl bitmap contain 1 pixel belong background 0 otherwise), respec- tively. inform gener fly frame pass depth map (encod texture) cpu. then, cpu comput sum area tabl upload result vicin occlus map gpu, final shading. 4.2. overview section present architectur application. initially, load model cpu build 3d textur it, load gpu textur memory. then, given transfer function viewpoint, perform render passes. consist gpu-bas rai cast model gener color map depth map. depth map pass cpu order build vicin occlus map (vom). then, vom upload gpu second render pass perform shade simpli raster screen-align quad, vom produc final result. hence, rai cast requir process. applic architectur depict figur 4. vom comput gpu, requir multipl render pass ([29]). take account rai cast fragment shader-intens algorithm, pre- fer download work cpu. despit that, implement cuda version yield similar results. 4.3. ambient occlus vom want measure, certain point, am- bient light occlud neighbor geometry. approx- imat comput vom approxim av- erag depth surround point interest. value, infer occlus produc opaqu voxel point effici way. averag depth comput s atdepth. how- ever, averag depth enough, thus, us s atn order know pixel contribut averag depth. fi- nally, us differ averag depth current depth point shade order obtain better approxim percentag hemispher cover close voxels. consid region 10 10 25 25 pixel point shade (which mean take account 100 625 pixels) creat plausibl shade halos, examples. simpl idea build darken function that, ad phong shade function, gener depth cue provid better understand render model. function implement shader execut fragment depth differ 1.0, is, fragment belong final color object. modifi subtract color gener rai trace process (rccolor) certain dark vicin color, fragment color be: fcolor = rccolor darkv vicinitycolor (5) 5 (a) origin (b) depth-enhanc figur 5: depth enhanc direct volum render gener images. left column show model techniqu right column show imag enhanc better depth understand vicin shading. darkv darken factor vicin shade comput take account averag depth sur- round pixels. us white vicinitycolor, darken fragment, us color grei range, color select structur order emphas it. darken factor comput take account num- ber pixel contribut depth calculation, resolut region. fragment (x, y) use: darken = (avgdepth depth(x, y)) vicinityfactor, (6) vicinityfactor term modul influenc vicin shade final image, averag depth comput as: avgdepth = x+sizex,y+sizei i=xsizex, j=ysizei depth(i, j) n f rag|depth f rag > 0 , (7) sizex sizei resolut 2d region depth map us comput ambient occlusion. darken factor computed, add final color filter weight smooth way: darkv = smoothstep(0., 0.99, darkening), (8) figur 5 comparison render (left) (right) vicin shading. increas vicini- tyfactor reduc overal light increas depth cues. want increas contrast area imag enhanc vicin factor, replac factor power differ depths. approxim comput data structur built inform depth maps, infer occlus produc opaqu voxel point effici way. sum area tabl larg term bit depth. number bit requir store compon sat resolut w h is: n = log2 w + log2 h + pi (9) pi precis requir input. make manag sat difficult. note henslei [29], overflow textur resolut handl accu- rately. case, perform sat comput long integ format transfer result pair 32 bit textur gpu (one depth sum accumul number element differ 0). order comput avgdepth term need comput sum depth number fragment contribut sum. valu calcul access sat 4 time shown figur 2. furthermore, code tabl singl 64 bit textur save 4 textur accesses. however, optim littl impact, be- caus major cost incur algorithm data transfer, analyz later section 4.6. 4.4. halo render order render halo select part model, perform similar algorithm simul vicin shading. case, account halo render close object decai object. user decid halo extens (in pixels) manip- ulat slider. moreover, chang halo color interactively. order render halo, pixel, queri vom calcul averag depth neighbor- hood, and, current fragment outsid object (thi determin queri depth map), render halo color decai distanc object follow formula: fcolor = rccolor + darkh halocolor, (10) rccolor color gener rai cast algo- rithm, darken (darkh) halo determin by: darkh = (avgdepth depth(x, y)) halow numelem resolut , (11) halow weight chang user, numelem number element contribut av- erag depth calculation, resolut size region interest. divid number fragment depth zero resolut search region creat function decai distanc object. result halo paint color select user intens area influenc chang in- teractively. chang possibl number textur access requir perform effect constant. coupl exampl halo opaqu region select transfer function figur 6. 6 (a) (b) figur 6: improv visual impress halo differ objects. (a) rai (b) vicin (c) vicin cast shade shade figur 7: effect factor vicin shading. (a) show origin rai cast imag (b) (c) differ valu vicinityfactor. higher factor darken affect region strongly. 4.5. featur algorithm perform real-tim comput vicin shade halos. calcul car- ri scratch frame, paramet involv chang interact cost. default pa- ramet us wide varieti models, provid user wide rang flexibility. thus, let user manipul paramet order improv depth percept structur accentuation: vicin weight size: depth complex mod- el region model vary, therefore, appli fix function enlighten certain hide an- other. application, user manipul slider chang default valu given darken func- tion. effect chang figur 7. number pixel taken consider interact chang order fine tune result necessary. extra cost, let user chang emphas color, order chang darken enlighten depth variat need accentu differ way. halo size color: thank us sum area tables, differ size halo requir number (a) black halo (b) red halo figur 8: influenc halo color chang shape perception. black halo provid shape cue difficult judg pixel render dark color belong structur object (and place high depth), halo. figur 9: improv object identif creation halo object interest, case liver. textur accesses. therefore, let user chang halo size, user slider. nonetheless, color defin interact differ struc- ture differ context requir differ color emphas object interest. figur 8 com- pare differ colors: black red, halo-bas shape emphasis. structur selection: applic allow interac- tive select structur set previous seg- ment structures, shade effect restrict them. allow creat halo color shade restrict part model, order provid better vi- sual insight structur interest. figur 9 show effect order properli identifi vascular tree liver surround structures. effect present above, requir ex- tra inform structur selection, need sort data structur object segmentation. implement requir changes: render color imag depth map, rai caster identifies, render fragment opac 1.0, structur belong extra fetch 3d textur identifiers, built preprocess. 7 produc result modifi depth map, store depth valu structur interest. final halo com- pute depth map (see figur 9). 4.6. result implement propos method test result pc equip intel core 2 duo cpu run 3.0 ghz. 4gb ram memori nvidia geforc gtx 280 gpu 1gb ram. analyz model differ sizes. dimens model shown follow list: brain: 128 x 128 x 58 slices. ear(baby): 256 x 256 x 98 slices. engine: 256 x 256 x 256 slices. intestines: 512 x 512 x 127 slices. bonsai: 512 x 512 x 182 slices. body: 512 x 512 x 512 slices. machine, obtain real-tim framer rel complex model (of 512 512 600 slices). penalti suffer shade approach rel low compar cost rai trace scene. exampl paper render viewport 512 512 resolu- tion rai cast sampl time voxel, lower densiti sampl usual result poor renderings. qualiti imag high influenc vicin shad- ing halo size chang easili user. rai cast process domin overal cost, mainli depend transfer function used. reason obtain similar framer model differ number slices. figur 5 6, mod- el high opac bonsai, larg semi-transpar regions, body. concern efficiency, main advantag approach cost constant, number textur access constant independ size model. however, linear number pixel viewport. tabl 1 show result obtain method. explor real time. better framer required, size vom reduc quantiz result build mip map, requir fine tune shader order achiev compar results. implement cuda-bas version sat construction. unfortunately, connect regular graphic pipelin cuda pipelin properli accelerated. thus, requir download depth map cpu upload cuda mem- ory. compar data manag version algorithm figur 10. download, bottleneck algorithm, framer obtain similar framer obtain cpu version, shown tabl 2. futur version cuda expect model viewport rai cast vom brain 256 x 256 100.19 100.11 512 x 512 100.18 58.04 ear(baby) 256 x 256 100.22 83.30 512 x 512 87.08 43.19 engin 256 x 256 99.00 63.98 512 x 512 59.16 35.41 intestin 256 x 256 36.12 30.89 512 x 512 22.97 18.46 bonsai 256 x 256 39.70 33.35 512 x 512 24.18 19.17 bodi 256 x 256 10.70 10.15 512 x 512 6.46 5.67 tabl 1: perform comparison differ models. note impact ad vicin shade halo low compar complet render process. deliv frame buffer object featur that, theoretically, allow pass textur gpu memori cuda memory, save bandwidth time. therefore, be- liev cuda version algorithm improv fram- erat cpu version. gpu-friendli approach, requir multipl render pass develop henslei [29]. however, believ cuda-bas ap- proach flexible. model viewport vom cuda-vom brain 256 x 256 100.14 100.11 512 x 512 60.11 58.04 ear(baby) 256 x 256 98.81 83.30 512 x 512 46.45 43.19 engin 256 x 256 85.72 63.98 512 x 512 37.48 35.41 intestin 256 x 256 34.90 35.82 512 x 512 18.80 18.46 bonsai 256 x 256 38.01 33.35 512 x 512 19.68 19.17 bodi 256 x 256 21.19 19.88 512 x 512 11.00 10.79 tabl 2: comparison framer origin algorithm (vom) cuda-acceler version sum area tabl comput (cuda-vom). shown, pipelin necessari interleav opengl cuda comput current effici one. however, measur time requir com- pute sum area tabl cuda cpu. demonstr cuda approach certainli efficient, futur version driver, improv framerates. time need build vicin occlus map depend resolut image, shown tabl 3. vom suitabl increas depth informa- tion isosurfac detect volum rai casting, 8 cpu depth map vicin occlus map gpu 2dsat gpu - cuda gpu 2dsat cpu parallel process increment process depth map vicin occlus map alloc devic memori copi input host devic free devic memori copi result devic host figur 10: cpu sum area tabl comput compar cuda-bas algorithm. viewport cpu time (ms) cuda time (ms) 256 x 256 0.608 0.327 512 x 512 2.427 1.450 768 x 768 17.951 1.982 tabl 3: comparison comput time vom cpu cuda. figur 11: close vicin occlus rendering. increas vicin factor show region (far user) slightli darkened. semi-transpar object similar way. kei point depth map creation, gener- at accordingli inform structur want analyze. hand, object lot disconnect struc- tures, structur partial isol 3d space result darken region algorithm. fact occlus function built 2d basis, take account 3d geometry. cases, probabl visual problem (such figur 1 frontmost rib darken on bottom). however, case notic yield some- unexpect result, intestin pictur figur 11. image, vicin factor rais littl bit order darken region obvious. note region dark geometri act occlud close viewer, larg depth jump depth map, actual occlus 3d lower estimated, occlud geometri span larg 3d region space. complet disadvantag sens help judg 3d ar- rangement structures, better approxim yield qualit result. order improv shade quality, inform 3d occlus taken account. ob- jectiv dsat3d data structur render algorithm, present follow section. 5. ambient occlus densiti sum area tabl far, present data structur tailor simu- late ambient occlus effect real-tim volumetr mod- els. stated, vom account 2d inform cap- ture depth map. inform view-dependent. thus, account volum point shade, 2d project dataset view direction. practic consequ non opaqu re- gion contribut shade depth map built distanc intersect rai reach total opacity. realist approach account infor- mation. ruiz et al. [13] explor surround point trace rai directions. nevertheless, want avoid trace rays, impli import perfor- manc penalty. 5.1. data structur stated, build 3d version sum area table. 3d sum area tabl previ- ousli import inform storag ([30]). case, 9 step second step step fourth step 3dsat[0, 0, 0] = input [0, 0, 0] 3dsat[x, 0, 0] = 3dsat[x-1, 0, 0] + + input [x, 0, 0] 3dsat[0, y, 0] = 3dsat[0, y-1, 0] + + input [0, y, 0] 3dsat[x, 0, 0] = 3dsat[x-1, 0, 0] + + input [x, 0, 0] 3dsat[x, 0, z] = 3dsat[x-1, 0, z] + + 3dsat [x, 0, z-1] - 3dsat[x-1, 0, z-1] + + input [x, 0, z] 3dsat[x, y, 0] = 3dsat[x-1, y, 0] + + 3dsat [x, y-1, 0] - 3dsat[x-1, y-1, 0] + + input [0, 0, 0] 3dsat[0, y, z] = 3dsat[0, y-1, z] + + 3dsat [0, y, z-1] - 3dsat[0, y-1, z-1] + + input [0, y, z] 3dsat[x, y, z] = 3dsat[x-1, y, z] + 3dsat [x, y, z-1] - 3dsat[x-1, y, z-1] + 3dsat[x, y-1, z] - 3dsat[x-1, y-1, z] - - 3dsat[x, y-1, z-1] + 3dsat[x-1, y-1, z-1] + input [x, 0, z] 3dsat[x-1, y, z] 3dsat [x, y, z-1] 3dsat[x-1, y, z-1] 3dsat[x, y-1, z] 3dsat[x-1, y-1, z] 3dsat[x, y-1, z-1] 3dsat[x-1, y-1, z-1] figur 12: construct 3d sum area table. store densiti valu dataset. construct 3d sum area tabl similar 2d version. again, construct incrementally, shown figur 12. v2 v4 v8 v7 v5v6 v3 v1 figur 13: averag densiti comput 3d sum area table. now, order comput averag densiti region dsat3d requir textur access (a com- pare 4 queri requir 2d sat), shown figur 13. averag densiti cubic region comput d = (v1 v2 v3 + v4 v5 + v6 + v7 v8)/8. 5.2. algorithm overview method consist build 3d sum area tabl densiti valu volume. result, abl approxim occlus 3d environ analyz opac neighborhood. pipelin algorithm depict figur 14. d1d2 d3d4 d5d6 d7d8 figur 15: cube subdivis 8 region order improv densiti evaluation. contrast previou system, dsat3d built preprocess rendering. conse- quence, obtain higher frame rate need transfer inform gpu cpu backwards. moreover, approach valid trans- fer function changes, occlus comput evalu transfer function densiti values, re- main constant. 5.3. ambient occlus dsat3d order simul ambient occlus point, evalu- at opac voxel surround point. order this, sampl densiti neighbor 10 cpu gpu color map opac map rai cast densityavg comput final imagemed imag 3d textur 3d textur + dsat3d dsat3d volum model figur 14: applic architecture: cpu read volumetr model dicom file, build 3d textur it. build sum area tabl 3d textur (dsat3d), store 3d texture. textur upload gpu. rendering, gpu perform rai cast model rai reach certain opacity, dsat3d queri order evalu ambient occlusion. voxel, determin opac appli transfer function, reduc illumin accord it. however, like 2d version, yield textur reads. instead, evalu averag densiti valu dsat3d. naiv approach consist evalu averag density, d, cubic region point in- terest. however, take d averag densiti appli transfer function order estim occlus intro- duce error excessive. especi true averag take account larg number voxels. littl effort, evalu occlus sum occlus caus 8 cubic region point interest, depict figur 15. yield better ap- proxim close geometry. thus, occlus evalu function be: occlus = sqrt( 8 i=1 opacity(di)/8), (12) di averag densiti depict figur 13, opac valu opac given evalu transfer function given densiti value. squar root make low opac valu count slightli linear func- tion. opac function defin [0, 1], squar root increas contribut low averag opacity, keep maximum reachabl opac valu 1. darken valu comput appli follow function: darkv = smoothstep(minimumdark, 0.99,occlusion) (13) help user fine tune darken de- sired. finally, result color comput evalu function previou approach: fcolor = rccolor darkv vicinitycolor (14) new data structure, dsat3d, store sum den- siti values. mean storag requir hold valu higher origin 3d model. typic tradeoff space versu speed, problem memori limited. 5.4. result present approach comput ambient oc- clusion fast way, cost larg data structure. result similar on obtain 2d version model present isol disconnect features. exampl figur 16, ear babi model shade vom (left) dsat3d (right). (a) vom (b) dsat3d figur 16: 2d vicin occlus shade versu 3d ambient occlus sum area tables. object larg depth jump disconnect structures, result fairli similar. coupl exampl figur 17. left col- umn show origin rai cast result right show ambient occlus enhanc rendering. like previou results, framer correspond pc equip intel core 2 duo cpu run 3.0 ghz. 4gb ram memori nvidia geforc gtx 280 gpu 1gb ram. raycast analyz 3 sampl voxel order guarante high qualiti result. imag render 512 512 viewport. result appear tabl 4. time impact lower dsat3d vicin occlus maps. analysi impact present tabl 5 valu 512 512 viewport. note deduc cost 2d version roughli constant frame compar model render similar speed similar resolutions, intestin bonsai models. cost implement dsat3d occlus lower, although, stated, consum memory. 11 rai cast dsat3d ambient occlus figur 17: ambient occlus comput dsat3d structure. model viewport rai cast dsat3d brain 256 x 256 100.19 100.18 512 x 512 100.18 100.15 ear(baby) 256 x 256 100.22 100.20 512 x 512 87.08 80.09 engin 256 x 256 99.00 94.63 512 x 512 59.16 58.17 intestin 256 x 256 36.12 35.82 512 x 512 22.97 22.04 bonsai 256 x 256 39.70 38.82 512 x 512 24.18 22.84 bodi 256 x 256 10.70 10.40 512 x 512 6.46 6.25 tabl 4: framer obtain differ model test. model tested, extra storag re- quir have dsat3d structur high, compet approach store elabo- rate inform method ropinski et al. [14]. case, time storag requir rel larg model (such on present here) prohibitive. case, usual need 32 bit textur dimen- sion input dataset (see tabl 6). doubl memori requirements, face problem com- press structur yet. fortunately, inform con- tain calcul averag densiti expect reduc size significantli import qualiti loss. implement cuda-bas algorithm order improv construct timings. tabl 7, time better cuda version model size in- crease. cuda time good larg models, model rai vom dsat3d cast (impact) (impact) brain 100.2 58.04 (-42.06%) 100.2 (-0.03%) ear(baby) 87.08 43.19 (-50.39%) 80.09 (-8.02%) engin 59.16 35.41 (-40.14%) 58.17 (-1.67%) intestin 22.97 18.46 (-19.65%) 22.04 (-4.05%) bonsai 24.18 19.17 (-20.71%) 22.84 (-5.55%) bodi 11.98 10.79 (-9.88%) 11.82 (-1.35%) tabl 5: comparison impact incur method pre- sent paper 512 512 viewport. note impact dsat3d low, 8% most. model sat3d maximum # bit gener valu requir brain 0.04 sec 31238068 25 ear(baby) 0.74 sec 198720120 28 engin 2.07 sec 187475047 28 intestin 5.75 sec 4294967192 32 bonsai 6.08 sec 136596356 28 bodi 17.1 sec 4294967162 32 tabl 6: dsat3d build features: second column show time requir construct dsat3d right column rightmost column maximum reach valu minimum number bit requir build it. substanti smaller time requir load big vol- um models. like previou case, bottleneck place data commun bus, result informa- tion stai textur memori download cpu, depict figur 18. ex- pect solv soon frame buffer object incorpor cuda. gpu implementation, sat3d comput algo- rithm changed. indeed, port naiv cpu algo- rithm gpu lead memori pattern fit gpu. input read times, locally, meet memori pattern requir us maxim per- formanc gpu. implement new algorithm base follow observation: sat3d comput separated. s x(i, j, k) = xi in(x, j, k) s y(i, j, k) = y j s x(i, y, k) s (i, j, k) = s z(i, j, k) = zk s y(i, j, z) = zk y j s x(i, y, z) = zk y j xi in(x, y, z) algorithm chang following: 1. comput sx pass, z-slice z-slice, load- ing line share memory, perform parallel computa- tion (see [31]) line, write line. 2. comput sy singl pass read memori nice gpu pattern-coalesc reads. 12 model load time cpu time cuda time brain 0.12 0.04 0.11 ear (baby) 0.20 0.74 0.18 engin 0.46 2.07 0.31 intestin 1.42 5.73 0.74 bonsai 1.87 6.08 0.75 bodi 3.58 17.10 1.64 tabl 7: time dsat3d construct cpu cuda. note dsat3d construct cuda take lower time requir load model, accept result. cpu algorithm larg model rel time consuming. 3. comput sz singl pass read memori nice gpu pattern-coalesc reads. new algorithm lead signific perform im- provement: 1. cpu algorithm gpu (nave port) - 3dsat comput w/o memori transfer - 512x512x512 : 3.997118 s tesla m1060. 2. new gpu algorithm - 3dsat comput w/o memori transfer - 512x512x512 : 0.191357 s tesla m1060. perform gap explain memori pattern algorithm. naiv algorithm us scatter mem- ori pattern read (read memori written), second algorithm read data coalesc manner gpu friendli wai yield high bandwidth. 6. discuss begin discuss compar vom previou approach ambient occlus halo rendering. stewart approach [28], shade algorithm reduc ambigu ad depth cue surfac render models. however, instead trace rai neigh- bor voxels, analyz depth inform queri vicin occlus map. effici approach make chang light paramet interactive. thus, user chang vicin shade affect overal render and, color shading. chang shade color help accentu structur stylish way. ropinski et al. [14] comput ambient occlus real time, requir long preprocess time hour huge inform storag prevent deal rel larg models. compar approach, requir preprocessing. moreover, gen- erat inform high, model deal larger. compar ruiz et al. [13], approach run real-time, take advantag us sum area tables, limit number textur access constant amount, arbitrari sizes. moreover, cost limited, work frame constant. advantag guarante interact framer impli larger impact cpu gpu - cuda gpu dsat3d parallel process alloc devic memori copi input host devic free devic memori copi result devic host 3d texture3d textur cpu cpu increment process dsat3d figur 18: cpu densiti sum area tabl 3d comput compar cuda-bas algorithm. (in fps) smaller model yield high framer gpu rai cast algorithm. compar surfac depth-bas ambient occlus method ([11, 12]), need sampl exhaust depth map, number obtain sum area tabl yield filter valu depth map, requir filter avoid sampl arti- fact camera moves. halo render method take advantag vom order reduc comput cost. bruckner groller [20], halo flexibl gener fly, chang size color interactively. contrast approach, gener halo rai cast method analyz depth map singl (extra) pass. thus, approach low impact render time. bound size viewport, cost linear number pixels, perform comput 2d views. concern second data structure, exampl trade space speed. requir space rel high, advantag impact rendering, al- null. compar ropinski et al. [14], improv preprocess times, question second (in case cpu processing) their hours. furthermore, cuda implement take 13 (a) vom (b) dsat3d (c) depth vom (e) opac dsat3d (f) origin rc (g) vom-dsat3d figur 19: 2d vicin occlus shade versu 3d ambient occlus us- ing sum area tables. row compar 2d ambient occlus 3d ambient occlus algorithm implement sum area tables. middl row depth map build vom data structur opac map comput dsat3d. finally, origin rai cast depth enhanc us vom dsat3d improv ambient occlus computation. seconds, lower time requir load rel larg model. case, deal larger models. notwithstanding, memori cost pose prob- lem larg model low memori gpus. finally, algorithm present yield similar result larg number models. cases, decid appli consist tradeoff memori speed. disconnect structures, result slightli different, result probabl accept cases. comparison figur 19. initi rai cast (f ) result appli vom dsat (a b, respectively). order interpret shadow come from, provid depth map gener vom c opac map creat dsat3d ambient occlus execut d. cases, test combin effect look like, shown figur g. combin algorithm requir extra ren- dere step, bottleneck vom computation, framer obtain on vom. 7. conclus futur work paper present fast method ambigu- iti reduct volum rendering. achiev us differ techniques: vicin shade halo ren- dering. ambient occlus simulation, present differ data structures: vom dsat3d. advantag us sum area tabl acceler computation. vom gener frame, provid fast method screen-spac ambient occlus computation. impact render constant frame, depend size viewport. data structure, abl gener halo fly. approach fast, highli configurable, and, therefore, user gain flexibl ex- plorat process intuit interface. dsat3d consist 3d sum area tabl densiti valu origin model. structure, esti- mate ambient occlus analyz 3d geometri point interest. make simul view indepen- dent. method slightli superior vom object consist discontinu separ structures. objects, result similar vom lower impact rendering. cost increas memori consumption, repres problem environ limit gpu memory. consequence, issu want point futur reduct dsat3d size. acknowledg work support project tin2007-67982- c02-01 spanish government. refer [1] j. daz, h. yela, p.-p. vaazquez, vicin occlus maps: enhanc depth percept volumetr models, in: graphic interna- tional, 2008, pp. 5663. [2] r. yagel, a. kaufman, q. zhang, realist volum imaging, in: vi 91: proceed 2nd confer visual 91, ieee societi press, lo alamitos, ca, usa, 1991, pp. 226231. [3] u. behrens, r. ratering, ad shadow texture-bas volum ren- derer, in: vv 98: proceed 1998 ieee symposium volum visualization, acm, new york, ny, usa, 1998, pp. 3946. [4] j. kniss, g. kindlmann, c. hansen, multidimension transfer function interact volum rendering, ieee transact visual graphic 8 (3) (2002) 270285. [5] s. zhukov, a. iones, g. kronin, ambient light illumin model, in: render techniques, 1998, pp. 4556. [6] h. landis, production-readi global illumination, in: siggraph 02 cours notes, washington, dc, usa, 2002. [7] m. tarini, p. cignoni, , c. montani, ambient occlus edg cue enhanc real time molecular visualization, ieee transact visual graphic 12 (5) (2006) 1237884. [8] j. kontkanen, s. laine, ambient occlus fields, in: i3d 05: proceed- ing 2005 symposium interact 3d graphic games, acm, new york, ny, usa, 2005, pp. 4148. [9] m. malmer, f. malmer, u. assarsson, n. holzschuch, fast precomput ambient occlus proxim shadows, journal graphic tool 12 (2) (2007) 5971. [10] k. zhou, y. hu, s. lin, b. guo, h.-y. shum, precomput shadow field dynam scenes, in: acm siggraph 2005, acm, new york, ny, usa, 2005, pp. 11961201. [11] m. mittring, find gen: cryengin 2, in: siggraph 07: acm siggraph 2007 courses, acm, new york, ny, usa, 2007, pp. 97 121. [12] l. bavoil, m. sainz, multi-lay dual-resolut screen-spac ambient oc- clusion, in: siggraph 09: siggraph 2009: talks, acm, new york, ny, usa, 2009, pp. 11. 14 [13] m. ruiz, i. boada, i. viola, s. bruckner, m. feixas, m. sbert, obscurance-bas volum render framework, in: proceed ieee/eg intern symposium volum point-bas graph- ics, 2008, pp. 113120. [14] t. ropinski, j. meyer-spradow, s. diepenbrock, j. mensmann, k. h. hin- richs, interact volum render dynam ambient occlus color bleeding, graphic forum (eurograph 2008) 27 (2) (2008) 567576. [15] e. penner, r. mitchell, isosurfac ambient occlus soft shadow filter occlus maps, in: volum point-bas graphic 2008, 2008, pp. 5764. [16] b. csebfalvi, l. mroz, h. hauser, a. konig, e. groller, fast visual object contour non-photorealist volum rendering, graphic forum 20 (3) (2001) 452460. [17] h. hauser, l. mroz, g. i. bischi, m. e. groller, two-level volum ren- dering, ieee transact visual graphic 7 (3) (2001) 242252. [18] z. nagy, j. schneider, r. westermann, interact volum illustration, in: b. girod, h. niemann, h.-p. seidel, g. greiner, t. ertl (eds.), proceed- ing vision, model visual 2002, akademisch verlags- gesellschaft aka gmbh, berlin, 2002, pp. 497504. [19] x. yuan, b. chen, illustr surfac volume, in: o. deussen, c. d. hansen, d. a. keim, d. saup (eds.), proceed vissym04, joint ieee/eg symposium visual (konstanz, germany, 1921, 2004), eurograph association, 2004, pp. 916, 337. [20] e. g. s. bruckner, enhanc depth-percept flexibl volumetr halos, ieee transact visual graphic 13 (6) (2007) 13441351. [21] a. wenger, d. f. keefe, s. zhang, interact volum render thread structur multivalu scientif data sets, ieee transac- tion visual graphic 10 (6) (2004) 664672, member-david h. laidlaw. [22] d. ebert, p. rheingans, volum illustration: non-photorealist render volum models, in: t. ertl, b. hamann, a. varshnei (eds.), proceed- ing visual 2000, 2000, pp. 195202. [23] n. a. svakhine, d. s. ebert, interact volum illustr featur halos, in: pg 03: proceed 11th pacif confer com- puter graphic applications, ieee society, washington, dc, usa, 2003, p. 347. [24] f. ritter, c. hansen, v. dicken, o. konrad, b. preim, h.-o. peitgen, real- time illustr vascular structures, ieee transact visualiza- tion graphic 12 (5) (2006) 877884. [25] j. kruger, r. westermann, acceler techniqu gpu-bas volum rendering, in: proceed 14th ieee visual 2003, ieee society, washington, dc, usa, 2003, p. 38. [26] f. c. crow, summed-area tabl textur mapping, in: siggraph 84: proceed 11th annual confer graphic interact techniques, acm, new york, ny, usa, 1984, pp. 207 212. [27] p. viola, m. jones, rapid object detect boost cascad sim- ple features, vision pattern recognition, ieee societi confer 1 (2001) 511. [28] a. j. stewart, vicin shade enhanc percept volumetr data, in: proceed 14th ieee visual 2003, ieee com- puter society, washington, dc, usa, 2003, p. 47. [29] j. hensley, t. scheuermann, g. coombe, m. singh, a. lastra, fast summed-area tabl gener applications, in: eurograph 05, acm, acm press, 2005. [30] a. w. klein, p.-p. j. sloan, a. finkelstein, m. f. cohen, styliz video cubes, in: acm siggraph symposium animation, 2002, pp. 1522. [31] m. harris, s. sengupta, j. d. owens, parallel prefix sum (scan) cuda, in: h. nguyen (ed.), gpu gem 3, addison wesley, 2007. 15