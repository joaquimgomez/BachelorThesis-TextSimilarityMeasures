978-1-5090-3710-0/16/$31.00 2016 ieee 696 2016 9th intern congress imag signal processing, biomed engin informatics(cisp-bmei 2016) intuit volum render mobil devic yuchen xin*, hon-cheng wong** faculti inform technolog macau univers scienc technology, macao, china *email: **correspond author: abstractnowadays, mobil devices, virtual realiti aug- ment realiti technolog develop faster faster. varieti equipments, peopl longer pc handl tasks. tradit framework migrat new technolog areas, direct volum render them. paper, propos real-tim intuit volum data explor framework mobil devices. framework introduc direct-touch transfer function design method abl user pick voxel directli volum render image. one-pass shader, user interact volum render handl effici real-time. user need learn relat knowledg explor volum data render image. result, time cost transfer function design direct volum render significantli reduced. framework implement opengl es 3.0 glsl shader. experiment result advantag framework. researchers, gener users, easili obtain volum render imag volum data. keywords: direct volum rendering, mobil devices, trans- fer function design, volum data, direct touch, user interfac design i. introduct comput power mobil devic stronger, tradit task handl mobil devices. obviou area graphic mobil devices. usual peopl us vertex data repres polygon combin multipl polygon surfac object. surfac object reconstruct easili polygons, inner structur object invisible. time, 3d games, peopl concern structur insid object. however, field includ science, engineering, medicine, visual inner structur volum data important. therefore, direct volum render (dvr) [1], [2] develop visual volum data. mobil devic get ubiquitous, peopl need portabl equip solut dvr. comput time dvr expens polygon data, need implement dvr latest mobil devic new graphic technologies. order reveal inner structur volum data, user need design transfer function (tfs). task difficult gener user. transfer function kei compon give relationship volum data valu optic properties. design transfer functions, volum data repres color render volum render algorithm inner structur data. knowledg transfer function design, gener user provid map volum data. need solv user interact problem explor volum data mobil devices. previou work, propos transfer function design method design fashion [3]. framework provid better wai explor volum data tradit explor framework. brief, provid intuit user interact gener user reduc design cost transfer functions. gener user exploit method design transfer function minut knowledge. user click touch render screen iso-surfac mode, border object rendered; user view render result, confirm perspect structures. paper, implement framework [3] opengl es glsl shader mobil devices. mobil framework components, namely, rendering, histogram mapping, transfer function design. implement one-pass shader order allow work real-time. high dimens transfer function easili framework lose user interact intuition. user interfac transfer function design step user friendli non-profession user. remaind paper organ follows: re- late work introduc section ii. framework describ section iii. implement includ user interface, one-pass shader, detail given section iv. experiment result discuss provid section v. finally, conclud work state futur plan section vi. ii. relat work recent years, volum render implement mobil devic propos research [4]. [5], [6] base webgl, popular cross-platform graphic api base html5 opengl es 2.0. however, opengl es 697 2.0 support 2d texture, volum data textur input 2d textures. [7], compar perform opengl es metal api medic volum visual perform metal api better opengl es. point specif graphic api provid higher perform specif platforms, cross-platform schemes, cost time write programs. remot volum render visual framework develop [8]. work, render high perform machin stream render result mobil clients. kind technolog wide game content stream game remot control. perfect network good render machin bring real-tim experi volum data exploration. volum data exploration, relat transfer function design. consid transfer function combin [9] morph [10]. us transfer function manipul user interfac [11] design transfer functions. imag process algorithm avail transfer function texture, example, split transfer function imag normal cut color differ part transfer function imag [12]. user interaction, best wai design transfer function fashion [13]. gener user, familiar knowledg volum data, simpl better user interact method help explor volum data intuit way. iii. framework compon framework shown figur 1. rendering, histogram mapping, transfer function design. commonly, us intens gradient gener histogram volum data rendered. histogram textur map color transfer function textur correspond intens gradient. input volum data transfer function texture, volum data color explored. addition, one-pass shader multipl textur output support mobil devices. render result, intensity, gradient textur gener time store textur memories. user click touch render result texture, correspond intens gradient efficiently. a. render major perform problem mobil devic caus limit textur copi process. transfer graphic card memori cpu memory, higher perform achieved. one-pass shader import necessary. component, store main textur memori graphic fig. 2. architectur framework. render device. transfer function textur chang user interaction. one-pass shader provid abil output coordin directli pass. time textur transfer reduc significantly. moveover, general-purpos comput graphic process unit (gpus) valid devices, example, current smart mobil phones. gpu shader common select handl main process framework. perform advantag sampl textur shader provid possibl implement direct-touch one-pass scheme. b. histogram map histogram map import compon connect render transfer function design. histogram ( , ) coordin properti volum data gener directly. transfer function textur map histogram main problem framework. click touch user interact posit iso-surfac render result bring voxel posit click user. click touch voxel posit calcul intens gradient target voxel. map transfer function textur available. c. transfer function design transfer function design includ tasks, provid transfer functions, valid transfer functions. iso-surfac composit mode let user click surfac object feedback target voxel. histogram mapping, transfer function textur obtained. transfer function render component. finally, render result valid render mode. user satisfi render result, repeatedli oper compon base previou gener transfer function desir result reached. iv. implement a. architectur framework develop android opengl es. figur 2 show structur framework. xamarin 698 fig. 1. framework. mono c# provid featur share cross-platform code. save time port previou work mobil devices. opengl es glsl shader render volum data. moreover, opentk cross-platform toolkit opengl base xamarin c#. therefore, mobil devices, dvr build cross-platform components. compar platform, architectur advantag xamarin avail android, ios, mac on. perform xamarin experience. java, hand, default develop program languag android, good choic io mac. addition, opengl es 3.0 pretti matur api cross-platform graphic applic support mainstream platforms. therefore, easier implement framework io platform. webgl limit browser javascript performance, suppos perform better. cause, specif graphic api implement framework provid better performance. gener cross-platform cases, suppos opengl es api serial stabl development. b. graphic pipelin textur framework. face, render result, intensity, gradient textures. need render face textur store posit proxi polygon. draw render result texture, input face textur calcul rai cast direction. time write intens gradient correspond textures. final swap render result buffer screen. textur clear transpar color, otherwise, direct-touch design fail read outdat textures. user interfac (ui) compon place render view, effect render performance. c. user interact 1) user interface: user interfac design somewhat similar gener volum explor software. area shown figur 3: (a) control area; (b) render area. user touch render area directli design two-dimension (2d) transfer functions. calcul touch voxel intens gradient. color select appli transfer functions. therefore, user need concern actual 2d transfer function image. draw touch mode check box: default drag action screen rotat volum object. check box checked, switch draw mode. touch drag action appli color correspond posit transfer function texture. 2d transfer function check box: check box checked, enabl 2d transfer functions. composit mode radio group: composit modes: x-ray, mip, iso-surface, rendering. show textur radio group: textur shown: face, final, intensity, gradient textures. 699 fig. 3. user interface: (a) control area; (b) render area. pen color radio group: color select control panel. design better color selector specif brush color. controls: control implement control panel. example, rai cast step controlled, step bring higher render quality, fewer step bring better performance. pen size sharp controlled, 2d transfer function imag paint directly. complex system, implement controls. 2) direct-touch design: goal inner structur explor separ compon volum data. example, want neoplast tissu human body. volum data data set voxels. usual voxel type compon similar intens gradient values. us 2d transfer functions, mean histogram, area block histogram map similar intens gradient voxels. need separ specif compon volum data, need appli opac properti correspond area block histogram. transfer function textur save opac properti correspond histogram. goal direct-touch scheme pick specif voxel touch volum render result directly. tradit method pick polygon data suitabl volum data. need combin differ composit mode finish pick voxel task. list 1. direct-touch design void touchonrenderingresult(int x, int y, colorbrush brush) { int intens = getintensity(x, y); int gradient = getgradient(x, y); // assign color transfer function textur transferfunctiontexture[intensity][gradient] = brush.color; } d. shader opengl es 3.0 1) 3d texture: choos opengl es graphic component, especi 3.0 version. support three-dimension (3d) textur avail 3.0 version. implement dvr algorithm base 2d textur common, usual lower performance. 2) one-pass shader: glsl, us glfragcolor output singl textur glfragdata output multipl ones. featur differ opengl es 3.0, need us frame buffer object bind output textur ourselves. implement similar render pipelin previou work implement pc. import help mobil gpu reduc comput task improv performance. list 2. one-pass shader layout(loc = 0) vec4 fragmentcolor0; layout(loc = 1) vec4 fragmentcolor1; layout(loc = 2) vec4 fragmentcolor2; void fragmentshad main(void) { fragmentcolor0 = vec4(coloraccumulation); // output render result textur fragmentcolor1 = vec4(intensity); // output intens textur fragmentcolor2 = vec4(gradient); // output gradient textur } v. experiment result a. environ framework develop xamarin c# opengl es 3.0 huawei honor 6 kirin 920 cpu (a7 1.3ghz x 4, a15 1.7ghz x 4), 3gb memory, arm mali-t628mp4 gpu. optim system, plan work future. volum render textur size set 720 720 pixel gener mipmaps. step count rai 700 fig. 4. ct head (data size: 1283). insid volum data proxi polygon set 128 slice count. b. evalu cases: ct head (figur 4), foot (figur 5), engin (figur 6), lobster (figur 7), skull (figur 8), vessel (figur 9). composit mode ct head figure, paint iso-surfac mode valid render mode. volum data explor case cost 10 minutes. border inner structur volum data render results. result expected, perform improv acceler considerations. data explor level base time cost trial-and-error procedures. approach show advantag classifi volum data short period time. render perform framework x- ray, mip, iso-surfac mode 11 fps, same. render mode, heavi computation, render perform slower 2 fps. basic achiev real-tim dvr mobil devic reduc unnecessari frames. example, volum data static, need updat render fig. 5. foot (data size: 1283). fig. 6. engin (data size: 1283). fig. 7. lobster (data size: 1283). 701 fig. 8. skull (data size: 1283). fig. 9. vessel (data size: 1283). result frame. user moves, rotates, scale action volum data, render result updated. vi. conclus futur work conclusion, develop intuit volum render framework mobil devices. implement exploit 3d textur featur provid opengl es 3.0 one-pass shader, user interact volum render handl effici real-time. framework introduc direct-touch transfer function design method abl user pick voxel directli volum render image. user need learn relat knowledg explor volum data render image. result, time cost transfer function design direct volum render significantli reduced. experiment result advantag framework. fast gpu develop mobil devices, expect volum data explor effici future. however, disadvantag im- plementation. example, click touch transfer function design deviat vision. futur work, algorithm optimizations, updat control panel controllers, includ scheme transfer function design. acknowledg work support scienc technolog develop fund macao sar (019/2014/a1). thank volum data provid voreen ( refer [1] k. engel, m. hadwiger, j. kniss, c. rezk-salama, d. weiskopf. real-tim volum graphics. k peters, 2006. [2] c. l. bajaj, v. pascucci, d. r. schikore. contour spectrum. proceed ieee visual 97, page 167173, 1997. [3] y. xin, h.-c. wong, u.-h. wong. transfer function direct volum render fashion wysiwyd (what design). intern journal advanc comput technology, 5(15):8495, nov. 2013. [4] j. m. noguera j. r. jimenez. mobil volum rendering: past, present future. ieee transact visual graphics, 22(2):11641178, feb. 2016. [5] m. m. movania f. lin. ubiquit medic volum render mobil devices. proceed 2012 intern confer inform societi (i-society), page 9398, 2012. [6] m. m. movania, w. m. chiew, f. lin. on-sit volum render gpu-en devices. wireless person communications, 76(4):795 812, jun. 2014. [7] y. abdallah, a. abdelhamid, t. elarif, a.-b. m. salem. comparison opengl es metal api medic volum visualisation. proceed 2015 ieee seventh intern confer intellig comput inform system (icici 2015), page 156160, 2015. [8] r. unterhinninghofen, f. giesel, r. dillmann. medifram remot volum render visual framework. proceed 2011 annual intern confer ieee engin medicin biologi society, page 23682371, 2011. [9] l. zhou, m. schott, c. hansen. transfer function combinations. comput & graphics, 36(6):596606, jun. 2012. [10] h.-c. wong, u.-h. wong, z. tang. direct volum render transfer function morphing. proceed 7th intern confer information, commun signal processing, page 14, 2009. [11] j. kniss, g. kindlmann, c. hansen. interact volum render multi-dimension transfer function direct manipul wid- gets. proceed ieee visual 01, page 255262, 2001. [12] c. y. ip, a. varshney, j. jaja. hierarch explor volum multilevel segment intensity-gradi histograms. ieee transact visual graphics, 18(12):2355 2363, dec. 2012. [13] h. guo, n. mao, x. yuan. wysiwyg (what get) volum visualization. ieee transact visual graphics, 17(12):21062114, dec. 2011. 6