balanc bicycl share systems: variabl neighborhood search approach? marian rainer-harbach, petrina papazek, bin hu, gunther r. raidl?? institut graphic algorithm vienna univers technolog favoritenstra 911/1861, 1040 vienna, austria abstract. consid necessari redistribut bicycl public bicycl share system order avoid rental station run entir full. purpos propos gener variabl neighborhood search (vns) embed variabl neighborhood descent (vnd) exploit seri neighborhood structures. metaheurist gener candid rout vehicl visit unbalanc rental stations, number bike load unload stop effici deriv altern method base greedi heuristic, maximum flow calculation, linear programming, respectively. test perform instanc deriv real-world data indic vn base greedi heurist repres best compromis practice. gener vn yield good solut scale better larger instanc mix integ program approaches. 1 introduct larg number public bicycl share system (bsss) introduc citi world decade. system augment public transport frequent present attract green altern individu motor traffic. bss consist number station user rent return bike autom way. oper face import challeng regard custom satisfaction: differ factor topograph height, number bike rent returned, respectively, differ significantli stations. run mainten soon result complet or, equal worse, complet stations. oper need activ rebal move bicycl station fleet vehicles, e.g. car trailers. balanc bicycl share (bbss) problem aim find effici vehicl rout correspond bicycle-load instruct visit station order bring balanc far possible. work address problem variabl neighborhood search (vns) embed variabl neighborhood descent (vnd), exploit specif ? work support austrian research promot agenc (ffg), contract 831740. ?? author thank matthia prandtstetter, andrea rendl marku straub austrian institut technolog (ait) collabor project. design neighborhood structures. tour search vns/vnd, correspond load instruct effici deriv greedi approach, maximum flow calculation, linear programming. experi perform benchmark instanc deriv citybike, bss vienna, austria. indic high qualiti solut approach maximum flow base calcul load instruct perform best practice. 2 balanc bicycl share problem section formal bbss problem. currently, consid static problem variant user activ rebalanc process neglected. bss repres complet direct graph g0 = (v0,a0). node set v0 =v o consist node rental station v start end point o vehicl (garag overnight park places). arc (u,v) a0 associ travel time tu,v > 0 includ expect time park near v loading/unload bikes. let subgraph induc bike station v g = (v,a), a0. station v v associ capac cv 0, i.e., number avail park positions, number avail bike begin rebalanc process pv 0, target number avail bike rebalanc qv 0. fleet vehicl l = {1, . . . , |l|} avail transport bikes. vehicl l l capac zl > 0 bikes, total time budget tl finish rout (i.e., worker shift length), specif start destin node sl ,dl o, respectively. assum vehicl start finish rebalanc empty. solut consist parts. rout vehicl l l specifi order sequenc visit station rl = (r1l , . . . ,r l l ) r l v , = 1, . . . ,l l repres number stops. note station visit multipl time differ vehicles. start end point sl dl fix vehicl prepend appended, respectively, rout order obtain complet tours. second consist load unload instruct y+,il,v , y ,i l,v {0, . . . ,zl} l l, vv , i= 1, . . . ,l , specifi bike pick delivered, respectively, station v i-th stop vehicl l. note v 6= ril : y +,i l,v = y ,i l,v = 0. follow condit hold feasibl solution: number bike avail station v v need {0, . . . ,cv}. vehicl l l capac zl exceeded, tour time tl tl = tsl ,r1l + l i=2 tri1l ,r l + t r l l ,dl l > 0 tsl ,dl l = 0, (1) restrict time budget tl , l l. let av final number bike rebalanc station v v , av = pv + ll l i=1 ( y,il,v y +,i l,v ) . (2) object feasibl solut primarili minim deviat target number bike v = |avqv| station v v secondarili number loading/unload activ plu overal time requir routes, i.e., min bal vv v + load ll l i=1 ( y+,i l,ril + y,i l,ril ) +work ll tl , (3) bal, load,work 0 scale factor control rel import respect terms. simplif exploit differ approach consid mono- tonic level stations. let vpic = {v v | pv qv} denot pickup station vdel = {v v | pv < qv} denot deliveri stations. vehicl allow load bicycl pickup station unload deliveri stations. wai number bike decreas increas monotonically, order differ vehicl visit singl station matter. downside, forc mono- tonic exclud better solut feasibl restriction. 3 relat work recent bbss problem recogn combinatori optim problem oper research commun describ systemat solut approaches. however, address significantli differ problem variant direct comparison exist approach difficult. major exist work us mix integ program (mip), principl abl proven optim solut practic restrict small instances. chemla et al. [1] address static case vehicl achiev perfect balanc hard constraint. branch-and-cut approach util embed tabu search local improv incumb solutions. best knowledge, tabu search metaheurist approach appli rebalanc problem now. kei concept consid visit order rebalanc vehicl solut represent obtain load instruct auxiliari algorithm base maximum flow computation. techniqu search space reduc significantly. work extend idea gener problem definition. raviv et al. [2] propos mip models. object function model user dissatisfact tour length ignor number load operations. model test real-world data obtain velib (paris) 60 stations. result basic arc index model produc best lower bound given time limit, complex model offer flexibl respect requirements. benchimol et al. [3] assum balanc hard constraint, consid total tour length objective, focu approxim algorithm select special situations. finally, contardo et al. [4] investig complex dynam scenario rebalanc bike share use. propos arc-flow formul pattern-bas formul space-tim network model. solv heurist hybrid approach column gener bender decomposition. randomli creat instances, approach abl handl instanc 100 station 60 time periods, signific gap lower upper bound remain. work literatur focu strateg plan aspect bike share system (i.e., locat network design depend demands). however, aspect scope work. generally, bbss close relat divers variant classic vehicl rout problem (vrp). however, differ substanti ways: importantly, station visit multipl times, differ vehicles. consequently, bbss describ capacit singl commod split pickup deliveri vrp. 4 greedi construct heurist effici gener meaning initi solution, emploi construct heurist base greedi principles. procedur assum monoton describ sec- tion 2. solut built iter creat tour vehicl follow local best successor strategy. station partial tour, determin set f v feasibl successor stations. station balanc reach exceed shift length, i.e., time left visit station destin node afterwards. candid station v f , calcul maximum bicycl pick deliv v = { min(avqv,zlbl) v f vpic, min(qvav,bl) v f vdel, (4) bl repres final load vehicl l av final number bike station v current consid partial tour. l = 0 initi bl = 0 av = pv. assum bike allow remain vehicl return depot. therefore, addit correct necessari pickup stations: determin v f vpic visit v remain time budget allow vehicl deliv bl +1 bicycl stations, i.e., bike vehicl current load plu pick v. case, visit v useless bike final pick there. purpose, estim number deliver bike bdelv visit v iter appli exact greedi heurist restrict deliveri station only. stop extend delivery-onli rout bdelv bl + v (i.e., shown bicycl pick v deliv later) time budget tl exceeded. then, pickup station v bdelv < bl +1 remov set f , number bike pick possibl reduc others: vmin(v,bdelv bl), v f vpic. (5) now, candid station v f evalu ratio v/tu,v, tu,v travel time vehicl locat u station v; consid balanc gain time unit. node v f highest ratio append tour vehicl l; ti broken randomly. load instruct set follows: y+,ll,v = v y ,l l,v = 0 v vpic, (6) y+,ll,v = 0 y ,l l,v = v v vdel. (7) next, bl av updat accordingli procedur continu extension, evalu station f scratch, feasibl extens remains. 5 variabl neighborhood search section vn approach. us gener vn scheme embed vnd local improv describ [5]. 5.1 solut represent deriv load instruct concern vn us incomplet solut represent store vehicl l l rout rl = (r1l , . . . ,r l l ) only. correspond load instruct y+,il,v , y ,i l,v , l l, v v, = 1, . . . ,l deriv creat set tour following, altern procedures, differ asset drawbacks. greedi heurist (gh): simplest fastest approach follow pure greedi strategi construct heurist assum monotonicity. tour, station consid order visit load instruct comput describ section 4. restrict monotonicity, gh guarante optim load instructions. example, benefici retain bike vehicl stop station v order satisfi follow deliveri station v visit second time satisfi then. maximum flow approach (mf): assum monotonicity, abl deriv optim load instruct effici maximum flow comput specif defin flow network. approach inspir [1] extend method multipl vehicl consider balanc object function. defin graph gfm = (vfm,afm) node set vfm = { ,}vpicvdelvl sourc target node flow, respectively, vl = ll vl vl = {vil | l l, = 1 . . . ,l} repres stop routes. arc set afm = alapicadela consist of: = {( ,v) | v vpic} capac pvqv. = {(v,) | v vdel} capac qv pv. apic = {(v,vil) | vil vl, v = ril , v vpic}, i.e., pickup node vpic connect node repres stop station rout l l. arc capac limited. adel = {(vil ,v) | vil vl, v = ril , v vdel}, i.e., node repres stop deliveri station connect correspond deliveri node vdel. arc capac limited. al = {(vi1l ,vil) | vil vl, > 1}, i.e., node repres stop tour connect accord tour. arc capac zl . d b c a11 b21 a31 c41 d12 a22 b32 pa qa pd qd qb pb qc pc z1 z1 z1 z2 z2 vpic vdel tour r1 tour r2 fig. 1. exemplari flow network consid monoton tour r1 = (a,b,a,c) r2 = (d,a,b) vpic = {a,d} vdel = {b,c}. exemplari network shown figur 1. calcul maximum ( ,)-flow directli yield optim load instruct y+,il,v , y ,i l,v flow correspond arc apic adel, respectively. implementation, effici push-relabel method cherkasski goldberg [6] flow computation. linear program approach (lp): finally, abl determin optim load instruct general, necessarili monoton case solv minimum cost flow problem differ defin network linear programming. main differ order vehicl stop (at possibl stations) considered. bike buffer station directli transfer vehicl meet. let t(ril) denot absolut time vehicl l make i-th stop station r l . defin multi-graph gf = (vf ,af) node set vf = { ,}vt vt = {v j | vil vl : t(ril) = j}, i.e., sourc target node node v j station v time j vehicl arriv v. furthermor v = {v jmin vt | jmin = min{ j | v j vt}}, i.e., node repres visit station routes, v = {v jmax vt | jmax = max{ j | v j vt}}, i.e., node repres visit stations. arc set af = arav consist of: = {( ,v j) | v j v first} capac pv. = {(v j,) | v j v last} capac qv. ar = ll ar,l ar,l = {(u j ,v j) | u = ri1l , v = ril , j = t(r i1 l ), j = t(r l), = 2, . . . ,l}, l l, i.e., arc repres flow induc vehicles. ca- paciti zl . note multipl arc exist node (or more) vehicl leav arriv station exactli times. av = vv av av = {(v j1 ,v j2), . . . ,(v jmax1 ,v jmax)}, (v j1 , . . . ,v jmax) se- quenc node {v j vt} sort accord increas j. capac cv. exampl network given figur 2. now, simpl maximum flow calcul gener yield optim feasibl load instructions. instead, solv minimum cost flow problem follow lp, us flow variabl fu,v, (u,v) af. predl(v j) vt denot predecessor a1 d4 c7 a5 pa qb a9 b3 b11pb pc pd qa qc qd ca ca cb z1 z1 z1 z2 z2 tour r1 tour r2 fig. 2. exemplari flow network gener case tour r1 = (a,b,a,c) r2 = (d,a,b). node v j rout vehicl l, i.e., predl(v j) = u j u = vi1l , j = t(ri1l ), succl(v j) vt successor, i.e., succl(v j) = w j w = vi+1l , j = t(ri+1l ). min bal vv v + load ll l i=1 ( y+,i l,ril + y,i l,ril ) (8) subject (u,v j )a av fu,v j + ll (u,v j )ar,l fu,v j = (v j ,w)aav fv j ,w + ll (v j ,w)ar,l fv j ,w v j vt (9) y+,il,v y ,i l,v = fv j ,succl (v j ) l l, = 1, v = ril , j = t(ril) fv j ,succl (v j ) fpredl (v j ),v j l l, = 2, . . . ,l 1,v = r l , j = t(r l) fpredl (v j ),v j l l, = l , v = r l , j = t(r l) (10) f ,v j = pv ( ,v j) (11) fv j , qv v (v j ,) (12) qv fv j , v (v j ,) (13) 0 fv j , cv (v j ,) (14) 0 f u j ,v j zl l l, (u j ,v j) ar,l (15) 0 f v j ,v j cv (v j ,v j) av (16) v 0 (v j ,) (17) y+,il,v {0, . . . ,zl} l l, v v, = 1, . . . ,l (18) y,il,v {0, . . . ,zl} l l, v v, = 1, . . . ,l (19) object function (8) directli deriv main object (3). equa- tion (9) flow conserv equalities, equat (10) link load instruct variabl flows. flow arc ( ,v j) fix station initi number bike pv (11). capacit unrestrict flow network capac integer, lp total unimodular correspond polytop extrem point integer. solv lp common lp solver (or specifi- calli network simplex algorithm), obtain optim integr valu load instructions. 5.2 vnd vn neighborhood structur us classic neighborhood structur successfulli appli vrp new structur exploit specif bbss. concern classic neighborhood structures, base design experi [7]. vnd neighborhoods: follow neighborhood search best improve- ment fashion appli given, static order. preliminari experi dynam reorder strategi brought signific advantages. creat candid tour increment check feasibl respect time budget infeas solut discarded. feasibl solut deriv load instruct method section 5.1 remov obsolet node load actions. remov station (rem-vnd): neighborhood consid singl station remov avoid unnecessari visits. insert unbalanc station (ins-u): neighborhood includ feasibl solut unbalanc station insert possibl position. intra-rout 2-opt (2-opt): classic 2-opt neighborhood travel salesman problem, appli individu route. replac station (repl): here, solut station replac different, unbalanc station included. intra or-opt (or-opt): neighborhood consid solut sequenc one, two, consecut station move place route. 2-opt* inter-rout exchang (2-opt*): classic neighborhood consid fea- sibl exchang arbitrarili long end segment routes. intra-rout 3-opt (3-opt): neighborhood resembl restrict form well- known 3-opt neighborhood, individu appli route. partit rout nonempti subsequ rl =(a,b,c), rout (b,a,c) (a,c,b) considered. effect enumer scheme exclud solut previou neighborhoods. vn neighborhoods: diversification, shake procedur select solut ran- domli follow type vn neighborhoods, parameter , yield total 24 individu neighborhoods. process, creat rout violat time budget repair remov station end. sequenc (mv-seq): select sequenc min( ,l) station random, delet it, reinsert random posit differ route. origin rout contain stations, rout insert target route. sourc target rout select randomly. {1, . . . ,5,l}. exchang sequenc (ex-seq): exchang randomli select segment length min( ,l) randomli chosen routes. {1, . . . ,5,l}. remov station (rem-vns): consid station rout remov station probabl {10%,14%,18%,22%,26%,30%}. destroi recreat (d&r): select random posit randomli chosen route, remov node posit end, recreat new end segment appli random version greedi construct heuristic. randomiza- tion typic grasp-lik wai [8] threshold paramet set {0%,4%,8%,12%,16%,20%}. 6 comput result test vn algorithm set instanc base real-world data provid citybik vienna1 run bike-shar 92 stations. gener follows: travel time tu,v, (u,v) a0 real averag drive time plu estim park vehicl loading/unload bike base experi drivers. number current avail bike pv station v v taken snapshot system. target valu qv assum 50% station capacity. order perfect balanc theoret possibl have time, vv pv = vv qv hold. establish appli small chang pv randomli chosen stations. deriv instanc |v | {10,20,30,60,90} station choos randomli pool 92 stations. addit consid common depot (one remain stations) start end point vehicles. assum homogen fleet |l| {1,2,3,5} vehicl capac zl = 20, l l. total time budget vehicl set tl {2h,4h,8h}. instanc set us uniqu combin |v |, |l|, tl contain 30 instances, result total 1800 instances2. scale factor object function set bal = 1, load = work = 1 10000 . factors, improv balanc greater impact object valu reduc tour length number load operations. algorithm implement c++ gcc 4.6 test run perform singl core intel xeon e5540 machin 2.53 ghz 3 gb ram core. run termin improv achiev 5000 vn iter cpu time hour. solv lp-base approach determin load instruct cplex 12.4 default settings. addit vn algorithm, implement mix integ program (mip) model similar sequence-index formul [2] adapt problem formulation. model abl consid depend vehicl restrict monoton case. cplex 12.4 default set cpu-tim limit hour try solv instanc model. addition, investig second mip model base time- index formul [2] gener case. experi indic approach 1 2 benchmark instances: instanc tabl 1. result mip approach vn consid variant deriv load instructions. instanc set contain 30 instances. runtim seconds. instanc s mip vn gh vn mf vn lp |v | |l| t ub lb ttot obj sd ttot obj sd ttot obj sd ttot 10 1 120 28.3477 28.3477 4 28.3477 9.9111 1 28.3477 9.9111 2 28.3477 9.9111 212 10 1 240 4.2942 0.0424 3600 4.2941 3.5524 5 4.2941 3.5524 10 4.2941 3.5524 1332 10 1 480 0.0320 0.0276 3600 0.0317 0.0033 8 0.0317 0.0033 17 0.0317 0.0033 2042 10 2 120 9.8269 9.4768 911 10.0266 6.3028 2 9.9601 6.2475 3 9.9600 6.2475 459 10 2 240 0.0340 0.0322 856 0.0339 0.0043 5 0.0339 0.0043 10 0.0339 0.0043 1441 10 2 480 0.0317 0.0313 1245 0.0317 0.0033 7 0.0317 0.0033 15 0.0317 0.0033 1797 20 2 120 55.8294 26.9012 3600 55.0962 13.2321 4 55.3628 13.3731 8 55.3628 13.3731 1097 20 2 240 19.7884 0.0383 3600 4.3908 3.7546 29 4.2575 3.7276 58 4.2576 3.7275 3600 20 2 480 1.8906 0.0403 3600 0.0614 0.0061 51 0.0615 0.0061 142 0.0614 0.0061 3600 20 3 120 37.3759 1.4777 3600 31.9096 11.9065 7 31.7763 11.8112 13 31.8430 11.8650 1727 20 3 240 6.2083 0.0401 3600 0.0651 0.0060 31 0.0650 0.0060 65 0.0652 0.0060 3600 20 3 480 13.4191 0.0316 3600 0.0616 0.0060 55 0.0614 0.0061 114 0.0614 0.0061 3600 30 2 120 106.9631 56.3908 3600 104.7633 17.7686 6 104.7633 17.7686 12 104.7633 17.7142 1539 30 2 240 74.9886 0.0487 3600 34.7941 10.8729 48 34.6608 10.4812 109 35.1940 10.9637 3600 30 2 480 69.8069 0.0432 3600 0.0926 0.0062 186 0.0925 0.0061 491 0.0928 0.0061 3600 30 3 120 90.4419 16.6454 3600 78.0441 17.2764 10 78.1773 17.0832 21 78.5771 17.2677 2521 30 3 240 61.6715 0.0461 3600 7.1526 4.7495 86 7.1523 4.2272 191 7.6186 4.3543 3600 30 3 480 175.4000 0.0015 3600 0.0925 0.0061 156 0.0925 0.0061 399 0.0928 0.0062 3600 60 3 120 274.3101 157.7350 3600 253.9795 27.8187 20 253.8462 27.6739 45 254.3794 27.3265 3600 60 3 240 370.2000 0.0000 3600 126.7616 20.5332 260 126.8282 20.9660 521 129.2945 20.1347 3600 60 3 480 6.1766 4.1036 1835 6.7758 4.1422 3600 10.1071 5.0800 3601 60 5 120 289.3111 34.9784 3600 197.7411 28.0192 54 196.6749 29.4401 99 197.0747 28.7557 3600 60 5 240 370.2000 0.0000 3600 41.1497 12.6579 725 41.6161 13.3489 1556 47.2145 13.0440 3600 60 5 480 0.1901 0.0090 2006 0.1902 0.0087 3600 0.1938 0.0087 3601 90 3 120 492.2319 290.8990 3600 441.5141 21.0737 35 441.6473 20.8266 82 441.4474 20.8250 3600 90 3 240 566.2667 0.0000 3600 295.1644 15.6493 425 294.5646 16.1776 985 297.3642 15.4610 3601 90 3 480 100.5887 9.6476 3600 101.1221 9.9480 3600 110.5868 9.4745 3601 90 5 120 566.2667 0.0000 3600 375.7435 19.5815 83 376.1432 20.6335 169 376.2767 20.5456 3600 90 5 240 174.9566 13.5297 1411 174.3566 12.7181 3304 184.8218 12.6962 3601 90 5 480 1.2863 1.5549 3600 1.6855 1.6746 3600 9.0772 3.5834 3601 unfortun led wors result higher complex model requir discret station visit times. omit result here. document gener suitabl vn compar mip approach, aim analyz impact altern procedur deriv load instructions. tabl 1 list averag result 30 instanc set (out 60) appear relev practice. complet result avail download benchmark instances. mip approach tabl show mean upper bound ub, mean lower bound lb, median total run time ttot case upper lower bound obtain time limit. column group tabl result vn variant gh, mf lp appli obtain load instructions, respectively. variant mean object valu final solut obj, standard deviat sd, median total run time ttot listed. row best mean result print bold. gener clearli observ pure mip approach abl solv small instanc optim time limit. larg gap lower upper bound scale badli increas number vehicl especi longer time budgets. larg instanc cplex trivial solut vehicl stai depot, solut all. vn variants, appli gh clearli fastest. mf in- creas run time averag 120%. vn lp took 110 time longer vn mf averag run termin time limit. concern solut quality, observ gh abl obtain result similar mf. variant better final solut lower object valu respect variant 21% runs. remain 58% approach obtain equal good results. object valu averag slightli better mf-variant. general, however, absolut qualiti differ- enc small. also, wilcoxon signed-rank test signific differ solut qualiti gh mf. mf run termin time limit largest 8% instances. compar run termin time limit, averag object valu favor mf. however, comparison improv gh said statist significant. principl vn lp abl obtain better result variant advantag restrict monotonicity. substanti higher comput overhead, however, 60% run termin reason converg achiev exceed time limit hour. therefore, lp-approach typic led significantli wors results, particularli larger instances. lp-variant obtain better solut 10%, mf-variant outperform lp-variant 36% runs. wilcoxon signed-rank test confirm assumpt vn mf perform better w.r.t. solut qualiti low error probabl 0.01%. figur 3 show typic rel success rate vnd neighborhood larg instance. vns, shake neighborhood similar rel success rates, omit correspond chart. result neighborhood structur contribut overal performance. rem-vnd ins-u 2-opt repl or-opt 2-opt* 3-opt 0% 5% 10% 15% 20% 25% 30% 35% 40% 45% fig. 3. rel success rate vnd neighborhood instanc |v | = 90, |l| = 5, t = 480 mf-variant. 7 conclus futur work present vn metaheurist embed vnd solv balanc bicycl share problem. main ingredi meaning greedi construct heurist gener initi solutions, neighborhood structur deriv vrps, new problem-specif neighborhood structures, altern deriv optim load instruct creat candid tours. experiment result instanc deriv real-world data vn gener perform scale better mip approaches. concern deriv load instructions, greedi method fastest deliv solut similar qualiti complex maximum flow base approach. lp-base method advantag abl optim load instruct general, necessarili monoton case, unfortun ad flexibl compens typic larger comput effort consid reason runtim limits. thus, fast greedi method best compromis practice. futur work, intend model time need load bike station accur take number load action account instead assum averag dwell times. practic relev extens allow vehicl start return nonempty. finally, want turn dynam scenario, level station chang balanc process. stochast aspect need considered. least, hybrid vn mip approaches, e.g., includ mip-bas larg neighborhood search, appear promising. refer 1. chemla, d., meunier, f., calvo, r.w.: bike share systems: solv static rebalanc problem. appear discret optim (2012) 2. raviv, t., tzur, m., forma, i.a.: static reposit bike-shar system: model solut approaches. appear euro journal transport logist (2012) 3. benchimol, m., benchimol, p., chappert, b., la taille, a., laroche, f., meunier, f., robinet, l.: balanc station self servic bike hire system. rairo oper research 45(1) (2011) 3761 4. contardo, c., morency, c., rousseau, l.m.: balanc dynam public bike-shar system. technic report cirrelt-2012-09, cirrelt, montreal, canada (2012) submit transport science. 5. mladenovic, n., hansen, p.: variabl neighborhood search. comput oper research 24(11) (1997) 10971100 6. cherkassky, b.v., goldberg, a.v.: implement push-relabel method maximum flow problem. algorithmica 19(4) (1997) 390410 7. pirkwieser, s., raidl, g.r.: variabl neighborhood search period vehicl rout problem time windows. prodhon, c., et al., eds.: proceed 9th eu/meet metaheurist logist vehicl routing, troyes, franc (2008) 8. resende, m., ribeiro, c.: greedi random adapt search procedures. glover, f., kochenberger, g., eds.: handbook metaheuristics. kluwer academ publish (2003) 219249