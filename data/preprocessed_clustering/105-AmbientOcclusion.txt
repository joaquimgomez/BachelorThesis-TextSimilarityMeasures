screen-spac ambient occlus a-buff techniqu fabian bauer tu darmstadt darmstadt, germani martin knuth fraunhof igd darmstadt, germani arjan kuijper fraunhof igd darmstadt, germani jan bender tu darmstadt darmstadt, germani abstractcomput ambient occlus screen-spac (ssao) common techniqu real-tim render appli- cation us raster process 3d triangl data. however, critic problem emerg screen- space lack inform occlud geometri pass depth test resid g-buffer. occlud fragment impact proximity-bas shadow outcom ambient occlus pass. decreas imag qualiti prevent applic ssao multipl layer transpar surfac shadow contribut depend opacity. propos novel approach ssao concept take advantag per-pixel fragment list store multipl geometr layer scene g-buffer, allow order independ transpar (oit) combin high quality, opacity-bas ambient occlus (oitao). a- buffer concept enhanc overal ambient occlus qualiti provid stabl result low-frequ detail dynam scenes. furthermore, flexibl compression-bas optim strategi introduc improv perform maintain high qualiti results. keywords-rasterization; screen-spac ambient occlusion; or- der independ transparency; real-tim render i. introduct tradit raster render us depth buffer discard occlud fragment render main framebuffer. mean screen-spac effect appli visibl layer geometri limit applic defer algorithms. however, a-buff introduc carpent [1] allow store access raster fragment gpu memory. enabl solv order independ transpar (oit) problem per-frag level gpu. ambient occlus (ao) screen-spac benefit multipl fragment layers: time ambient occlus term comput screen-spac mere appli scene assum opaqu geometri only, disregard special consider impos transluc materials. amd firepro sdk [2] implement approach. however, ao comput layer lead visibl artifact shown figur 3. ambient occlus opaqu geometri benefit depth-complet scene represent compens figur 1. multilay ambient occlus enabl transpar geometri base materi opac figur 2. error result singl layer ssao: occlud fragment (left), triangl outsid camera frustum (middle) graze angl (right) occlusion-bas artifact common screen-spac illus- trate figur 2. paper present novel approach includ multipl geometri layer produc coher plausibl ambient occlus result includ transpar semi-transpar surfac demonstr figur 1. further- more, differ implement a-buff strategi test detail overview imag qualiti perform outcome. ii. relat work order independ transpar raster render classic problem graphics. modifi blend function allow fast handl transpar [3] introduc scene limitations. therefore, numer so- lution develop enabl color correct alpha blend arbitrari geometri fragment level. myer et al. [4] provid fast constrict oit solution: limit set layer store subpixel multisampl textur stencil routing. flexibl approach present bavoil et al. [5] call depth peeling. c 2013 ieee publish ieee societi figur 3. wrongli accumul color transpar object (right) car interior shadowed, compar opac (left) handl singl layer depth only. us multipass render approach discard layer previou pass depth comparisons. final imag creat blend singl layer lead qualiti oit. drawback high (texture) memori consumpt costli multipass rendering. optim exist target problem reduc number pass requir [6], ad sort method [7] constrict comput import part scene [8]. amd present novel method [9] solv oit maintain per-pixel link list (ppll) textur memori append/consum buffers. wai render fragment store new memori locat creat unsort list hold inform necessari oit singl pass. extens method intel demonstr approxim oit call adapt transpar [10]. requir fragment sorting, ap- proach achiev higher perform expens imag qualiti transmitt function. screen-spac ambient occlus cover method algorithm solv occlus integr [11] screen- space textur sampling. discuss crytek [12], video game crysis. basically, ao comput depth inform contain insid render frame, treat screen inform height- field. numer derivatives, extens attribut improv quality, perform us- ability. shanmugam arikan [13] extend techniqu incorpor distant occluders. horizon-bas ambient occlus (hbao) bavoil et al. [14] improv shadow qualiti rai march image-space. screen- space direct occlus (ssdo) [15] assum gener shadow direct allow color bleed singl light bounce. cover larger sampl kernel maintain high performance, huang et al. [16] pre- sent multiresolut algorithm (mssao) expens textur memory. screen depth current view hide caviti import ao. [17] vardi et al. tackl problem shadow buffer inform present light scene conjunct fuse ssao comput singl image. approach take account scene voxel represent perform occlus com- putations. thiedemann et al. [18] us capabl perform fast global illumin computations. drawback high memori necessari store voxel represent addit time need geometri voxelization. volumetr approach present mcguir [19]: influenc self occlus repres polygon volum deriv scene geometry. techniqu give good result scene complex fill-rat dependent. volum render low-frequ light volumetr data achiev pre-comput radianc transfer (prt) re- comput time dynam scenes. fast wai re-comput util gpu present tobia ritschel [20]. fulli shadow region avoid reli local ambient occlus approxim shown hernel et al. [21]. approach ropinski et al. [22] indirect illumin achiev captur possibl light interact volum structur scene preprocess step. multilay ambient occlus bavoil et al. [23] present approach enabl hbao calcul opaqu geometri check multipl depth layers. basic idea appli depth peel scene suffici layer avail textur memory. multilay concept alongsid multipl camera angl ssdo cover hidden regions. however, approach allow popul a-buff singl geometri pass spars data structur improv perform memori requirements. go step extend principl allow transpar surfac cast receiv ao shadow base respect materi opacity. iii. concept ambient occlus opaqu geometri consid geometri layer. however, resolv oit ao, shadow factor comput layer transpar blend oper applied. mean ao result avail resolv pass fragment retrieved, sort blended. blend oper dissolv execut sort fragment ao darken fragment color result differ final blend color. consequ ao insepar mix color transpar geometri prevent process like bi- later filtering. moreover, oit resolv fullscreen resolution, ao factor surfac determin dimens well, accept perform concept ssao algorithm. sacrif color correct sake flexibl possibl separ ao calcul oit resolv stage. ao result figur 4. exampl integr separ ao layer merg process. stripe shade stanford happi buddha mesh (right) reveal nearli differ result. comput blend 2d textur materi opac similarli transpar color blending. exampl separ color-correct integr layer merg scheme given figur 4. seen, color differ approach low neglected. aspect ao respect oit integra- tion alpha-bas opac valu ao formula. geometri high transpar shadow nearbi geometri intens fulli opaqu objects. allow semi-transpar mesh contribut ao term scene depend materi attributes. correctli merg oit ao offer multipl wai transpar geometri interpreted. triangl mesh compos consid frontfac backfac depend order vertic buffer. backfac opaqu object visibl allow us backfac cull techniqu improv performance. hence, triangl solid volum object. possibl transpar hull describ ad polygon interior geometri reli backfac data. hand, high perform applic like video game common interpret triangl data layer describ hull object. differ interpret trian- gle geometri transpar surfac requir distinct transpar color accumul ao gathering. solid volum ao formula appli intro- duce sampl alpha valu weight: ao(p) = p v (p, )| n|d, (1) p current posit correspond normal n sampl hemisphere. visibl function v return valu 0 1 describ occlus p direct . p opac valu p sampl point direct respectively. geometri interpret object, figur 5. opacity-bas ao sampl point p normal n camera-depend weight exterior (green) interior (red) ao addit factor considered. ao usual comput sampl hemispher orient normal n current point p. case transpar triangl actual consist side make hull. mean ao integr resolv times: usual appli hemispher normal n p hemispher orient n shown figur 5. matter fact sampl occur complet sphere take interior occlus aoi exterior occlus aoe point account. occlus factor appli point accord alpha valu surface: ao(p) = paoe(p) + (1 p)aoi(p). (2) factor camera position: weight aoi aoe depend angl camera view vector normal. camera view backface, weight aoi aoe switch allow correct blend ao valu current image. introduc special weight function assur correct color mix ao term depend transluc layer: w (p) = { p p frontfac 1 p p backfac (3) ao(p) = w (p)aoe(p) + (1w (p))aoi(p), (4) p describ opac valu fragment color p. a. ambient occlus formula usual fragment entri store color alpha opac depth. ao comput visibl fragment screen entri list store normal face well. appli defer textur buffers, ssao algorithm usual check pixel neighborhood screen coordin sampl fragment data. addition account transpar surfac sampl posit check entri oit fragment buffer. screen coordin cover transpar fragments, fetch buffer decompos necessari spatial components. layer contribut ao term sampl maintain uniform distribut sampl direct maximum shadow valu gather fragment used. process comput ao given posit describ algorithm 1. algorithm 1 multilay ambient occlus comput given view-spac posit p fragment list 1: procedur computessao(p) 2: aofin 0 3: c 0 4: 5: s getscreencoordinate(p + /p.z) 6: fraglist abuffer.fetch(s) 7: ao 0 8: f fraglist 9: ao max(ao,getao(p, f)) 10: aofin aofin + ao 11: c c+ 1 12: return aofinal/c common ssao techniqu normal sampl direct scale accord current view- space depth p.z current posit p. function getao calcul ao term given posit p respect sampl layer fragment f . mode oper depend ao algorithm choice. screen coordin posit p cover transpar fragments, special care taken: similarli resolv oit fragment list current posit p retriev sort depth. respect occlus result calcul blend accord alpha valu fragment. finally, blend result store 2d render target allow processing. increas ao qualiti opaqu geometri fragment list concept appli similar fashion: case usual store sole linear depth valu fragment a-buffer. shadow factor comput layer depth, occlus sampl perform layer travers fragment list sampl posit (see algorithm 1). b. list compress fetch process multipl texel sampl time consuming. order speed ambient occlus sampl stage, optim strategi similar intel adapt transpar techniqu [10] applied. basic idea compress oit fragment list discard fragment unlik contribut ambient shadow term scene. compress perform oit resolv stage fragment list retrieved, sort blended. fetch list element insert fix size arrai entri a[i] index consist depth a[i]z opac a[i] fragment. length m arrai defin maximum allow number node qualiti compression. arrai initi depth valu 1. insert fragment f look index a[i]z < fz < a[i+1]z . assur sort order nodes. addit oit list entry, fragment opaqu geometri consid insert arrai opac 1. soon insert function call m times, list compress elimin node index retriev follow way: = min j (a[j](1.0 a[j]z)), (5) 0 j < m. criterion make sure fragment high opac favor fragment low depth prefer oppos resid greater distance. search index option execut half arrai preserv fragment data closer camera. criteria fragment close camera and/or high opac valu favor highli transpar and/or distant fragment dropped. result arrai contain relev occlus inform store 2d buffer. exampl textur format rgb32ui store nodes. criteria above, normal com- press store 2d textur well. conjunct depth opac textur inform reconstruct import list element ao sampl conduct ssao pass. texel fetch demand sampl process reli compress depth opac inform m list element check occlus shadowing. summary, origin fragment list buffer need blend transpar color queri ambient occlus calculations. reduc textur buffer access singl texel fetch sampl instead repeat queri induc fragment list traversal, memori access coher cach util ambient occlus pass significantli improved. iv. implement approach describ implement opengl differ fragment list memori ar- chitectur test perform memori requirements. travers element textur buffer expen- sive. modern gpu improv perform textur caches. cach work neighbor texel direct impli buffer data type one, dimensions. thus, neighbor access faster random access. wise implement effici memori layout fact. list element buffer typic consist essenti piec inform encod 32-bit unsign integers: four-compon color fragment alpha channel describ opac layer. singl float point depth valu sort criterion resolv fragment list. fragment normal view-spac ao compu- tation. geometri normal negat accord camera position, follow figur 5. sort blend need oit ao pass, effici store sort fragment list transpar resolved. ao pass abl blend shadow result fetch list entri arrangements. a. per-pixel link list ppll implement base work yang et al. [9] singl geometri pass store raster fragment textur memory. follow fullscreen pass fragment pool queri list entri current pixel posit enabl sort blend operations. impos memori architectur impli heavi cach thrash list element scatter textur memory. b. linear list approach base opengl insight chapter knowl et al. [24] store element list nearbi memori slot improv texel cach usage. oit author observ perform increas linear list buffer manag compar basic link list approach. however, oitao reli buffer fetches, benefit textur cach promis- ing. downsid implement expens prefix sum comput fact transpar object render twice count store fragments. c. texture3d implement oitao reli three- dimension textur repres fragment list pixel. singl geometri pass store fragment textur posit correspond pixel position, subsequ fullscreen pass sort blend lists. texel cach fragment appli dimens cost maxim memori requirements. v. result test imag qualiti perform opacity- base ao differ ssao algorithm implement extended: simpl singl pass approach util poisson disk sampl pattern check pixel neighborhood multiresolut approach base implement hoang et al. [16]. figur 6. imag qualiti comparison differ compress criteria brute forc method. oit ao calcul reli heavi textur imag operations. differ imag sampler data access method retriev texel gpu. access sampler type call fastpath, imag type queri completepath adopt amd app sdk termi- nologi [25]. enabl us load store oper atom methods, completepath abl advantag texel cach case basic sampler read calls. present approach heavili reli opengl imag type functionality, loss perform considered. follow result obtain amd radeon 7850 gpu default clock speed 1gb video memory. ambient occlus comput viewport resolut 1280 720 16 depth layers. a. opacity-bas ambient occlus oitao test scene consist stanford dragon mesh 100,000 triangl exhaust multipl depth lay- er dens triangl structure. color distanc integr approach neglig low, follow test consid oitao approach implement separ blend allow flexibl ao computations. appli compress fragment list resolv- ing transpar reduc qualiti take import fragment account. medium workload scene node usual reproduc brute- forc result semi-transpar mesh demonstr figur 8. fact highli transpar layer drop nearli opaqu layer obscur visibl remain layers. however, heavi workload layer potenti high shadow factor discard result visibl differ shown figur 7. addition dynam scene suffer pop artifacts: move geometri chang materi opac requir import layer present discard list. therefore, precis ao calcul reduc result visibl inconsistencies. case coher result achiev preserv node compress list. compress criterion present figur 7. result brute forc (left) compression-bas (right) oitao heavi workload. pixel cover transpar ge- ometri (up 32 layers) requir 1084.72 ms 107.42 ms frame respectively. figur 8. imag distanc comparison (right) brute forc (left) approxim (middle) oitao semi-transpar geometri section iii-b appli fragment arrai ao inaccuraci obscur alpha blend oper execut front. figur 6 illustr qualiti improv appli list element preserv (column c) compar naiv compress scheme brute forc method (column e). comparison shows, preserv half list improv qualiti area cover highli transpar sur- face close camera. disregard opac simpli keep closest m layer list result miss shadow inform geometri (column a). appli opacity- depth-bas compress criteria (column b) arrai result miss occlus inform dragon mesh cast receiv shadows. altern expens perform uncompress fragment list calcul blend ao sampl reli compress list (column d). complex scene improv qualiti produc ao map close brute forc result ao pass requir 30% time. generally, perform ssao algorithm heavili reli number passes, sampl taken correspond sampl kernel distanc image- space. singl pass poisson oitao approach us 16 uni- formli distribut sampl direct depth-depend length. perform ppll, texture3d, linear list (ll) compression-bas implement compar dual depth peel (ddp) approach bavoil et al. [23] tabl i. predict texture3d approach abl best stage ddp ppll ll tex3d compr. clear 0.87 0.20 0.01 0.20 count 1.06 prefix sum 3.58 draw 3.65 1.68 0.71 0.60 1.67 resolv oit 0.46 0.81 0.51 0.50 2.14 ao 11.47 12.17 9.81 9.75 6.70 total 16.45 14.86 15.67 10.86 10.71 tabl poisson disk oitao singl frame perform ms us textur cache. downsid consider high memori consumpt compar spars list approaches: exampl layer 3d textur requir 84.37 mb video memori compar 4.63 mb dynam alloc spars list approach test setup. however, expens fragment count prefix sum comput need maintain linear list structur lead signific perform slowdown, amort improv list traversal. test scene suffici cover 8 layer ddp approach achiev competit results. hand, time result draw stage increas complex scene demand lot re-rendering, approach reli singl geometri pass only. compress ppll 2d textur decreas perform compress stage improv ao perform fragment pool queri anymore. chang scene heavi oit workload shown figur 7, compress ap- proach outperform brute forc solut minimum factor 10, take node consideration. store compress list addit memori requir 24 byte per-pixel need node 16 bit depth precision. result tabl ii show, multiresolut ao tax oitao approach expens fragment list travers requir multipl times. costli linear list pre-comput fulli amort multipl pass requir gener ao term. b. opaqu ambient occlus test multilay ao opaqu geometri follow test conduct sibenik cathedr mesh marko dabrovic. comparison singl layer hbao a-buff counterpart rai trace result blender given figur 9. direct qualiti improv result addit shadow demonstr right figure, ao comput layer depth respect occlud geometri resid 16 layer a-buffer. improv es- pecial appar ao algorithm catch low-frequ occlus detail. stage ddp ppll ll tex3d compr. clear 0.88 0.18 0.01 0.19 count 1.21 prefix sum 3.63 draw 3.64 1.82 0.70 0.60 1.99 resolv oit 0.51 0.91 0.58 0.58 2.22 downsampl 0.41 0.41 0.43 0.40 0.53 ao pass 1 2.95 2.90 2.50 2.96 0.91 ao pass 2 7.33 7.11 5.76 6.86 2.54 ao pass 3 18.61 21.31 15.33 18.66 8.17 ao pass 4 7.90 8.95 7.86 7.13 5.82 total 42.23 43.59 38.00 37.20 22.37 tabl ii multiresolut oitao singl frame perform ms figur 9. left right: comparison tradit hbao, multilay hbao blender ao. right show multilay ambient occlus improv tradit result addit shadow (red). perform benchmark execut comput shader implement hbao [26]. list compress appli comput pass node store share memori instead textur memory. layer render scene favor compress criterion. linear depth necessari informa- tion ao sampling, fragment pool entri spare compar oit a-buffer. hbao approach 8 sampl x y direct fetch share memori determin geometr proximity. benchmark result depth peel (8 layers), brute forc ppll traversal, list compress default hbao implement oper layer depth only, shown tabl iii. render singl frame multilay ao take time long default approach, improv coher tempor stabil increas imag qualiti significantli ad depth dynam scene plausibl shadows. vi. discuss problem nvidia depth peel base approach [23] expens re-rend geometri singl layer need algorithm provid above. propos approach comput faster memori efficient, easili support multipl layer fragment list structur dynam adjust textur buffer size on-the-fly. therefore, approach improv nvidia multilay algorithm stage depth peel brute forc compr. default clear 0.53 0.18 0.18 draw 4.14 1.61 1.60 0.26 ao 13.98 14.41 10.14 1.11 total 18.65 16.20 11.92 1.37 tabl iii hbao singl frame perform ms figur 10. multiresolut oitao appli semi-transpar mesh wai consid viabl altern improv ao qualiti screen-space. store fragment entri 3d textur prove fastest brute forc method take advantag texel cach expens textur memory. however, heavi workload list compress scheme perform best maintain plausibl ao effect. transpar present approach abl produc high qualiti result gener appli ao geometri layer store fragment list structure. cours depend ssao algorithm number texel fetch need maximum number geometri layer store memory. instanc mssao requir multipl ao pass need larg texel fetch repeat fragment list traversal. reli list compress test approach abl improv perform expens imag qualiti depend complex transpar geometry. ssao opaqu geometri benefit addi- tional depth layers. compar depth peel downsid order fragment list pool: list entri randomli insert respect lists, theoret- ical requir complet travers account import layers. therefore, maximum layer plai import role chosen respect scene geometry. vii. conclus futur work present novel, multilay ssao approach effect comput ao transpar surfac im- prove tempor stabil imag qualiti opaqu geometry. reduc comput complex minor sacrific imag qualiti flexibl list compress scheme introduced. differ method discuss allow comput ao term fragment list entri shadow receiv emitt oppos tradit 2d defer buffers. addition opaqu geometri receiv occlus transpar object take correspond opac account. contrast implement amd firepro sdk (see figur 3), car interior shadow geometr layer scene enabl plausibl ao shown figur 10. appli a-buff fragment list principl opaqu geometry, occlusion-induc problem screen-spac base algorithm emerg singl 2d depth buffer solv well. prove worthwhil addit ssao com- putations, easili appli approach solv ao integr screen-space. possibl extens list compress scheme provid integr addit inform like number, depth opac fragment drop criterion ao sampl process stochast assumpt proxim base shadowing. amd opengl extens amd spars textur provid partial resid textur alloc implement mem- ori effici fragment list structures. improv texture3d approach combin good qualiti perform reduc memori requirements. acknowledg work jan bender support excel initi german feder state govern graduat school ce tu darmstadt. research lead- ing result receiv fund european commiss seventh framework programm (fp7/2007- 2013) grant agreement 285026. refer [1] l. carpenter, a-buffer, antialias hidden surfac method, siggraph comput. graph., vol. 18, no. 3, pp. 103108, jan. 1984. [2] o. zegdoun, amd firepro technolog sdk, amd.com/tools-and-sdks/graphics-development/firepro-sdk/, juli 2013. [3] h. meshkin, sort-independ alpha blending, gdc session. perpetu entertainment, 2007. [4] k. myer l. bavoil, stencil rout a-buffer, acm siggraph 2007 sketches, 2007. [5] c. everitt, interact order-independ transparency, 2001. [6] l. bavoil k. myers, order independ transpar dual depth peeling, nvidia, tech. rep., 2008. [7] f. liu, m.-c. huang, x.-h. liu, e.-h. wu, effici depth peel bucket sort, proc. high perform graphics. acm, 2009, pp. 5157. [8] m. maule, j. comba, r. torchelsen, r. bastos, hybrid transparency, proc. i3d. acm, 2013, pp. 103118. [9] j. c. yang, j. hensley, h. grun, n. thibieroz, real- time concurr link list construct gpu, proc. eurograph confer rendering, 2010, pp. 12971304. [10] m. salvi, j. montgomery, a. lefohn, adapt trans- parency, proc. high perform graphics. acm, 2011, pp. 119126. [11] g. s. zhukov, a. iones, ambient light illumin model, proc. render techniques, 1998. [12] m. mittring, find gen: cryengin 2, acm siggraph 2007 courses. acm, 2007, pp. 97121. [13] p. shanmugam o. arikan, hardwar acceler ambient occlus techniqu gpus, proc. interact 3d graphic games. acm, 2007, pp. 7380. [14] l. bavoil, m. sainz, r. dimitrov, image-spac horizon- base ambient occlusion, siggraph talks, 2008. [15] t. ritschel, t. grosch, h.-p. seidel, approxim dynam global illumin screen space, proc. interact 3d graphic games, 2009. [16] t.-d. hoang k.-l. low, multi-resolut screen-spac ambient occlusion, proc. vrst, 2010, pp. 101102. [17] k. vardis, g. papaioannou, a. gaitatzes, multi-view ambient occlus import sampling, proc. inter- activ 3d graphic games. acm, 2013, pp. 111118. [18] s. thiedemann, n. henrich, t. grosch, s. muller, voxel- base global illumination, proc. interact 3d graphic games. acm, 2011, pp. 103110. [19] m. mcguire, ambient occlus volumes, proc. high perform graphics, 2010, pp. 4756. [20] t. ritschel, fast gpu-bas visibl comput nat- ural illumin volum data sets, eurograph (short papers), pp. 5760, 2007. [21] f. hernell, p. ljung, a. ynnerman, local ambient occlus direct volum rendering, ieee tvcg, vol. 16, no. 4, pp. 548559, 2010. [22] t. ropinski, j. meyer-spradow, s. diepenbrock, j. mensmann, k. hinrichs, interact volum render dynam ambient occlus color bleeding, graphic forum, vol. 27, no. 2, 2008, pp. 567576. [23] l. bavoil m. sainz, multi-lay dual-resolut screen- space ambient occlusion, siggraph talks, 2009. [24] p. knowles, g. leach, f. zambetta, effici layer fragment buffer techniques, opengl insights. crc press, 2012, pp. 279292. [25] amd acceler parallel process program guide, amd, decemb 2012. [26] l. bavoil, horizon-bas ambient occlus comput shaders, nvidia directx 11 sdk, 2011.