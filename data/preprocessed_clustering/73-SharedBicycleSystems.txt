balanc bicycl share systems: approach dynam case christian kloimullner, petrina papazek, bin hu, gunther r. raidl institut graphic algorithm vienna univers technolog favoritenstra 911/1861, 1040 vienna, austria abstract. oper public bicycl share system (bsss) regularli redistribut bike station order avoid get overli empty. consid dynam case use. main objectives: hand desir reach particular target level end process station like meet user demand upcom day(s). hand oper want prevent station run rebalanc process lead unsatisfi customers. extend previou work static variant problem introduc effici wai model dynam case adapt previou greedi pilot construct heuristic, variabl neighborhood search grasp. com- putat experi perform instanc base real-world data citybik wien, bss oper vienna, model user demand deriv histor data. 1 introduct bicycl share system (bsss) evolv larg citi world. offer advantag urban development, attract citizens, reduc individu motor traffic complement public transport. furthermore, bsss contribut public health encourag peopl sport [1]. bss consist multipl bike station distribut strateg favor posit city. regist user allow rent bike station return later station. miscellan factor altitud stations, demograph characteristics, nearbi public transport stops, station tend run tend full. case station, custom abl rent bike case station, custom return bikes. therefore, bss oper need redistribut bike station regular basi avoid work support austrian research promot agenc (ffg), contract 831740. author thank matthia prandtstetter, andrea rendl marku straub austrian institut technolog (ait) collabor project. c. blum g. ochoa (eds.): evocop 2014, lnc 8600, pp. 7384, 2014. c springer-verlag berlin heidelberg 2014 74 c. kloimulln et al. minim custom dissatisfaction. usual task vehicl fleet pick bike station excess bike deliv station deficits. try approach definit balanc bicycl share sys- tem (bbss) problem, goal rout vehicl corre- spond load instructions, respectively, brought balanc state abl fulfil user demand possible. far, recent work consid static variant as- sume rebalanc process us [25]. us approach bsss which, e.g., oper overnight, practic strateg plan reach desir level long term depict simplif problem. work extend previou algorithm static case dynam scenario user demand time account, try reduc unfulfil demand rebalanc process reach target level station end. propos effici wai model simul dynam adapt greedi pilot construct heuristic, variabl neighborhood search (vns) grasp accordingly. 2 relat work bbss regard special variant capacit singl commod split pickup deliveri vehicl rout problem. particular featur allow multipl visit stations, consid heterogen vehicles, possibl load unload arbitrari number bikes. relat approach address static variant bbss appli mix integ program (mip) techniques. direct comparison exist work difficult consid differ problem characteristics. chemla et al. [6] propos branch-and-cut algorithm relax mip model conjunc- tion tabu search obtain upper bounds. however, assum singl vehicl reach target level hard constraint. benchi- mol et al. [7] consid singl vehicl balanc hard constraint propos approxim algorithms. raviv et al. [8] us mip approach convex penalti object function minim user dissatisfact tour length multipl vehicles. however, ignor number load opera- tions. recent work develop metaheurist approach scale larg instanc [35]. particular, introduc greedi con- struction heurist (gch) vn approach [3], pilot construct heurist grasp [5]. differ strategi find meaning load instruct candid rout includ optim on studi [2]. [4] refin concept provid extens comput analysis. di gaspero et al. [9, 10] investig constraint program (cp) approach conjunct ant coloni optimization, smart branch strategy, larg neighborhood search. test bbss variant do, outperform vn approach [3]. balanc bicycl share systems: approach dynam case 75 concern dynam bbss scenario, exist mip approach far. contardo et al. [11] present approach util dantzig-wolf bender decomposition. obtain upper lower bound instanc 100 stations, face signific gaps. unlik problem definition, focu exclus fulfil user demand consid target levels. schuijbroek et al. [12] appli clustering-first route-second strategy. cluster mip heuristic, alternatively, cp approach handl rout problems. contrast work defin interv fulfil user demands. consid hard constraint try minim unfulfil demand possible. additionally, consid target levels. chemla et al. [13] present theoret framework estim vehicl impact propos heurist approach singl vehicle. besides, suggest price strategi encourag user return bike station tend run soon. pfrommer et al. [14] investig heurist plan tour multipl vehicl suggest dynam price strategy. period recomput truck tour dynam price activ test simul base histor data. relat work examin strateg plan aspect bsss lo- cation network design [15, 16] characterist usag pattern [17]. however, aspect scope work. 3 problem definit consid dynam scenario bbss, refer dbbss, rebal- anc simul usag consid expect cumu- late user demands. addit input data static problem variant particularli consid expect user demand predict model. bss infrastructur given complet direct graph g = (v {0}, a) node set v repres rental stations, node 0 vehicl depot, arc set fastest connect nodes. arc (u, v) assign weight correspond travel time tu,v > 0 (includ averag time load unload actions). station v v capac cv 0 denot total number bike slots. initi level pv number avail bike begin rebalanc target level qv state desir number bike end rebalancing. rebalanc procedur given fleet vehicl l = {1, . . . , |l|} vehicl l l capac zl > 0. finally, let tmax time budget vehicl finish rout start end depot 0. user demand time assum expect cumul demand v(t) r occur station v v begin rebalanc process time t, 0 t tmax given essenti arbitrari function. cumul demand calcul subtract expect number bike return expect number bike rent respect time period. exampl demand function shown figur 1. note displai pv v(t) dash-dot line order highlight 76 c. kloimulln et al. cv v(t) qv t0 end segment event t0 t00 t 1 0 t 2 0 t 3 0 t 4 0 demand function pv v(t) legend capac cv station v pv target level tv station v l1 ti1 unf,+ ti2 l2 expect bike station v ll pickup vehicl l event t l fig. 1. exampl demand function pickup event area unfulfil demand occur. thus, posit slope v(t) indic user expect rent bike return time period t, vice versa. demand fulfil immedi far possible, i.e., bike park slot available. unfulfil demand fulfil later penal object function. let unf,v denot total unfulfil bike demand station v v , i.e., number user want rent bike abl desir station. analogously, let unf,+v refer total number unfulfil slot demands, i.e., user return bike station full. solut dbbss consist rout vehicl correspond load instruct stop station. rout length l defin ordered, arbitrarili long sequenc station rl = (r 1 l , . . . , r l l ), r l v depot assum implicitli ad start end node. load instruct vehicl l l i-th stop station v v denot yil,v. posit valu y l,v denot correspond number bike pick up, neg valu denot deliveries. feasibl solut fulfil follow conditions. station, level (i.e., number current avail bikes) lie 0 capac cv. vehicl l l load exce capacity, i.e., bl zl. moreover, solut feasible, rout total travel time, denot tl, exce time budget, additionally, vehicl return depot 0. goal rout vehicl correspond load instruc- tion follow object function minimized: f(r, y) = unf vv ( unf, v + unf,+ v ) + bal vv |qv pv| + load ll l i=1 |yil,ri l |+ time ll tl (1) paramet unf , bal, load, time 0 control rela- tive import correspond term object function. import goal minim unfulfil demand minim balanc bicycl share systems: approach dynam case 77 deviat target levels. secondarily, want total number load instruct total drive time small possible, however, aspect consid clearli important. 4 model dynam scenario section dbbss model calcul dynam behavior system, i.e., consid user demands, approach metaheuristics. 4.1 segment event major aim avoid time discret demand function correspond level calcul introduc error time consum appropri resolution. alternatively, follow approach split cumul demand function weakli monoton segment instead iter discret time points. practic reason assumpt number segment station rel small, approach efficient. purpose, split function v(t) monoton weakli increas decreas segments. let t0 = (t 0 0, . . . , t 0 0 ) t 0 0 = 0 order sequenc 0 extrem valu v(t) v(t) weakli monoton t [ti10 , ti0], = 1, . . . , 0, figur 1. time ti0, = 1, . . . , 0, refer end i-th weakli monoton segment. general, let til , l l, = 0, . . . , l, time vehicl l perform i-th stop, i.e., t l = 0 = 0 tsl,r1l = 1 l 1 ti1l + tri1 l ,ri l = 2, . . . , l l 2. (2) station v v defin data structur denot seri event wv = (l1, i1), . . . , (l|wv|, i|wv |). event (lj , ij), j = 1, . . . , |wv| lj {0} l ij {1, . . . , lj} refer station-visit event, case lj l indic correspond vehicl ij number stop, end-of-seg event, case lj = 0 ij denot respect segment v(t). follow definitions, time event (lj , ij) t ij lj , event wv order accord increas times. multipl event occur time order arbitrarily, end-of-seg event appear last. 4.2 expect number bike station station event need deriv level consid cumul user demand perform load unload instruct occur event. 78 c. kloimulln et al. let av,j [0, cv] denot expect number bike station v v event j = 1, . . . , |wv| consid expect demand fulfil far possibl pickup deliveri perform includ event j. note that, cumul user demand forecast model base histor data, level event fractional. formally, av,j calcul follows: av,j = { pv j = 0 max(min(av,j1 (v(t ij lj ) v(t ij1 lj1 )), cv), 0) y ij lj j = 1, . . . , |wv|. (3) end-of-seg event consid correct comput unfulfill- abl demands. eas notation, formula consid wai vehicle-visit events. bike deliv pick events, defin load instruct yi0 = 0, = 1, . . . , 0. respect unfulfil demands, distinguish unfulfil bike demand unf,v unfulfil slot demand unf,+ v station v v . occur expect cumul demand v(t) time horizon t [0, tmax] satisfied, i.e., v(t) < 0 av(t) = 0 v(t) > 0 av(t) = cv, respectively. unfulfil demand occur station v event j 1 j, j = 1, . . . , |wv|, formal describ unf, v,j = max(v(t ij lj ) v(tij1lj1 ) av,j1 + y ij lj , 0) (4) unf,+ v,j = max((v(t ij lj ) v(tij1lj1 )) (cv av,j1) y ij lj , 0), (5) consequ overal unfulfil demand unf, v = |wv | j=1 unf, v,j , unf,+ v = |wv | j=1 unf,+ v,j . (6) 4.3 classif station assum station well-design sens capac suffici larg daili fluctuations, i.e., necessari pick deliv bike station differ time singl dai order fulfil demands. furthermore, shown previou work [3] monoton restrict (i.e., allow pick deliv bike station) practic neglect small impact solut qualiti substanti simplifi problem. additionally, project partner citybik wien mention perform pickup deliveri particular station day. therefore, classifi station pickup station vpic v deliveri station vdel v impos monotonicity, i.e., allow respect operations. static case classif consid total deviat balanc particular station, i.e., pv qv v v . valu 0, correspond station refer set deliveri stations, balanc bicycl share systems: approach dynam case 79 classifi pickup station. however, dynam case consid user demand rebalanc process scale factor object function (1). thus, consid situat rebalanc all. base equat (6) object function (1) determin station v v total penalti slot deficit bike deficit: miss v = unf unf,+ + bal min(0, av,|wv | qv) unf unf, bal min(0, qv av,|wv|). (7) missingv < 0, v deliveri station. miss v > 0, v pickup station. otherwise, missingv = 0, station balanced, thus, consid anymore. 4.4 restrict load instruct stop vehicle, need calcul bike vehicl allow pick deliv capac constraint violat unnecessari unfulfil demand introduced. bound util set load instruct correspond vehicl stop later optim process. formally, defin slack yv ,j y+v ,j maximum bike delivered/pick station v event j = 1, . . . , |wv|. y v,j = { max(0, qv av,|wv |) j = |wv| min(cv av,j ,yv,y+1 + unf,v,j+1) j = 1, . . . , |wv| 1 (8) y + v,j = { max(0, av,|wv| qv) j = |wv| min(av,j ,yv,j+1 + unf,+ v,j+1) j = 1, . . . , |wv| 1. (9) note, iter backward start event reach time current consid vehicl stop occurs. definition, let y unf,+ v,j y unf, v,j denot slack includ event, i.e., start event j = |wv| 1. term construct heurist section. 5 greedi construct heurist extend greedi construct heurist (gch) previou work [3] fit dynam case. vehicl tour built iter append station set feasibl successor f v . set includ station improv reachabl vehicl time budget. improv achiev missingv > 0, v vpic, missingv < 0, v vdel. then, station v f comput total number bike pick deliv station: v = { min(yv,j , zl bl) v f vpic, min(y+v,j , bl) v f vdel. (10) 80 c. kloimulln et al. note bl denot number bike current store vehicl l. shown (10), need slack determin possibl load instruct calcul equat (8). order guarante vehicl return depot, correct load pickup station estim bike deliv fashion [3] recurs look forward. necessari consid impact load instruct station respect target level unfulfil demand separ weight bal unf wai object function (1). obtain g(v) = balmin(v ,max(0,av,|wv |qv))+unf min(v ,y unf,+ v,j ) tu,v v vpic, balmin(v ,max(0,qvav,|wv |))+unf min(v ,y unf, v,j ) tu,v v vdel, (11) tu,v travel time vehicl stop u station v. greedi iter station highest g(v) append current consid vehicl tour. load instruct set follows: yv,j = v v vpic, yv,j = v v vdel (12) dynam case time important, addition introduc term refer urgency. state urgent visit station futur unfulfil demands. propos method comput value. addit urgency: station v consid time period unfulfil demand occur. vehicl reach station period starts, consid period, on. case station period unfulfil demand reachabl time, ignored. moreover, introduc addit scale factor urg denot import urgency. formally, uadd = { 0 tunfv < tu,v urg unftunfv t unf v tu,v (13) tunfv time left start unfulfil demand station v v tu,v travel time consid station which, definition, greater 0. greedi valu includ urgenc visit g(v) calcul g(v) = g(v) + uadd. multipl urgency: multipl approach multipli basic g(v) (11) exponenti function. again, consid time unfulfil demand, analog addit approach. term comput umul = exp(max(0, tunfv tu,v) urg). (14) greedi valu criterion extend g(v) = g(v) umul. balanc bicycl share systems: approach dynam case 81 pilot construct heuristic: natur greedi algorithms, shortsight decis complet avoid matter choos greedi evalu criterion. therefore, us pilot method [18] address drawback. function remain [5] extend gch evalu potenti successor deeper wai construct complet temporari rout it, final consid object valu g(v). 6 metaheurist approach order improv result obtain construct heuristics, appli greedi random adapt search (grasp) variabl neigh- borhood search (vns). metaheurist approach us incom- plete solut represent base store vehicl l l rout rl = (r 1 l , . . . , r l l ) only. load instruct y l,v, l l, v v, = 1, . . . , l effici calcul evalu appli greedi strategi gch, section 5, util restrict procedur section 4.4 obtain bound y-variabl acceler calculations. variabl neighborhood search: vn approach [3] adapt respect procedur deriv load instructions. gener layout neighborhood structur remain same. us remove-station, insert- unbalanced-station, intra-route-2-opt, replace-station, intra-or-opt, 2-opt*-inter- route-exchang intra-rout 3-opt neighborhood structur local improve- ment embed variabl neighborhood descent (vnd), shake appli move-sequence, exchange-sequence, destroy-&-recreate, remove-st operations. greedi random adapt search: consid grasp ex- tend construct heurist wai previou work [5] adapt dynam problem variant. idea iter ap- ply gch pilot section 5 local improv solut vnd. select best successor, us grasp restrict candid list respect greedi evalu criterion. degre ran- domiz control paramet [0, 1]. dynam case valu turn work best static case. 7 comput result perform comprehens test dbbss approaches. gener new benchmark instanc necessari order introduc user demand val- ues. base set vienna real citybik station previou work [25]. cumul user demand station piecewis linear function deriv histor data base hourli discretization. instanc us paper contain 30 90 station differ num- ber vehicl differ time budget avail at1. bss 1 82 c. kloimulln et al. tabl 1. result gch, pilot, variant vnd inst. set gch pilot gch-vnd pilot-vnd |v | |l| tmax #best obj sd ttot [s] #best obj sd ttot [s] #best obj sd ttot [s] #best obj sd ttot [s] 30 1 8h 0 54.06 12.50 < 0.1 0 50.98 11.19 0.1 18 50.61 11.56 0.4 13 49.97 10.95 0.4 30 2 4h 0 59.79 15.65 < 0.1 1 55.47 13.78 < 0.1 9 55.87 13.58 0.2 22 54.89 13.44 0.1 60 1 8h 0 186.49 28.14 < 0.1 1 180.59 28.81 0.5 8 180.20 28.72 0.5 23 178.85 29.29 0.9 60 2 4h 0 202.69 31.82 < 0.1 0 191.06 29.98 0.2 9 193.32 30.06 0.4 21 189.69 29.81 0.4 60 2 8h 0 104.49 12.77 < 0.1 0 98.64 11.03 0.9 12 98.00 12.05 2.4 18 96.74 10.80 3.2 60 4 4h 0 118.76 17.38 < 0.1 0 106.98 13.53 0.4 4 108.96 13.34 1.8 26 105.36 13.41 1.3 90 1 8h 0 354.83 34.79 < 0.1 0 346.73 33.49 1.1 6 348.20 34.74 0.7 24 344.99 33.45 1.5 90 2 4h 0 371.13 34.55 < 0.1 0 360.49 36.06 0.5 5 362.74 35.53 0.5 25 358.21 35.09 0.9 90 2 8h 0 232.86 27.07 < 0.1 0 221.02 24.24 2.1 3 223.16 24.71 2.6 27 218.57 23.86 4.1 90 3 8h 0 155.26 19.27 < 0.1 0 144.35 16.80 2.8 6 144.43 17.94 8.6 24 141.25 16.26 6.9 90 4 4h 0 254.25 27.51 < 0.1 0 239.70 27.86 1.0 7 242.91 27.90 2.1 23 237.47 27.63 2.2 90 5 4h 0 210.12 24.26 < 0.1 0 194.03 24.55 1.2 7 195.75 24.38 4.2 23 191.72 23.96 3.3 total 0 2304.73 285.72 < 0.1 2 2190.04 271.31 10.8 94 2204.15 274.48 24.4 269 2167.71 267.95 25.2 tabl 2. result static vns, dynam vns, pilot-grasp inst. set svn dvn pilot-grasp |v | |l| tmax #best obj sd #best obj sd #best obj sd 30 1 8h 4 54.90 10.93 20 47.36 10.51 9 47.54 10.57 30 2 4h 4 58.68 13.08 19 50.84 11.50 11 50.84 11.35 60 1 8h 0 197.25 30.01 29 172.30 27.13 4 172.84 26.96 60 2 4h 0 207.09 30.37 22 182.12 29.28 10 183.09 29.13 60 2 8h 0 114.64 12.75 26 91.80 10.63 4 92.30 10.40 60 4 4h 0 126.42 15.11 23 99.24 11.39 7 99.85 11.54 90 1 8h 0 368.18 37.47 19 337.92 32.74 11 338.49 32.23 90 2 4h 0 380.50 38.80 19 349.98 33.97 11 351.05 34.74 90 2 8h 0 242.60 26.09 11 210.62 23.79 19 210.19 23.03 90 3 8h 0 168.99 16.31 11 135.97 15.10 19 135.40 15.06 90 4 4h 0 262.41 30.41 17 225.94 25.77 13 226.39 26.19 90 5 4h 0 216.53 23.76 18 182.03 21.82 12 182.20 22.21 total 8 2398.19 285.10 234 2086.11 253.63 130 2090.16 253.38 vienna current consist 111 station 1300 bicycl instanc inher realist praxis-relevant. paramet combin exist set 30 independ instances. algorithm implement c++ gcc 4.6. test run perform singl core intel xeon e5540 machin 2.53ghz. scale factor object function set unf = bal = 1, load = time = 1 100 000 , i.e., improv re- spect balanc and/or unfulfil demand prefer reduc tour length and/or number load instructions. greedi eval- uation criterion us multipl urgency. omit detail comparison differ strategi signific larger instanc hundr stations. tabl 1 compar differ method quickli obtain good start solutions, gch, pilot, gch vnd, pilot vnd. column instanc characteristics, algorithm number time correspond approach yield best result (#best), averag object valu (obj), standard deviat (sd), averag cpu-tim ttot. differ averag object valu frequent rel small weight factor load time, crucial evalu qualiti solutions. therefore, #best number better indic balanc bicycl share systems: approach dynam case 83 algorithm variant perform best. observ pilot outperform gch instanc addit time moderate. trend continu add vnd improv solutions. pilot-vnd outperform gch-vnd, requir time. superior start solutions, vnd termin fewer iterations. tabl 2 test metaheurist approach addition compar vn static case [3], denot svns. reason comparison, svn initi convert dbbss instanc static ad station final cumul user demand respect target value; neg valu valu exceed station capac cv replac zero cv, respectively. idea neglect time aspect station visit check static vn abl reason solut dynam case. assur obtain feasibl solut dbbss end, load instruct final best static solut recalcul new greedi strategi dynam case. observ gch tabl 1 perform littl bit better svns. dvn grasp abl comput result 10% better svns. therefore, conclud possibl appli algorithm static case dynam scenario, dedic dynam approach take time- depend user demand account clearli superior. dynam approach dvn perform best consid instances. accord wilcoxon signed-rank test, observ differ overal number best solut pair compar approach statist signific error level 1%. 8 conclus futur work work show extend metaheurist develop pre- viou work static bbss significantli complex dynam variant. start model handl essenti arbitrari time-depend ex- pect user demand functions, propos effici wai calcul load instruct vehicl tours. us object function weight unfulfil user demand target level adjust easi way. practically, high relev bss operator. extend previous introduc construct heuristics, vn grasp, dy- namic user demand consid appropriately. test practic realist instanc dynam approach sense. depend avail time optimization, greedi pilot construct heurist us fast runs, vn power longer runs. futur work particularli interest consid im- pact demand shift station neighbor empty. especially, user want return bike intend target station full, demand obvious diminish shift neighbor station(s). consid aspect lead pre- cise model, increas model complex significantly. 84 c. kloimulln et al. refer 1. demaio, p.: bike-sharing: history, impacts, model provision, future. jour- nal public transport 12(4), 4156 (2009) 2. raidl, g.r., hu, b., rainer-harbach, m., papazek, p.: balanc bicycl share systems: improv vn effici determin optim load operations. in: blesa, m.j., blum, c., festa, p., roli, a., sampels, m. (eds.) hm 2013. lncs, vol. 7919, pp. 130143. springer, heidelberg (2013) 3. rainer-harbach, m., papazek, p., hu, b., raidl, g.r.: balanc bicycl share systems: variabl neighborhood search approach. in: middendorf, m., blum, c. (eds.) evocop 2013. lncs, vol. 7832, pp. 121132. springer, heidelberg (2013) 4. rainer-harbach, m., papazek, p., hu, b., raidl, g.r.: pilot, grasp, vn approach static balanc bicycl share systems. technic report tr 186-1-13-01, vienna, austria (29 pages, 2013, submit jogo) 5. papazek, p., raidl, g.r., rainer-harbach, m., hu, b.: pilot/vnd/grasp hybrid static balanc public bicycl share systems. in: moreno-daz, r., pichler, f., quesada-arencibia, a. (eds.) eurocast. lncs, vol. 8111, pp. 372379. springer, heidelberg (2013) 6. chemla, d., meunier, f., calvo, r.w.: bike share systems: solv static rebalanc problem. discret optim 10(2), 120146 (2013) 7. benchimol, m., benchimol, p., chappert, b., la taille, a., laroche, f., meunier, f., robinet, l.: balanc station self servic bike hire system. rairo oper research 45(1), 3761 (2011) 8. raviv, t., tzur, m., forma, i.a.: static reposit bike-shar system: model solut approaches. euro journal transp. log., 143 (2013) 9. di gaspero, l., rendl, a., urli, t.: hybrid aco+cp balanc bicycl share systems. in: blesa, m.j., blum, c., festa, p., roli, a., sampels, m. (eds.) hm 2013. lncs, vol. 7919, pp. 198212. springer, heidelberg (2013) 10. di gaspero, l., rendl, a., urli, t.: constraint-bas approach balanc bike share systems. in: schulte, c. (ed.) cp 2013. lncs, vol. 8124, pp. 758773. springer, heidelberg (2013) 11. contardo, c., morency, c., rousseau, l.m.: balanc dynam public bike- share system. technic report cirrelt-2012-09, montreal, canada (2012) 12. schuijbroek, j., hampshire, r., van hoeve, w.j.: inventori rebalanc ve- hicl rout bike share systems. technic report 2013-e1, tepper school business, carnegi mellon univers (2013) 13. chemla, d., meunier, f., pradeau, t., calvo, r.w., yahiaoui, h.: self-servic bike share systems: simulation, repositioning, pricing. technic report hal-00824078, cermic (2013) 14. pfrommer, j., warrington, j., schildbach, g., morari, m.: dynam vehicl redis- tribut onlin price incent share mobil systems. technic report, cornel university, ny (2013) 15. lin, j.h., chou, t.c.: geo-awar vrp-base public bicycl redistribut system. intern journal vehicular technolog (2012) 16. lin, j.r., yang, t.h., chang, y.c.: hub locat inventori model bicycl share design: formul solution. comput & industri engi- neer 65(1), 7786 (2013) 17. nair, r., miller-hooks, e., hampshire, r.c., busic, a.: large-scal vehicl share systems: analysi velib. int. journal sustain. transp. 7(1), 85106 (2013) 18. vo, s., fink, a., duin, c.: look ahead pilot method. annal oper research 136, 285302 (2005) balanc bicycl share systems: approach dynam case introduct relat work problem definit model dynam scenario segment event expect number bike station classif station restrict load instruct greedi construct heurist metaheurist approach comput result conclus futur work