differenti monotonicity-preserv scheme discontinu galerkin method arbitrari mesh santiago badia, jesu bonilla, alba hierro abstract. work devot design interior penalti discontinu galerkin (dg) scheme preserv maximum principl discret level steadi transport convection- diffus problem respect transient problem implicit time integration. monoton scheme combin explicit time step dg space discret common, design scheme implicit time step rare, attain far 1d problems. propos scheme base piecewis linear dg discret supplement artifici diffus linearli depend shock detector identifi troublesom areas. order defin new shock detector, introduc concept discret local extrema. diffus oper graph-laplacian, instead common finit element discret laplacian operator, essenti monoton gener mesh multi-dimension. result nonlinear stabil non-smooth nonlinear solver fail converge. result, propos smooth (twice differentiable) version nonlin- ear stabilization, allow us newton line search nonlinear solver dramat improv nonlinear convergence. theoret numer analysi propos scheme satisfi desir monoton properties. further, result oper lipschitz contin- uou exist solut discret problem, non-smooth version. provid set numer result support findings. keywords: finit elements, discret maximum principle, monotonicity, shock capturing, discontinu- ou galerkin, local extrema diminish content 1. introduct 2 2. convection-diffus problem discret 3 2.1. notat 3 2.2. weak form interior penalti dg approxim 4 2.3. implicit time integr 5 3. monoton properti 5 4. dmp-preserv artifici diffus scheme 7 5. lipschitz continu exist solut 12 6. smooth shock detector 14 6.1. paramet fine-tun 15 7. numer experi 18 7.1. converg smooth solut 18 7.2. dmp-preserv 20 7.3. bodi rotat 21 8. conclus 23 acknowledg 23 refer 25 centr internacion metod numer en enginyeria (cimne) , parc mediterrani la tecnologia, upc, estev terrada 5, 08860 castelldefels, spain universitat politecnica catalunya, jordi girona 1-3, edifici c1, 08034 barcelona, spain. 1 differenti monotonicity-preserv scheme dg method 2 1. introduct transport problem problem satisfi maximum principl (mp) posit property. however, numer discret violat properti discret level. violat aris form local spuriou oscil near sharp layer solution. oscil break mp continu problem. steadi problem sourc term, mp impli extrema solut boundari domain; bound boundari initi solut extrema transient case. author focus develop accur scheme inherit mp discret level, i.e. discret maximum principl (dmp) preserv schemes. end, approach used. case explicit time integr combin finit volum discontinu galerkin (dg) methods, scheme usual base slope flux limiters, special reconstruct algorithms. method wide present literatur understood (see, e.g., [24]). implicit time integr continu galerkin (cg) finit element space discretization, meth- od attain dmp understood previou ones. however, scheme develop date. case, approach base ad artifici diffus operator. then, order maintain high-ord converg rate smooth regions, oper scale vanish smooth region activ vicin sharp layers. depend activ controlled, distinguish residual-based, entropy-based, fluctuation-bas schemes. dmp-preserv scheme residual-bas (see e.g. [9, 25]). afterwards, fluctuat base scheme develop [3,1013]. scheme base comput- ing priori artifici diffus ensur dmp preservation. artifici diffus activ base so-cal shock detector, usual base unknown gradient jump elements. lately, guermond co-work propos similar approach hyperbol problems, altern detector base entropi product [16, 17]. recent fluctuation-bas scheme comput diffus requir preserv dmp wai resembl al- gebraic flux correct (afc) techniqu [2, 5, 22, 23]. reader refer [21] refer insight afc. case hand, dg space discret steadi problem transient problems, situat understood. attempt develop implicit dmp-preserv dg scheme propos [4], dmp enjoi artifici diffus method construct 1d problem, extens multi-dimension case fail enjoi property. object work design multidimension dmp-preserv dg method arbitrari mesh implicit time integr steadi problems. furthermore, propos linear preserv differenti method. properti particularli import improv converg nonlinear solver, shown [2]. order so, propos stabil method base follow kei ingredients: (1) shock detector activ artifici diffus region shock. pre- viousli said, shock detector restrict applic stabil region solut present shock sharp layers, kei ingredi obtain high-ord stabil method; (2) diffus ad ensur dmp. motiv similar idea afc low-ord scheme construct (see [19,21]); (3) discret diffus oper order dmp arbitrari meshes. guermond co-work [16, 17] propos us graph-theoret artifici diffus operators, instead classic pde-bas ones. strategi [2, 22,23]; (4) transient problems, perturb mass matrix requir obtain local ex- tremum diminish (led) scheme. work structur follows. sect. 2, introduc problem solve, notation, discret problem space interior penalti dg method. then, sect. 3, state novel definit dmp properti dg methods, introduc concept discret differenti monotonicity-preserv scheme dg method 3 local extrema. sect. 4, propos scheme fulfil property. lipschitz continu exist solut prove sect 5. discuss import smooth comput shock captur term test choos optim valu smooth paramet develop sect. 6. finally, numer experi perform method sect. 7, conclus drawn sect. 8. 2. convection-diffus problem discret consid transient convection-diffus problem dirichlet boundari conditions: tu+ (u) (u) = g [0,t], u(x, t) = u(x, t) [0,t], u(x, 0) = u0(x) x . (1) domain open, bounded, connect subset rd lipschitz boundari , d space dimension, = (x) convect velocity, assum divergence-free, 0 constant diffusion. consid dirichlet boundari condit statement problem (1), i.e., d, neumann boundari condit consid straightforwardly. case pure convect ( = 0), boundari condit impos inflow boundari . = {x : n < 0}, n outward-point unit normal. further, defin outflow boundari + . = \. below, consid steadi case, elimin time deriv term. 2.1. notation. let th = {k} partit form element k characterist length hk . quasi-uniform meshes, defin global characterist length mesh h. denot xi coordin vertex vh set vertic partition. defin vh(k) . = {i vh : xi k}. given mesh th, non-empti intersect f = k k neighbor element k,k th call interior facet th subdomain dimens d1. set interior facet denot e0h. hand, non-empti intersect f = k element k th boundari boundari domain call inflow boundari facet (analog + outflow boundari facets). set inflow boundari facet denot eh , set outflow boundari facet denot e+h . (we assum finit element partit conform inflow outflow boundaries.) set facet denot eh . = e0h e + h e h . facet f e0h, repres k + f k f neighbor element k+f k f = f . addition, n + f n f unitari normal facet f outsid k + f k f , respectively. given facet f , defin characterist facet length hf . tetrahedr (or triangular) meshes, discret space consid henceforth discontinu space piecewis linear function vh = {vh : vh|k p1(k) k th}, p1(k) space linear polynomi k. hexahedr (or quadrilateral) meshes, vh = {vh : vh|k q1(k) k th}, q1(k) tensor product space piecewis linear 1d polynomials. addition, repres space trace vh vh|. order defin dg spaces, us nodal set cartesian product element vertices, i.e., nh = kthvh(k). thus, node nh repres pair (i,k), k th vh(k). therefore, interior node place coordinates. indeed, n element vertex xi, n node xi, degre freedom. given node nh, coordin repres xa, . = {k th : xa k} support, nh(a) = {b nh : xb a} set node connect a. notic includ nh(a). defin set boundari node n h . = {a nh : xa }, n h (a) . = nh(a) n h . function vh vh express linear combin basi {a}anh , correspond shape function node a. defin follows. given nh correspond vertex-el pair (i,k), defin elementwis (bi)linear function a(xa)|k = 1 a(xb)|k = 0 b 6= a, a|k 0 k 6= k. function vh vh differenti monotonicity-preserv scheme dg method 4 double-valu e0h single-valu . thus, vh vh express vh = anh vaa. consid vkh restrict vh k. given vh vh, defin common concept averag {{}} jump [[]] interior point x facet f e0h follows: {{vh}}(x) = 1 2 ( v k + f h (x) + v k f h (x) ) , [[vh]](x) = v k + f h (x)n + f + v k f h (x)n f , n+f (resp. n f ) outward normal respect k + (resp. k) f ; us nf boundari facet place sign relevant. boundari facet point x f , f , defin {{vh}}(x) = v k + f h (x), [[vh]](x) = v k + f h (x)n + f (x). us standard notat sobolev space (see, e.g., [7]). particular, l2() scalar product denot (, ) , domain subscript omit . l2() norm denot . denot 1 function equal 1 ; 1(x) = 1 x . 2.2. weak form interior penalti dg approximation. stabil dg bilinear form transport problem propos [8] combin interior penalti (ip) method viscos term read as: uh vh (tuh, vh) +kh(uh, vh) = gh(vh) +bh(uh; vh) vh vh, (2) kh(uh, vh) . = kth k (uh vh uh vh) + feh f ( [[uh]] {{vh}} {{uh}} [[vh]] + ciph1f [[uh]] [[vh]] ) + fe+ h e0 h f {{uh}} [[vh]] + fe0 h f | nf | 2 [[uh]] [[vh]], right hand (rhs) includ term correspond sourc gh(vh) . = kth (g, vh)k , weak boundari condit bh(uh; vh), bh(wh; vh) . = fe h f nwhvh fe h e+ h f wh{{vh}} n + fe h e+ h f ciph1f whvh. paramet cip constant set 10, suggest [4]. project uh vh| facetwis linear polynomi function obtained, e.g., nodal interpol given dirichlet boundari data u node boundari n h , i.e., uh = h au(xa). nodal projector well-defined, project preserv dmp used, e.g., scott-zhang project [26]. notic definit uh bound maximum minimum valu function u. moreover, semi-discret problem (2) rewritten algebra form mtuh + kuh = g + buh, (3) mab . = (b, a) kab . = kh(b, a), a, b nh, ga . = gh(a), nh, bab . = bh(b;a), nh, b n h . differenti monotonicity-preserv scheme dg method 5 2.3. implicit time integration. consid time discret (2) method lines. so, interest scheme ensur dmp discret solut evolv time. kind method known local extrema diminish (led). particular, us -method, gener follow result scheme preserv monoton properti straightforward. consid partit (0, t ] n t time step equal time step length t = t nt wai tn = nt, n = 0, , n t. problem solv comput approxim u time step unh u(, tn). discret (1) mean -method reads: un+1h vh 1 t (un+1h u n h, vh) +kh(u n+1 h + (1 )u n h, vh) = gh(vh) +bh(uh; vh) vh vh. (4) us project actual initi condit u t = 0 initi discret solut u0h, inherit dmp. valu chosen interv [0, 1]. common valu = 0, lead explicit forward euler scheme, = 0.5 crank-nicolson scheme, = 1, lead backward-eul (be) scheme. method differ features. particular, order obtain uncondition led scheme, necessari us = 1. be, discret problem compact form read mtuh + ku n+1 h = g + buh, tuh = t 1(un+1h u n h). choic lead led scheme cfl-like condition. special import case crank-nicolson (cn) method, second-ord accur non-dissipative. requir obtain monotonicity-preserv scheme case comment sect. 4. 3. monoton properti section introduc desir properti want discret problem fulfill. us local extrema dg restrict purposes. dg, exist jumps, local extrema harm mp appear, e.g. possit jump element neg gradients. thus, consid concept discret local extrema, defin nodes, mean nodal valu extremum support node. discret local extremum local extremum, opposite. later weaker definit purposes. definit 3.1 (local discret extremum). function uh vh local discret maximum (resp. minimum) node nh ua uh(x) (resp. ua uh(x)) x a, ua u(x) (resp. ua u(x)) x . therefore, dmp defin follows. definit 3.2 (dmp). steadi problem solut uh vh satisfi local dmp nh, have: umina ua u max , u max . = max { max bnh(a)\{a} ub, max xad uh(x) } , umina . = min { min bnh(a)\{a} ub, min xad uh(x) } , uh vh| finit element interpol boundari condit dirichlet bound- ari d. case transient problems, u max u min defin umaxa . = max { max nh(a)\{a} ub, max xad(0,t ] u(x),max x u0h(x) } umina . = min { min nh(a)\{a} ub, min xad(0,t ] u(x),min x u0h(x) } , u0h vh finit element project initi condit u0. differenti monotonicity-preserv scheme dg method 6 scheme solut satisfi dmp call dmp-preserving. instead, transient problems, defin led schemes. definit 3.3 (led). method call led g = 0 time t (0, t ], solut uh(t) vh satisfi dtua 0 ua maximum dtua 0 ua minimum. time-discret methods, definit applies, replac dt time deriv discret approxim t. let assum (3) plu lipschitz continu nonlinear diffus term (nonlinear stabilization): m(uh, uh)tuh + k(uh, uh)uh = g + b(uh, uh)uh. (5) superscript, e.g., k, denot fact oper k equal k plu stabil terms. written, e.g., k(uh, uh), explicitli denot fact entri matrix k potenti nonlinear respect uh uh. problem (5) led follow requirements. theorem 3.4 (led). semi-discret problem (5) led (a defin def. 3.3) g = 0 nh ua local extremum, holds: mab(uh, uh) . = abma, ma > 0, (6a) kab(uh, uh) 0, b nh : b 6= a, bab(uh, uh) 0, b n h , (6b) bnh(a) kab(uh, uh) bn h (a) bab(uh, uh) = 0, (6c) ma . = ad, ab kroneck delta. further, g 0 (resp. g 0) solut (5) satisfi dmp properti def. 3.2. moreover, discret problem (5) positivity-preserv g 0 u0 > 0. proof. assum ua discret maximum. condit (6) particular equat (5) node a, ga = madtua + bnh(a) kab(uh, uh)ub bn h (a) bab(uh, uh)ub madtua + bnh(a) kab(uh, uh) bn h (a) bab(uh, uh) ua = madtua. therefore, dtua ga = 0. proceed analog minimum prove method led. proof equival discret problem time integration. next, prove positivity. let consid time step m solut negative, consid degre freedom minimum valu attained. previou result minimum discret level, tua 0 uma um1a . lead contradiction, um1a 0. hence, solut remain positive. corollari 3.5. problem (5) discret time meet condit th. 3.4, lead solut satisfi local dmp def. 3.2 time tn, n = 1, ...n t. proof. led properti know discret maximum (resp. minimum) bound (resp. below) solut previou time step. proceed induction, solut bound initi condit u0h boundari condit impos previou time step. follow [14, th. 1], prove steadi counterpart problem (5) dmp-preserving. differenti monotonicity-preserv scheme dg method 7 theorem 3.6 (dmp). steadi solut semi-discret problem (5) satisfi dmp def. 3.2 g = 0 and, degre freedom nh ua local discret extremum, condit (6b)-(6c) hold. proof. assum ua discret maximum, steadi counterpart problem (5) read bnh(a) kab(uh, uh)ub bn h (a) bab(uh, uh)ub = 0, therefore, ua comput ua = bn h (a) bab(uh, uh)ub bnh(a)\{a} kab(uh, uh)ub kaa(uh, uh) . condit (6b)-(6c), coeffici multipli ub ub [0, 1], sum coeffici add one. therefore, ua convex combin neighbor (includ boundari condit uh). ua maximum convex combin neighbors, ub = ua b nh(a). further, prove ua convex combin neighbor ub, vice versa ub convex combin neighbor ua. hence, induction, know extrema degre freedom bound boundari conditions. thus, dmp satisfied. 4. dmp-preserv artifici diffus scheme previou section, state requir fulfil discret scheme dmp-preserv led. section, build nonlinear stabil dg formul (2) satisfi conditions. nonlinear stabil reli artifici graph-viscos term. graph-viscos supplement shock detector, order obtain higher linear converg smooth regions. moreover, transient method us shock detector order perform mass matrix lump required, allow minim phase error method. let start defin graph-viscos ab. nh b n h (a) defin ab . = max{abh(b;a), 0}. (7) clearly, viscos non-zero n h . next, nh b nh(a), defin ab . = { max{akh(b, a), 0, bkh(a, b)} b 6= a, bnh(a)\a ab + bn h (a) ab otherwise, (8) paramet enjoi follow property. definit 4.1. given nh, : vh r enjoi shock detector properti a(uh, uh) [0, 1] uh vh a(uh, uh) = 1 uh local discret extremum xa. next, design shock detector satisfi property. given nh b nh(a) xb 6= xa, defin x sym ab intersect line pass xb xa, xb. moreover, defin rab . = xbxa, r sym ab . = x sym ab xa, u sym ab . = uh(x sym ab ) (see fig. 1). further, denot rab unit vector rab, ha characterist length a. then, defin jump mean unknown gradient [[uh]]ab . = ub ua ha xa = xb, ub ua |rab| + u sym ab ua |rsymab | otherwise, {{|uh rab|}}ab . = |ub ua| ha xa = xb, 1 2 ( |ub ua| |rab| + |usymab ua| |rsymab | ) otherwise. differenti monotonicity-preserv scheme dg method 8 figur 1. represent symmetr node x sym ab xb respect xa. remark 4.2. definit impli x sym ab = xa boundaries. cases, valu symmetr point xb respect xa take extrapol boundari condit valu method linearli preserving, i.e., u sym ab = ua+(ubua) sign((uaua)(ubua)), valu |rsymab | taken equal |rab|. extrapol import linear preservation, obtain optim converg rate convection-diffus problem boundari layers. remark 4.3. notic x sym ab coincid node valu uh(x sym ab ) unique. case, comput [[uh]]ab {{|uh rab|}}ab valu uh(x sym ab ) a. make us definitions, propos shock detector read a(uh, uh) . = bnh(a)[[uh]]ab bnh(a) 2{{|uh rab|}}ab q bnh(a){{|uh rab|}}ab 6= 0, 0 otherwise. (9) q r+. let prove shock detector (9) satisfi shock detector properti def. 4.1. note definit motiv [3]. here, instead maximum coeffici obtained, us sum gradient jump divid sum gradient means. similar (more involved) modif [13]. lemma 4.4. function a(uh, uh) defin (9) satisfi shock detector properti def. 4.1. furthermore, nh extremum q =, a(uh, uh) = 0. proof. let assum uh discret maximum (resp. minimum) xa, ub ua 0 b nh(a) u sym ab ua 0 b nh(a), (resp. ub ua 0 b nh(a) u sym ab ua 0 b nh(a)). (10) therefore, bnh(a) [[uh]]ab = bnh(a) xb=xa [[uh]]ab + bnh(a) xb 6=xa [[uh]]ab = bnh(a) xb=xa ub ua ha + bnh(a) xb 6=xa ub ua |rab| + u sym ab ua |rsymab | = bnh(a) xb=xa |ub ua| ha + bnh(a) xb 6=xa |ub ua| |rab| + |usymab ua| |rsymab | = bnh(a) 2{{|uh rab|}}ab. differenti monotonicity-preserv scheme dg method 9 thus, a(uh, uh) = 1. further, ua extremum, (10) longer true. hence, bnh(a) [[uh]]ab = bnh(a) xb=xa [[uh]]ab + bnh(a) xb 6=xa [[uh]]ab = bnh(a) xb=xa ub ua ha + bnh(a) xb 6=xa ub ua |rab| + u sym ab ua |rsymab | < bnh(a) xb=xa |ub ua| ha + bnh(a) xb 6=xa |ub ua| |rab| + |usymab ua| |rsymab | = bnh(a) 2{{|uh rab|}}ab. therefore, a(uh, uh) < 1. moreover, q =, a(uh, uh) = 0 ua extremum. order prove dmp-preserv numer analysi need perturb weak boundari condit bilinear form. perturb weak boundari condit read: bh(wh, wh, uh; vh) . = bh(uh; vh) + anh bn h (a) ab(wh, wh)vaub. (11) vh, wh vh, wh, uh vh|. furthermore, given uh, vh, wh vh wh, vh|, defin perturb bilinear form kh as: kh(wh, wh;uh, vh) . = kh(uh, vh) + anh bnh(a) ab(wh, wh)vaub`(a, b), (12) `(a, b) . = 2ab 1 graph-laplacian operator. lead follow stabil steadi discret problem: uh vh uh vh| kh(uh, uh;uh, vh) = gh(vh) + bh(uh, uh, uh; vh) vh vh. (13) readi prove desir dmp properti method. purpose, defin kab(uh, uh) . = kh(uh, uh;b, a) a, b nh, bab(uh, uh) . = bh(uh, uh, b;a) nh, b n h . theorem 4.5. discret problem (13) stabil semilinear form defin (11) (12) dmp-preserv g = 0. proof. seen th. 3.6, solut dmp-preserv condit (6b)-(6c) satisfied. let verifi conditions. let xa interior node assum uh extremum xa. differenti monotonicity-preserv scheme dg method 10 given set node b nh(a) coupl node nh, have: bnh(a) kab bab = bnh(a) { kth k (b b a) + feh f ( [[b]] {{a}} {{b}} [[a]] + ciph1f [[b]] [[a]] ) + fe+ h e0 h f {{b}} [[a]] + fe0 h f | nf | 2 [[b]] [[a]] + fe h f nfba + fe h e+ h f b{{a}} nf fe h e+ h f ciph1f ba } . (we note bab defin node b n h . here, abus notation, extend zero definit nodes, bab = 0 b 6 nh.) us fact shape function partit unity, i.e., bnh(a) b equal zero elsewhere. result, bnh(a)[[b]] = 0 facet f \ a, bnh(a) b = 0 k th. hand, vanish f \ construction. properties, get: bnh(a) fe0 h f | nf | 2 [[b]] [[a]] = 0, bnh(a) feh f ciph1f [[b]] [[a]] fe h e+ h f ciph1f ba = 0, bnh(a) feh f [[b]] {{a}}+ fe h e+ h f b{{a}} nf = 0, bnh(a) feh f {{b}} [[a]] = 0, bnh(a) b = 0, follow term integr part bnh(a) kth k b + fe+ h e0 h f {{b}} [[a]] + fe h f nfba = bnh(a) { kth ( k b + k nba )} = bnh(a) kth k b = 0. finally, bnh(a) ab(uh)vavb`(a, b) + bn h (a) ab(uh)vavb = 0 construct (see (7) (8)), bnh(a) kab(uh, uh) bab(uh, uh) = 0. moreover, clear kab(uh, uh) 0 b 6= bab(uh, uh) 0 cases, base definit oper (11)-(12) respect graph-viscos (7)-(8). finish proof. differenti monotonicity-preserv scheme dg method 11 thus, th. 4.5, ensur extrema solut (3), boundari domain g = 0. let defin mass matrix perturb order obtain led scheme. reveals, properti ensur valu discret maximum minimum transient problem bound initi solut u0 = u(, t0) boundari conditions. prove [12, lemma 3.2] that, steadi problem, e.g., (13), enjoi dmp property, transient version enjoi led properti replac mass matrix (tuh, vh) lump version (tuh, vh)h correspond gauss-lobatto sub-integration. form (, )h (tuh, a)h = tua(1, a) nh. fact, kuzmin co-work prove [22,23], lump term associ degre freedom uh extremum. follow strategi [2], perform select lump shock detector. define: mlh (uh, uh; tuh, vh) . = anh va(1 qa (uh, uh))(tuh, a) + q (uh, uh)tuava(1, a). (14) expon q > 0 ad order minim lump perturbation, lead phase error discret solution. addition, defin mab(uh, uh) . = mlh (uh, uh;b, a), a, b nh. consid semi-discret problem space only, have: uh vh mlh (uh, uh; tuh, vh) + kh(uh, uh;uh, vh) = gh(vh) + bh(uh, uh, uh; vh) vh vh. (15) lemma 4.6. scheme (15) semilinear form defin (14), (11), (12) led g = 0. proof. condit requir k(uh, uh) b(uh, uh) th. 3.4 obtain led scheme prove th. 4.5. further, assum ua extremum, a(uh, uh) = 1 mab(uh) (1, a) = abma ma = a. hence, definit mass matrix (14) satisfi (6a). result, fulfil condit state th. 3.4 scheme led. furthermore, stabil problem (15) linear preserving, i.e. linear solut solut origin ip dg method (2). lemma 4.7. stabil term (11), (12), (14), vanish function u p1(), i.e., bh(u, u, uh; vh) = bh(uh; vh), kh(u, u;uh, vh) = kh(uh, vh), mlh (u, u;uh, vh) = (uh, vh), uh vh. proof. u linear continuous, definit [[u]]ab = 0 b nh(a). hence, 0. thus, ab ab equal zero. thus, stabil term vanish recov origin formulation. result section time discret extend -method. refer reader work kuzmin co-work [19, 21] proof properties. particular, -method positivity-preserv cfl-like condit (see [19, th. 1]) t min anh (1, a) (1 )kh(un+1h , u n+1 h ;a, a) . furthermore, certain condit matrix rhs, prove [21, th. 4] scheme positivity-preserv satisfi dmp. mean discret maximum minimum solut bound valu initi solut boundari condit -method. author [19, th. 1] advantag mass lump properti proofs, lump need activ degre freedom discret solut extrema. thus, scheme defin (4) definit mlh (, ; , ) given (14) lead dmp-preserv method cfl-like condition. differenti monotonicity-preserv scheme dg method 12 5. lipschitz continu exist solut let defin cartesian product space vh . = vh vh|. thus, function v vh express v = (v, v), compon includ valu dg function v vh second compon project dirichlet valu v vh|. analogously, defin set node vh mh . = nh n h {(a1, 0), (0, a2) : a1 nh, a2 n h }. consid extend graph-laplacian oper vh vh follows: d(u, v) = d((u, u), (v, v)) . = amh bmh ab`(a, b)ubva . = anh bnh ab`(a, b)ubva h bn h abubva h bn h baubva. note boundari degre freedom replicated. base definition, implicitli have: ab = ab, a, b (nh, 0), ab = ab, (n h , 0), b (0,n h ), ab = ba, (0,n h ), b (n h , 0), ab = 0, a, b (0,n h ). easi check oper symmetr positive-semidefinite. order second property, us express ab ab (7) (8), respectively, order ab, ab 0, aa = aa = bnh(a)\a ab + bn h (a) ab = bmh(a)\a ab. properti definit `(a, b), get: 2d(u, v) = amh bmh ab`(a, b)va(ub ua) + amh bmh ab`(a, b)ub(va vb) = amh bmh ab`(a, b)(ub ua)(va vb). (16) thus, |u|2 d . = d(u, u) 0. further, defin restrict operatorsd(u, v) = d((u, 0), (v, 0)) d(u, v) = d((0, u), (0, v)), correspond semi-norm |u|d . = d(u, u) |u|d . = d(u, u). given sourc g v h u vh|, defin oper t : vh v h steadi problem as: t(z), v .= kh(z, v)bh(u, v)gh(v) + d((z, u), (v, 0)) = kh(z, v)bh(u, v)gh(v) + anh bnh(a) ab`(a, b)vazb anh bn h (a) abvaub. (17) clearly, uh vh t(uh) = 0 equival stabil problem (13). transient problems, given previou time step solut unh vh, defin oper t n+1 : vh v h time step tn+1(z), v .= mlh (z; z, v)m l h (z;u n h, v) + t(z), v. (15) state compact form as: uh vh tn+1(uh) = 0. theorem, prove oper lipschitz continuous. provid sketch proof, follow line [2, th. 6.1]. theorem 5.1. nonlinear oper t tn+1 lipschitz continu vh q n+. differenti monotonicity-preserv scheme dg method 13 proof. order prove lipschitz continuity, proce [2]. manipulation, get: |t(u), w t(v), w| |kh(u v, v)|+ anh bnh(a) ab(v)`(a, b)wa(ub vb) + anh bnh(a) (ab(u) ab(v))`(a, b)waub + anh bn h (a) (ab(u) ab(v))waub . term linear continu (see, e.g., [1]). prove lipschitz continu rest terms. us invers inequ ak ch1ak af ch1af (see [6]) fact shape function partit uniti (ak chd/2 af ch(d1)/2), get: kh(uh, uh;b, a) bh(uh, uh;b, a) cq(hd1l() + hd2). (18) rest proof follow line [2, th. 6.1] includ sake conciseness. graph-laplacian edg pair (a, b) xa 6= xb [2], (18). case xa = xb simpler. lipschitz continu transient problem consequ lipschitz continu t mass matrix select mass lumping. properti prove analysi [2, th. 6.1]. next, propos scheme solution. uniqu result obtain diffusion-domin regim follow idea [5]. following, us c gener constant differ valu differ appearances. theorem 5.2. solut uh vh steadi problem t(uh) = 0, solut time step transient problem, i.e., tn+1(uh) = 0. proof. order prove exist solutions, reli approach [5], base fix point arguments. first, combin stabil analysi [8] (for first-ord hyperbol problems) stabil analysi interior penalti discret laplacian oper (see, e.g., [1] details), getting: kh(z, z) cz2h, z 2 h . = kth |z|2h1(k) + feh ( ciph1f [[z]] 2 l2(f ) + c 1 2 ,f [[z]] 2 l2(f ) ) , (19) cip big enough, c,f (x) . = |(x) nf (x)|. hand, standard dg argument (see [1] [15, prop. 3.55]), have: bh(u, z) cc1c 1 2 e u2l2() + cc 1h1cipu2l2() + cz 2 h, (20) c arbitrarili small. note nonlinear stabil term written term extend graph- laplacian oper as: anh bnh(a) ab`(a, b)vazb anh bn h (a) abvaub = d((z, u), (v, 0)). take v = z (16) cauchy-schwarz inequality, get: d((z, u), (z, 0)) 3 2 |z|2d + 1 2 |u|2d . differenti monotonicity-preserv scheme dg method 14 combin (17), (19), (20) (with c small enough), final obtain: ct(z), z z2h + |z| 2 d+|u| 2 d c 1 2 e u2l2() h 1cipu2l2(). readili pick z vh t(z), z > 0. brower fix point theorem, exist uh vh t(uh) = 0, thus, solv steadi version (15) (see [5] details). exist straightforward transient problem, combin previou result coerciv mass matrix operator. remark 5.3. result previou theorem lemma 4.7, method linearli preserv lipschitz continuous. idea [5, theorem 4], prove optim converg diffusion-domin regimes. 6. smooth shock detector sect. 4, defin ab(uh, uh), ab(uh, uh), a(uh, uh) (7), (8), (9), respectively, non-smooth functions. problem raw definit that, smooth, difficult nonlinear solver converge. thus, follow idea [2], add paramet (h,h,h) regular definit non-smooth function absolut valu maximum. section proce unfold smooth definit facilit reproduc method. result formul lipschitz continu twice differenti construction. furthermore, smooth involv slightli diffusion, easi check dmp led properti above. linearity-preserv satisfi weakli (see [2, remark 7.3]). prove result sake conciseness, proof similar on [2, lemma 7.1]. start introduc coupl smooth version absolut value: |x|1,h = x2 + h, |x|2,h = x2 x2 + h . valu h assum small go specifi sect. 7. valu x h, |x|1,h |x| |x|2,h |x|2,h |x| |x|1,h . now, redefin {{|uh rab|}}ab as: {{|uh rab|2,h}}ab . = |ub ua|2,h ha xa = xb, 1 2 ( |ub ua|2,h |rab| + |usymab ua|2,h |rsymab | ) otherwise. quotient associ read: = bnh(a)[[uh]]ab1,h + h bnh(a) 2{{|uh rab|2,h}}ab + h . h extra stabil paramet ad ensur differenti valu uh denomin nullified. definit properti ||1,h ||2,h , easi prove case uh local discret extremum a, > 1. so, want enjoi shock detector properti state def. 4.1, need construct twice differenti function z z(x) = 1 x 1. end, defin z(x) = { 2x4 5x3 + 3x2 + x x < 1, 1 x 1. abl defin smooth valu . = (z(a)) q . moreover, modifi comput maximum follow way: maxh(x, y) = 1 2 (x y)2 + h + 1 2 (x+ y). differenti monotonicity-preserv scheme dg method 15 furthermore, boundari u sym ab comput sign function need regular too. particular us signh(x) . = x/ |x|1,h . smooth definit ab (8) nh b nh(a) \ {a} read ab = maxh (0,maxh (akh (b, a) , bkh (a, b))) , b n h (a) ab . = maxh(abh(b;a), 0). object modif twofold. hand, smooth function improv converg nonlinear iterations. hand, method differenti respect uh, jacobian matrix defin everywhere; nonlinear iter methods, newton method, need comput jacobian matrix problem, used. further, method twice differenti requir quadrat nonlinear converg rate newton method. order dimension correct method and, time, affect converg non-stabil method, paramet scale follows: h = ||2l2(d3)h4, h = h2l4, h = l1, d space dimens problem, l characterist length problem, dimens unknown, dimensionless. 6.1. paramet fine-tuning. order appropri valu paramet intro- duce before, check valu affect perform method. end, consid steadi (tu = 0) transport ( = 0) problem forc (g = 0) rotat convect = (y,x): (u) = 0 [0, 1] [0, 1]. (21) transport case, dirichlet boundari condit impos inflow boundaries, which, convect field, side squar [0, 1] [0, 1] correspond x = 0 y = 1. impos 0 y = 1 follow function x = 0: u(0, y) = 1 y [0.15, 0.45], cos2 ( 10 3 (y 0.4) ) y [0.55, 0.85], 0 elsewhere. know exact solut problem consist translat function direct convect wai outflow boundari correspond y = 0 solut u(x, 0) = u(0, x). solv problem 100 100 q1 mesh check effect constant , result outflow profil respect valu inflow boundari x = 0, plot fig. 2(a). all, observ dissip effect paramet final solution. set valu q = {1, 2, 4, 10}, = {101, 102, 103, 104}, = 2, fix valu 102. us picard linear nonlinear iter scheme relax paramet propos [18], paramet valu therein. addition, solv test hybrid newton-picard method; us picard better start point newton, particularli nonlinear error lower 102 chang newton method line search. note hybrid scheme total number iter comparison includ iter perform picard method. nonlinear solver toler set 104 allow maximum 500 iterations. solver exce 500 iter defin scheme converg (nc). scheme linear equat solv direct solver. result shown fig. 3. observ that, order obtain sharp solutions, import us high valu q low valu . fix q = 10, tune , obtain method easi converge, dissipative, method harder converge, accurate. moment, fix relat . test fix q = 10, = 102, differ valu . particular us = {101, 102104, 108} differenti monotonicity-preserv scheme dg method 16 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 (a) solut inflow boundari x = 0. (b) solut domain figur 2. solut problem (21) parameter-tun 100 iter q = 10, = = = 0. 100 100q1 mesh used. 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=1 =1.e-1, -- (19) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=1 =1.e-2, -- (14) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=1 =1.e-3, -- (13) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=1 =1.e-4, -- (13) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=2 =1.e-1, -- (19) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=2 =1.e-2, -- (14) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=2 =1.e-3, -- (32) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=2 =1.e-4, -- (49) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=4 =1.e-1, 30 (13) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=4 =1.e-2, -- (19) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=4 =1.e-3, -- (20) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=4 =1.e-4, -- (22) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=10 =1.e-1, 24 (9) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=10 =1.e-2, 63 (10) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=10 =1.e-3, -- (18) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 q=10 =1.e-4, -- (23) figur 3. profil solut (21) outflow (y = 0) differ valu q, , = 2, = 102. figur titl indic valu q, , number nonlinear iter picard hybrid scheme (in brackets), (- -) mean converged. 100 100 mesh used. differenti monotonicity-preserv scheme dg method 17 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-1 =1.e-1, 25 (11) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-1 =1.e-2, 206 (25) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-1 =1.e-3, -- (19) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-1 =1.e-4, -- (19) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-2 =1.e-1, 24 (9) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-2 =1.e-2, 117 (15) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-2 =1.e-3, -- (22) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-2 =1.e-4, -- (20) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-4 =1.e-1, 31 (11) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-4 =1.e-2, 63 (10) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-4 =1.e-3, -- (16) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-4 =1.e-4, -- (23) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-8 =1.e-1, -- (9) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-8 =1.e-2, -- (13) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-8 =1.e-3, -- (17) 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-8 =1.e-4, -- (23) figur 4. profil solut (21) outflow (y = 0) differ valu , , q = 10, = 102. figur titl indic valu , , number nonlinear iter picard hybrid scheme (in brackets), (- -) mean converged. 100 100 mesh used. = {101, 102, 103, 104}. us nonlinear solver before. obtain result shown fig. 4. valu 102 104 need ensur picard convergence. case hybrid scheme, observ differ term number iter requir converg differ valu . nevertheless, reduc method requir slightli larger number iterations. finally, want fine-tun . so, fix valu = 102 = 104 reduc valu 104 0. check fig. 5 how, = 0, solut abl converge, number iter larger = 104 = 1012 solut practic same. numer experi work smooth non-smooth version nonlinear solvers. thus, compar result interest solut converg reason time step (we = 102). transient examples, us picard linearization, allow = 0 obtain sharper solution. additionally, let q, expon perturb mass matrix (14), q = +; mean matrix perturb = 1. nevertheless, recal nonlinear iter method us need stabil differentiable; case, greater 0 q < +. summarizing, view result obtained, us q = 10, q = , = 102, 106 = 102 = 0 oncom transient numer experiments. differenti monotonicity-preserv scheme dg method 18 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-4. 61 (10) it. 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-8. 61 (10) it. 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =1.e-12. 61 (10) it. 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 =0. 136 it. figur 5. profil solut (21) outflow (y = 0) differ valu , q = 10, = 102, = 104. figur titl indic valu , number nonlinear iter picard scheme hybrid scheme (in brakets). = 0 number iter given hybrid scheme stabil smooth jacobian undefin points. 100 100 mesh used. 7. numer experi section, interest show method previous introduc deal set numer experiments. recal that, isotrop uniform meshes, valu characterist length hk element k comput length edg squares. 7.1. converg smooth solution. experi want determin con- vergenc method smooth solut maxima minima insid domain (a reach valu 1 region domain). compar perform origin interior penalti dg method dg method artifici diffusion, smooth (allow maximum 100 iterations). steadi problem solv end following:{ u+ (u) = 42 sin ( 2 ( x y tan )) ( 1 + 1 tan2 ) = [0, 1] [0, 1], u(x, y) = sin ( 2 ( x y tan )) , { (u) = 0 = [0, 1] [0, 1], u(x, y) = sin ( 2 ( x y tan )) , = (cos(), sin()) = /3. case exact solut u(x, y) = sin(2(x y tan )). second-ord converg non-stabil method (bi)linear finit element like preserv stabil appli smooth solutions. happens. consid problem diffus = 1 contribut matrix domin diffus term finest meshes, error smooth non-smooth versions. import note nonlinear solver abl converg finest mesh non-smooth stabilization. introduc addit error respons converg degener observ fig. 6. addition, worth note requir boundari condit extrapol achiev optim convergence. test extrapol remark 4.2, i.e., u sym ab = ua, degener converg rates. correct import gradient boundari larger jump smaller. opposed, work pure transport (see fig. 7), effect extrapol negligible. case, order converg maintained. pure convect test, smooth paramet add extra error comput solution, expected, impli artifici diffusion. differenti monotonicity-preserv scheme dg method 19 1e-05 0.0001 0.001 0.01 0.1 10 100 1000 l 2 e rr o r mesh size 1/h non-stabil dg =10-2, =10-6, =10-2 ===0 =10-2, =10-6, =10-2 (no extrapolation) ===0 (no extrapolation) figur 6. l2 error converg test convection-diffus problem ( = 1) smooth solution. differ choic stabil paramet tested. 1e-05 0.0001 0.001 0.01 0.1 1 10 100 1000 l 2 e rr o r mesh size 1/h non-stabil dg =10-2, =10-6, =10-2 ===0 =10-2, =10-6, =10-2 (no extrapolation) ===0 (no extrapolation) figur 7. l2 error converg test pure convect problem ( = 0) smooth solution. differ choic stabil paramet tested. differenti monotonicity-preserv scheme dg method 20 1e-16 1e-14 1e-12 1e-10 1e-08 1e-06 0.0001 0.01 1 1 10 100 1000 o sc ill tio n iter ===0 =10-2, =10-4, =10-2 (picard) =10-2, =10-4, =10-2 (hybrid) figur 8. maximum oscil defin (23) nonlinear iter per- form solv (22). result smooth non-smooth stabilization, differ nonlinear scheme depicted. 100 100q1 mesh tests. 7.2. dmp-preservation. order test perform method term dmp-preservation, solv steadi problem 104u+ (u) = 0 = [0, 1] [0, 1], u(x, 0) = 0 x [0, 1], u(x, 1) = 1 x [0, 1], u(0, y) = 1 2 + 1 arctan(104(i 0.7)) y (0, 1), u(1, y) = 0 y (0, 1), (22) = (cos(/3), sin(/3)). problem convection-dominated, expect result propag direct defin profil impos inflow boundari x = 0. known method stabilized, lead solut strong oscil intern boundari layers. expect method control spuriou oscillations, prove numer analysis. us 100 100q1 cartesian mesh, set toler nonlinear iter 104, allow maximum 500 iterations. plot maximum oscillation, defin osc = max{0,min x uh(x),max x (uh(x) 1), }, (23) iteration. smooth non-smooth method test nonlinear solver smooth version. result fig. 8 hybrid method abl converge. let remark picard method reeach converg (have maximum 500 iterations) case, non-converg solut smooth stabil satisfi dmp machin precision. contrary, hybrid method satisfi dmp tolerance, need 15 iter converge. result obtain plot fig. 9 sharp non-smooth ones. differenti monotonicity-preserv scheme dg method 21 (a) h = 10 2; h = 10 4; h = 10 2. 13 iterations. (b) = = = 0. nc. figur 9. solut problem (22) smooth non-smooth ver- sion stabilization. 100 100 mesh used. (a) unstructur mesh (b) h = 10 2; h = 10 4; h = 10 2. 17 iterations. figur 10. solut problem (22) smooth version stabilization. unstructur mesh h 102 used. know numer analysi method preserv dmp unstructur meshes. follow test check result analyz affect accuraci method. end, solv previou problem unstructur mesh element size h 102 (see fig. 10 (a)). solut depict fig. 10(b). seen accuraci affect reason mesh perturbations. moreover, compar effect smooth case unstructur meshes. observ fig. 11 stabil method minim affect mesh topology. nevertheless, worth note number iter slightli increas hybrid method, 15 17. case, achiev conclus structur mesh. hybrid method abl converg satisfi dmp tolerance. relax picard abl converge, lead non-converg solut satisfi dmp smooth case last iterations. 7.3. bodi rotation. finally, want test dmp-preserv led properti method transient problems. end, us classic bodi rotat test. solv 2d transport equat (1) = [0, 1] [0, 1] = 0, = (2(y 0.5), 2(x 0.5)). initi solut given [20] interpol mesh 200 200 bilinear element displai fig. 12. differenti monotonicity-preserv scheme dg method 22 1e-14 1e-12 1e-10 1e-08 1e-06 0.0001 0.01 1 1 10 100 1000 o sc ill tio n iter ===0 =10-2, =10-4, =10-2 (picard) =10-2, =10-4, =10-2 (hybrid) figur 11. maximum oscil defin (23) nonlinear iter per- form solv (22). result smooth non-smooth stabiliza- tion, differ nonlinear scheme depicted. unstructur mesh h 102 tests. (a) 2d (b) 3d (c) legend figur 12. initi solut bodi rotat test problem discret 200 200q1 mesh. solut transport problem simpli translat direct convection. case, initi solut rotat counterclockwis final solut comput t = 1 complet round. idea compar initi final valu dissip method and, time, check valu maximum oscil time step violat dmp. order so, color map plot fig. 12(c), take color black green interv [0, 1] us shade red differenti monotonicity-preserv scheme dg method 23 [0.1, 0) (1, 1.1] shade yellow [0.2, 0.1) (1.1, 1.2]. way, easi identifi violat global dmp problem. solut comput dg method stabilization, smooth stabil method (in consid = 0 = 102), stabil method smooth ( = = = 0). smooth case = 0 consid reduc mass lump activ spoil converg nonlinear iterations. numer results, method dissipative, final result differ (see fig. 13(d) fig. 13(f)). recal that, integr time, weight mass lump paramet q set q = 10 smooth case q = + non-smoothed, minim phase error induc lump matrix. run test mesh 200 200 bilinear element n t = 2000 time steps, nonlinear toler 5 104 maximum 50 iterations. result plot fig. 13. plot maximum oscil time fig. 14. actually, instead print maximum oscil time step depict mean valu maximum bunch 10 time steps, improv result visual analysis. observ fig. 14 how, method stabilized, oscil appear iter decreas time, order 101. hand, observ stabil version method give oscillatori result iter method smoothed. fact nonlinear solver abl converg time step plot result 50 nonlinear iterations. instead, smooth stabilization, nonlinear solver converg violat dmp order toler = 0. = 102, method dissip (a expect greater valu shock detector activated) dmp violat machin precision. want point appear jump smooth figures, cone, lump mass matrix. avoid mass lumping, jump disappear, dmp violated. 8. conclus work design method fulfil dmp properti steadi multidimen- sional transport problem dg space discret used. transient case, implicit time stepping, method enjoi led property. origin scheme stabil artifici diffus graph-laplacian operator. edg diffus activ troublesom region base shock detector reli jump gradient solut node mesh, order minim smear solut improv solut smooth regions. provid set condit satisfi stabil formul enjoi dmp (and led) properties, design artifici edg viscos fulfil conditions. result hold arbitrari mesh space dimensions. result method prove dmp-preserving, led, linearity-preserving, lipschitz continuous. prove ex- istenc solutions. however, method stil highli nonlinear hard attain nonlinear solver convergence. thus, propos smooth version scheme twice differenti enjoi dmp led properties. provid set numer experi check featur prove theoret analysis, improv term comput cost combin smooth version scheme newton nonlinear solver line search. interest futur work extend featur approxim involv equat euler compress navier-stok problems. acknowledg sb gratefulli acknowledg support receiv catalan govern icrea academia research program. jb gratefulli acknowledg support receiv la caixa foun- dation phd scholarship program. ah gratefulli acknowledg support receiv differenti monotonicity-preserv scheme dg method 24 (a) 2d. stabil (b) 3d. stabil (c) 2d. = 102; = 104; = 102; q = 10. (d) 3d. = 102; = 104; = 102; q = 10. (e) 2d. = 102; = 104; = 0; q = 10. (f) 3d. = 102; = 104; = 0; q = 10. (g) 2d. = = = 0. nc. (h) 3d. = = = 0. nc. figur 13. solut bodi rotat test differ combin stabil parameters. 200 200q1 mesh crank-nicolson time integr n t = 2000 used. differenti monotonicity-preserv scheme dg method 25 1e-16 1e-14 1e-12 1e-10 1e-08 1e-06 0.0001 0.01 1 0 200 400 600 800 1000 1200 1400 1600 1800 2000 o sc ill io n time step non-stabil dg =10-2. = 10-4. =10-2. q=10 =10-2. = 10-4. =0. q=10 ===0. q= figur 14. oscil valu time step bodi rotat test differ choic stabil parameters. 200 200 mesh crank- nicolson time integr n t = 2000 used. catalan govern fi fellowship. acknowledg financi support cimn cerca programm / generalitat catalunya. refer [1] d. n. arnold, f. brezzi, b. cockburn, l. d. marini, unifi analysi discontinu galerkin method ellipt problem 39 (2002), no. 5, 17491779. [2] s. badia j. bonilla, monotonicity-preserv finit element scheme base differenti nonlinear stabiliza- tion, method appli mechan engin 313 (2017), 133158. [3] s. badia a. hierro, monotonicity-preserv stabil finit element approxim transport prob- lems, siam journal scientif comput 36 (2014), no. 6, a2673a2697. [4] , discret maximum principl discontinu galerkin methods, method appli me- chanic engin 286 (2015), 107122. [5] g. r. barrenechea, e. burman, f. karakatsani, edge-bas nonlinear diffus finit element approxima- tion convectiondiffus equat relat algebra flux-correct schemes, numerisch mathematik (2016), 125. [6] s. c. brenner r. scott, mathemat theori finit element methods, 3rd ed., springer, 2008. [7] h. brezis, function analysis, sobolev space partial differenti equations, 1st edition., springer, 2010. [8] f. brezzi, l. d. marini, e. suli, discontinu galerkin method first-ord hyperbol problems, mathe- matic model method appli scienc 14 (2004), no. 12, 18931903. [9] e. burman a. ern, nonlinear diffus discret maximum principl stabil galerkin approxim convectiondiffusion-react equation, method appli mechan engin 191 (2002), no. 35, 38333855. [10] , stabil galerkin approxim convection-diffusion-react equations: discret maximum principl convergence, mathemat comput 74 (2005), no. 252, 16371652. [11] e. burman p. hansbo, edg stabil galerkin approxim convectiondiffusionreact prob- lems, method appli mechan engin 193 (2004), no. 1516, 14371453. [12] e. burman, nonlinear artifici viscosity, discret maximum principl hyperbol conserv laws, bit numer mathemat 47 (2007), no. 4, 715733. [13] , monoton preserving, nonlinear, finit element upwind method transport equation, appli mathemat letter 49 (2015), 141146. differenti monotonicity-preserv scheme dg method 26 [14] r. codina, discontinuity-captur crosswind-dissip finit element solut convection-diffus equation, method appli mechan engin 110 (1993), no. 34, 325342. [15] a. ern j.-l. guermond, theori practic finit elements, springer, 2004. [16] j. guermond, m. nazarov, b. popov, y. yang, second-ord maximum principl preserv lagrang finit element techniqu nonlinear scalar conserv equations, siam journal numer analysi 52 (2014), no. 4, 21632182. [17] j.-l. guermond m. nazarov, maximum-principl preserv c0 finit element method scalar conserv equations, method appli mechan engin 272 (2014), 198213. [18] v. john p. knobloch, spuriou oscil layer diminish (sold) method convectiondiffus equations: ii analysi finit elements, method appli mechan engin 197 (2008), no. 2124, 19972014. [19] d. kuzmin s. turek, flux correct tool finit elements, journal comput physic 175 (2002), no. 2, 525558. [20] d. kuzmin, guid numer method transport equations, unpublished, 2010. [21] d. kuzmin m. moller, algebra flux correct i. scalar conserv laws, flux-correct transport, 2005. doi: 10.1007/3-540-27206-2 6. [22] d. kuzmin j. n. shadid, new approach enforc discret maximum principl continu galerkin method convection-domin transport equations, submit (2015). [23] , gradient-bas nodal limit artifici diffus oper finit element scheme transport equations, submit (2016). [24] r. j. leveque, finit volum method hyperbol problems, 1st ed., 2002. [25] a. mizukami t. j. r. hughes, petrov-galerkin finit element method convection-domin flows: accur upwind techniqu satisfi maximum principle, method appli mechan engin 50 (1985), no. 2, 181193. [26] l. r. scott s. zhang, finit element interpol nonsmooth function satisfi boundari conditions, mathemat comput 54 (1990), no. 190, 483493. 1. introduct 2. convection-diffus problem discret 2.1. notat 2.2. weak form interior penalti dg approxim 2.3. implicit time integr 3. monoton properti 4. dmp-preserv artifici diffus scheme 5. lipschitz continu exist solut 6. smooth shock detector 6.1. paramet fine-tun 7. numer experi 7.1. converg smooth solut 7.2. dmp-preserv 7.3. bodi rotat 8. conclus acknowledg refer