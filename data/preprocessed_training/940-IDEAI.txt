deliber dialogu reason safeti critic action pancho tolchinsky1 sanjai modgil2 kati atkinson3 peter mcburney3 ulis cortes1 knowledg engin & machin learn group, technic univers catalonia, spain1; depart informatics, king college, london, uk2 depart science, univers liverpool, liverpool, uk 3 abstract paper present argument-bas model proclaim, in- tend provid set heterogen agent deliber safeti critic actions. achiev purpos proclaim featur me- diator agent main tasks: 1) guid particip agent valid dialect move stage dialogue; 2) decid submit argument accept basi relevance; finally, 3) evalu accept argument order provid assess propos action undertaken. main focu paper propos set reason patters, repres term argument scheme critic questions, intend automatis deliber propos action safe performed. frame proclaim model, aim motiv import scheme critic question for: a) mediat agent guid task allow highli focus deliberation; b) effect particip heterogen agents; c) enabl reus previou similar deliber order evalu argument evidenti basis. 1 introduct safeti critic action transplant organ particular patient spill industri wastewat discharg requir extra oblig ensur undesir effect caused, effect death patient sever impact effluvi ecosystem. min- imis harm, choic safety-crit action usual govern guidelin regul direct decis maker do. however, strict ad- herenc domain consent knowledg convenient. 1 instance, transplant domain, strict adher convent guidelines, criteria donor organ elig transplantation, result progress undersuppli avail organ result significantli extend wait time increas mortal wait list [29]. domain organ transplant wastewat manag highli complex rapidli evolve; common consent knowledg expect date account possibl circumstances1. hence, decis maker expert domains, allow deviat guidelines, far decis justifi support empir evidence. furthermore, safety-crit action requir particip agent expert differ aspect problem decid perform safe. example, organ avail transplant better judg suitabl given recipient, expert donor site jointli decis expert recipi site, locat differ hospit [27]. despit ad valu joint decis make experts, requir met. appropri support, deliber expert propos action safe time consum guarante success outcome. thus, decis support system intend assist expert de- cide safety-crit action perform caus sever undesir effects, account that: decis perform safety-crit action justified. guidelin regul important, strict adher warrant safeti determin best decision. empir evid plai import role safety-crit decis mak- ing. decis maker expert domain. decis subject guidelines, abl deviat convent guidelin special circumstances. expert requir particip deliber propos action safe not. complementari knowledg problem hand, be- caus repres potentially-divers interests. situat account that: decis maker disagr action safe perform not. 1for example, transplant organis period publish consent organ accept- abil criteria. however, criteria rapidli evolv research effort extend reduc organ discards. hence, advanc transplant profession deviat consent criteria. 2 decis makers, especi human experts, abl main- tain long intens deliberations. particip agent expect heterogeneous. agent human artificial. furthermore, artifici agent divers implement given differ- ent agent implement differ developers. general, setting, uniform underli logic assum particip [36]. note heterogen agent impli deliber occur open environment. opposite, expect highli regul environment. paper present argumentation-bas model call proclaim provid principl wai address introduc problem. pro- claim propos model intend support expert collab- or decis safety-crit action performed. central model definit polici agent overal inter- action, polici defin argu how, stage deliberation. main purpos contribut paper propos argument process, base argument scheme critic questions, intend drive deliber safety-crit action human artifici agent manner structur orderly, elicit inform need decis jointli ratio- nally, inform possess particip agents. second contribut particip dialogu need specialis knowledg argument theory, framework em- bed domain expertis (e.g. medic environmental) natur wai application-specif reason patterns. work present paper build substanti extend work number earlier papers. kei idea sketch [55], propos context medic agent-bas organis (carrel) [58] intend facilit offer alloc human organ transplan- tation. [56] propos us scenario specif argument scheme critic question, tailor medic applications, defin protocol-bas exchang argument model agent deliberation. [57] intro- duce proclaim model focus role case-bas reason component. [54] present matur version mention med- ical application, [53] describ prototyp implement main larg scale demonstr fp6 european project aspic2. subsequ work focus generalis proclaim applic domain medical. kei generalis [56] scenario-specif scheme critic questions, sketch [51], applic proclaim environment domain [52]. follow subsect introduc theoret context work. 1.1 introduc basic concept argumentation, particularli focus 2 3 us argument scheme critic question mean defin argument-bas interact agents. 1.2 briefli walton krabb influenti characteris differ type dialogues, focu deliber dialogu collabor nature. 1.3 introduc notion dialogu games, defin agent interact dialogue. conclud introductori section present paper organisation. 1.1 argument argument scheme recent year wit grow us argument techniqu defeas (non-monotonic) reason conflict resolut autom system [44, 8, 43]. requir mode reason aris inform incomplet uncertain, differ agent perspec- tive yield choic ration accept agent another. situat argument techniqu defin construct argument (support reasons) possibl conflict conclusions. argu- ment construct basi underli knowledg base theories. then, base conflict base relat construct arguments, win justifi evaluated, claim identifi infer underli theories. model process argument autom reason systems, requir method enabl reason agent gener argument propos believ do, method enabl reason agent assess rel worth argument pertin particular debate, i.e., argument convinc why. set main mechan us purposes: argument scheme argument frameworks. argument scheme introduc inform logic literatur method argument representation. particular, associ scheme critic question (cq) enabl systemat identif at- tack argument instanti schemes, pioneer walton [60]. argument scheme repres stereotyp pattern reason scheme con- tain premis presumpt licenc conclusion. presumpt need stand context argument deployed, chal- leng pose appropri critic question associ scheme. order presumpt stand, satisfactori answer given question pose given situation. argument scheme cq appli wide varieti work ai. particular relev work paper, us argument scheme cq definit persuas dialogu game reason action propos [4]. comput account scheme cq approach argument action number advantages. scheme cq effect map relev space argumentation, sens argument identifi valid attack argument logic possible. provid natur 4 basi structur argument base dialogu protocols. later work start point defin proclaim protocol-bas exchang arguments. discuss 5 present structur set scheme cq tailor deliber safeti critic actions. whilst argument scheme provid mean gener argument question them, need mechan enabl automati- calli evalu argument challeng gener order determin on acceptable. us dung abstract argumenta- tion theori [16]. theori proven influenti approach conflict resolut non-monoton reason past decade. underli idea given direct graph call abstract argument framework (af)- consist abstract argument (i.e., commit intern structure) relat binari attack defeat relation. justifi statu argument evalu base interactions. evalu turn base notion argument accept respect set argument attack member set, attack attack member set. numer subsequ work ([2],[7], [34]) extend basic framework attack argument argument b disregard b reason stronger prefer a. then, justifi argument evalu base success attack (that usual refer defeats). allow exampl resolv local disput mutual (symmetrically) attack arguments, attack b b attack a, rel prefer argument determin asymmetr defeat other. recal follow basic concept introduc dung [16]: argument framework (af ) pair af = <ar, attack>, ar set argument attack ar ar attack relationship af. pair <x,y> refer x attack (or attack of) y y attack x. r, s, subset ar, that: s s attack r r r <r,s> a. x ar accept respect s y ar attack x, z s attack y (i.e. z, s, defend x y). s conflict free argument s attack argument s. conflict free set admiss argument s accept respect s. s complet extens s subset ar, s admissible, argument defend s s. 5 s ground extens (with respect set inclusion) complet extension.3 state above, framework depict argument graphs. section 2 demonstr how, particular application, interact argument defin tree, us tree evalu argument attack gener system, ultim decid action performed. hereon, argument justifi assum ground semantics. advantag ground semant comput extens linear problem extens exists, empty. reason ground semant argu skeptical. skeptic yield reason safety-crit action restrict applic [17]. let suppos < ar, attack > argument framework g ground extension. then, x ar: x said justifi x g. x defeat exist argument y g (y, x) attack. otherwise, x said defensible. now, argument propos safeti critic action evalu justified, action recommend safe. evalu defeated, ac- tion deem unsafe. otherwise, conclus recommend given. however, discuss 7, proclaim propos solut highlight relev issu resolv take final decision. approach argument model describ form basi element gener evalu arguments. however, need specifi model context dialogue, discuss next. 1.2 deliber dialogu defin walton krabb influenti classif human dialogu [61], deliber dialogu involv particip decid action cours action undertaken given situation. typic par- ticip dialogu believ share respons decid do, provid collabor context dialogue. wal- ton krabb classif base prior knowledg goal individu participants, includ major type dialogues. thus, information-seek dialogu question seek discov answer factual question participant, believ ques- tioner know answer question. inquiri dialogu particip 3we refer reader [16] definit extens defin stabl prefer semant 6 jointli seek answer factual question answer known beforehand, requir share partial knowledg particip has. persuas dialogues, participant, typic call proponent, seek persuad fellow participant(s) endors proposition. particip negoti dialogu seek agre divis scarc resourc (which particip time) potenti conflict claim it. particip seek maximis share resource, dialogu requir form bargain compromis order reach agreement. finally, erist dialogues, particip seek vent perceiv grievanc another, dialogu act substitut physic fighting. negoti deliber dialogu in- volv discuss actions, information-seek inquiri dialogu involv discuss beliefs. persuas dialogu concern belief actions. addit focu action, deliber dialogu normal share characterist features. absenc fix posit particip start dialogue. unlik persuas dialogues, example, particip deliber dialogu (at least, initially), seek persuad particip endors statement propos action. indeed, focus, govern question, chang cours deliber dialogue, particip explor space possibl action examin featur consequ actions. cours deliber dialogue, course, particip engag persuas dialogu (or walton krabb types), moti- vate model persuas dialogu embed insid deliber dialogue. second import featur deliber dialogu mutual focus, distinguish dialogu from, say, negoti dialogues. par- ticip deliber dialogu necessarili seek agre cours action accommod reconcil differ interests. particip fact aim this, succe so, aspect essenti featur delib- erat dialogue. deliber dialogue, particip exchang propos express posit done, share goal jointli reach agreement best sensibl action decid (in circumstances, time, design actors, constraints), defend particular position. fuller discuss characterist featur deliber dialogues, [31]. 1.3 dialogu game dialogu game interact particip utter locutions, accord certain rules. studi aristotl [3] argument theorist logician post-war period (eg, [23, 28]). decad appli ar- ea scienc artifici intelligence, particularli rule-govern interact softwar agents; recent review applications, 7 [33]. dialogu game specifi list legal locutions, to- gether rule govern utter locutions, open termin dialogues, rule manipul dialog commit incur particip dialogu [32]. work inform dialogue-gam framework ideal deliber- ation dialogu propos mcburney, hitchcock parson [31]. framework, deliber dialogu proce success stages: open, inform, propose, consider, revise, recommend, confirm close stages. goal particip dialogu chang accord stage dialogue. reason stage mark explicitly, better enabl particip know expect stage. framework, constraint order stages, stage repeated, iter fashion, dialogu completed. approach taken start point defin proclaim dialogu game introduc 4. 1.4 document organis follow section introduc proclaim model. 3 intro- duce case studi human organ transplant paper illustr agent interaction; particularli exchang arguments. 4 present model deliber dialogu game defin context agent overal interaction. sec- tion 5 focu argumentation, defin intern structur proclaim argument 5.1, 5.2 introduc model protocol- base exchang argument base scheme cq tailor deliber safeti critic actions. 6 illustr scheme specialis particular applic specialis scheme cq guid agent deliber facilit interac- tion human artifici agents. 7 briefli discuss model argument evaluation. 8 discuss defin argument scheme cq facilit reus previou deliber evalu argument evidenti basis. finally, conclud 9. 2 proclaim model proclaim model intend provid set heterogen agent effici effect deliber safety-crit action safe performed.proclaim regard defin centralis medium heterogen agent direct deliber safeti propos action. medium tailor deliber purpos intend focu discuss relev matters, keep track particip submit argument evalu propos solut address problem. centralis medium em- bodi mediat agent (ma) role ensur success 8 deliber process, enabl ma access number knowledg resources, introduce. set proclaim provid particip agent effici delib- erat best describ defin mediat agent tasks: direct particip argument-bas move (argument scheme critic questions) submit point deliberation. thus, argument particip want repli to, given set scheme instanti submit valid attack, far instanti appropriate. particip challeng submit argument and, turn, particip answer challeng instanti appropri argument scheme. valid incom argument order exclud argument jeopardis disrupt cours deliberation. agent given scheme instantiate, guarante instanti- ation relev discussion. thus, ma task discern relev non-relev instantiations, deliber highli focus import matters. valid argument challeng ad tree interact argument root argument propos initi action. submit addit argument introduc new factor taken account particip guidelin and/or evi- denc associ previou similar case indic relevant. thus, example, taken fact, guidelin indic contraind perform propos action, but, reason particip highlight this, ma submit argument action propos indic contraind performance. argument ad tree interact ar- guments. evalu tree interact argument propos solu- tion propos action safe not. solut propos mean assign prefer conflict (mutual attack- ing) argument evalu justifi argument defin dung theory. order perform introduc tasks, ma refer knowledg resources, shown diagrammat figur 1 describ below: argument scheme repositori (asr): order direct particip agent submiss exchang arguments, ma refer repositori argument scheme associ critic questions. scheme critic question instanti agent construct 9 arguments, effect encod space argumentation, i.e., possibl line reason pursu w.r.t given issue. repositori structur wai defin protocol- base exchang arguments. thus, given argument (that instanti scheme asr) repositori return scheme agent instanti repli argument (a critic question challeng it). figur 1: proclaim architecture. domain consent knowledg (dck): compon enabl ma check argument compli establish knowledge, check- ing valid instanti scheme asr (the asr regard abstract dck). particular import safeti critic domain 1) extra obli- gation ensur spuriou instanti argument scheme bear outcom deliberation; 2) guidelin usual exist domain taken account evaluat- ing submit arguments. ma refer dck order check known factor address partic- ipant (experts) spite deem relev view point guidelines. case, ma us dck order submit addit arguments, account neglected, relevant, fac- tors. sense, ma regard particip expert guidelines. case-bas reason compon (cbrc): compon enabl ma assign prefer relat mutual attack argument (i.e. resolv conflict pair arguments) basi associ evid gather past deliberations. cbrc pro- vide addit argument deem relev previou similar 10 situat applic current target problem. again, sense, ma plai role expert, specialist collect evid previou deliberations. argument endors manag (aem): depend endors argument, strength argument readjust ma. thus, compon manag knowledg relat to, example, agent role and/or reputations. broadli speaking, deliber proclaim begin agents4 submit argument propos action (e.g. transplant avail organ particular recipient). ma guid particip agent submiss argument attack defend justif given propos action. submit argument (or challenge) instanti scheme (or critic question) asr. ma refer asr order indic scheme critic question particip instanti repli submit argument challenges. justifi argument defens argumentdef argument a) b) c) b argument attack argument b a3 prefer a2 a5 prefer a4 a3 prefer a2 a4 prefer a5 a1 x a2 problem p1 a4 problem p2 a5 solut s2 problem p2 a3 solut s1 problem p1 a1 x a2 problem p1 a4 problem p2 a5 solut s2 problem p2 a3 solut s1 problem p1 a1 x a2 problem p1 a4 problem p2 a5 solut s2 problem p2 a3 solut s1 problem p1 figur 2: resolv tree interact argument order decid perform x. figur a) solut propos un- decid respect solut address respect problems, indic symmetr attack a2 a3, a4 a5. figur b) c) solut are, respectively, perform action x to, depend argument prefer assignment. submit argument, legal (instanti appropri scheme), eval- uat ma order determin instanti scheme valid one. ma referenc dck, cbrc aem. argument compliant guidelines, i.e. valid dck, argument accept ad tree interact argument 4thi agent ma action default one. 11 denot t. incom argument valid dck accept cbrc indic argument previous accept aem indic submitt suffici reliabl exception accept argument. case argument ad tree argument t ma broadcast new argument particip scheme instanti reply. argument accept knowledg resources, ma inform sub- mitter reason rejected. approach consid relev argument term impact, potenti impact, dialect statu accept pose argument [40, 39, 30]. broadli speaking, argument submit littl effect accept statu exist arguments, deem irrelev submitted5. approach relev argument proclaim exampl stop deliber clear argument deem propos action unsafe. agent interact describ 4 term set stage in- teract layers. instance, exchang argument defin argument layer deliber stage. depict figur 1, be- side exchang arguments, deliber stage defin interact layers, context layer particip submit fact complementari action believ potenti relev deliberation. endors layer, particip indic argument t endorse. particip argument exchange, submit fact deem relev inform argument t endorse, deliber move resolut stage t evalu- ated. depict figur 2a) t contain argument mutual attack prevent definit solution. thus, evalu t ma assign prefer relat mutual attack arguments, chang symmetr attack asymmetr ones. done, ma ap- pli dung evalu justifi argument propos solut (figur 2). order assign prefer mutual attack argument ma refer dck, cbrc aem. resourc ma deriv prefer assignment. agreement (e.g. a3 prefer a2) not, i.e. prefer argument knowledg resourc prefer argument. ma task, provid solut account knowledg resourc prefer assignment. solut resourc agre type: -while guidelin indic s2 solut problem p2, trustworthi expert argu s2 solut p2 posit weakli back evidence. basi information, person respons final decis decid perform action x. work address cooper environ (e.g. product lo- 5also interest work present [14], prune argument account order comput dialect tree efficiently. 12 gistic [18, 49]) featur agent, set agents, dedic coordin task perform differ work compon agents. argumen- tation, role mediat agent usual associ negoti dialogu [13, 50, 38], main object mediat agent help reconcil compet agent positions, mediat agent usual reli mental model participants. relev concep- tual framework negoti dialogu sana [38], propos number call artifacts, social dialogu artifact, act media- tor regul agent dialogu interact social argument artifact regard sophist commit store, agent submit arguments, argument publicli available, organis social accept statu evalu follow differ algorithms. similar approach, sana framework defines, social dialogu artifact, argument store (as) store collect social accept arguments. main differ being, central proclaim definit structur relat scheme asr tailor specif purpos deliber- at safeti critic actions, sana present placehold argument scheme, is, develop given littl guidanc argument scheme encode. broader view, sana ap- proach similar propos fp6-european project aspic, set gener compon developed: (infer engine, dialogu man- ager, learn component, decision-mak component) plug agent order add argument capabilities. approach undertaken [53] implement proclaim transplant scenario. critic natur intend scenarios, proclaim assum regul environment. particular, proclaim address norm aspect natur associ safeti critic environment. assum issu inform privacy, foreign attack malici agent resolved. good exampl context proclaim transplant scenario introduce, model extend exist agent-bas organis [58] agent deliber viabil avail human organ. 3 transplant scenario shortag human organ transplant problem, ex- acerb fact current organ select process discard signific number organ deem non-viabl (not suitable) transplantation. or- gan viabil assess illustr ubiqu disagr conflict opinion medic domain. suffici reason discard- ing organ qualifi profession others. differ polici differ hospit region exist, consensu medi- cal profession feasible. hence, contradictori conclus deriv set facts. example, consid donor 13 smoke histori chronic obstruct pulmonari diseas (copd). medic guidelin indic donor smoke histori suffici reason deem donor lung non-viable. however, qualifi physi- cian reason donor lung viabl given histori copd [27]. similarly, guidelin suggest discard kidnei donor caus death streptococcu viridan endocard (sve). however, administr penicillin recipi mean kidnei safe transplanted. currently, decis offer discard organ avail transplan- tation, base sole assess doctor donor site (donor agent, da). organ select process account fact that: 1) medic doctor disagre organ viabl non-viable; 2) differ polici differ hospit region exist, and; 3) viabil intrins properti donor organ, rather, integr concept involv donor recipi characterist cours action undertaken transplant process [27]. particular, cur- rent organ select process allow da discard organ doctor recipi site (recipi agents, ra) claim viabl and, given chance, provid strong argument support claim. [54] novel organ select process propos proclaim coordin joint deliber donor recipi agent order prevent discard organ applic inappropri organ accept criteria, help reduc dispar demand suppli organs. propos frame agent- base organis call carrel [58], intend effici manag data process carri recipi selection, organ tissu allocation, ensur adher legislation, follow approv protocol prepar deliveri plans. proclaim model extend carrel da ra effect deliber viabil avail organ. short, proclaim instanti follows: particip agent da ra, guidelin knowledg encod donor organ accept criteria consent transplant organisations, i.e. criteria medic doctor refer decid organ viability.6 aem relat agent reputation. namely, ma deem stronger argument endors agent good reput (e.g. ra repres prestigi transplant unit). finally, cbrc allow ma evalu submit argument basi past record transplant cases. [53] prototyp model present [57] focu cbrc component. work assum attempt formalis asr [56] argument scheme formalis construct somewhat ad-hoc fashion, hinder applic proclaim new 6transplant organis period publish consent organ accept criteria. however, criteria rapidli evolv research effort extend reduc organ discards. hence, advanc transplant unit deviat consent criteria. 14 scenario (such environment scenario present [52]). reason, [51] propos domain independ approach definit argument scheme (in 5) correct extensions. furthermore, prototyp present [53] implement interact protocol persuas dialogu [41], which, discuss 1.2, appropri collabor decis making. follow section present proclaim deliber dialogue. 4 proclaim deliber dialogu section interact protocol govern proclaim dialogue. exchang locut distinguish interact levels: 1) deepest level content message, e.g. submit arguments. 2) messag wrap appropri deliber locut defin dialogu game (e.g. argument wrap argu locution); 3) turn, deliber locut wrap inform request locution. particip agent (pas) interact ma, pas. submit request to, example, enter dialogue, submit new argument add new information. ma decid accept reject request. thus, ma act proxi pa (see figur 3a.) follow subsect inform-request interact proxi dialogu game. 4.2, introduc proclaim de- liber dialogu game defin locut submit stage layer deliberation. provid descript dialogu game quiet detailed, facilit implementation, intend futur work defin dialogu game axiomat semant defin pre post condit dialogu move. 4.1 proxi dialogu game agent particip deliber ma, decid in- come messag accept rejected. messag obvious reject syntact ill-formed, content appropriate. exam- ple, submit argument reject ma deem non relev deliberation. reason, particip messag wrap request locut ma repli inform locution, inform reject (and rejected) act request. ex- ample, request enter dialogue, ma inform particip acceptance, extra inform requir appropri par- ticipation. ma send inform locut prior requests, e.g. inform time-out constraint forc deliber conclude. request(pa id, ma, conv id,msg id, target id, r): pa id sender id (a pa), ma receiv agent (the ma), conv id 15 convers id, msg id messag identifier, target id mes- sage locut direct (when messag direct specif message, target id set -1). r variabl denot content commun request locution. possibl valu r discuss follow subsection. inform(ma,pa,conv id,msg id,target id, i): here, locut ad- dress singl receiver, case pa pa id, broad- cast participants, case pa all, subgroup pas, e.g. sender request - {pa id}. variabl denot content commun inform locution, repli request pa request. follow subsect defin messag content, i.e., r i. inform argument ( )t context ( )c f c endors ( )e pa ma pa 1 pa n pa request reject broadcast valid deliberaion a) b) noitulos timeout open figur 3: a) illustr proxi dialogu game; b) depict proclaim deliber dialogu game stage interact layers. 4.2 deliber dialogu game subsect introduc proclaim deliber dialogu game. is, introduc legal locutions, rule govern us commenc termin deliber dialogue. illustr 3a deliber dialogu game subdivid stages: open, deliber resolutions. deliber stage turn subdivid layers: argumentation, context, endors layers. move layer happen parallel move layer effect layer. depict 3b defin interact layer, call inform layer pa request ma updat ongo deliberation. worth note distinct layer stage conceptu metaphor better organis dialogu game, i.e. pa need know distract order effect participate. 16 open deliber resolut enter_dialogu no_more_mov deliberation_moveani deliberation_mov time_out time_out time_out acceptal open_dialogu figur 4: deliber dialogue, stage transition. us deliber indic dialogu defin deliber stage (e.g. assert, argue, endorse...). note deliber stage res- olut stage pa submit move move. similarly, conclud deliber pa submit accept move, un- time triggered. pa submit deliber move, resolut stage, dialogu move deliber stage. 4.2.1 open stage: stage open propos made, particip introduc basic avail inform provid participants: open dialogue(proposal): propos argument propos main ac- tion (e.g. transplant avail organ). propos contain precondit action perform (e.g. avail organ potenti recipient). 5, propos instanti argument scheme. propos pa (and ma), messag wrap request locut ma validate. re- quest validated, ma submit open dialogu locut contact potenti particip order enter dialogue. enter dialogue(proposal,role, basic info): agent will partic- ipat deliber propos enter role deliber- ation (e.g. donor recipi agent) inform (basic info) deem potenti relev decis make (e.g. patient clinic record). messag wrap request locution. enter dialogu accepted, introduc facts, basic info, store set facts, denot cf .7 similarly, defin second set denot ca contain agent propos actions. ini- tialli cf contain fact introduc enter dialogu locut precondit introduc argument propos main action. 7we assum fact introduc pa consistent, discuss 9. 17 deliber start ca contain initi propos action (e.g. transplant avail organ potenti recipient). simplicity, let denot cf ca cfa. deliber cfa updated, happen context layer (4.2.2). propos propos open dialogue(proposal) argument main action. thus, argument ad tree ar- gument t. submit argument argument layer (4.2.3) updat t. pa request enter dialogu begin deliberation, later, cfa t inform minim inform avail beginning. stage agent request particip accepted, ma repli broadcast follow message. enter dialogue(proposal, role, basic info, pas, cfa,t, legal replies): ma inform particip agent enact role role enter deliber introduc inform basic info. ma informs, pa deliber pas, updat valu cfa t. messag ma attach legal repli (legal replies) argument t. set legal repli (argument scheme critic questions) guid pa argument move submit repli t. (thi discuss 6.2). thus, example, agent id ag id enact role role id wish enter deliber propos propos send request lo- cution: request(ag id,ma,conv id,0,-1,ent dialogue(proposal,rol id, basic info)) ma accept request broadcast ag id agent plai role role id enter dialogu repli agent ag id request accepted: inform(ma, all-{ag id},conv id,1,-1, enter dialogue(proposal, role id, basic info, pas, cfa, t, legal replies)) inform(ma, ag id, conv id,1,0,ent dialogue(proposal, role id, basic info, pas, cfa, t, legal replies)) request reject ma inform pa id ag id request rejected. inform(ma, ag id, conv id, 1, 0, rejected(reason)). pa enter dialogu move deliber stage ant interact layers: 18 4.2.2 context layer: agent enter dialogu inform fact deem potenti relev decis making, propos complementari cours action prevent undesir effect caus main action. assert(fact): pa assert fact fact case. accepted, fact ad cf . propose(action): pa propos perform action action. accepted, action ad ca. retract(fact): pa retract assert fact fact case. accepted, fact remov cf . retract(action): pa retract propos perform action action. accepted, action remov ca. messages, sent pa, wrap request locution. accepted, broadcast particip ma. particip assert retract fact propos retract ac- tions, time, long deliber open. restrict fact action assert propos inconsistent8. hence, given consequ relat ` background theori , cf ca cf0 ca0 . instance, cf contain both: a) donor cancer b) donor malign tumour.9. words, state affair defin cfa , uncertain evolv deliberation, inconsistent. current state development, proclaim support conflict resolut pa disagre describ context facts. explor scenario (transplant environmental) learn odd pa disput pa state affair description. because, pa provid inform privileg access to. hence, odd da disput inform potenti recipi given ra; similarli agent repres industri disput inform statu wastewat treatment plant. reason, order deliber focused, conflict fact x case resolv outsid proclaim (e.g. facilit persuas dialogu phone call) x uncertain. nonetheless, 5.2.3, pa challeng argument request evid support fact highlight weak evidence, motiv retract disagre fact (e.g. retract 8where inconsist action mean action perform simultan (e.g. heat cool, stai go, etc...). 9note cf contain a) clinic record indic donor cancer b) donor cancer 19 x, leav room submiss x ). futur work intend develop intuition, lead extend proclaim support conflict resolution. note fact action introduc layer deliber (i.e. cfa) indic main propos ac- tion safe. cfa context main action intend performed. particip decid propos action safe given context, cfa chang cours delib- eration. decis make occur argument layer. clearly, main propos action precondit action retracted, deliber concludes. 4.2.3 argument layer: argument layer locutions: argu challenge. pa us locut request submit argument challenge. challeng argument question valid argument. perspect argument framework challeng repres regular argument attack argument challenge. pa request submit argument challeng accepted, ma broadcast particip version argu challeng locutions. request rejected, ma repli occur proxi layer. let mark locut pa r request, ma broadcast messag inform: r: argue(argument, target): argument argument submit pa repli (a attack) argument challeng t, id target. argument accept broadcast partici- pants. i: argue(id, argument, target, legal replies): argument argument submit repli (a attack) argument challeng id target, accept ma broadcast participants, indic argument id id. message, ma attach legal repli (legal replies) argument. set legal repli (argument scheme critic questions) guid pa argument move submit point deliber (thi discuss 6.2). argument ad t, attack argument challeng id target. r: challenge(challenge, target): challeng challeng pa argument t id target. repli challeng particip submit argument meet challeng (see 5.2.3). i: challenge(id,challenge, target, legal replies): challeng challeng argument id target accept ma 20 broadcast participants, indic challeng id id. message, ma attach legal repli (legal replies) challenge. challeng ad t argument attack argument id target. participants, includ ma, submit argument challeng time long deliber open target argument challeng t. however, ma reject submit argument challeng relev move. is, ma valid task introduc 2 perform proxi layer. fact particip submit argument impli endors it. particip attack submit argument moves. collabor setting, oppos competit one. particip introduc knowledg problem form arguments. thus, example, agent highlight contraind perform main action (attack initi argument) propos complementari action mitig undesir effect reinstat main action proposal. spirit, challeng argument ad t particip retract it, i.e. delet t. discuss 2, argument ad t ma deem argument relev deliberation. argument cours defeated, remain tree arguments. 4.2.4 endors layer: argument ad tree arguments, particip decid argument endorse. endors affect ma argument evalua- tion. example, argument endors particip good reput deem stronger. nonetheless, argument weak because, instance, strong empir evid it. locut endors layer are: endorse(pa id,arg id): particip pa id endors argument chal- leng id arg id. retract endorsement(pa id,arg id): particip pa id retract en- dorsement argument challeng id arg id. move submit time dialogu open argument challeng t. agent endors conflict arguments, later endors prevail earlier automat retracted. endors (resp. retraction) argument challeng t pa (via request locution), ma add (resp. subtracts) endors (repres predic endorse(pa id,arg id)) endors set, denot e. 21 4.2.5 resolut stage: particip construct context fact action cfa, tree argument t, inform endorsements, ma proce evalu t. deliber move resolut stage particip inform move submit chang cfa, t, e; timeout triggered. case, ma propos solut deliberation, base evalu t. timeout triggered, pa chanc revis propos solution. 7 briefli discuss natur argument evalu recommend solut mere yes/no answer. moves(): particip inform move submit (move chang cfa, t, e), consist request move. particip submit move, ma proce evalu t. move, however, prevent particip submit moves, overrid moves. import allow new relev inform avail time includ deliberation. move overridden, deliber move deliber stage. leav dialogue(reason): particip request leav deliber- ation provid reason reason that. ac- cept ma pa inform particip left deliberation. course, particip leav deliber deliber conclud ma propos solut (via close deliber locution) basi avail knowledg cfa, t, e. time out(reason): ma inform timeout triggered. gener term mean time spent de- liber new resolut polici applied. instance, picking-up telephone. proce timeout applic dependent. provision formalis trigger ma eval- uat t avail knowledg (cfa, t, e) propos solut disabl move participants. ma provid reason reason timeout. solution(solution,sol id): particip submit move (and overrid move) ma propos solut solut id sol id. propos solut motiv particip submit move simpli accept solution. particip submit deliber stage, submit move locut ma propos new solution. however, timeout triggered, deliber 22 conclud given solut provid chanc particip submit moves10. accept(sol id): solut id sol id given, agent accept it, deliber concludes. close deliberation(solution,sol id): deliber close propos solut solution. locut submit particip submit accept(sol id) timeout trigger ma propos solution. work assumpt cbrc (case base reason component) time consum requir t argument evaluation. however, manag develop cbrc perform adjust real-tim deliberation, propos resolut t visibl particip cycl solution(solution,id sol), accept(id sol) necessary. submit move locution. 4.2.6 inform layer: deliber dialogue, particip request ma updat argument tree, fact introduced, request legal repli given argument challeng t. thus, what- reason particip miss piec inform recov request. r: arg tree(): pa request ma updat t. i: arg tree(t): ma inform pa updat t. r: context(): pa request ma updat cfa. i: context(cf , ca): ma inform pa updat cfa. r: endorsement(): pa request ma updat e. i: endorsement(e): ma inform pa updat e. r: legal replies(arg id): pa request ma legal repli argument challeng t id arg id. i: legal replies(arg id, legal replies): ma inform pa legal repli argument challeng t id arg id. describ dialogu game liberal. pa submit locut time deliberation. curs restrict proxi level ma oblig repli 10in case, decis make process continue, follow differ policy. 23 pa requests. also, deliber dialogu open once, pa request enter dialogu particip deliber close left (via leav dialogu locutions). long timeout triggered, pa submit deliber stage turn restrictions. pa submit fact (resp. complementari action) time deliberation, long fact (resp. action) assert (resp. proposed) inconsist cf (resp. ca). similarly, pa retract fact action cfa. pa submit argu challeng locut time deliberation, long open timeout triggered. target argument challeng element t and, particular, attack argument oblig defend argument argument challenges. stake right wrong, main action safe performed. argument layer deliber kept highli focus subject matter, definit argument challeng pa submit deliberation. is, set legal repli (ar- gument scheme cqs) avail participants. follow section argument layer. 5 proclaim argument layer pillar proclaim definit deliber dialogu argument layer, namely, type argument particip ex- chang follow rules. wai deliber focus reduc particip overhead term argument construction, proclaim specif argu how. end, model defin protocol-bas exchang argument regard argument process elicit knowledg participants, oppos defin strateg dialogu better choic argument better serv agent individu goals. argumentation-protocol defin term structur set (a circuit) scheme associ cq (to scheme associ set cq defin term scheme associ cqs, on...). proclaim defin application-independ protocol-bas exchang argument specialis argu safeti critic actions. then, target applic (e.g. transplant environment scenario) application-independ protocol specialis order construct scenario-specif asr11. discuss 6.1. section present application-independ circuit cqs. start introduc follow subsect intern structur proclaim argument 5.2, present protocol-bas exchang arguments. 11argument scheme repositori 24 5.1 structur argument action propos typic motiv goal agent wish realise. formal account ([48, 19, 60, 59]) action propos assume, some- time implicitly, follow dimensions: r: domain fact circumst action proposed. a: domain actions. g: domain goals. base domain follow argument construct action propos circumst r (a set facts) expect realis desir goal g. problem argument structur notion goal ambiguous, potenti refer indiffer direct result action, consequ result reason consequ desir [4]. account distinctions, atkinson et al. consid addit domains: s: domain fact arriv perform action. v: domain valu valu repres social interest promot achiev goal. order propos follow argument scheme action proposals: atksch: circumst r perform action achiev new circumst s realis goal g12 promot valu v argument scheme present sixteen associ cq classifi categories: true ( e.g. question descrip- tion current circumstances), best (e.g. question consequ realis altern action) represent inconsist (e.g. question desir featur realis ). [4] atksch sixteen cq defin persuas dialogu game reason action proposal. atkinson persuas dialogu primarili address resolv choic compet action proposals, choos action best, i.e. action bring best situation, best rel agent consider given subject value-bas judgements, object ones. argu action proposals, particip 12where goal particular subset s action intend realis order promot desir value. 25 undermin action propos question action bring undesir effects13. possibl persuas dialogue; argu goal desir not. short, particip argu reason decid gener terms. gener desir featur atkinson persuas dialogu reason work taken start point definit proclaim argument layer. however, precis openness, inoper intend applications. proclaim, desir undesir goal assum share participants. furthermore, main propos action (e.g. trans- plant organ spill industri wastewater) is, default circumstances, taken right thing do, requir motiv proposal. moreover, decis proclaim taken respect singl social valu safeti (or patient qualiti life, transplant scenario). therefore, valu dimens ignored14. particular consequ defin con- text pa individu goal values, affect argument submit endorse, constitut reason propos action. matter debat then, cur- rent circumst propos action safe performed. namely, context fact cf , construct context layer, main action bring sever undesir effects. deliber regard argument process elicit particip (experts) relev fact (f0,..,fn cf ) assess action safety, account complementari cours action (those action ad ca). formal definit relev set fact given later section (definit 5.1). illustr relev fact medic scenario, let suppos donor lung infect hepat c viru (hcv). now, argu transplant unsaf (argument a2 fig. 5) recipi transplant lung result have hcv, sever infection. thus, donor infect hcv relev fact, given that, fact transplant caus undesir effect. suppos potenti recipi hcv. so, claim that, recipient, have hcv undesir effect lung transplant (argument a3 fig. 5). therefore, potenti recipi hcv relev fact. fact hold action caus undesir effect. note however, donor hcv, recipi hcv not, irrelevant. is, relev context dependent. attack argument a3 assum context donor recipi hcv. let suppos 13we assum effect undesir effect action. actual state affair that, perspect participant, desir outcom action, participants. 14it interest bring deliber cost value. propos action deem safe, taken afford expens incur actions. leav extens futur work. 26 contraind transplant that, priori, independ donor recipi hcv. example, avail lung big recipi thorac cavity. argument directli attack argument a1, context, precise, local context, avail organ propos transplant given patient. captur notion, explicitli associ argument local context fact actions. ... donor male donor hcv .... recipi 45 year old recipi hcv .... transplant donor hcv recipi hcv ... donor male donor hcv .... recipi 45 year old recipi hcv .... transplant donor hcv ar gu m en ta tio n nt ex t a1: a2: a1: a2: a3: figur 5: argument submit fact highlight relevant. note example, deem relev recipi 45 year old donor male. moreover, donor hcv (hepat c virus), recipi hcv highlight either. denot local context action argument a, local context fact c. submiss argument, c empty. updat subsequ submit argument contain propos action (e.g. transplant proposal) c minimum set fact propos action perform (e.g. avail organ potenti recipient). general, submit argument updat c account particular case (e.g. donor recipi particularities). previou exampl saw argument a2 extend c includ donor hcv. argument a3 extend c ad recipi hcv. note fact (global) context cf , us argument highlight relevant. thus, set fact (resp. actions) ad c (resp. a) relevant. mean that, local context fact complementari action main action safe unsafe. continu identif element relat pro- claim arguments, let recal proclaim argument express re- lation domains: current state (r), action (a), arriv state (s) goal (g). constrain s g s contain effect action a, g contain undesir goal effect realise. let recall, intend effect main propos action assum desir so, question. 27 let formalis domain term finit set ground predic written teletype, e.g. av org(d,o) r mean organ o donor d available. proclaim argument express relat element domains. specifically, follow elements: c: local context fact assum case, c r. a: local context propos actions, a. r: set facts, r r. set fact write r1, r2,... denot rp set fact introduc precondit perform propos action. a: set actions, a. write denot main set action ac complementari cours action argu prevent achiev undesir effect. set complementari action write ac1, ac2,... s: set effect caus propos action, s s. set effect write s1, s2,... g: undesir goal realis s, g g. goal write g1, g2,... differ argument scheme defin proclaim correspond differ relat elements, relat express term special predicates, defeas consequ relat | con- clusion follow defeas non-monoton set premises. assume: defeas consequ relat |; background theori ; special predic effect subset s effect(s), s s, denot s effect given background context fact c action . special predic intended15 subset intended(ac), ac a, denot set action ac intended. given set fact actions, assum conjunct case, respec- tive proposed. and, b set fact actions, element b hold, respect intended, write b. 15in deliber present work distinguish intend propos perform action. discuss 5.2.5. 28 thus, example, write: rcintended(a)| effect(s). mean r c case, propos action result set effect s. rational caus s background theori . agent knowledg resourc defin version , contain differ rule reason techniques. example, basic artifici agent contain fix tabl precodifi 4-tupl relat dimens r s g. slightli sophist artifici agent defin intern structur dimens number transit rules. human agent, hand, us reason (her version |;) reason exchang arguments. however, heterogen agent agre syntax semant exchang proclaim arguments. typic background theori written subscript conse- quenc relations: |. emphasis c assum case, i.e. contextu information, written sub- script consequ relations: |ca. notat effect consequ relation, allow singl particular element relation: e.g. highlight set fact r consequ relat r|ca effect(s). liberti omit intend predic wrap actions. element relat relev set fact action (w.r.t. realis undesir goal) defin follows: definit 5.1 context fact c propos action set fact r r said relev follow situat holds: circumst c, r hold action caus undesir effect. otherwise, r hold, undesir effect longer expect caus (in circumst c ): r|ca effect(s); effect(s)|rc g |ca effect(s). circumst c action caus undesir effect. r holds, effect expect caus a, effect deem undesir ( i.e. degre effect realis undesir goal weak): |ca effect(s) effect(s)|c g either: 29 r|ca effect(s) or; r effect(s)|ca g note said undesir effect expect strictli local context defin c a. undesir effect occur reasons, e.g., fact c cf . definit relev complementari cours action follows: definit 5.2 context fact c propos action set action ac said relev precondit rp perform hold (rp cf ) ac prevent undesir effect caus one. is: |ca effect(s) effect(s)|c g rp intended(ac)|ca effect(s) or; rp intended(ac)|ca effect(s) effect(s)|c g |ca effect(s). follow us introduc concept defin argument scheme associ critic question argument layer. scheme critic question particip submit arguments, highlight argument relev fact complementari cours actions. relev factor (fact actions) on ad argument local contexts. pa submit arguments, relev fact action introduced, tree argument t evalu resolv main action safe performed. 5.2 protocol-bas exchang argument section introduc argument scheme associ critic question tailor deliber safeti critic actions. argument scheme encod particular relat element r, a, s g. argument instanti scheme repres instanc re- lations, associ cq question them. thus, exchang arguments, particip build subspac r s g tailor particular problem hand. hence, deliber process regard mechan explor relev fact r, account comple- mentari cours action a, guid (undesirable) effect 30 highlight s g . relev element r impact s g . scheme critic question introduc modular fashion. start introduc set assumpt help construct basic circuit scheme associ cqs: assum 1: r, a, s g intern structur (e.g. taxonomy). assum 1a, assum 1b, assum 1c assum 1d respectively. assum 2: introduc fact r cf . argument us fact context fact cf . assum 3: a) propos action ca , b) perform (rp cf ), c) conflict propos action (i.e. action jointli perform caus undesir effect). assum 4: g g main action realis g action deem unsafe. relax assumpt extend circuit cqs. 5.2.2 enrich r taxonomi introduc specif relation. 5.2.3 add defeas entail r allow uncertainty. 5.2.4 permit us fact cf , order account incom- plete information. finally, 5.2.5 discuss extens formalising. 5.2.1 basic argument scheme subsect present basic protocol-bas exchang argument consist argument scheme associ critic question player particip deliberation, introduc new relev fact complementari cours actions. scheme present composite: set preconditions, scheme body, associ critic question scheme context up- date rule argument local context (c ) updated. bodi scheme present complementari representa- tions: narr version written natur language; formal version; deliber dialogu locutions, i.e. content argu challeng locut introduc 4.2. let start introduc argument scheme, as1, set deliber topic. fact, scheme instanti- at deliber open stage (4.2) proposal. argument root t. let introduc notation, scheme as1 propos main ac- tion assumpt caus undesir effect: undsideeffect(am), denot weak negation. subsequ argu- ment attack assumpt highlight undesir goal defend assumpt argu realis highlight undesir 31 goal. as1 preconditions: rp cf , ca, c = {} = {} body: circumst rp propos cours action safe performed. rp undsideeffect(am)|propose(am) argue(c,a,propose(rp,am)); critic questions: cq1: circumst undesir effect achieved? context updat rule: c := rp; := am. illustr us scheme, let introduc exampl transplant scenario, develop paper. let sup- pose lung donor d avail (av org(d,lung)) potenti recipi r (p recip(r,lung)). intent transplant lung recip- ient (transp(r,lung)). hence, av org(d,lung),p recip(r,lung) cf transp(r,lung) ca. initi argument, a, submit instanti as1 follows: a: argue({},{},propose({av org(d,lung),p recip(r,lung)}, {transp(r,lung)}))16 argument instanti as1 propos main action make as- sumption undesir goal realised. attack argument involv argu assumpt false, undesir goal realised. typically, critic question associ scheme enabl agent attack valid element scheme connect them. also, altern possibl action effect propos action [4]. particular case argument instanti as1 question fact, set fact r, current circumst (r cf ) make propos action unsafe. hence, question assumpt contraind perform propos action. is, critic question cq1, denot as1 cq1, used. 16it worth note artifici agent repres intern argu- ment forms, instanc standard support-claim argument struc- ture like < {av org(d,lung) p recip(r,lung) undsideeffect(transp(r,lung)) propose(transp(r,lung)), av org(d,lung), p recip(r,lung)}, propose(transp(r,lung)) > 32 answer question, implicitli encod assumpt initi argument, impli littl progress deliberation. answer ye question constitut attack argument. thus, deliber- ation effect progress, as1 cq1 address introduc contraindication, i.e. set fact r result action caus undesir effect. us as1 cq1 effect argument instan- tiat scheme as2, attack argument instanti as1. finally, illustr scheme context updat rule, note repli argument assum contextu inform avail lung donor d, potenti recipi r organ trans- plant intended. is, c = {av org(d,lung),p recip(r,lung)} = {transp(r,lung)}. needless say, assert fact action retract context layer, deliber concludes. as2 preconditions: r cf , s s, s 6= , g g, c context fact action target argument. body: circumst c r holds, action caus effect s realis undesir goal g. r |ca effect(s); effect(s) |cr g; argue(c,a,contra(r,s,g)); critic questions: cq1: circumst state effect occur? cq2: circumst effect realis state goal? cq3: complementari cours action prevent achiev state effect? context updat rule: c := c r; := a. argument instanti as2 identifi contraind r perform propos action a, circumst c. continu example, let suppos donor offer lung smoke histori ( d p(d, h): donor d properti s h). let suppose, well, donor agent, da, offer lung transplan- tation, believ s h contraind lung reject 33 recipient, realis undesir goal grft fail(r). hence, da believ as1 cq1 case, want attack argument a. submit argument b1 (see fig. 6), instanti as2 follows: b1: argue(c,a,contra({d p(d, h)},{reject(r,lung)},grft fail(r))); let identifi as2 critic questions. is, line attack pursu order to, example, attack argument b1. pur- pose, let highlight assert argument instanti as2, take account c updat (e.g. argument b1, c = {av org(d,lung),p recip(r,lung), d p(d, h)}) remain proclaim argument assert relat set r, a, s g : 1. c | effect(s); 2. effect(s) c | g; firstly, relat hold evalu proxi level (4.1) ma valid incom argument resolu- tion stage (4.2) rel strength accept argument assigned. secondly, assumpt present begin subsection, local context c cf ca(assum 2 assum 3a resp) taken case (e.g. argument b1 d p(d, h) holds). assum 4 g hold consequ ac- tion deem unsafe. attack argument instanti scheme as2 updat c relat hold ( | effect(s) | g). fact c action cf ca respectively, cf ca allow inconsistencies, updat local context truth preserving. retract negat element cf ca context layer effect move discuss 5.2.4. r intern structur (we discuss relax assim 1 5.2.2), truth preserv updat c ad new set (relevant) fact r c complementari cours action ac a. there- fore, question argument instanti scheme as2 exist set r cf new context c r effect s longer expect (as2 cq1); undesir goal g realis (as2 cq2)17. note appear assertion. thus, chang (a ac) propos order argu complementari cours action ac prevent effect s (as2 cq3). critic question practic us appropri rele- vant r ac provided. critic question as2 cq1, as2 cq2 as2 cq3 address attack argument respect instan- 17that is, given new context c r degre s realis g weak. 34 tiat scheme as3, as4 as5, introduc relev rs acs. as3 preconditions: r cf , s effect target argument c updat context fact action target argument. body: circumst c r holds, effect s expect caus a. r|ca effect(s) argue(c,a,no effect(r,s)); critic questions: cq1: circumst undesir effect occur? context updat rule: c := c r; := a. as4 preconditions: r cf , s g target argument repli c updat context fact action target argument. body: circumst c assum perform r holds, s realis g effect(s) r|cg argue(c,a,not realis goal(r,s,g)); critic questions: cq1: circumst effect realis undesir goal? context updat rule: c := c r; := a. 35 as5 preconditions: ac ca, rp cf precondit perform ac, s target argument; c updat context fact action repli argument. body: circumst c rp complementari cours action ac prevent action caus effect s. ac rp|ca effect(s) argue(c,a,prevent action(ac,rp,s)); critic questions: cq1: circumst undesir effect achieved? context updat rule: c := c rp; := ac. figur 6 illustr us argument schemes. argument b2, instanti as3, attack b1, indic donor chronic obstruct pulmonari diseas (r = {d p(d,no copd)}) donor smoke histori longer contraindication. argument c2, instanti as4, attack argument c1, indic potenti recipi al- readi hiv (p r p(r,hiv)), infect deem sever infect caus lung transplant18. finally, argument d2 illustr instanti scheme as5 propos administr penicillin recip- ient (treat(r,penicillin)) lung donor caus death streptococcu viridan endocard (d p(d,sve)) prevent infect bacteria (r p(r,svi)). set precondit rp argument d2 empty.it assum scenario avail penicillin mean administr antibiotic. fact ad set preconditions. note attack argument b1, c1 d1 asymmet- ric (one wai attacks), attack b1, c1 d1 respect b2, c2 d2 symmetric. reason differ attack rela- tion case, argument favour propos action base assumpt contraind exists; assump- tion undermin attack arguments. (e.g., d1 undermin default assumpt contraind identifi contraind (d p(d, svi)). second case, complementari cours action propos 18given p r p(r,hiv), degre effect(r p(r,hiv)) realis sev inf(r) weak. 36 id type argument as1 argue({},{}, propose({av_org(d,lung), p_recip(r,lung)}, {transp(r,lung)}) ) b1 as2 a) b) argue(c,a, contra({d_p(d,s_h)}, {reject(r,lung)}, graft_failure) ) b2 as3 argue(c,a, no_side_effect({d_p(d,copd)}, {reject(r,lung)}) ) c1 as2 argue(c,a, contra({d_p(d,hiv)}, {r_p(r,hiv)}, sever_infect) ) c2 as4 argue(c,a, not_realised_goal({p_r_p(r,hiv)}, {r_p(r,hiv)}, sever_infect) ) c3 as6 argue(c,a, contra({r_p(r,superinf)}, sever_infect) ) d1 as2 argue(c,a, contra({d_p(d,sve)}, {r_p(r,svi)}, sever_infect) ) d2 as5 argue(c,a, preventive_action({treat(r,penicillin)}, {r_p(r,svi)}) ) d3 as2 argue(c,a, contra({p_r_p(r,pen_allergy)}, {r_p(r,anaphylaxis)}, sever_infect) ) b1 attack relation: c1 d1 c2 c3 b2 d2 d3 figur 6: exampl line argument structur reasoning: b argument address donor smoke histori (d p(d, h)), c ar- gument address donor hiv (d p(d,hiv)); d argument address fact donor caus death streptococcu viridan en- docrditi (d p(d,sve)) result recipi lung contract streptococcu viridan infect (r p(r,svi)). argument c updat accord scheme context updat rules. prevent undesir effects, prevent realis matter debate. hence, d2 attack d1 propos treat(r, penicillin) prevent reject(r, lung), efficaci preven- tativ measur debat (implicitli then, d2 d1 disagre d p(d, svi) contraindication). disagr explicit symmetr attack. resolv transplant safe requir decis d p(d, svi) contraindication, is, d2 prefer d1 vice versa (thi discuss 7). note however, fourth argument d3 submit attack ar- gument d2, indic instanc potenti recipi allerg penicillin, attack asymmetr direct assump- tion argument d2 contraind exists. argument d2 defend (i.e attack) d3 case symmetr attack. let return scheme as3, as4 as5 order identifi cqs. argument instanti scheme as3 as4 introduc new set relev fact r. argument instanti as5 introduc complementari cours action ac possibl set precondit rp. stage r, rp ac taken case (resp. intended), assumpt assum 2 assum 3a. argument instanti as2, r ac rel- evant decid proxi level (e.g. argument b2 accepted, 37 figur 7: argument scheme connect associ critic question i.e., {d p(d,no copd)}|ca effect({reject(r, lung)}) sense) resolut stage (e.g. argument b2 defeat argu- ment b1, i.e., {reject(r,lung)} prevented). argument, arg, instanti scheme as3, as4 as5, assum (a case submit argument) (other) contraindica- tion exist perform main action. assumpt question as3 cq1, as4 cq1 as5 cq1. as1, critic question address attack identifi contraind associ- at undesir effects. attack embodi argument instanti scheme scheme as2, analog attack submit argument argument instanti as2. however, time, wai defend main action safety, arg introduc new set factor (fact actions) warrant, respect cause, undesir effect. is, time, attack as3 cq1, as4 cq1 as5 cq1 have introduc new set facts. attack embodi argument scheme as6 differ as2 requir introduc addit set relev fact r: 38 as6 preconditions: s s, non-empti differ repli argument state effect, g g; c updat context fact action repli argument. body: circumst c action caus effect s realis undesir goal g. |ca effect(s); effect(s) |ca g; argue(c,a,contra(s,g)); critic questions: cq1: circumst state effect achieved? cq2: circumst achiev effect realis state goal? cq3: complementari cours action prevent achiev state effect? context updat rule: c := c; := a. continu medic exampl illustr us scheme as2 as6 order attack argument instanti scheme as3, as4 as5 (see fig. 6). suppose, instance, recipi lung intend allerg penicillin. thus, wai prevent recipi bacteri infect penicillin administ (d2), allerg reaction severe, (anaphylaxis). argument action safeti em- bodi d3 instanti scheme as2. illustr us scheme as6, let continu argument line a, c1 c2, argu lung safe transplant despit donor have hiv potenti recipi viral infection. current believ case transplant caus superinfec- tion[63], uncontrolled, sever infection. note new factor introduc order attack argument c2. thus, attack embodi argument c3 instanti as6. basic circuit scheme critic questions, as6 critic question as2. figur 7 depict circuit argument scheme connect asso- ciat critic question present section. follow subsect 39 relax assumpt introduc subsect address requir extens basic circuit. 5.2.2 account specif let suppos da offer transplant lung donor histori cancer (d p(d,h cancer)). da argu histori recipi result have effect cancer. depict figur 8 argument (e1) instanti scheme as2. let sup- pose da ad cf fact d p(d,h nonmel skin c) mean donor nonmelanoma skin cancer. histori cancer gener exclud criteria donor. however, kind past malignancies, nonmelanoma skin cancer, risk transmit- ting malign recipi believ margin [25]. let suppos ra believ case wish argu particular type cancer transplant safe. sight argument construct instanti scheme as3 r = {d p(h nonmel skin c)} new relev set facts. updat local context fact be: c = {av org(d,lung),p recip(r,lung),d p(d,h cancer), d p(d,h nonmel skin c)} clearli c hold (c cf ), bit inform despit import captur as3 used. is, d p(d,h cancer) d p(d,h nonmel skin c) independ facts, subclass former. furthermore, implicit assumpt donor histori nonmelanoma skin cancer type cancer. order account need relax assum 1a associ r relat specif account fact that, instance, {d p(d,h nonmel skin c)} {d p(d,h cancer)}. have defin taxonomi r circuit scheme cq ex- tended. cq kind current circumst that...? (i.e. as2 cq1, as2 cq2, as3 cq1, as4 cq1, as5 cq1, as6 cq1 as6 cq2) embodi attack scheme as2, as3 as4 specif version as2s, as3 as4s. introduc scheme as3s, scheme as2 as4 defin analogously: 40 as3 preconditions: rg c, rs cf , s repli argument c context fact action repli argument. body: rs, particular case rg, hold circumst (c rg) effect s expect caus a. rs rg rs|(crg)a effect(s) argue(c,a,no effect(replac s(rg, rs),s)); critic questions: as3 context updat rule: c := (c rg) rs; := a. main chang new scheme wai local context fact c updated. instead introduc addit set fact r (a case as2, as3 as4) subset rg c replac specif set fact rs (r rg). way, explicit rg hold itself, independ rs. rather, rg case rs holds, rs entail rg. thus, example, d p(d,h cancer) hold d p(d,h nonmel skin c) case. figur 8: exampl illustr us argument scheme as3 chal- lenge. 41 continu example, argument e1 attack argument e2 instanti scheme as3 follows: e2: argue( {av org(d,lung),p recip(r,lung),d p(d,h cancer)},{transp(r,lung)}, effect( replac s({d p(d,h cancer)}, {d p(d,h nonmel skin c)}), {r p(r,cancer)})); updat local context fact being: c = {av org(d,lung),p recip(r,lung),d p(d,h nonmel skin c)} 5.2.3 account uncertainti argu 4.2, proclaim support disput fact cf hold not, import decis make account evid support fact assert argumen- tation layer. particip abl request provid evidence. example, ra want know evid support fact donor hiv. enabl assum 1a relax associ r defeas consequ relat |ev ev|evfact indic set fact ev r evid support fact fact r . exampl {clin rec(d,hiv)} |evd p(d,hiv) indic donor clinic record support fact donor hiv. secondly, circuit scheme cq extend argu- ment scheme introduc relev set fact r19, assert fact ri r, associ cq form evid believ ri case? . now, cq intend question ri particip provid evid support. however, intend partic- ipant argu ri false, resolv outsid proclaim. thus, cq formalis challeng locutions: challenge(evidence(ri)) replai expect argument provid evidence, set fact (ev cf ), support ri (ev|evri). so, challeng direct argument c1 challenge(evidence(d p(d,hiv))) repli provid set fact {clin rec(d,hiv)}. purpos cq allow bring evid introduc fact based. inher uncertainti fact conform circumst decis make take place explicit. way, decis account uncertainty, may, course, motiv enquiri order inform decisions. example, doctor proce perform serolog (blood) 19these scheme as2, as2s, as3, as3s, as4 as4s. 42 test donor order conclus evid donor actual hiv. however, result enquiri fed proclaim deliber updat cf , actual enquiri formalis proclaim. state cq associ argument scheme de- fine introduct new set facts, i.e. scheme as2, as2s, as3, as3s, as4 as4s. present scheme as2ev instanti construct argument repli challeng ar- gument instanti as2 as2s. scheme (as3ev link as3 as3 scheme as4ev link as4 as4s) defin analogously: as2ev preconditions: ri question fact, rev cf , s g argument challenged, c updat context fact actions. body: rev evid ri case, circumst (c {ri}) rev action caus effect s realis undesir goal g. rev |ev ri rev |(c {ri})a effect(s); effect(s) |revci g argue(c,a,contra(replac ev(ri, rev),s,g)); critic questions: as2 as2 add cq cq4i: evid believ ri case? (ri r, r new introduc set facts) context updat rule: c := (c {ri}) rev; := a. note argument instanti scheme as2ev provid evid (rev) support challeng fact, claim assert fact replac evid base undesir effect caus (see figur 8.). analog argument instanti scheme as3ev claim effect expect and; argument instanti scheme as4ev claim effect undesir updat circumstances. lack evid support challeng fact motiv particip evid deliber (e.g. perform serolog test 43 donor: test(d,blood,hiv)). however, case evid acquired, leav challeng weakli replied, unreplied. lead pa retract challeng fact subtract cf , bring extens circuit, account incomplet information. t left uncertain unknown facts, decis maker decid do. have resolv prefer argument t, safeti action amount decid uncertain and/or unknown fact case not, resolut plausibl aim assess likelihood fact case, account risk involv case. proclaim aim identifi relev fact risk involv case, intend address resolut process weight likelihood versu risk. discuss 7. 5.2.4 account incomplet inform player start deliber set fact believ case, cf , argument process realis potenti relev information, r, missing. is, r, r / cf . still, fact unknown, decis need perform propos action. decis maker awar potenti relev inform missing. account situation, argument circuit extend particip submit argument introduc set fact r relevant, despit r *cf .20 is, argu r relevant, unknown hold not. way, particip explicit data, presum relevant, missing. so, submit hypothet arguments. argument form r case, then.... hypothet argument formalis exactli manner present above, differ relax precondit fact argument cf . is, relax assumpt assum 2. general, updat argument layer independ context layer, vice versa. independ result definit type arguments: definit 5.3 suppos c updat local context fact argument arg, then: c cf , arg factual argument. r c s.t. r cf , arg overrul argument. otherwise, arg hypothet argument. 20assuming, later see, r c 0 44 illustr practic us hypothet arguments, let introduc new organ accept criterion [27]: pancrea transplantation, guidelin suggest donor ag 45 yr; nonetheless, pancrea good appear inspect retriev donor ag 45-62 yr; achiev graft surviv pancrea donor ag 45 ys.. hence, donor elderli (over 45 years, pancrea case) pancrea transplant like rejected, realis graft failure. unless, pancrea good appearance. however, order check pancrea appearance, organ retrieved. hence, transplant deem safe, provisionally. let suppos pancrea 60 year old donor avail donor have hcv. suppos da offer pancrea (argument a, figur 9) argu that: 1) donor elderly, recipi reject organ (argument g1, instanti scheme as2), 2) donor hcv contraind (argument h1, instanti as2), recip- ient infect (hypothet argument h2, instanti as4). suppos that, respons da submit argument ra add cf fact p r p(r,hcv) (the recipi hcv) make argument h2 factual. also, let suppos ra submit hypothet argument g2 instanti as3 follows: g2 = argue(c,a, effect({o p(d,pancreas, good app)}, {reject(r,pancreas)}) ) o p(d,pancreas, good app) indic donor pancrea good appearance. argument g2 factual organ retrieved. take account, suppos argument g2 h2 deem prefer g1 h1 respect (fig. 9 c.), pancrea deem suitabl recipient, subject organ appear retrieval. is, retriev o p(d,pancreas, good app) holds, organ transplanted, transplant performed, argument g2 overruled. note that, potenti recipi hcv (p r p(r,hcv) cf ), transplant deem unsafe, irrespect pancrea appear- anc (fig. 9 d.). similarly, h1 submit hypothet (it unknown donor hcv not) h2 factual, be- come irrelevant, decid action safety, donor hcv. namely, hypothet factual argument indic unknown fact worth check hold. independ element cf c make argument potenti factual, overrul hypothetical. allow independ relax precondit addit set fact r cf . defin cf consist set fact (cf0 ) precondit enforc argument context be, turn, consistent. preserv properti hypothet argu- ments, ensur addit set fact r consist 45 figur 9: exampl illustr us hypothet arguments. element argument local context c. so, scheme as2, as2s, as2ev, as3, as3s, as3ev, as4, as4s, as4ev, add precondition: introduc set relev fact r r c 0 5.2.5 discuss extens number extens propos circuit scheme cqs. extens involv 1) identifi motiv set exampl need addressed; 2) relax appropri assumpt finally; 3) defin procedur scheme cq captur right relat set r, a, s g appropri updat set c a. procedure, argument scheme, motiv chang assess main action safeti (within local context fact actions). subsect extens current formalising. requir extens intend allow pa point action incompat differ local context actions. exampl complementari action ac1 ac2 propos mitig prevent differ effect highlight differ branch t. action correspond differ local contexts: < c1,a1 > < c2,a2 >. suppos ac1 ac2 perform caus undesir effect. firstli address exampl assumpt assum 3c relaxed, complementari action deem conflict. secondli procedur defin undesir effect caus ac1 ac2 jointli performed. suggest 46 updat local context < c1,a1 > < c2,a2 > merg (i.e. < c1 lfd2,a1 a2 >), captur fact local context longer independent. extens relat action involv make distinct intend mere proposing/suggest action. example, seam reason ra argu intend treat recipi antibiot prevent certain infection, da suggest treatment recipient. formalis similar fashion 5.2.4 address problem incomplet information. relax assum 3a, argument instanti scheme as5 us complementari action ca, redefin as5 precondit identifi factual, hypothet overrul arguments. extens discuss intend allow address fact circumst altern perform main propos action deriv undesir consequ effect caus propos action. thus, pa abl question degre undesir goals. questioning, example, cancer undesir- abl effect organ transplant altern organ transplant result death potenti recipient. address exampl assum 1d relax associ g relat un- desirability, assum 4 need relax realis g g reason abort propos action. final appropri procedur defined. 6 asr deliber circuit scheme cq defined, tailor encod stereo- typic reason pattern deliber safety-crit actions, specialis circuit particular application, e.g. transplant environment scenario. illustrate, let consid argument scheme as1 which, given precondit rp, action proposed. transplant scenario pro- pose action same: transplant organ, precondit are: avail organ potenti recipient. course, instanc donor, recipi organ different. thus, tailor as1 transplant scenario involv captur recurr pattern allow differ donor, organ recipi instantiation. un- ground predic av org(donor,organ),p recip(recipient,organ) transp(recipient,organ). denot variabl upper-cas letter defin tailor version as1 as: as1t : argue({},{},propose({av org(d,o),p recip(r,o)},{transp(r,o)})) scenario-specif scheme cq encod asr. ma refer repositori order provid legal repli argument. 47 doing, proclaim facilit highli focus deliberation, paramount intend applications. particip direct argument submiss degre need blank (a as1t ), also, referenc asr ma easili identifi argument logic valid, littl sens applic scenario. furthermore, specialis asr plai import role cbrc retriev process, help identifi potenti similar case (broadli speaking, case reason pattern specialis scheme used), discuss 8. 6.1 construct asr given new scenario application, import task instan- tiat proclaim framework, construct asr, defin argu how. section procedur construction, wai illustr transplant scenario. firstly, asr developers21 identifi type inform deliberation. inform encod set r, a, s g, respect denot unground version r, a, s g. is, example, av org(d,lung) r then, av org(d,o) r. step choos (type of) safety-crit action argu (e.g. {transp(r,o)} a) identifi set precondit requir ac- tion perform (e.g. {av org(d,o),p recip(r,o)} r). chosen set action ai set precondit rp r develop defin specialis version as1: as1i : argue({},{},propose(rp i, ai)) as1i associ cq as1i cq1: con- traindic perform action ai?, embodi attack specialis version as2. thus, given specialis as1 develop produc specialis version as2. specialis version as2 repli argument instanti as1t form: as2t : argue({av org(d,o),p recip(r,o)},{transp(r,o)},contra(r,s,g))22 now, undesir goal action bring about, (e.g. sev inf, cancer, grft fail, death,...) partial specialis version as2, e.g.: as2t gf : argue({av org(d,o),p recip(r,o)},{transp(r,o)}, contra(r,s,grft fail(r))) 21most naturally, construct asr carri mainli scienc develop supervis domain experts. 22note r set fact r variabl bound p recip(r,o) transp(r,o). 48 develop identifi type effect s realis undesir goals, turn, identifi type contraindica- tion r lead main action caus effects. thus, ex- ample, graft failur occur recipi reject organ ({reject(r,o)}) donor properti ({d p(d,p)}, e.g. d p(d, h)), blood mismatch (e.g. {blood(d,btyped), blood(r,btyper)}) combin organ properti recipi properti ({o p(o,po), p r p(r,pr)} e.g. lung big recipi thorac cavity), etc. combin constitut specialis version as2: as2t gf1: argue({av org(d,o),p recip(r,o)},{transp(r,o)}, contra({d p(d,p)},{reject(r,o)},grft fail(r))) as2t gf2: argue({av org(d,o),p recip(r,o)},{transp(r,o)}, contra({blood(d,btyped), blood(r,btyper)},{reject(r,o)},grft fail(r))) as2t gf3: argue({av org(d,o),p recip(r,o)},{transp(r,o)}, contra({o p(o,po),p r p(r,pr)},{reject(r,o)},grft fail(r))) figur 10: asr builder. now, specialis scheme associ cq scheme as2, direct develop construct asr. example, respect embodi critic question as2t gf1 cq1, as2t gf1 cq2 as2t gf1 cq3 specialis schemes: 49 as3t gf1 1: argue({av org(d,o),p recip(r,o), d p(d,p)},{transp(r,o)}, effect({d p(d,p2)},{reject(r,o)})) as4t gf1 1: argue({av org(d,o),p recip(r,o), d p(d,p)},{transp(r,o)}, realis goal({p r p(r,pr)},{reject(r,o)},grft fail(r))) as5t gf1 1: argue({av org(d,o),p recip(r,o), d p(d,p)},{transp(r,o)}, prevent action({treat(r,t)},{},{reject(r,o)}))) process continu similar wai specialis schemes. develop direct construct asr circuit scheme cq describ 5. furthermore, describ 5, scheme repres natur languag form, specialis scheme associ natur languag version e.g.: as5t gf1 1: organ reject prevent treat recipi t. figur 11: asr browser. note earlier, asr construct kei activ instanti proclaim us given domain. requir effort scienc develop domain experts, familiar argumentation. facilit task develop onlin tool develop php mysql: intend assist develop step step asr construction23 (see figur 10) tool24 allow domain expert navig natur languag form asr scheme cq (see figur 11). tool current prototyp phase develop provid us proof concept illustr potenti valu approach. current tool applic proclaim environment domain [52]. altern scenario, decis maker 23 24 50 decid industri wastewat safe discharg wastew- ater treatment plant. hence, case, potenti relev fact decid action safeti includ industri spill content, treatment plant condit characterist extern factor weather conditions. undesir effect spill bring relat prob- lem occur treatment plant, turn caus ecolog imbal fluvial ecosystem. action prevent mitig undesir effect includ us differ organ chemic product wastewater. factor combin follow proce- dure introduc here, build asr environment scenario (see [52]). subsect illustr space argument codifi asr form us artifici human agents. follow subsect effort enabl highli focus deliber process heterogen agents. 6.2 ma guid task deliber begin argument propos main action, instanti specialis version as1 asr. basic idea action (e.g. {transp(r,o)}) propos precondit (e.g. {av org(d,o), p recip(r,o)}) met. transplant scenario, soon avail- abl organ (e.g. kidney) donor (e.g. d) potenti recipi (e.g. r) as1t instanti automat deliber triggered: inform(ma,all,conv id,0,-1 open dialogue( propose({av org(d,kidney),p recip(r,kidney)},{transp(r,kidney)}) da offer organ ra respons potenti recipi enter dialogue, submit request: request(da id,ma,conv id,1,0,ent dialogue(proposal,da, d basic info)) request(ra id,ma,conv id,2,0,ent dialogue(proposal,ra, d basic info)) which, accept ma repli inform messag broadcast participants: inform(ma,all, conv id,3,1, enter dialogue(proposal,da,d basic info,{ma},cfa,t, legal replies)) inform(ma,all, conv id,4,2, enter dialogue(proposal,ra,r basic info,{ma,da},cfa,t,leg replies)) where, example: d basic info = {d p(d,sve), d p(d,young), loctn(d,hosp1), blood(d,ab+)...}; r basic info={loctn(r,hosp2),blood(r,ab+)...}. 51 messag cf updat contain d basic info r basic info. ca contain action transp(r,kidney) t contain initi proposal, a1. note broadcast messag ma inform par- ticip possibl line attack argument t. exampl repli argument a1. legal repli spe- cialis schemes: as2t inf1: argue(c,a, contra({d p(d,pd)},{r p(r,pr)},sev inf(r))) as2t gf3: argue(c,a, contra({o p(lung,po),p r p(r,pr)}, {reject(r,lung)},grft fail(r))) as2t cncr3: argue(c,a, contra({o p(lung,po)},{r p(r,cancer)}, cancer(r))) c = {av org(d,kidney),p recip(r,kidney)} = {transp(r,kidney)}. hence, ra argu donor sve25 caus streptococcu viridan infect (svi) recipient, ra select scheme as2t inf1 legal repli requir replac pd sve pr svi order construct desir argument. request(ra id,ma,conv id,5,4, argue(argue(c,a, contra({d p(d,sve)},{r p(r,svi)},sev inf(r)))). argument accept ma broadcast submit argument provid particip list legal repli as: as3t inf1: argue(c,a, effect({d p(d,pd)},{r p(r,svi)})) as4t inf1: argue(c,a, realis goal({p r p(d,pd)},{r p(r,svi)}, sev inf(r))) as5t inf1: argue(c,a, prevent action({treat(r,t)},{},{r p(r,svi)}) as2 inf1 cq41: challenge(d p(d,sve)) c = {av org(d,kidney),p recip(r,kidney),d p(d,sve)} thus, new argument challeng ad t, ma provid particip challeng readi submit tailor scheme partial instanti requir fill in. example, scheme as5t inf1 requir identifi action t (e.g. penicillin teicoplanine) prevent recipi infection. scheme as3t inf1 guid par- ticip consid donor properti pd transplant safe spite have d p(d,sve)26. 25note d p(d,sve)cf . 26to knowledge, properti known. nonetheless, future. 52 figur 12: argument editor applic present [53]. panel provid human user legal repli (as5t inf1) argument. infer engin button valid argument accord knowledg base artifici agent aid user deliberation. button provid user legal repli (anoth scheme, e.g. as4t inf1) button suggest propos scheme instanti suggest artifici agent knowledg base. note 6.1, asr encod scheme code format us artifici agent natur languag represent form hu- man users. gener applic instanti proclaim featur number visualis modes. example, content deliber displai tree interact nodes, node label relev fact action argument highlight. click node, natur languag represent displayed, legal repli present natur languag templat instanti user. [53], artifici agent guid user argument submiss possibl scheme instanti (see fig.12), valid altern instanti propos users. user ultim decid argument submit, engag deliber artifici agent interact sole scheme for- mat prolog code. applic implement softwar compon develop fp6 european project aspic27: argumenta- tion engin agent reason dialogu manag extens act ma. applic mainli implement java, jade28 agent implement argument engin partial implement java prolog (see [53]) . have submit arguments, pa submit moves() move. pa so, ma submit time out(reason) locution, resolut stage initi ma proce evalu t. 7 argument evalu resolut stage, ma evalu statu argument t. involv appli dung theori order identifi 27 28 53 defensible, defeat justifi argument t. argument root t evalu justified, action deem safe, defeated, line argument lead rejection, identifi contraind warrant deem action unsafe. prior comput argument statu ma to: 1) refer dck cbrc compon submit addit arguments; 2) assign prefer relat argument mutual attack other, symmetr attack prevent definit statu evalu main propos argument; final 3) appropri deal argument hypothet defend challeng them. discuss 2, ma submit addit argument referenc dck cbrc. knowledg resourc help identifi fact cf altern complementari cours action relev decis making, accord domain consent knowledge, taken account pas. relev factor ad t mean submit argument instanti appropri legal reply. second knowledg resourc propos submiss argument submit previou similar case current t(see 8). thus, task, ma plai role addit pas: expert specialist domain consent knowledge, specialist reus evid collect past deliberations. consid instanc argument line a, d1, d2 d3 5.2.1 illustr figur 13c, where, order prevent streptococcu infect recipi (argument d1) pa propos administr patient penicillin (d2). however, patient allerg penicillin (d3). ma us dck cbrc suggest altern antibiot (e.g. teicoplanine) prevent infect recipient. pose argument (d4 fig. 13) instanti scheme as5t inf1. wai regular pa endors argument support endors layer, dck cbrc assign prefer relat mutual attack arguments. second task ma. let suppose, now, t contain hypothet argument challeng successfulli repli to. problem symmetr attack prevent evalu root argument main action propos justifi defeat (that is, defensible). solv impass prefer relat assign mutual attack argument decid asymmetr attack other. consid argument framework argument a, b1 b2 5.2.1, debat avail lung viabl donor smoke histori copd (see fig. 13a.). exampl decid transplant safe amount decid argument b1 prefer b2 (and asym- metric attack b2) b2 prefer b1 (and asymmetr attack b1). case root argument reject ground semantics, transplant deem unsaf (a graft failur expect donor smoke history, donor copd). later case root argument justifi 54 ground semantics, transplant deem safe believ {d p(d,no copd)} hold {d p(d, h)} contraindication. prefer relat mutual attack argument deter- mine proclaim knowledg resourc dck, cbrc aem. knowledg resourc provid perspect argument rel strength. dck deriv prefer assign standard guidelin regul domain (e.g. donor organ accept criteria). instance, lung donor smoke histori copd deem viabl transplant accord current agreed-upon transplant guidelin dck deem b2 prefer b1. cbrc de- rive assign previou similar cases. broadli speaking, argument similar b2 successfulli deem prefer argument similar b1 previou similar case cbrc deem b2 prefer b1 (a discuss 8). final aem take pa endors move (those e) assign weight base measur trust specif applica- tion scenario (e.g. base role pa prestig transplant unit pa represent). thus, trust agent endors b2 b1, aem deem b2 prefer b1. simpl example, b2 deem prefer b1 ma broadcast solut kind: transplant safe. however, differ knowledg resourc yield conflict prefer (dck deem b1 prefer b2 cbrc deem opposite), prefer assign vari degre confidence. furthermore: novel propos pa lead situat dck littl knowledge; depend case cbrc evid prefer argument another; finally, equal trust pa endors compet argument prevent aem deem argument stronger other. address issues, maintain independ prefer assign final decis maker account differ perspect recommendations. let defin prefer assign mapping: pref : aa 7 [1, 1] [1, 1] [1, 1] thus, pref(a1,a2) = (a, b, c), prefer assign dck, b cbrc c aem, posit valu express prefer argument later (a1 prefer a2) neg valu opposite. zero mean prefer all. bigger absolut valu number, confid prefer assignment. pref(a1,a2) = (1,1,1) a2 deem prefer a1 confidence. prefer assign agreement, instanc pref(a1,a2) = (0.2,0.6,0.5), decis maker decid overrid guidelin (a1 prefer a2 confid 0.2), trust pa assess know reliabl expert (a2 prefer a1 confid 0.5) opinion back evid (a2 prefer 55 a1 confid 0.6). cours symmetr attack import resolv preclud definit evalu statu root argument propos main action. example, figur 13c. determin direct asymmetr attack (base preference) d1 d2 relevant, irrespect determination, d2 defeat argument d3. id argument argue({},{}, propose({av_org(d,lung), p_recip(r,lung)}, {transp(r,lung)}) ) b1 b) argue(c,a, contra({d_p(d,s_h)}, {reject(r,lung)}, graft_failure) ) b2 argue(c,a, no_side_effect({d_p(d,copd)}, {reject(r,lung)}) ) h1 argue(c,a, contra({d_p(d,hcv)}, {r_p(r,hcv)}, sever_infect) ) h2 argue(c,a, not_realised_goal({p_r_p(r,hcv)}, {r_p(r,hcv)}, sever_infect) ) h3 challenge(evidence(d_p(d,hcv)) ) d1 argue(c,a, contra({d_p(d,sve)}, {r_p(r,svi)}, sever_infect) ) d2 argue(c,a, preventive_action({treat(r,penicillin)}, {r_p(r,svi)}) ) d3 argue(c,a, contra({p_r_p(r,pen_allergy)}, {r_p(r,anaphylaxis)}, sever_infect) ) h1d1 h2 h3d2 d3 b1 b2 b1 b2 arg1 no_copd-unknown b1 h4 no_copd -depend no_copd-depend no_copd-unknown b2 d4 (-0.1,-0.4,-0.5) (0,-0.6,0) a) c) h4 argue(c,a, contra(replace_ev(d_p(d,hcv),{clin_rec(d,hcv)},{r_p(r,hcv)}),sever_infect)) d4 argue(c,a, preventive_action({treat(r,teicoplanin)}, {r_p(r,svi)}) ) figur 13: argument tree evalu address ma evalu task involv account hypothet argument challeng weakli repli unreplied. discuss 5.2.3 5.2.4, purpos proclaim deliber decid uncertain unknown fact case, relev action safety, so, risk involv fact case. risk involv fact case highlight argument indic undesir effect expected, let discu proclaim identifi uncertain unknown fact decis maker ware of. prefer assign process taken place, hypothet argument weakli repli challeng taken regular element t, follow label process take place: argument updat local context fact contain unknown fact, 56 f (i.e. f,f /cf ) label f -unknown; argument updat local context fact contain uncertain fact f , i.e. f cf , f challeng defended. argument label f -uncertain; argument challeng accept statu (defeat justi- fied) depend argument label f-unknown f -uncertain label f -dependent. let continu argument a, b1 b2, suppos argument b2 deem prefer b1 fact d p(d,no copd) unknown, b2 d p(d,no copd)-unknown argument b1 d p(d,no copd)-dependent. because, d p(d,no copd) taken case, b1 defeat justified, taken false, b2 overruled, b1 justifi defeated. namely, b1 accept statu depend d p(d,no copd). note example, decis transplant lung address problem know d p(d,no copd) case. argument d p(d,no copd)-dependent. figur 13b argument b1 attack defeat argument arg1. case, d p(d,no copd) hold not, argument justified. general, argument propos main action label f -depend fact f , uncertainti fact f ad- dress decis makers, case final decis actual depend f believ case. figur 13c. illustr propos solut delibera- tion. provid safe/unsaf solut ma return new version t 1) possibl new argument (e.g. d4), 2) mutual attack resolv wai attack confid (e.g. b2 prefer b1, h1 prefer h1) confidence, decis maker given actual valu prefer assign ultim decid argument prefer (e.g. pref(d1, d2) = (-0.1,- 0.4,-0.5) pref(d1, d4) = (0,-0.6,0) ). final 3) main propos argument label fact need resolv order decid main action safeti (e.g. argument d p(d,no copd)-dependent). exampl depict figur 13c transplant deem safe de- cision maker believ d p(d,no copd) case reli teicoplanin prevent recipi infection. timeout locut trig- gere yet, decis taken, new version t return pa accept solut submit locut accept(sol id) continu ad information, e.g. endors argument d4 sub- mit argument d5 indic recipi allerg teicoplanin. case, pa inform addi- tional move timeout trigger ma comput new solution. particip submit accept(sol id) locut timeout 57 triggered, deliber conclud submiss locut close deliberation(solution,sol id) given solution. 8 tree argument evid deliber concluded, tree argument t contain fact action deem relev assess main propos action safety, view point domain experts, guidelines, regul past collect evidence. main action deem safe eventu performed, t updat appropri pa record actual outcom action performance. instance, recipi lung donor smoke histori copd reject transplant organ, ra updat t b1 prefer b2 (e.g. chang figur 13 attack relat b1 b2 b1 asymmetr attack b2).note updat argument t longer presumpt explanatori nature. actual outcom perform action. so, updat t reus evid resolv futur similar deliberations, cbrc role. section outlin circuit argument scheme defin facilit reus evid encod previou deliberations. refer reader [57] comprehens descript reason cycl retrieve, revise, reus retain [1] implemented. aspect scheme defin facilit cbrc task: 1) specif scheme asr (a describ 6) 2) relev fact complementari cours action introduc structur fashion, singl introduc step step. scheme specif allow identifi potenti similar case littl comput cost. idea case specialis scheme (reason patterns) used, similar. thus, organis case-bas term argument schemes, set broadli similar case effect retrieved. aspect scheme facilit detail comparison case basi similar case introduc relev fact actions. illustr simpl exampl medic scenario. suppos deliber consist argument a, d1 d2, lung donor caus death streptococcu viridan en- docard (d p(d,sve)) offer transplantation, donor sve believ contraind (d1) recipi infect bacteria. argument d2 indic infect prevent administr penicillin recipient. argument a, d1 d2 respec- tive instanti scheme as1t , as2t inf1 as5t inf1 (see 6.2) encod follow reason pattern: organ o intend transplantation. donor condi- tion p bring sever infect recipient. treatment 58 t recipi propos prevent infect retriev case-bas deliber consist scheme obtain case similar target case. now, past case organ o lung, condit p similar sve (e.g. streptococcu bovi endocarditis) treatment t similar penicillin, obtain desir set case evalu target case evidenti basis. thus, argument scheme heurist first, broad case retrieval, similar case ultim deriv similar fact action highlight relev decis making. similar fact action deriv distanc measur term ontology. so, instance, distanc medic ontolog term penicillin teicoplanin given threshold, deriv treatment antibiot similar. thus, argument instanti scheme asr, term instanti similar, argument similar (see [57] detail).29 have retriev set similar cases, repres argument trees, cbrc deriv prefer assign mutual attack arguments. retriev ts repres case action performed, contain asymmetr attacks. exampl result type retriev argument trees: t+, argument similar d2 asymmetr attack defeat similar d1, i.e. action successful; t-, argument similar d1 defeat similar d2, i.e. treatment prevent recipi infection. incid t+ case significantli outnumb t- case argument d2 deem prefer d1, argument d1 deem prefer d2 or, evid prefer argument other, conflict remain unresolved. target t accordingli edit proclaim knowl- edg resources, final evalu indic action safe, target case retain case-bas reus evid futur similar cases. describ [57]. 9 conclusions, futur relat work paper present argumentation-bas model proclaim deliber safety-crit actions. model aim provid set effect effici deliberation: 1) facilit particip 29other work (e.g [37]) address issu equival argument framework (where framework equival result differ se- mantics). cbrc us t associ case heurist identifi similar cases, similar determin similar fact highlight relevant. words, retriev t s equival argument frame- works. 59 exchang argument heterogen agent 2) focus deliber- ation relev matter discussed. central realis kei featur us argument scheme critic questions. 5 defin circuit scheme cq defin protocol-bas exchang arguments, specialis deliber safeti critic actions. 6 illustr circuit specialis particular scenario scenario-specif scheme facilit argument construct human artifici agents. particular illustr how, direct mediat agent, us dialogu game introduc 4, particip guid stage deliber argu how. way, deliber effect model argument process elicit knowledg participants. primari contribut proclaim enabl autom deliber dialogu agent (human software) organ transplant decis (or environment decis [52]), manner structur orderly, elicit inform need decis jointli rationally, inform possess particip agents. secondari contribut dialogu requir particip specialis knowledg argument theory, framework emb medic domain expertis natur wai scenario-specif argument schemes. year grow number propos appeal us argument scheme argumentation-bas dialogu [42, 38, 47, 21, 5, 10]. work gener assum scheme propos walton [60] propos atkinson et al. [4]. scheme undoubtedli great value, believ abstract real life applications. possibl cover possibl line reason cours appealing, requir circumst (e.g. legal applic [22, 6, 62] e-democraci [21, 12]). however, decision-mak applic benefit narrow line reason essenti problem hand, make better us decis make context. specialis scheme cq reduc comput cost reason focu dialogu essential, increas chanc success deliber process. best knowledg know work propos explor ad valu scenario-specif scheme cqs. main contribut work show provis scenario specif scheme cq facilit rel sophist deliber sensit domain human organ transplant in- dustrial wastewat manag [52], reduc complex argu- ment construct fill simpl templat (a shown 6.2). main focu work facilit agent exchang argu- ments, contribut proclaim s approach argument valid evaluation. requir flexibl prevent spuriou argument disrupt deliberation. requir provid decis support propos action safe not, achiev 60 incorpor relev fact action tree argument evalu basi guidelin regulations, expert opinion past collect evidence. knowledg resourc agreement, action safeti depend uncertainti fact, propos solut provid reason deem action safe unsafe. otherwise, propos solut highlight relev issu resolved. taken together, contribut provid foundat practi- cal realis deliber involv artifici human agents30. believ proclaim help bridg gap theoret model argumen- tation agent system (a embodi work [4]) practic realisation. contribut paper includ proclaim s decoupl res- olut case deliber action safety. firstly, give prioriti main question:i action safe current circum- stances? -so that, example, question current circumst (i.e. fact cf ) licens challeng action safeti (at local context). secondli allow address, rel simpl fashion, problem incomplet uncertain information, time construct- ing arguments, updat new avail inform evalu arguments.anoth contribut wai relev fact action explicitli singl argument construction. this, argument scheme repository, great import cbrc task reus past deliber evidence. worth recal point proclaim intend regul environ pa (human artificial) expect fulli coop- er domain experts. assum share agreement rule purpos deliberation. particular assum propos action desir default circumst disagr circumst action safe performed, agreement effects, believ caused, suffici undesir prevent perform propos action deem unsaf (e.g. cancer, graft failur death recipi organ). particular, pa individu goal valu argumentation.31 believ import progress develop reason pattern deliber safeti critic actions, number assumpt address futur works. no- tabli assumpt prefer undesir goal complementari propos action compatible. disabl possibl argu favour action caus un- desir effect (e.g. cancer recipient) altern result wors outcom (e.g. death recipient). later assumpt disregard 30a illustr [53] implement prototyp us scheme cq similar describ paper facilit deliber human artifici agent viabil human organ transplant 31thei influenc argument submit endorse, constitut reason proclaim deliber deem action safe not. 61 possibl cours action caus undesir effect jointli performed. briefli discu limit 5.2.5. futur work add express action dimens incorpor notion order action performed. proclaim definit assumpt pa dis- pute descript state affairs. rational as- sumption li intuit pa provid inform privileg access. so, da privileg access infor- mation donor, ra recipient. similarli environment scenario, agent repres infrastructur disput inform give infrastructure. assump- tion motiv limit possibl argu strictli case allow request evid support assert f cf . in- tuition develop explicitli integr proclaim definition. note however, decoupl deliber t cf , conflict resolut procedur decid case easili plug proclaim outcom updat set fact cf turn affect ts argument shift type factual, hypothet overruled. nonetheless, investig generalis cf include, example, rule facts. involv techniqu belief revis contract requir (recal current assum negat retract fact cf . futur work address reformul case-bas reason cycl present [57] order accommod formalis argument scheme critic question paper. import requir implement proclaim realist situat expand corpu scheme cq transplant environment scenario asrs. import perform rigour evalu scope limit elabor schemes. requir futur work better formalis dialogu game present 4.2 order facilit implementation, particular intend axiomat semantics, defin pre post condit dialogu move. regard relat work, number work (e.g. [26], [11]) propos deliberation, persuas negoti model argument agent systems32. however, best knowledge, work address practic aspect enabl actual implement propos model scenario elabor simpl illustr examples. number work appli multi-ag system safeti critic domains; particularli medic (see [24]) environment domain (see [15]). relev awar [35], specif logic argument propos aid medic doctor decis make multi-ag setting. work primarili conceptu address agent dialog interact role scheme criti- 32see proceed argument multi-ag system (argmas) workshop se- ri ( 62 cal question guid argument construction. works, [45] [20] relat sens repositori argument scheme critic question plai central role. intend assist user argument diagramming, intend help (human) user construct wide varieti arguments, improv abil protect interest (poten- tial) dialogues, especi legal domain. interest approach taken magtalo system[46], repositori fulli instanti ar- gument help user express posit subject public debate. user direct dialogu differ artifici agent allow explor system knowledg base follow natur flow dialogue. user agre differ expos arguments, select argument directli argument store resource, type argument natur languag (with addit support). interact present non intrus mode elicit knowledg users. claim base term maieutic function dialogu [61], i.e. user immers dialogu feel interrogated. sens believ meiautic function place import underli structur argument (note [9] valu purpose) exploit context applic that: 1) pa need concern argument construction, fill blank templat present domain expertis jargon; 2) elicit knowledg readili avail comput use, oppos embed free text paragraph. refer [1] a. aamodt e. plaza. case-bas reasoning: foundat issues, methodolog variations, approaches. ai commun., 7(1):39 59, 1994. [2] l. amgoud c. cayrol. accept argument preference- base argumentation. procced fourteenth confer un- certainti artifici intellig (uai 1998), page 17, 1998. [3] aristotle. topics. clarendon press, oxford, uk, 1928. [4] k. atkinson, t. bench-capon, p. mcburney. comput represen- tation practic argument. synthese, 152(2):157206. [5] k. atkinson, t. bench-capon, s. modgil. argument decis support. databas expert system applications, page 822831. springer, 2006. [6] t. bench-capon h. prakken. argument scheme hypothet reason law. artifici intellig law, page 122, 2010. 63 [7] t.j.m. bench-capon. persuas practic argument valu base argument frameworks. journal logic computation, 13(3):429 48, 2003. [8] t.j.m. bench-capon p. e. dunne. argument artifici intelli- gence. artifici intelligence, 171(10-15):619641, 2007. [9] j. bentahar, b. moulin, m. belanger. taxonomi argument model knowledg representation. artifici intellig review, 33(3):211259, 2010. [10] e. black k. atkinson. dialogu account differ perspec- tive collabor argumentation. proceed 8th interna- tional confer autonom agent multiag systems-volum 2, page 867874. intern foundat autonom agent multiag systems, 2009. [11] e. black k. atkinson. agre do. argma 2010, page 1, 2010. [12] d. cartwright k. atkinson. comput argument support e-participation. intellig systems, ieee, 24(5):4252, 2009. [13] m. chalamish s. kraus. automed: autom mediat bilater negoti time constraints. proceed 6th intern joint confer autonom agent multiag systems, page 248. acm, 2007. [14] c.i. chesnevar, g.r. simari, l. godo. comput dialect tree effici possibilist defeas logic programming. logic program nonmonoton reasoning, page 158171, 2005. [15] u. cort m. poch, editors. advanc agent-bas environment manag systems, whitestein seri softwar agent technolog autonom computing. birkhus basel book, springer, 2009. [16] p. m. dung. accept argument fundament role nonmonoton reasoning, logic program n-person games. artifici intelligence, 77:321357, 1995. [17] p.m. dung, p. mancarella, f. toni. comput ideal sceptic argu- mentation. artifici intelligence, 171(10-15):642674, 2007. [18] br gaines, dh norrie, az lapsley. mediator: intellig infor- mation support virtual manufactur enterprise. sys- tems, man cybernetics, 1995. intellig system 21st cen- tury., ieee intern confer on, volum 1, page 964969. ieee, 2002. 64 [19] m. p. georgeff a. l. lansky. reactiv reason planning. aaai, page 677682, 1987. [20] t. f. gordon, h. prakken, d. walton. carnead model argu- ment burden proof. artif. intell., 171(10-15):875896, 2007. [21] t.f. gordon, h. prakken, d. walton. carnead model ar- gument burden proof. artifici intelligence, 171(10-15):875896, 2007. [22] t.f. gordon d. walton. legal reason argument schemes. 12th intern confer artifici intellig law, page 137146. acm, 2009. [23] c. l. hamblin. fallacies. methuen ltd, london, uk, 1970. [24] d. isern, d. sanchez, a. moreno. agent appli health care: review. intern journal medic informatics, 2010. [25] h.m. kauffman, m.a. mcbride, f.l. delmonico. report unit network organ share transplant tumor registry: donor histori cancer1. transplantation, 70(12):1747, 2000. [26] e.m. kok, j.j.c. meyer, h. prakken, g.a.w. vreeswijk. for- mal argument framework deliber dialogues. argma 2010, page 73, 2010. [27] a. lopez-navidad f. caballero. extend criteria organ accep- tance. strategi achiev organ safeti increas organ pool. clinic transplantation, 17(4):308324, 2003. [28] p. lorenzen k. lorenz. dialogisch logik. wissenschaftlich buchge- sellschaft darmstadt, germany, 1978. [29] d. marelli, h. laks, s. bresson, a. ardehali, j. bresson, f. esmailian, m. plunkett, j. moriguchi, j. kobashigawa. result transplan- tation donor heart preexist coronari arteri disease. journal thorac cardiovascular surgery, 126(3):821825, 2003. [30] m. mbarki, j. bentahar, b. moulin. specif complex strategic-bas reason argumentation. argument multi- agent systems, page 142160, 2007. [31] p. mcburney, d. hitchcock, s. parsons. eightfold wai deliber- ation dialogue. intern journal intellig systems, 22(1):95132, 2007. [32] p. mcburnei s. parsons. game agent play: formal framework dialogu autonom agents. journal logic, languag information, 13:315343, 2002. 65 [33] p. mcburnei s. parsons. dialogu game agent argumentation. i. rahwan g. simari, editors, argument artifici intelligence, chapter 13, page 261280. springer, berlin, germany, 2009. [34] s. modgil. reason prefer argument frameworks. ar- tifici intelligence, 173(9-10):901934, 2009. [35] s. modgil j. fox. guardian agent approach safeti medic multi-ag systems. safeti secur multiag systems, page 6779, 2009. [36] p. s. munindar. agent commun languages: rethink princi- ples. ieee computer, 31(12):4047, 1998. [37] e. oikarinen s. woltran. character strong equival argu- mentat frameworks. proceed 12th intern confer- enc principl knowledg represent reason (kr 2010). aaai press, 2010. [38] e. oliva, p. mcburney, a. omicini, m. viroli. argument artifact negoti support. intern journal artifici in- telligence, 4(s10):90, 2010. [39] s. parsons, p. mcburney, e. sklar, m. wooldridge. relev utter formal inter-ag dialogues. proceed 4th intern confer argument multi-ag systems, page 4762. springer-verlag, 2007. [40] h. prakken. coher flexibl dialogu game argumentation. journal logic computation, 15(6):1009, 2005. [41] h. prakken. formal system persuas dialogue. knowledg eng. review, 21(2):163188, 2006. [42] i. rahwan, b. banihashemi, c. reed, d. walton, s. abdallah. rep- resent classifi argument semant web. knowledg engin review (to appear). [43] i. rahwan g.r. simari. argument artifici intelligence. springer publish company, incorporated, 2009. [44] c. reed t. j. norman, editors. argument machines: new fron- tier argument computation. kluwer academ publishers, 2004. [45] c. reed g. rowe. araucaria: softwar argument analysis, diagram- ming representation. intern journal artifici intellig tools, 13(4):983, 2004. [46] c. reed s. wells. dialog argument interfac complex debates. ieee intellig systems, page 6065, 2007. 66 [47] c. reed, s. wells, j. devereux, g. rowe. aif+: dialogu argument interchang format. proceed 2008 confer comput model argument: proceed comma 2008, page 311323. io press, 2008. [48] j.r. searle. ration action. mit press, 2003. [49] w. shen, f. maturana, d. h. norrie. metamorph ii: agent-bas architectur distribut intellig design manufacturing. journal intellig manufacturing, 11(3):237251., 2000. [50] s. simoff, c. sierra, r.l. mantaras. requir auto- mate mediat agents. pre-proceed kr2008-workshop knowledg represent agent multi-ag systems, sydney, septemb 2008, page 171. citeseer, 2008. [51] p. tolchinsky, k. atkinson, p. mcburney, s. modgil, u. cortes. agent deliber action propos proclaim model. ceemas, page 3241, 2007. [52] p. tolchinsky, m. aulines, u. cortes, m. poch. deliber safeti industri wastewat discharg wastewat treatment plants. advanc agent-bas environment manag systems, whitestein seri softwar agent technolog autonom com- puting, chapter 2, page 3760. birkhus basel. springer, 2009. [53] p. tolchinsky, u. cortes, d. grecu. argumentation-bas agent increas human organ avail transplant. agent technolog e-health, whitestein seri softwar agent technolog au- tonom computing, chapter 3, page 6593. birkhus basel. springer, 2008. [54] p. tolchinsky, u. cortes, s. modgil, f. caballero, a. lopez- navidad. increas human-organ transplant availability: argumentation- base agent deliberation. ieee intellig systems, 21(6):3037, 2006. [55] p. tolchinsky, u. cortes, j. c. nieves, f. caballero, a. lopez-navidad. argu agent increas human organ pool transplantation. 3rd workshop agent appli health care (ijcai-05), 2005. [56] p. tolchinsky, s. modgil, u. cortes. argument scheme critic question heterogen agent argu viabil human organ. aaai 2006 ss series; argument consum health- care, page 105-111, aaai press, 2006. [57] p. tolchinsky, s. modgil, u. cortes, m. sanchez-marre. cbr ar- gument scheme collabor decis making. comma, volum 144 frontier artifici intellig aplications, page 7182. io press, 2006. 67 [58] j. vazquez-salceda, u. cortes, j. padget, a. lopez-navidad, f. ca- ballero. organ alloc process: natur extens carrel agent-medi electron institution. aicommunications., 3(16), 2003. [59] b. verheij. dialect argument argument schemes: approach legal logic. artif. intell. law, 11(2-3):167195, 2003. [60] d. n. walton. argument scheme presumpt reasoning. lawrenc erlbaum associates, mahwah, nj, usa, 1996. [61] d. n. walton e. c. w. krabbe. commit dialogue: basic concept interperson reasoning. suni seri logic language. state univers new york press, albany, ny, usa, 1995. [62] a. wyner t. bench-capon. argument scheme legal case-bas reasoning. legal knowledg inform systems. jurix, page 139 149, 2007. [63] s. zink, h. smolen, j. catalano, v. marwin, s. wertlieb. natco, organ transplant profession public polici statement. hiv- to-hiv transplantation. progress transplant (aliso viejo, calif.), 15(1):86, 2005. 68