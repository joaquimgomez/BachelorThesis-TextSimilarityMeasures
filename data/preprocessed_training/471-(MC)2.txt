space-tim balanc domain decomposit | siam journal scientif comput | vol. 39, no. 2 | societi industri appli mathemat copyright siam. unauthor reproduct articl prohibited. siam j. sci. comput. c 2017 societi industri appli mathemat vol. 39, no. 2, pp. c194c213 space-tim balanc domain decomposit santiago badia marc olm abstract. work, propos two-level space-tim domain decomposit precondition parabol problem discret finit elements. motiv extens space-tim balanc domain decomposit constraint preconditioners. kei ingredi defin subassembl space operator, coars degre freedom (dofs) want enforc continu subdomain precondition level, transfer oper subassembl origin finit element space. regard subassembl operator, perturb time deriv need end well-pos preconditioner. set coars dof includ time averag (at space-tim subdomain) classic space constraint plu new constraint consecut subdomain time. numer experi propos scheme weakli scalabl time, i.e., effici exploit increas comput resourc solv time step total elaps time. further, scheme weakli space-tim scalable, lead asymptot constant iter solv larger problem space time. excel wall clock time weak scalabl achiev space-tim parallel solver thousand cores. kei words. space-tim parallelism, domain decomposition, bddc, preconditioning, scalabl am subject classifications. 65n55, 65n22, 65f08 doi. 10.1137/16m1074266 1. introduction. begin decade, supercomput ex- pect reach peak perform exaflop/s, impli 100 time improv respect current supercomputers. improv base faster processors, larger number processor (in broad sense). situat certainli impact larg scale comput sci- enc engineering. parallel algorithm requir exhibit higher level concurrency, keep good scalabl properties. mesh-bas implicit simulations, e.g., finit element (fe), finit volume, finit differ methods, end linear solved. linear solv bottleneck simul pipelin weakli scalabl algorithm requir complex mathemat approaches, like algebra multigrid (amg) multi- level domain decomposit (dd) techniques. deal transient problems, inform move forward time, exploit sequentiality. time step solv spatial problem proceed step parallel exploit linear solve. parallel-in-tim method popular, sequential-in-tim approach standard pro- cedur scientif simulations. however, tremend parallel submit journal softwar high-perform comput section 9, 2016; accept public (in revis form) januari 11, 2017; publish electron april 25, 2017. funding: work european research council fp7 programm idea start grant 258443 - comfus: comput method fusion technolog fp7 numexa project grant agreement 611636. work author support catalan govern icrea acadmia research program. work second author support agncia gesti dajut universitari recerca, fi-agaur 2015 grant. centr internacion mtode numric lenginyeria (cimne), parc mediterrani la tecnologia, upc, estev terrada 5, 08860 castelldefels, spain universitat politcnica catalunya, jordi girona 1-3, edifici c1, 08034 barcelona, spain cimne.upc.edu). c194 d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. space-tim balanc domain decomposit c195 exploit near futur certainli motiv chang paradigm, concurr opportun sought. transient simulations, natur wai exploit concurr space time. idea develop space-tim solver exploit sequenti (at global level) provid solut space time valu shot. space-tim parallel topic receiv rapidli increas attention. differ iter method consid far. approach us parar method [16], time-onli parallel algorithm, combin parallel space precondition (see, e.g., [13]). space-tim algorithm pfasst [11, 19], combin spectral defer correct time integr nonlinear multigrid spatial solver; viabil pfasst method prove [20] juqueen. weakli scalabl space-tim amg method [14, 23, 12]. multilevel balanc dd constraint (bddc) precondition [18, 22] recent prove excel candid extrem scale simul [4], recurs implement permit overlap commun comput level scale half million core million subdomain (mpi tasks), structur unstructur mesh ten billion elements. kei ingredi method reli definit fe space relax interel continuity. space defin choos quantiti continu processors, i.e., coars degre freedom (dofs) [9]. far know, scalabl dd method space-tim consid far. work, develop weakli scalabl space-tim precondition base bddc methods. order that, extend kei ingredi space- parallel bddc framework, namely, subassembl space operator, coars dofs, transfer operators, space-time. prove result method involv set well-pos problems, time causal exploit local level. solv set linear nonlinear problem excel weak scalabl propos preconditioners. outlin articl follows. section 2 set problem introduc notation. section 3 introduc classic space-parallel bddc pre- conditioners. section 4 develop space-tim bddc (stbddc) preconditioners. section 5 present detail set numer experi show scalabl properti propos methods. finally, section 6 draw conclusions. 2. problem setting. section, introduc problem solved, partit domain space time, space time discretization. follows, calligraph letter operators. m denot mass matrix oper relat time deriv discretization, k rest term pde operator, sum operators. given oper a, us notat a(u, v) .= au, v. uppercas letter (v, . . .) (fe-type) function space function repres lowercas letter (v, . . .). us classic function analysi notat sobolev spaces. 2.1. domain partitions. consid bound space-tim domain (0, t ], open polyhedr domain rd, d space dimension. let construct partit , fine partit element coars partit subdomains. partit element repres . space, element e tetrahedra/hexahedra d = 3 triangles/quadrilater d = 2. coars partit subdomain obtain aggreg element , d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. c196 santiago badia marc olm i.e., element partit .= {e : e } . interfac subdomain partit .= \ . time interv (0, t ], defin time partit {0 = t0, t1, . . . , tk = t} k time elements. denot kth element k .= (tk1, tk] k = 1, . . . ,k. 2.2. space-tim discretization. let consid model problem fol- low transient convection-diffusionreact (cdr) equation: u h1() tu u+ u+ u = f , (0, t ],(1) u = g , u(0, x) = u0, posit constants, rd, f h1(). supplement initi condit u(0) = u0. homogen dirichlet data assum sake clariti exposition, extens gener case obvious. besides, let consid = 0 = 0 simplic exposit algorithm. section 5 nonlinear viscos (u) = 0|u|p (with p 0 0 > 0), i.e., transient p-laplacian problem. space discretization, us h1-conform fe space conform mesh strong imposit dirichlet conditions. discontinu galerkin (dg) case consid work, refer [10] definit bddc method dg discretizations. defin v h10 () global fe space relat fe mesh . further, defin fe-wis oper me(u, v) .= e uv, ke(u, v) .= e u v, ae(u, v) .=me(u, v) + |k|ke(u, v). global fe problem : v v written sum element contribu- tions, i.e., a(u, v) .= e ae(u, v) u, v v (analog m k). time, us collocation-typ method lines. sake clarity, us backward-eul time integr scheme. case, result precondition readili appli -method rungekutta method. interest solv follow fulli discret system: given u(t0) = 0, time step k = 1, . . . ,k solut u(tk) v (2) au(tk) = mu(tk) + |k|ku(tk) = g(tk) v v , g(tk) .= |k|f(tk) +mu(tk1) v , v denot dual space v . non- homogen boundari condit enforc simpli modifi right- hand t1, i.e., g(t1) .= |k|f(t1) + mu0 v . imposit boundari conditions, i.e., enforc homogen condit fe space plu mod- ific right-hand side, better suit space-tim framework. (we note wai strong dirichlet boundari condit impos fe codes.) 3. space bddc preconditioning. section, present parallel solver transient problem (2), combin sequential-in-tim approach d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. space-tim balanc domain decomposit c197 space-parallel bddc precondit krylov solver time step [9]. serv introduc space-parallel bddc method relat concept requir space-tim section. bddc precondition involv definit kei ingredients: (1) subassembl problem involv independ subdo- main corrections, (2) set coars dof correspond subspac function continu coars dof subdomains, (3) interior correct transfer operators. let elabor ingredients. 3.1. subassembl problem. nonoverlap dd precondition reli definit subassembl fe problem, contribut subdo- main assembled. order so, subdomain , consid fe space v associ element partit homo- geneou boundari condit . defin subdomain oper a(u, v) = e ae(u, v), u, v v (analog form k). subdomain space lead subassembl space function v .= v. u v , defin restrict subdomain u. function u v repres uniqu decomposit subdomain function {u v}. defin subassembl oper a(u, v) .= a(u, v) (analog form k). definitions, v understood subspac function v continu interfac , interpret galerkin project v . note fe type defin v , requir defin local space {v} subassembl space v , respectively. point, state follow subassembl problem: given g v , u v au =mu + |k|ku = g, .(3) previou notation, write subassembl problem compact manner au = g. 3.2. coars dofs. kei ingredi dd precondition classifi set node fe space v . interfac e fe mesh decompos vertices, edges, faces. simpl classif entities, base set subdomain contain them, split interfac faces, edges, vertic (at subdomain level), call geometr objects. repres set geometr object . cases, edg face open set correspond dimension. construction, face belong subdomain edg belong subdomain three-dimension problems. classif object automat lead partit interfac dof dof objects, fact dof fe belong geometr entity. definit heavili dd precondition (see, e.g., [21, p. 88]). next, associ (or all) geometr object coars dof. bddc methods, usual coars dofs, mean valu subset object o. typic choic o o .= c , corner considered, o .= c e , corner edg considered, o .= , corners, edges, face considered. choic lead common variant bddc method refer bddc(c), bddc(ce), bddc(cef), respectively. classif dof object restrict subdomain , lead set subdomain object o(). d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. c198 santiago badia marc olm classif interfac node choic object o, defin coars dof correspond bddc space. given object o(), let defin restrict oper function u v follows: (u)() = u() node belong geometr object , zero otherwise. defin bddc space v v subspac function v v constraint (4) (v) ident neigh(), neigh() stand set subdomain contain object . (the integr valu vertex, vertex.) thus, o defin coars dof valu (4) continu subdomains. further, defin bddc oper galerkin project v . 3.3. transfer operator. step defin transfer oper subassembl space v continu space v . transfer oper composit weight oper harmon extens operator. 1. weight operatorw take function u v comput mean valu interfac nodes, i.e., (5) wu() .= neigh() u() |neigh()| , node fe mesh , neigh() stand set sub- domain contain node . lead continu function wu v . clear oper modifi dof interface. choic defin nonconst physic coefficients. 2. next, let defin bubbl space v0 .= {v v : v = 0 } galerkin project a0 v0. defin trivial inject i0 v0 v . harmon extens read ev .= (ii0a10 t 0 a)v. comput ofa10 involv solv problem (3) homogen boundari condit . oper correct interior dof only. transfer oper q : v v defin q .= ew. 3.4. space-parallel preconditioner. ingredients, posit defin bddc preconditioner. precondition addit schwarz precondition (see, e.g., [21, chap. 2]), correct v0 bddc correct v transfer q. result, bddc precondition read (6) b .= i0a10 t 0 +qa 1qt . 4. space-tim bddc preconditioning. comment section 1, huge amount parallel futur supercomput requir scientist seek addit concurrency. simul (2) space-parallel precondition (6), sequential-in-tim approach exploit time causality. object section solv (2) time step shot, space-timeparallel precondition krylov subspac method nonsymmetr problems. order so, want extend bddc framework space-time. following, us bold symbols, e.g., u, v , a, space-tim functions, function spaces, operators, respectively. ident matrix, differ dimens differ appearances. d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. space-tim balanc domain decomposit c199 first, start space-tim partit (0, t ]. consid time subdomain partit aggreg time elements, {0 = t0, t1, . . . , tn = t} n time subdomains. denot nth subdomain n .= (tn1, tn] n = 1, . . . , n . definition, n admit partit kn time element {tn1 = t0n, . . . , t kn n = tn}. next, defin space-tim subdomain partit carte- sian product space subdomain partit time subdomain partit defin above; space subdomain time subdomain n, space-tim subdomain n .= n. global space continu space-tim function want solv (2) fe space v spatial function time k + 1 time steps, i.e., v .= [v ]k+1, constrain zero initi condition. thus, definition, u v express u = (u(t0) = 0, u(t1), . . . , u(tk)), origin problem (2) (for time step values) state compact manner (7) au = f v . order defin stbddc precondition (7), us structur above, extend ingredi section 3 space-tim case. 4.1. subassembl problem. space-tim partit above, trial (and test) space local space-tim subdomain n v n .= [v]kn+1. thus, definition, v n express = (u(t0n), . . . , u(tknn )). anal- ogously, subassembl space v .= nn=1v n . let note that, definitions, function v duplic valu tn n = 1, . . . , n 1. global space continu space-tim function v understood sub- space function v continu space-tim interfac tn n = 1, . . . , n 1. now, propos follow subassembl problem v : solut u v that, n space-tim partition, satisfi space-tim problem kn k=1 { m(u(tkn) u(t k1 n ), v(t k n)) + | k n|k(u(t k n), v(t k n)) } (8) + (1kr1,n) 2 m(u(t0n), v(t 0 n)) (1krn,n) 2 m(u(tknn ), v(t kn n )) = kn k=1 |kn|f(t k n)(v(t kn n )) v v , kri,j kroneck delta. note perturb term second line (8) introduc time interfaces, i.e., time step time subinterval, long correspond time step time domain boundary. subdomain n = 1, t0n = 0, stabil term vanishes. analogously, second stabil term vanish n = n tknn = t . write (8) compact manner (9) au = f v . motiv perturb term posit semidefinit sub- assembl operator. case, perturb term that, inter- subdomain assembly, recov origin space, i.e., fact subassembl oper respect a, interfac perturb subdomain cancel out. prove properti hold. d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. c200 santiago badia marc olm proposit 4.1. galerkin project subassembl space-tim prob- lem (9) v reduc origin problem (7). further, subassembl oper posit definite. proof. order prove equivalence, need galerkin project v , amount sai perturb term vanish u v . first, note follow equal n n=1 ( (1kr1,n) 2 u(t0n) (1krn,n) 2 u(tknn ) ) = 0 hold function continu time, u(t kn1 n1 ) = u(t 0 n) n = 2, . . . , n . hand, multipli right hand (8) v = u, fact (a b)a = 12 (a 2 b2) + 12 (a b) 2, (10) a(u,u) = 1 2 u(t )2 + n n=1 k k=1 ( 1 2 u(tkn) u(t k1 n ) 2 + |kn|k(u(t k n), u(t k n)) ) . k posit semidefinite, posit semidefinite. hand, lower block triangular matrix. restrict subdomain block, diagon block 12m time step, m + |k|k intermedi time steps, 1 2m + |k|k time step. matric invertible, nonsingular. further, upper triangular nonsingular matrix. result, posit definite. 4.2. coars dofs. let defin continu enforc space- time subdomains. let consid set space object o (see section 3). defin v v subspac function v v constraint (11) kn1 k=1 |kn| (v(t k n)) ident neigh(), hold o, (12) v(t0n) = v(t kn1 n1 ) , n = 2, . . . , n. set constraint mean valu space constraint (4) time subinterv n. second constraint enforc continu consecutive- in-tim subdomain n1 n mean valu function cor- respond space subdomain . galerkin project v denot a. additionally, motiv space-tim definit objects, i.e., appli object gener space-tim meshes, enforc continu coars dof (v(t 0 n)), n = 2, . . . , n, (v(t kn n )), n = 1, . . . , n 1,(13) o. thus, enforc pointwise-in-tim (in comparison mean valu (11)) space constraint time interfaces. figur 1 illustr result space-tim set object continu enforc subassembl space v . d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. space-tim balanc domain decomposit c201 fig. 1. continu enforc space-tim subdomains, one-dimension spatial domain case. set node red relat space constraint time averag time subinterv (11), on blue space mean valu constraint time interfac (12), on orang spatial constraint time interfac (13). 4.3. transfer operator. next, defin transfer oper v v , concept harmon extens space-tim setting. 1. order defin space-tim weight operator, us spatial-onli definit (5). let defin subdomain restrict weight oper wu .= (wu). defin space-tim weight oper restrict n (14) wnu .= (wu(t kn1 n1 ),wu(t 1 n), . . . ,wu(t kn n )), w .= nn=1wnun . observ weight oper us space-onli weight oper (5), order function continu space. hand, time interfac tn subdomain n n+1 (for n = 1, . . . , n 1, function v discontinu time) valu preced subdomain, i.e., n. choic motiv causal problem time. 2. next, defin space-tim interior correction. order so, defin space-tim bubbl space v 0, local compon n vn = (0, v(t 1 n), . . . , v(t kn n )), v() v0. definit v 0 natur aris definit weight oper (14). node enforc zero v 0 on modifi (14). i0 trivial inject v 0 v denot galerkin project a0. invers involv local subdomain problem like (8) zero initi condit homogen boundari condit . finally, defin space-tim harmon extens oper ev .= (i i0a10 t 0 a)v. function v v ev = v denot harmon functions. final defin transfer oper q : v v q .= ew . 4.4. space-timeparallel preconditioner. extend previou in- gredient space-time, defin stbddc precondition (15) b .= i0a10 t 0 + qa 1 qt . d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. c202 santiago badia marc olm follow section, analyz qualiti b precondition a. particularli interest weak scalabl properti preconditioner. again, precondition cast addit schwarz theory. 4.5. implement aspects. let comment effi- cient implement stbddc preconditioner. want solv (2) (or, equivalently, (7)) time step shot krylov iter solver precondit stbddc precondition (15). usual dd precondition- ing, common initi guess krylov solver interior correct u0 = i0a10 t 0 f . case, prove induct appli krylov method b precondition iter v 0-orthogon residu origin problem (7) harmon direct (see, e.g., [17]). thus, ap- plicat bddc precondition appli r v r v 0 simplifi br = ewa 1 wtr. involv follow steps. 1. comput s .= wtr. definit (14), restrict s = wtr n sn = (0,wt r(t1n), . . . ,wt r(tknn )), wherew = diag(1/|neigh()|). oper impli nearest neighbor commun only. 2. comput 1 s. order comput problem, us follow decomposit v subspac v f v c . v f set function vanish coars dof (11)(13). v c complement v f , provid valu coars dofs. defin v c span column , solut (16) [ cn t cn 0 ] [ n ln ] = [ 0 ] , introduc notat cn matrix associ coars dof constraints. check (see [5, p. 206] symmetr case) (1) v f v c , (2) v = v f v c . local problem (16) indefinit (and coupl time step subdomain). order abl us sequential-in-tim local solver spars direct method positive-definit matrices, propos follow approach (see [9] space-parallel bddc preconditioner). fact nonsingular (see proposit 4.1), solv (16) schur complement: (17) cnan 1cn t ln = i, n = 1cn t ln . further, nonsymmetr problem (a space-tim problem consid herein), requir defin v c span column , solut of[ t cn t cn 0 ] [ n ln ] = [ 0 ] . problem similar (16), replac t (an t upper triangular nonsingular matrix proposit 4.1). thus, us schur complement approach (a (17)) exploit sequenti (back- ward time) local problems. d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. space-tim balanc domain decomposit c203 spaces, origin problem solved, au = s, written u = uf + uc v , uf v f uc v c satisfi a(uf ,vf ) + a(uc ,vc) = (s,vf ) + (s,v c) vf v f , v c v c , orthogon properti a(uf + uc ,vf + vc) = a(uf ,vf ) + a(uc ,v c). thus, involv fine problem coars problem independent. comput fine problem structur (16) (with differ forc term), comput schur complement approach (17). petrovgalerkin-typ coars problem coupl subdomain basi have weakli scalabl preconditioner. assembly, factorization, solut central processor subset processors. summarizing, stbddc precondition implement wai standard sequential-in-tim solver appli local problems. fact coars fine problem independent, exploit over- lap implementation, comput fine/coars level perform parallel. implement prove effect extrem scale space-parallel bddc solver [2, 4, 3]. implement stbddc precondition section 5 exploit overlap strategy. 5. numer experiments. section evalu weak scalabl cdr problem (1) propos stbddc preconditioner, combin right-precondit version iter krylov-subspac method gmres. stbddc-gmre solver test two-dimension (2d) cdr pde regular domains. domain discret structur q1 fe mesh backward-eul time integr perform constant step size |k|. per- formanc metrics, focu number stbddc precondit gmre it- erat requir convergence, total comput time. time includ precondition setup precondit iter solut linear experi reported. nonlinear case linear picard algorithm relax factor = 0.75. stop criterion iter linear solver reduct initi residu algebra `2-norm factor 106. nonlinear picard algorithm stop criterion reduct algebra `2-norm nonlinear residu 103. problem solv cdr problem (1). consid poisson problem = (0, 0) = 0. further, tackl p-laplacian problem, take nonlinear viscos (u) = 0|u|p (with p 0 0 > 0), = (0, 0), = 0. 5.1. experiment framework. novel techniqu propos paper stbddc-gmre solver implement fempar. fempar, develop larg scale scientif comput (lssc) team cimne-upc, parallel hybrid openmp/mpi, object-ori softwar packag massiv parallel fe simul multiphys problem govern pdes. features, provid basic tool effici parallel distributed-memori im- plement substructur dd solver [1, 2, 4]. parallel code fempar heavili us standard comput kernel provid (highli effici vendor im- plement of) bla lapack. besides, proper interfac d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. c204 santiago badia marc olm parti libraries, local constrain neumann problem global coarse- grid problem solv spars direct solvers. fempar releas gnu gpl v3 license, 200k line fortran95/2003/2008 code long. here, us overlap bddc implement propos [2], excel scalabl properties. base overlap comput coars fine duties. long coars duti fulli overlap fine duties, perfect weak scalabl attained. refer [2] [4] details. result report section obtain differ distributed-memori platforms: gottfri complex hlrn-iii crai system, locat hannov (germany), marenostrum iii, barcelona supercomput centre. cases, consid one-to-on map subdomains, cores, mpi tasks, plu addit core coars problem (see [1, 2] details). 5.2. weak scalabl setting. scienc parlance, weak scalabl relat solut time vari number processor fix problem size processor. time remain asymptot constant, scalabl algorithm. consid problem obtain discret differenti operators, concept weak scalabl suitabl soon relat differ term (discret the) pde remain constant weak scalabl analysis. case scalabl analys pde solvers, usual deal steadi poisson linear elast problems. however, situat involv face compli- cate problems, combin multipl differenti term differ natures. simplest exampl cdr equat (1). consid fix domain fix physic properties, produc weak scalabl analysi increas number element (i.e., reduc h) fes, number subdomain (i.e., reduc h) proportion. however, larger scales, prob- lem solv tend simpl poisson problem (convect term o(1/h) diffus term o(1/h2)). situat happen space-onli parallel transient problem cfl chang scalabl anal- ysis. situat identifi [12, 8], lead author cfl-constant scalability. simulations, cfl constant, still, spatial differenti term chang rel weight scalabl analysis, e.g., keep convect cfl, i.e., cfl = || || h , diffus cfl, i.e., cfl = || h2 (see [8]). weak scalabl analysi pde solver rel weight discret differenti oper kept. that, fix physic problem solv (boundari conditions, physic properties, etc.), fe mesh size h, subdomain size h, increas (by scaling) physic domain and, subsequently, number subdomain fes. let consid = [0, 1]d, fe mesh size h = (1/nh)d, subdomain size h = (1/nh)d. now, consid = = [0, ]d, n+. fe partit involv nh fe partit dimens (dndh fes) nh subdomain partit dimens (dndh subdomains). possibl appli approach unstructur mesh space-tim domains. weak scalabl sens propos capabl solv larger problem complic ones; e.g., fix local reynold pclet number cfls, increas global reynold pclet number, face larger problem harder one, general. definit weak scalabl pde solver numer experi time space-tim parallel solvers. d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. space-tim balanc domain decomposit c205 5.3. weak scalabl time. case, spatial domain parti- tion time integr distribut pt processors. fact lead enforc continu mean valu function spatial domain time interfaces, i.e., constraint (12) = . order maintain constant cfl number, origin time interv (0, t ] scale number processors, i.e., t = ptt . result, pt processor solv pt time larger time domain (and time steps). note approach |k| |n| modifi analysis. 5.3.1. time-parallel poisson solver. consid transient poisson equa- tion ((1) = (0, 0) = 0) = 1 unit squar spatial do- main = [0, 1]2 t = 1. sourc term f chosen u(x, t) = sin(x) sin(y) sin(t) solut problem. homogen dirichlet bound- ari condit zero initi condit imposed. perform weak scalabl analysi tbddc-gmre solver element size h = 130 valu kn = |n| |k| = {10, 15, 30, 60}. figur 2 report weak scalabl analysi tbddc-gmre solver experiment. h kept fixed, evalu differ valu kn |n|, lead wide rang diffus cfls, shown 2(a), 2(b), 2(c) . plots, draw conclusions. first, fix local problem size physic coefficients, reduc diffus cfl reduc time step size result iterations. second, salient, algorithm fact weakli scalable. fact, fix local problem size diffus cfl, increas number processors, i.e., comput time steps, number iter asymptot constant. range, overlap fine/coars strategi lead perfect weak scalabl time-parallel solver too. result, analysi show capabl method comput x time time step x time core total elaps time, main motiv time parallelism. 5.3.2. time-parallel cdr solver. consid transient cdr equat (1) = 103 = 104 = [0, 1]2 homogen dirichlet boundari condit null initi solution. t = 110 . order result differ convect cfl ranges, convect veloc field analyzed, namely, = (1, 0) = (10, 0). cfl valu shown correspond convect term restrict diffus cfl case considered. streamline-upwind petrovgalerkin (supg) stabil techniqu emploi (see [6]). perform studi valu kn = |n| |k| = {10, 30, 60}, lead differ convect cfls. case (figur 3), sourc term chosen function u(x, t) = sin(x) sin(y) sin(t) solut problem. second test (figur 4), f = 1, boundari layer formation. plot extract conclus figur 3 4 poisson problem. method weakli scalabl time transient cdr problems. 5.4. weak scalabl space-time. stbddc precondition con- sider here, set constraint (11)(13). case, spatial domain scale px py correspond directions, px = py cases. hand, time interv (0, t ] scale pt, lead p = pxpy pt partit scale space-tim domain px pt(0, t ]. therefore, rel weight oper kept constant weak scalabl analysis. local problem load given h h space kn = |n| |k| time, i.e., (h h )d |n||k| . d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. c206 santiago badia marc olm 0 1 2 3 4 5 6 7 50 200 500 1000 1500 2000 # e ra tio n s #core kn=10, cfl=48 kn=15, cfl=32 kn=30, cfl=16 kn=60, cfl=8 0 2 4 6 8 10 12 14 16 50 200 500 1000 1500 2000 w ll cl o ck t im e ( s) #core kn=10, cfl=48 kn=15, cfl=32 kn=30, cfl=16 kn=60, cfl=8 (a) iter counter comput time |n| = 815 . 0 2 4 6 8 10 12 14 50 200 500 1000 1500 2000 # e ra tio n s #core kn=10, cfl=1.5 kn=15, cfl=1.0 kn=30, cfl=0.5 kn=60, cfl=0.25 0 5 10 15 20 25 50 200 500 1000 1500 2000 w ll cl o ck t im e ( s) #core kn=10, cfl=1.5 kn=15, cfl=1.0 kn=30, cfl=0.5 kn=60, cfl=0.25 (b) iter counter comput time |n| = 160 . 0 10 20 30 40 50 60 50 200 500 1000 1500 2000 # e ra tio n s #core kn=10, cfl=0.3 kn=15, cfl=0.2 kn=30, cfl=0.1 kn=60, cfl=0.05 0 10 20 30 40 50 60 50 200 500 1000 1500 2000 w ll cl o ck t im e ( s) #core kn=10, cfl=0.3 kn=15, cfl=0.2 kn=30, cfl=0.1 kn=60, cfl=0.05 (c) iter counter comput time |n| = 1300 . fig. 2. weak scalabl iter count (left) total elaps time (right) tbddc-gmre solver solut unsteadi 2d poisson problem hlrn. fix ele- ment size h = 1/30 time partit pt subdomains. 5.4.1. space-tim poisson solver. consid poisson problem ((1) = (0, 0) = 0) = 1, f = 1, homogen dirichlet boundari condit zero initi condition. origin spatial domain = [0, 1]2 origin time domain (0, 0.1]. figur 5 show weak scalabl result stbddc-gmre solver. num- ber iter (left) total elaps time (right) report differ ratio spatial time partit px pt 5(a), 5(b), 5(c). also, figure, differ local problem sizes, diffus cfls, considered. salient inform figur fact scheme scalabl space-tim simulations. here, solv larger problem d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. space-tim balanc domain decomposit c207 0 2 4 6 8 10 50 200 500 1000 1500 2000 # e ra tio n s #core kn=10, cfl=3 kn=30, cfl=1 kn=60, cfl=0.5 0 2 4 6 8 10 12 14 16 18 50 200 500 1000 1500 2000 w ll cl o ck t im e ( s) #core kn=10, cfl=3 kn=30, cfl=1 kn=60, cfl=0.5 (a) iter counter comput time = (10, 0). 0 10 20 30 40 50 60 50 200 500 1000 1500 2000 # e ra tio n s #core kn=10, cfl=0.3 kn=30, cfl=0.1 kn=60, cfl=0.05 0 10 20 30 40 50 60 50 200 500 1000 1500 2000 w ll cl o ck t im e ( s) #core kn=10, cfl=0.3 kn=30, cfl=0.1 kn=60, cfl=0.05 (b) iter counter comput time = (1, 0). fig. 3. weak scalabl total elaps time (right) number gmre iter (left) tbddc solver solut 2d cdr equat hlrn (sinusoid solution). fix element size h = 1/30. 0 10 20 30 40 50 60 50 200 500 1000 1500 2000 # e ra tio n s #core kn=10, cfl=0.3 kn=30, cfl=0.1 kn=60, cfl=0.05 0 10 20 30 40 50 60 50 200 500 1000 1500 2000 w ll cl o ck t im e ( s) #core kn=10, cfl=0.3 kn=30, cfl=0.1 kn=60, cfl=0.05 fig. 4. weak scalabl total elaps time (right) number gmre iter (left) tbddc solver solut 2d cdr equat (boundari layer) hlrn. fix element size h = 1/30. time (a above) space. result surpris spatial bddc precondition known weakli scalabl time-parallel version prove weakli scalabl section 5.3. influenc px pt number iter mild; also, effect diffus cfl mild case. overlap strategi fulli effect rang consideration, perfect weak scalabl observed. effect diffus cfl fix local problem size, obtain multipli viscos 10, report d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. c208 santiago badia marc olm 0 2 4 6 8 10 12 14 16 18 375 1029 1536 2187 3000 3993 # e ra tio n s #core h/h=30 kn=30, cfl=3 h/h=40 kn=40, cfl=4 h/h=40 kn=20, cfl=8 0 5 10 15 20 25 30 35 40 375 1029 1536 2187 3000 3993 w ll cl o ck t im e ( s) #core h/h=30 kn=30, cfl=3 h/h=40 kn=40, cfl=4 h/h=40 kn=20, cfl=8 (a) iter counter wall clock time pt = 3px 0 2 4 6 8 10 12 14 16 18 216 512 1000 1728 2744 4096 # e ra tio n s #core h/h=30 kn=30, cfl=3 h/h=40 kn=40, cfl=4 h/h=40 kn=20, cfl=8 0 5 10 15 20 25 30 35 40 216 512 1000 1728 2744 4096 w ll cl o ck t im e ( s) #core h/h=30 kn=30, cfl=3 h/h=40 kn=40, cfl=4 h/h=40 kn=20, cfl=8 (b) iter counter wall clock time pt = px 0 2 4 6 8 10 12 14 16 243 576 1125 1944 3087 4608 # e ra tio n s #core h/h=30 kn=30, cfl=3 h/h=40 kn=40, cfl=4 h/h=40 kn=20, cfl=8 0 5 10 15 20 25 30 35 40 243 576 1125 1944 3087 4608 w ll cl o ck t im e ( s) #core h/h=30 kn=30, cfl=3 h/h=40 kn=40, cfl=4 h/h=40 kn=20, cfl=8 (c) iter counter wall clock time px = 3pt fig. 5. weak scalabl total elaps time (right) number gmre iter (left) stbddc solver solut 2d poisson problem hlrn. figur 6. case, larger diffus cfl lead iter weak scalabl achieved. next, want compar space-tim solver sequential-in-tim ap- proach. fix time step size |k| = 103 hh = 30. thus, time interv t = k|k|, consid k time steps. sequenti approach make us ps = px py = 42 processor (space-parallel only) solv recurs spatial problem increas valu k. space-tim approach pspt = 42pt processor solv problem, local number time step kn = 10. motiv analysi assess benefit time parallel linear problem spatial parallel exploit effici low load processor. d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. space-tim balanc domain decomposit c209 0 5 10 15 20 25 30 216 512 1000 1728 2744 4096 # e ra tio n s #core h/h=30 kn=30, =1 , cfl=3 h/h=30 kn=30, =10, cfl=30 h/h=40 kn=40, =1 , cfl=8 h/h=40 kn=40, =10, cfl=80 0 5 10 15 20 25 30 35 40 45 50 216 512 1000 1728 2744 4096 w ll cl o ck t im e ( s) #core h/h=30 kn=30, =1 , cfl=3 h/h=30 kn=30, =10, cfl=30 h/h=40 kn=40, =1 , cfl=8 h/h=40 kn=40, =10, cfl=80 fig. 6. weak scalabl total elaps time (right) number gmre iter (left) stbddc solver solut 2d poisson problem hlrn. partit equal time space, i.e., px = pt. 0 500 1000 1500 2000 2500 3000 3500 4000 10 25 50 75 100 100 250 500 750 1000 l o ca l s o lv e s pt k sequenti approach space-tim approach, kn=10 0 5 10 15 20 25 30 35 40 10 25 50 75 100 100 250 500 750 1000 w ll cl o ck t im e ( s) pt k sequenti approach space-tim approach, kn=10 fig. 7. comparison sequenti space-tim solver transient poisson problem marenostrum supercomputer. spatial partit fix px = py = 4. space-tim approach p = 42pt mpi fine-level tasks. figur 7 show comparison sequenti approach stbddc precondit space-tim solver k = 1000 time steps. theoret cost sequenti approach proport k step time elaps time a1 local solv (a precondit gmre iteration). hand, theoret cost space-tim solver proport cost a1n local space-tim solves, turn, kn time spatial a1 local solv (exploit local sequenti time). number local solv plot sequenti space-tim approach figur 7(a). sequenti approach show linear growth comput time, expected, solv k time problem sequenti fashion. current implement space-tim precondition fempar exploit local sequenti time, observ discrep intersect curv term local solv elaps time, quadrat complex spars direct methods. case, space-tim approach start competit 10 time partitions. plots, abl reduc time solut simul space-tim approach ad processor exploit time parallelism, linear nonlin problem consid herein. besides, method show excel weak scalabl properties. 5.4.2. space-tim cdr solver. consid cdr equat (1) = 104, = (1, 0), f = 1, origin domain (0, t ] = [0, 0.3]2 (0, 0.3], d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. c210 santiago badia marc olm tabl 1 iter count cdr equation. convect cfl equal 1.0 cases. cfl repres diffus cfl. = 1 101 102 103 104 106 cfl= 102 10 1 101 102 104 pclet= 5 103 5 102 0.5 5 50 5 103 (px py) pt #sbd (3 3) 1 9 18 11 7 5 5 5 (6 6) 2 72 28 16 11 11 11 11 (9 9) 3 243 35 17 11 12 12 13 (12 12) 4 576 37 17 12 13 14 15 (15 15) 5 1125 38 17 13 14 15 17 (18 18) 6 1944 39 17 13 15 15 18 (21 21) 7 3087 40 17 14 16 16 19 (24 24) 8 4608 41 18 14 17 17 21 (27 27) 9 6561 41 18 15 18 18 22 (30 30) 10 9000 42 18 16 19 19 24 scale weak scalabl analysi px, pt, respectively. homogen dirichlet initi condit enforced. local problem size fix kn = 30 h h = 30. ratio spatial time partit px pt = 3. diffus paramet consid order present differ scenarios: diffusion-domin case ( = 1.0) convection-domin ( = 106). convect cfl equal 1.0 cases. supg stabil used. tabl 1 present iter count differ diffus valu lead differ scenarios. diffusion-domin case stbddc precondit gmre tend asymptot constant number iterations, independ number subdomains. move convect case, number iter slightli grow decreas diffus cfl number. 5.5. nonlinear space-tim p-laplacian solver. experi com- pare sequential-in-tim method (solv spatial problem bddc ap- proach time step) propos stbddc solver. consid p-laplacian problem (with p = 1), i.e., (1) = |u|, (0, 0), = 0, = [0, 1]2 (0, t ] initi solut u0 = x+ y, dirichlet data g = x+ y, forc term f = 1. fix time step size |k| = 103 hh = 30. consid set experi report figur 7 compar sequential-in-tim space-tim parallel solver nonlinear problem. thus, consid increas number time steps, ps = pxpy = 42 processor space-tim solver. sequenti solver exploit ps processor extract space parallel only. figur 8 show comparison sequenti approach t = 1.5 k = 1500 time steps. figur 8(a) plot number space solves, proport number accumul linear iter- ation nonlinear iterations. remark algorithm scalabl obtain nonlinear setting. elaps time plot 8(b) similar behavior nonlinear case linear one. nonlinear case exhibit excel weak scalabl properties. nonlinear space-tim solver competit term number local problem comput 20 processors, re- quir slightli 50 processor order superior term elaps time. discrep substanti reduc exploit causal local problems, comment above. plots, abl reduc d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. space-tim balanc domain decomposit c211 0 2000 4000 6000 8000 10000 12000 10 25 50 75 100 125 150 100 250 500 750 1000 1250 1500 l o ca l s o lv e s pt k sequenti approach space-tim approach, kn=10 0 20 40 60 80 100 120 10 25 50 75 100 125 150 100 250 500 750 1000 1250 1500 w ll cl o ck t im e ( s) pt k sequenti approach space-tim approach, kn=10 fig. 8. comparison sequenti space-tim solver p-laplacian transient problem marenostrum supercomputer. spatial partit fix px = py = 4. space-tim approach p = 42pt mpi fine-level tasks. time solut simul space-tim approach ad proces- sor exploit time parallel nonlin problem consid herein. case, room improv consid nonlinear problems. sense, nonlinear space-tim precondit [15, 7] elabor linear strategi potenti lead better performance. 6. conclusions. work, consid space-tim iter solver base dd techniques. particular, consid gmre iter solver space-tim precondit obtain extend bddc framework space time parabol problem discret fes. time direct differ natur spatial one, i.e., transport-typ operator, particular definit coars dof transfer oper considered, take account time causality. further, perturb term includ lead well-pos system. exposit carri backward-eul time integrator, extens -method runge-kutta method straightfor- ward. further, well-posed propos space-tim precondition checked. hand, carri detail set numer experi parallel platforms. results, propos methodolog observ exhibit excel scalabl properties. method weakli scalabl time, i.e., increas x time number mpi task solv x time time steps, approxim time, kei properti reduc time solut transient simul heavi time stepping. shown weak scalabl space time, face larger problem time space. further, appli stbddc precondition nonlinear problem consid linear space-tim system, appli propos space-tim solver nonlinear iteration. us space-tim solver propos faster sequential-in-tim approach modest number processors. futur work includ develop nonlinear space-tim bddc precon- ditioners, extend concept nonlinear precondit (see, e.g., recent work [15] nonlinear fe tear interconnect (feti) precondition space) space time. observ space [7], us nonlinear precondit space-tim precondit effect nonlinear problems. extens work involv extens multilevel d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. c212 santiago badia marc olm space-tim algorithm (to perfect weak scalabl larger scales), applic solid mechan incompress fluid dynam simulations. refer [1] s. badia, a. f. martn, j. principe, implement scalabl analysi balanc domain decomposit methods, arch. comput. method eng., 20 (2013), pp. 239262, [2] s. badia, a. f. martn, j. principe, highli scalabl parallel implement balanc domain decomposit constraints, siam j. sci. comput., 36 (2014), pp. c190c218, [3] s. badia, a. f. martn, j. principe, scalabl inexact balanc domain decomposit constraint overlap coarse/fin corrections, parallel comput., 50 (2015), pp. 124, [4] s. badia, a. f. martn, j. principe, multilevel balanc domain decomposit extrem scales, siam j. sci. comput., 38 (2016), pp. c22c52, 1137/15m1013511. [5] s. c. brenner r. scott, mathemat theori finit element methods, 3rd ed., springer, new york, 2010. [6] a. n. brook t. j. hughes, streamlin upwind/petrov-galerkin formul convec- tion domin flow particular emphasi incompress navier-stok equa- tions, comput. method appl. mech. engrg, 32 (1982), pp. 199259, 10.1016/0045-7825(82)90071-8. [7] x.-c. cai d. e. keyes, nonlinearli precondit inexact newton algorithms, siam j. sci. comput., 24 (2002), pp. 183200, [8] e. c. cyr, j. n. shadid, r. s. tuminaro, stabil scalabl block precondit navierstok equations, j. comput. phys., 231 (2012), pp. 345363, doi.org/10.1016/j.jcp.2011.09.001. [9] c. r. dohrmann, precondition substructur base constrain energi min- imization, siam j. sci. comput., 25 (2003), pp. 246258, s1064827502412887. [10] m. dryja, j. galvis, m. sarkis, bddc method discontinu galerkin discretiza- tion ellipt problems, j. complexity, 23 (2007), pp. 715739, j.jco.2007.02.003. [11] m. emmett m. j. minion, effici parallel time method partial differ- ential equations, commun. app. math. comput. sci., 7 (2012), pp. 105132. [12] r. d. falgout, s. friedhoff, tz. v. kolev, s. p. maclachlan, j. b. schroder, parallel time integr multigrid, siam j. sci. comput., 36 (2014), pp. c635c661, [13] m. j. gander, r.-j. li, y.-l. jiang, parar schwarz waveform relax methods, domain decomposit method scienc engin xx, lectur note comput. sci. eng. 91, springer, berlin, 2013, pp. 451458. [14] m. j. gander m. neumller, analysi new space-tim parallel multigrid algorithm parabol problems, siam j. sci. comput., 38 (2016), pp. a2173a2208, org/10.1137/15m1046605. [15] a. klawonn, m. lanser, o. rheinbach, nonlinear feti-dp bddc methods, siam j. sci. comput., 36 (2014), pp. a737a765, [16] j. lions, y. maday, a. turinici, parar time discret pdes, c. r. math. acad. sci. paris, 332 (2001), pp. 661668. [17] j. mandel c. r. dohrmann, converg balanc domain decomposit con- straint energi minimization, numer. linear algebra appl., 10 (2003), pp. 639659, [18] j. mandel, b. sousedk, c. dohrmann, multispac multilevel bddc, computing, 83 (2008), pp. 5585, [19] m. l. minion, r. speck, m. bolten, m. emmett, d. ruprecht, interweav pfasst parallel multigrid, siam j. sci. comput., 37 (2015), pp. s244s263, org/10.1137/14097536x. [20] r. speck, d. ruprecht, m. emmett, m. bolten, r. krause, space-tim parallel solver three-dimension heat equation, parallel computing: acceler com- putat scienc engin (cse), io press, amsterdam, 2014, pp. 263272. d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp copyright siam. unauthor reproduct articl prohibited. space-tim balanc domain decomposit c213 [21] a. toselli o. widlund, domain decomposit method - algorithm theory, springer, berlin, 2005. [22] x. tu, three-level bddc dimensions, siam j. sci. comput., 29 (2007), pp. 1759 1780, [23] t. weinzierl t. kppl, geometr space-tim multigrid algorithm heat equation, numer mathemat theori method appl., 5 (2012), pp. 110130, cambridge.org/abstract_s1004897900000258. d ow nl oa d 06 /1 6/ 17 t o 5. 19 6. 89 .2 25 . r ed tr ib ut io n su bj ec t s ia m l ic en se o r py ri gh t; s ee h tt p: // w w w .s ia m .o rg /j ou rn al s/ oj sa .p hp introduct problem set domain partit space-tim discret space bddc precondit subassembl problem coars dof transfer oper space-parallel precondition space-tim bddc precondit subassembl problem coars dof transfer oper space-timeparallel precondition implement aspect numer experi experiment framework weak scalabl set weak scalabl time time-parallel poisson solver time-parallel cdr solver weak scalabl space-tim space-tim poisson solver space-tim cdr solver nonlinear space-tim p-laplacian solver conclus refer