upcommon portal del coneix obert de la upc http : //upcommons.upc.edu/e-print aquesta s una cpia de la versi author  final draft d'un articl publicat la revista journal real-tim imag process .
url d'aquest document upcommon e- print : http : //hdl.handle.net/2117/113943 ________________________________________________ articl publicat / publish paper : andr fras-velzquez , josep ramon morro , mario garca , wilfri philip ( 2017 ) hierarch stack filter : bitplane-bas algorithm massiv parallel processor .
journal real-tim imag process , p.1-14 .
doi : 10.1007/s11554-017-0681-8 http : //upcommonsdev.upc.edu/ http : //upcommonsdev.upc.edu/ http : //upcommons.upc.edu/e-print http : //hdl.handle.net/2117/113943 journal real-tim imag process manuscript .
( insert editor ) andr fras-velazquez  josep ramon morro  mario garca  wilfri philip hierarch stack filter : bitplane-bas algorithm massiv parallel processor receiv : date / accept : date abstract develop novel parallel architectur imag process , implemen- tation well-known imag oper need reformul take advantag so-cal massiv parallel .
work , propos general algorithm implement larg class nonlinear filter , call stack filter , 2d-array processor .
propos method consist decompos imag bitplan bitwis decomposit , process everi bit- plane hierarch .
filter imag reconstruct simpli stack filter bitplan accord order signific .
owe hierarch structur , algorithm allow us trade-off imag qualiti process time , signific reduc comput time low-entropi imag .
also , experiment test show process time method substanti lower classic method use larg structur element .
featur interest varieti real-tim applic base morpholog oper video segment video enhanc .
keyword stack filter  array processor  bitwis decomposit  morpholog oper  smart camera 1 introduct platform-awar implement basic imag oper essenti build effici applic massively-parallel processor .
paper , propos novel implement stack filter use 2d-array processor .
filter compos larg class nonlinear filter return local rank statist imag .
classic filter like median , eros , dilat belong class filter ; wide use imag denois , pattern recognit , object segment .
naiv implement filter consist first sort input data , select desir rank element .
altern implement [ 25,8,17 ] decompos input data binari signal , appli simpl binari filter signal , thus avoid expens sort .
baselin implement stack filter via binari decomposit consist three step : first , input data decompos binari signal threshold data everi level final public avail springer via http : //dx.doi.org/10.1007/s11554-017-0681-8 a. fras-velazquez  w. philip ghent univers depart telecommun inform process ( telin-ipi-imec ) sint-pietersnieuwstraat 41-b 9000 gent  belgium e-mail : andres.friasvelazquez @ ugent.b j.r. morro  m. garca technic univers catalonia jordi girona 1-3  08034 barcelona  spain 2 andr fras-velazquez et al .
filter imageinput imag stackingbitwis decomposit fig .
1 block diagram bitplan stack filter ( bsf ) algorithm .
data rang .
step known threshold decomposit ( td ) [ 18 ] .
second , binari filter appli binari signal level decomposit .
third , output obtain sum filter data level decomposit .
literatur find sever implement stack filter use differ architectur .
instanc , chakrabarti luck [ 3 ] propos implement appli threshold decomposit input sampl serial fashion , filter binari word level decomposit parallel .
hand , gevorkian et al .
[ 8 ] propos implement decompos input sampl parallel use fibonacci p-code reduc number decompos level , filter binari word everi level decomposit serial fashion .
avedillo et al .
[ 2 ] propos binari decomposit base order matrix result comparison input sampl .
way , number decompos level longer depend gray-level rang input data , number sampl .
appli decomposit , binari word level filter parallel .
meanwhil , mertzio tsirikolia [ 11 ] propos use coordin logic filter implement classic morpholog oper applic rang nois remov edg extract .
kind filter also reli bitwis decomposit , allow comput filter approxim process signific bit improv comput speed .
howev , easili general stack filter .
final , spilioti boutali [ 16 ] also exploit idea separ imag bitplan use bitwis decomposit , although goal acceler comput imag moment .
strategi enabl save signific comput time achiev high accuraci comput moment .
general , stack filter implement sequenti process pixel neighborhood slide imag use td method .
paper , follow differ approach use imag bitwis decomposit bitplan architectur .
bitwis decomposit allow us filter imag hierarch , bitplan architectur help us exploit fast process logic oper binari morpholog filter focal plane processor ( fpp ) [ 20 ] .
primarili , propos method consist decompos input imag use bitwis decom- posit .
way , 8-bit imag decompos 8 bitplan arrang least signific bit .
, filter everi bitplan hierarch use stack filter algorithm .
final , filter imag assembl simpli stack filter bitplan accord order signific .
block diagram outlin propos method present fig .
1 .
test approach , implement eye-ri vision system [ 12 ] , smart camera contain mixed-sign fpp call q-ey .
worth remark earli develop method describ present previous paper [ 6 ] .
prototyp method also benefit bitwis decomposit bitplan architectur ; howev , specif tailor eros filter .
anoth paper [ 7 ] , develop preliminari version stack filter algorithm .
paper , laid groundwork current approach outlin basic algorithm , inform introduc relationship bitwis threshold decomposit .
present work , includ sever contribut apart extend detail descript algorithm : ( ) formal deriv boolean function relat bitwis decomposit threshold decomposit .
hierarch stack filter : bitplane-bas algorithm massiv parallel processor 3 ( ii ) deriv two optim criteria reduc process time algorithm depend gray-level distribut imag size structur element .
thank criteria , speed algorithm discard comput less signific bitplan , also activ discard superflu comput without compromis imag fidel .
( iii ) present complex analysi new set simul test key featur algorithm .
rest paper organ follow : sect .
2 , deriv equat relat threshold decomposit bitwis decomposit , basi approach .
meanwhil , sect .
3 , formal describ propos stack filter algorithm .
architectur massively- parallel processor demonstr algorithm describ sect .
4 .
sect .
5 , present experiment result .
final , conclus work state sect .
6 .
2 relationship bitwis threshold decomposit section deriv express obtain threshold decomposit imag bitwis decomposit , vice versa .
express allow us later propos stack filter algorithm implement imag bitwis decomposit .
let ( n , ) digit imag spatial indic n ,  z , l grayscal level .
imag decompos l threshold bitplan threshold decomposit function follow : tl ( n , ) = tl ( ( n , ) ) = { 1 , ( n , )  l , 0 , ( n , ) < l , ( 1 ) repres threshold bitplan l threshold level .
hand , bitwis decomposit function b split imag k = dlog2 ( l ) e bitwis bitplan follow : bk ( n , ) = bk ( ( n , ) ) =  ( n , ) 2k  mod 2 , ( 2 ) b repres bitwis bitplan k bit signific .
recompos multilevel imag threshold decomposit evalu : ( n , ) = l l=1 tl ( n , ) , ( 3 ) wherea bitwis decomposit evalu : ( n , ) = k1 k=0 bk ( n , ) 2 k. ( 4 ) note monoton function like threshold function ( 1 ) preserv order decompos data , key implement stack filter use binari filter [ 18 ] .
contrast , non-monoton function like bitwis decomposit satisfi order preserv properti .
fig .
2 observ differ decomposit function .
although bitwis decomposit fulfil monoton properti , possess two import advantag threshold decomposit : 1 .
bitwis decomposit obtain simpli read bit field data , wherea td requir mani comparison .
2 .
imag inform convey hierarch , allow reduc process time exact filter output approxim remov comput least signific bitplan .
4 andr fras-velazquez et al .
( ) ( b ) fig .
2 exampl use : ( ) bitwis , ( b ) threshold decomposit .
note ( ) b0 b1 monoton , wherea ( b ) function monoton 2.1 threshold bitwis decomposit deriv express bitwis decomposit threshold decomposit , manip- ulat definit bitwis decomposit ( 2 ) describ appendix : bk = nk+1 j=0 bj , k , bj , k = ( 2j+1 ) 2k  t ( j+1 ) 2k+1 ( 5 ) bj , k j-th partial output k-th bitplan nk = 2 kk  1 .
simplic , spatial indic n bitplan omit .
( 5 ) conclud everi k-th bitplan reconstruct 2kk threshold bitplan .
thus , number threshold increas exponenti bit signific decreas .
mean coars inform imag generat coupl threshold , wherea fine detail requir mani .
2.2 bitwis threshold decomposit comput threshold decomposit bitwis decomposit ( invers relationship ( 5 ) ) , prove appendix b threshold bitplan level l reconstruct q signific bitplan follow : tl = ( bk1 ./ k1 ( bk2 ./ k2    ( bkq+1 ./ kq+1 bkq ) ) ) ( 6 ) ( k1k2 ... 10 ) 2 binari represent l , everi bit control follow condit express ./ x = {  , x = 0 ,  , x = 1 .
( 7 ) number signific bitplan q = k z , z number least signific bit l set zero .
instanc , comput t168 , express 168 ( 10101000 ) 2 , yield z = 3 q = 5 .
analyz ( 6 ) , conclud threshold decomposit generat bitwis decomposit use simpl boolean oper .
hierarch stack filter : bitplane-bas algorithm massiv parallel processor 5 3 bitplan stack filter algorithm section , present two algorithm perform bitplan stack filter .
sect .
3.1 describ general procedur filter imag least signific bitplan , sect .
3.2 describ optim criteria depend imag distribut , reduc comput least signific bitplan .
algorithm return exact filter output , comput time optim algorithm usual faster depend imag distribut .
general , filter respons bk bitwis bitplan bk ( ) defin bk = s , f [ bk ( ) ] ,  binari morpholog filter structur element , posit boolean func- tion f .
therefor , light ( 4 ) , filter respons i grayscal imag use bitwis decomposit obtain follow i = k1 k=0 bk 2 k = k1 k=0 s , f [ bk ( ) ] 2k ( 8 ) use ( 5 ) , filter everi bitwis bitplan deriv threshold bitplan filter binari stack filter  .
thus , follow : bk = nk+1 j=0 bj , k , bj , k = s , f [ tuj , k ( b ) ]  s , f [ tvj , k ( b ) ] ( 9 ) threshold bitplan level uj , k = ( 2j + 1 ) 2 k vj , k = ( j + 1 ) 2 k+1 generat set bitwis bitplan b = ( b0 , ... , bk1 ) use ( 6 ) .
final , express filter threshold bitplan t = s , f [ ] later rewrit ( 9 ) compact follow : bk = nk+1 j=0 bj , k , bj , k = tuj , k  tvj , k ( 10 ) 3.1 propos algorithm algorithm consist filter bitwis bitplan imag use ( 10 ) .
architectur describ fig .
1 .
process block , denot bsfk , repres implement ( 10 ) k-th bitplan signific .
algorithm run least signific bitplan process block depend bitplan greater equal signific k-th block .
hierarch relat number bitwis bitplan requir generat tu tv use ( 6 ) .
instanc , comput tu use bitwis bitplan , need p signific bitplan p = k  k. hand , comput tv need q signific bitplan q  k  k  1 .
conclud q  p  1 , suggest tv determin least one bitwis bitplan less tu .
allow us comput tv direct output bitplan greater signific level process .
thus , see fig .
1 output bitplan eventu input process block lower signific .
tu , tu first comput use input bitwis bitplan , binari stack filter appli .
algorithm 1 detail bitplan stack filter .
compos nest for-loop .
outer loop control order bitplan process ( least signific bitplan ) .
inner loop perform filter k-th bitwis bitplan comput accumul 2kk1 partial output state ( 10 ) .
3.2 optim algorithm optim algorithm follow similar structur general algorithm .
main differ includ criteria avoid comput partial output bitplan process 6 andr fras-velazquez et al .
algorithm 1 stackfilt ( ( b0 , .
.
.
, bk1 ) , , f ) 1 : bk  0 2 : k = ( k  1 ) 0 3 : bk  0 4 : j = 0 nk+1 5 : u ( 2j + 1 ) 2k 6 : v  ( j + 1 ) 2k+1 7 : ( k1k2 .
.
.
kp0 .
.
.
0 ) 2  ( u ) 10 8 : ( kk1 .
.
.
kq0 .
.
.
0 ) 2  ( v ) 10 9 : tu  ( bk1 ./ k1 ( bk2 ./ k2    ( bkp+1 ./ kp+1 bkp ) ) ) ( bkp+1 ./ kp+1 bkp ) ) ) 10 : tu  s , f [ tu ] 11 : tv  ( bk ./ k ( bk1 ./ k1    ( bkq+1 ./ kq+1 bkq ) ) ) 12 : bj , k  tu  tv 13 : bk  bk  bj , k 14 : end 15 : end 16 : return ( b0 , .
.
.
, bk1 ) hierarch .
partial output defin bj , k = tuj , k  tvj , k , repres rectangl map grayscal domain boolean domain shown fig .
3 .
figur , map top repres partial output k-th level signific .
map bottom repres logic sum two partial output ( k1 ) -th level signific , rectangl function repres partial output .
result , partial output given level split two partial output next lower level within grayscal domain .
pattern repeat map bitwis decomposit , shown fig .
2a .
let us consid fig .
3 model deriv optim criteria .
first criterion state partial output bj , k return bitplan zero , comput bj+1 , k1 avoid sinc also yield bitplan zero .
verifi fig .
3 none pixel filter imag gray level uj , k vj , k , pixel gray valu subinterv uj+1 , k1 vj+1 , k1 .
hand , second criterion state threshold bitplan tuj , k return bitplan one , comput bj , k1 avoid sinc yield bitplan zero .
criterion also verifi fig .
3 pixel filter imag gray valu greater equal uj , k , pixel gray valu uj , k1 vj , k1  1 .
incorpor two criteria stack filter algorithm , avoid comput partial output lower level signific , notabl reduc process time .
exclud partial output evalu grayscal interv pixel , expect process low-contrast imag much faster full dynam rang .
fig .
3 map grayscal boolean domain partial output consecut bitplan .
top : map partial output bj , k .
bottom : map bj , k1  bj+1 , k1 .
variabl u , v indic threshold level use deriv partial output .
hierarch stack filter : bitplane-bas algorithm massiv parallel processor 7 algorithm 2 optim sf ( ( b0 , .
.
.
, bk1 ) , , f ) 1 : bk  0 2 : jk1  { 0 } 3 : k = ( k  1 ) 0 4 : bk  0 5 : jk1  {  } 6 : j  jk 7 : u ( 2j + 1 ) 2k .
.
.
.
.
.
14 : bk  bk  bj , k 15 : jk1 eval criteria ( j , bj , k , tu , jk1 ) 16 : end 17 : end 18 : return ( b0 , .
.
.
, bk1 ) algorithm 2b 1 : function eval criteria ( j , b , tu , j ) 2 : b = 0 3 : j  j  { 2j } 4 : els tu = 1 5 : j  j  { 2j + 1 } 6 : els 7 : j  j  { 2j , 2j + 1 } 8 : end 9 : return j 10 : end function algorithm 2 present optim algorithm includ simplif criteria de- scribe .
algorithm follow structur algorithm 1 .
main differ occur line 6 15 .
line 6 , j-index loop comput partial output link indic store jk .
indic deriv optim criteria ( evalu function eval criteria ) .
given everi partial output index j yield two partial output indic 2j 2j + 1 next level signific , criteria state line 2 4 algorithm 2b defin partial output comput next level case .
3.2.1 algorithm complex algorithm describ , see demand oper basic logic binari morpholog oper , evalu bitplan level .
therefor , comput complex algorithm estim enumer oper .
recal fpps comput logic binari morpholog oper parallel blitplan level .
tabl 1 , compar complex classic td approach algorithm propos .
oper count done per bitplan , least signific bitplan , given 8-bit imag .
first , focus analyz number morpholog oper .
td approach general algorithm ( ga ) requir 255 morpholog oper , although distribut per bitplan differ .
, td approach appli morpholog oper per threshold level , wherea general algorithm appli 27k morpholog oper per bitplan depend level signific k. impli signific bitplan , convey coars inform imag , comput much faster least signific bitplan , convey tabl 1 number logic morpholog oper requir filter bitplan signific .
morpholog oper logic oper td ga oa td ga oa k s13 s55 s1515 s13 s55 s1515 0 128 128 87 36 1,921 2,177 1,477 611 1 64 64 45 19 833 961 676 282 2 32 32 23 10 353 417 299 130 3 16 16 12 5 145 177 134 55 4 8 8 6 3 57 73 56 28 5 4 4 4 2 21 29 28 14 6 2 2 2 2 7 11 11 10 7 1 1 1 1 2 4 4 4 total 255 255 255 180 78 13,778 3,339 3,849 2,685 1,134 8 andr fras-velazquez et al .
tabl 2 approxim number logic gate per pixel depend filter method .
sort-and-select td ga n best worst eros median eros median 3 455 585 14,816 14,818 86 88 5 1,105 1,625 17,894 17,908 144 158 7 1,820 3,185 20,972 21,030 202 260 9 2,600 5,265 24,050 24,264 260 474 11 3,445 7,865 27,128 27,851 318 1,401 13 4,335 10,985 30,206 32,674 376 2,844 15 5,330 14,625 33,284 41,902 434 9,052 imag detail textur .
meanwhil , optim algorithm ( oa ) follow hierarch distribut , complex actual vari imag content .
word , perfor- manc depend gray-level distribut imag , size structur element .
instanc , tabl 1 , enumer requir oper filter uniformly-distribut imag structur element differ size .
particular , 13 structur element , number oper general algorithm .
contrast , 5 5 15 15 structur element , number oper drastic reduc least signific bitplan .
reduc- tion occur simplif criteria ( algorithm 2 ) discard numer partial output less signific bitplan size structur element increas .
behavior expect given filter imag usual smoother coarser .
term number logic oper , td approach need 4 time oper general algorithm .
overhead caus threshold full addit , requir decompos recompos imag .
meanwhil , optim algorithm report 15 % overhead use small structur element 1  3 point .
case , overhead come implement simplif criteria establish algorithm 2 .
nevertheless , size structur element increas , criteria pay drastic reduc number logic oper , shown tabl 1 .
conclus , optim algorithm may filter imag much faster general algorithm without compromis fidel output .
also , propos algorithm speed run coars mode oper discard comput least signific bitplan .
refer , comparison propos method discuss sect .
5.2 .
although algorithm filter imag bitplan fashion , interest compar com- plexiti sort-and-select approach decomposition-bas method pixel level .
tabl 2 , present estim number gate requir filter pixel use n-point structur element .
first , evalu complex sort-and-select filter method .
case , complex depend most number comparison sort data .
general , current sort method need 2n log n n2 comparison best worst case , re- spectiv .
assum 8-bit compar requir 65 logic gate , complex bound method estim term logic gate , shown tabl 2 .
bound move apart size structur element increas .
pleas note baselin estim method  complex sinc sort also requir numer data-swap oper .
hand , complex decomposition-bas method depend size structur- ing element , also type filter appli decomposit method .
instanc , td approach , main burden implement decomposition/recomposit step , demand threshold full adder .
convers , approach minim decomposi- tion/recomposit burden , still depend filter complex .
note eros median filter extrem scale complex .
4 eye-ri vision system recent advanc cmos technolog allow integr sophist imag processor compact camera .
particular , so-cal smart camera [ 1,15,22 ] integr imag processor hierarch stack filter : bitplane-bas algorithm massiv parallel processor 9 i/o adc & dac 176 x 144 cell array bu er - dac control unit q-ey control sram memori ( program & data ) nios-ii microprocessor c u n ic tio n p rts fig .
4 conceptu block diagram eye-ri vision system .
capabl recogn imag pattern make autonom decis .
sort camera stand convent camera low power consumpt , high process power , autonomi .
smart camera high silicon integr incorpor parallel processor optic sensor singl chip known focal plane processor ( fpp ) .
architectur fpp consist interconnect array everi cell integr optic sensor ( pixel ) , memori , process unit [ 20 ] .
array architectur known massively-parallel simd ( mp-simd ) , permit us execut low-level imag oper pixel/block level parallel .
effici exploit parallel mp-simd architectur , sequenti implement well- known vision algorithm need redesign .
instanc , wu et al .
[ 19 ] map sever comput vision algorithm mp-simd architectur applic gestur analysi .
similar , zarandi et al .
[ 20 ] present collect algorithm implement fpp applic laser beam control , finger track , traffic sign detect .
high comput power smart camera also exploit tackl problem involv multipl view camera , 3d pose reconstruct human real time [ 21 ] .
implement algorithm , use eye-ri vision system [ 12 ] .
conceptu block diagram system present fig .
4 .
smart camera compos mixed-sign fpp ( q-ey ) , digit microprocessor ( nio ii ) , plus hardwar interfac , result low cost system make autonom decis control extern devic .
q-ey mixed-sign mp-simd processor comput power 250 gop ( giga oper per second ) power consumpt 4 mw/gop .
processor compos 176 x 144 cell array process binari grayscal imag .
eight grayscal four binari imag memori bank intern avail q-ey buffer intermedi result .
optic sensor q-ey embed chip , grayscal imag direct process analog domain .
thus , imag convert digit sent extern sram memori manipul microprocessor .
hand , nios-ii 32-bit general purpos microprocessor perform 75 mip 70 mhz .
act like  brain  system control q-ey , sram memori , communic port .
averag power consumpt camera 1.5 w. implement algorithm eye-ri vision system distribut two part : one hand , imag decomposition/recomposit perform microprocessor simpli reading/writ bit input/output imag .
hand , stack filter algorithm execut q-ey take advantag fast implement logic morpholog oper sinc basi algorithm .
note thank massiv parallel q-ey , cell perform oper time .
particular , note cell contain combin analog digit process modul interact .
implement , two digit process modul play relev role .
one local logic unit ( llu ) , two-input logic block perform logic oper binari imag 2.5 s .
thank programm truth tabl , differ type logic oper defin .
meanwhil , modul known hit-and-miss unit ( hmu ) , check whether 33 neighborhood cell match specif pattern .
pattern structur element program defin pixel includ morpholog oper .
base hit-and-miss oper , mani binari morpholog oper 10 andr fras-velazquez et al .
eros , dilat , open , close program q-ey .
everi hit-and- miss oper execut approxim 10 s .
anoth advantag morpholog unit larg structur element quick perform minim overhead appli predefin 3 3 structur element multipl time singl instruct .
type oper larg differ sequenti implement whose complex rapid increas size structur element .
order develop applic eye-ri , need understand execut flow .
primarili , note nio microprocessor program c/c++ code , wherea q-ey program simpl c-like program languag develop anafocus call cfpp code .
therefor , applic eye-ri compos type code .
main control flow perform nio microprocessor , make call cfpp code execut q-ey .
algorithm , imag decomposit recomposit perform nio microprocessor q-ey cope given mixed-sign natur .
decomposit recomposit take approxim 14 ms 25 ms , respect .
meanwhil , algorithm 1 2 program cfpp code comput q-ey .
unfortun , q-ey contain 12 imag memori intern .
implement , eight memori reserv input bitplan , 4 avail store output bitplan intermedi result .
consequ , forc transfer bitplan extern sram memori .
unfortun , transfer data q-ey sram memori slow , thus repres bottleneck implement .
experi , found memori transfer reach 65 % total process time .
result , coars mode oper optim criteria help reduc number bitplan oper , also number memori transfer .
total , comput time imag optim algorithm rang 46.27 ms 84.0 ms depend gray-level distribut size structur element .
valu correspond frame rate goe 11.9 fps 21.6 fps .
note two bottleneck eye-ri hinder full potenti algorithm .
one decomposit recomposit step , generat baselin cost 39 ms .
limit number imag memori q-ey , slow transfer intern extern memori .
despit limit , time overhead approach much lower td implement consid imag decomposit recomposit also need perform nio processor .
case , oper take 3 second , prohibit .
problem imag threshold q-ey perform analog compar , quit inaccur due nois threshold level set 127 .
5 experiment result valid propos algorithm , implement eye-ri vision system [ 12 ] .
follow section , present evalu algorithm comparison baselin method base threshold decomposit .
particular , baselin method consist appli threshold decomposit 8-bit input imag , generat 255 bitplan .
, appli binari stack filter bitplan , output imag generat sum 255 filter bitplan .
5.1 evalu hierarch process compar hierarch process algorithm linear process baselin approach , measur percentag time comput certain number bitplan qualiti result imag .
experi , appli median filter cross-shap structur element width 3 test imag uniform distribut random number use algorithm 1 baselin method .
fig .
5 ( ) , present percentag time spent filter number threshold bitplan ascend threshold level use baselin approach .
graphic reveal process time linear increas number bitplan , mean comput cost hierarch stack filter : bitplane-bas algorithm massiv parallel processor 11 1 63 127 191 255 0 10 20 30 40 50 60 70 80 90 100 number threshold bitplan % f p ro c e ss g ti e ( ) 1 2 3 4 5 6 7 8 0 10 20 30 40 50 60 70 80 90 100 number bitwis bitplan % f p ro c e ss g ti e ( b ) 1 63 127 191 255 10 20 30 40 50 60 70 80 90 100 number threshold bitplan p n r ( b ) ( c ) 1 2 3 4 5 6 7 8 10 20 30 40 50 60 70 80 90 100  number bitwis bitplan p n r ( b ) ( ) fig .
5 ( ) ( b ) : relat process time certain number threshold bitwis bitplan , respec- tive .
( c ) ( ) : qualiti reconstruct imag certain number threshold bitwis bitplan , respect .
everi threshold bitplan .
fig .
5 ( b ) , present percentag time spent filter certain number bitwis bitplan descend order signific .
note process time exponenti increas factor 2 number bitplan increas .
impli comput cost everi bitplan , increas bit signific decreas .
word , signific bitplan comput much faster least signific bitplan .
behavior expect , sinc signific bitplan comput coupl logic morpholog oper , wherea least signific bitplan need mani , state tabl 1 .
fig .
5 ( c ) , evalu qualiti imag reconstruct certain number threshold bitplan filter ascend order .
imag qualiti measur peak signal- to-nois ratio ( psnr ) [ 9 ] , filter imag i reconstruct imag il l threshold bitplan .
fig .
5 ( c ) reveal , process first threshold bitplan , psnr around 6 db ; valu increas exponenti rate 1.2 % threshold bitplan process , reconstruct perfect .
contrast , fig .
5 ( ) , see evolut imag qualiti filter bitwis bitplan least signific bitplan .
imag qualiti also measur use psnr , l repres number bitwis bitplan .
bar chart show reconstruct imag signific bitplan yield psnr 10.7 db ; valu increas linear rate 6.63 db per bitplan bitplan process reconstruct perfect .
general , filter k bitwis bitplan descend order signific , need filter 2k  1 threshold bitplan deriv correspond partial output .
relat give us approxim equival complex algorithm baselin approach .
instanc , process seven signific bitplan , psnr reconstruct imag 51 db , shown fig .
5 ( ) .
equival , process 127 threshold bitplan baselin approach , psnr 19 db shown fig .
5 ( c ) .
thank hierarch structur algorithm , reconstruct imag much better qualiti baselin approach use number threshold bitplan .
statement visual check fig .
6 compar median filter imag ( fig .
6 ( ) ) partial reconstruct result filter method .
fig .
6 ( b ) , see reconstruct imag 127 threshold bitplan use 12 andr fras-velazquez et al .
( ) ( b ) ( c ) fig .
6 ( ) median filter imag , ( b ) reconstruct filter imag 127 threshold bitplan ( psnr = 19 db ) , ( c ) reconstruct filter imag seven signific bitplan ( psnr = 51db ) .
baselin approach , give darker coarser imag fig .
6 ( ) .
contrast , fig .
6 ( c ) show reconstruct imag seven signific bitplan use approach , give similar imag fig .
6 ( ) .
conclus , filter least signific bitplan imag , reduc comput time half without signific compromis qualiti reconstruct imag .
filter approxim may becom attract mani real- time applic base stack filter .
5.2 compar analysi general algorithm optim algorithm sect .
3.2 , propos optim criteria reduc comput time algorithm 1 depend imag distribut .
therefor , expect comput imag littl contrast much faster high contrast .
relationship examin test optim algorithm three imag differ entropi , depict fig .
7 ( ) - ( c ) .
correspond histogram imag present fig .
7 ( ) - ( f ) .
stack filter employ test eros filter squar structur element .
fig .
8 ( ) plot number bitplan eros requir filter everi imag use general optim algorithm squar structur element differ width .
general algorithm , number bitplan eros 255 regardless imag entropi .
contrast , optim algorithm , number bitplan eros decreas entropi imag decreas .
moreov , number bitplan eros decreas width structur element increas .
regard , structur element increas , filter imag tend mani pixel gray tone , thus less contrast entropi .
result , mani partial output comput lower level signific , reduc number bitplan eros .
fig .
8 ( b ) , evalu process time imag low , medium , high entropi use general optim algorithm .
general algorithm , process time increas size structur element comput bitplan eros get slower structur element increas .
moreov , total number bitplan eros remain regardless neighborhood size .
hand , optim algorithm , process time decreas imag entropi decreas structur element increas .
reduct time close relat exponenti decay number bitplan eros .
moreov , reduct larger time overhead filter larg structur element .
conclus , optim algorithm , signific reduc comput time imag depend entropi size structur element employ .
5.3 rank-ord filter implement perform rank order filter ( rof ) , also call order-statist filter [ 10 ] , compos stack-filt subclass return local statist imag .
rof rank r , denot rof ( r ) , select r-th largest element list pixel valu defin structur element .
r goe 1 n , n number element , filter rof ( 1 ) rof ( n ) correspond morpholog dilat eros oper , respect .
anoth special case occur r = ( n + 1 ) /2 , correspond median filter n odd valu .
hierarch stack filter : bitplane-bas algorithm massiv parallel processor 13 5.3.1 implement eye-ri vision system implement rank order filter perform naiv sort-and-select method optim algorithm use appropri binari filter .
unfortun , eye-ri system provid sort algorithm implement q-ey , binari rank filter avail eros dilat .
result , rest binari rank filter need deriv morpholog oper .
accord wendt et al .
[ 18 ] , binari rank filter repres posit boolean function ( pbf ) .
instanc , eros (  ) dilat (  ) binari sequenc x = ( x1 , x2 ,    , xn ) express follow pbfs :  ( x ) = x1x2   xn , ( 11 )  ( x ) = x1 + x2 +   + xn , ( 12 ) addit repres oper multipl oper .
accord [ 4 ] , pbf binari rank-ord filter implement sum-of-product : rof ( r ) ( x ) =  1n1 < n2 <  < nr6n xn1xn2   xnr , ( 13 ) indic n1 , n2 ,    , nr defin set combin meet inequ 1  n1 < n2 <    < nr 6 n .
combin ( 11 ) ( 13 ) , rewrit latter follow : rof ( r ) ( x ) =  1n1 < n2 <  < nr6n  ( xn1xn2   xnr ) .
( 14 ) result , everi product term pbf implement eros , output ad yield rank filter desir .
number eros requir deriv r-th rank ( ) ( b ) ( c ) 0 64 128 192 255 0 2 4 103 f q u e n c ( ) 0 64 128 192 255 0 1 2 3 4 103 f q u e n c ( e ) 0 64 128 192 255 0 0.5 1 1.5 2 103 f q u e n c ( f ) fig .
7 test imag : ( ) low entropi ( 5.2 bit ) , ( b ) medium entropi ( 6.2 bit ) , ( c ) high entropi ( 7.6 bit ) .
histogram imag depict ( ) , ( e ) , ( f ) , respect .
tabl 3 number eros oper requir deriv rof 5-point neighborhood .
number eros rank order filter ( 5 r ) dualiti rof ( 1 ) ( dilat ) 5 1 rof ( 2 ) 10 5 rof ( 3 ) ( median ) 10 10 rof ( 4 ) 5 5 rof ( 5 ) ( eros ) 1 1 14 andr fras-velazquez et al .
100 200 300 400 0 64 128 192 3 255 8 width se ( pixel ) # f b p la n e e ro io n low entropi / oa medium entropi / oa high entropi / oa / ga ( ) 50 100 150 200 250 0 15 30 45 60 3 7.27 width se ( pixel ) p ro c e g ti e ( ) low entropi / oa medium entropi / oa high entropi / oa / ga ( b ) fig .
8 ( ) number bitplan eros , ( b ) process time requir filter imag low , medium , high entropi squar structur element ( se ) differ width .
result provid general algorithm ( ga ) optim algorithm ( oa ) .
2 3 4 5 6 7 8 0 10 20 30 40 50 60 70 80 entropi ( bit ) p ro c e ss g ti e ( ) 1st rof ( dilat ) 2nd rof 3rd rof ( median ) 4th rof 5th rof ( eros ) fig .
9 rof perform eye-ri vision system .
filter determin binomi coeffici ( n r ) , n number element structur element .
tabl 3 , show number eros requir rank-ord filter structur element size 5 .
also , tabl show number eros r < 3 reduc use dualiti properti [ 10 ] , state rof ( r ) ( x ) = rof ( nr+1 ) ( x ) .
therefor , rof ( 1 ) deriv term rof ( 5 ) , rof ( 2 ) deriv term rof ( 4 ) .
particular , number eros ne use dualiti properti comput follow ne = { ( n nr+1 ) , 1  r  n+1 2 , ( n r ) , n+1 2 < r  n. ( 15 ) evalu process time rank-ord filter use stack filter algorithm , filter imag depict fig .
7 ( c ) cross-shap structur element 5 point .
also , test algorithm imag differ entropi valu .
imag obtain linear map imag differ dynam rang run 1 255 gray tone .
perform 5 possibl rank filter shown fig .
9 .
general , process time decreas imag entropi decreas .
behavior previous discuss sect .
5.2 case eros .
, see rank-ord filter follow similar behavior .
fig .
9 , also see low-entropi imag synthet imag process less 20 ms sinc entropi usual less 5 bit .
hand , natur imag entropi 5 8 bit , thus give process time 15 80 ms approxim .
particular , note curv dual filter erosion/dil rof ( 2 ) /rof ( 4 ) similar perform .
expect dual rank filter requir number eros , shown tabl 3 .
moreov , process time median filter slower filter requir binari hierarch stack filter : bitplane-bas algorithm massiv parallel processor 15 eros .
therefor , larger structur element use , gap time median eros filter would larger .
summari , stack filter algorithm allow us implement type rank-ord filter base either bitplan eros direct pbf implement .
moreov , integr optim criteria algorithm , reduc comput time depend imag distribut without compromis qualiti filter imag .
6 conclus work , propos stack filter algorithm base imag bitwis decomposit smart camera 2d-array imag processor .
thank hierarch structur , algorithm priorit process inform bitplan filter much faster least inform bitplan .
result , approxim stack filter imag skip comput least inform bitplan without signific compromis qualiti output imag , reduc process time half .
hand , optim algorithm exhibit close relationship process time imag distribut comput low-entropi imag 5 time faster high-entropi imag .
anoth interest featur approach drastic reduc process time use larg structur element .
featur make algorithm attract applic need run real-tim .
deriv equat ( 5 ) bitwis decomposit function , state ( 2 ) , express term floor function use modulo oper x mod = x bx/yc ident b bx/pc/qc = bx/pqc follow bk =  2k   2  2k+1  .
( 16 ) general , floor function staircas shape , everi step express term threshold function .
therefor , state that p  =  j j ( tjp  ( j+1 ) p ) , ( 17 ) p integ number determin stair width .
consequ , floor function ( 16 ) express as 2k  = nk j=0 j ( tj2k  ( j+1 ) 2k ) , ( 18 )  2k+1  = nk+1 j=0 j ( tj2k+1  ( j+1 ) 2k+1 ) , ( 19 ) nk = 2 kk 1 k repres bit depth imag .
stair width ( 19 ) two time larger ( 18 ) , indic j j point differ threshold level .
therefor , use common index , express ( 18 ) index j follow 2k  = nk+1 j=0 2j ( tj2k+1  ( 2j+1 ) 2k ) + ( 2j + 1 ) ( ( 2j+1 ) 2k  ( j+1 ) 2k+1 ) .
( 20 ) substitut ( 19 ) ( 20 ) ( 16 ) obtain relat decomposit bk = nk+1 j=0 ( 2j+1 ) 2k  ( j+1 ) 2k+1 .
( 21 ) 16 andr fras-velazquez et al .
equival , express relat term boolean oper shown bk = nk+1 j=0 ( ( 2j+1 ) 2k  t ( j+1 ) 2k+1 ) .
( 22 ) b deriv equat ( 6 ) state ( 1 ) , threshold function base comparison imag gray level ` .
equal compar , hand , fundament oper defin shown c ` ( n , ) = { 1 , ( n , ) = ` , 0 , otherwis .
( 23 ) appli bitwis decomposit ` , get ( bk1 , ... , b0 ) 2 ( k1 , ` , ... , 0 , ` ) 2 , respect .
compar k bit level decomposit , also express equal compar follow c ` ( n , ) = k1 k=0 bk ( n , )  k , ` .
( 24 ) base equal comparison reformul threshold function ( 1 ) shown tl ( n , ) = 2k1 ` =l c ` ( n , ) , ( 25 ) c ` substitut ( 24 ) lead tl ( n , ) = 2k1 ` =l k1 k=0 ( bk ( n , )  k , ` ) .
( 26 ) boolean function canon form sum product ( sop ) [ 13 ] , mini- mize yield simplifi represent .
follow paragraph , perform minimiza- tion ( 26 ) assum tl return minim express fl ( bk1 , bk2 , .
.
.
, b0 ) sum-of-product represent .
way , start appli shannon  expans theorem [ 14 ] fl follow fl ( bk1 , bk2 , .
.
.
, b0 ) = ( bk1  fl ( 1 , bk2 , .
.
.
, b0 ) )  ( bk1  fl ( 0 , bk2 , .
.
.
, b0 ) ) , ( 27 ) 1 0 repres bitplan one zero , respect .
express reduc two possibl case : case 1 .
l < 2k1 , fl ( 1 , bk2 , .
.
.
, b0 ) = 1 unit theorem [ 13 ] .
result , reduc ( 27 ) fl ( bk1 , bk2 , .
.
.
, b0 ) = bk1 ( bk1fl ( 0 , bk2 , .
.
.
, b0 ) ) , use elimin theorem [ 13 ] get fl ( bk1 , bk2 , .
.
.
, b0 ) = bk1  fl ( 0 , bk2 , .
.
.
, b0 ) .
( 28 ) case 2 .
l  2k1 , fl ( 0 , bk2 , .
.
.
, b0 ) = 0 .
case , equat ( 27 ) reduc fl ( bk1 , bk2 , .
.
.
, b0 ) = bk1  fl ( 1 , bk2 , .
.
.
, b0 ) .
( 29 ) hierarch stack filter : bitplane-bas algorithm massiv parallel processor 17 gather ( 28 ) ( 29 ) singl function , express ( 27 ) follow tl = { bk1  fl ( 0 , bk2 , .
.
.
, b0 ) , k1 = 0 , bk1  fl ( 1 , bk2 , .
.
.
, b0 ) , k1 = 1 , ( 30 ) k1 signific bit l given ( l ) 10 = ( k1k2 ... 0 ) 2 .
note k1 = 0 impli l < 2k1 , k1 = 1 impli l  2k1 .
piecewis function redefin compact follow tl = bk1 ./ k1 fl ( k1 , bk2 , .
.
.
, b0 ) , ( 31 ) k1 repres bitplan either zero one depend valu k1 , bow tie oper defin ./ x = {  , x = 0 ,  , x = 1 .
( 32 ) express ( 31 ) work appli shannon  expans theorem fl ( k1 , bk2 , .
.
.
, b0 ) , lead fl ( k1 , bk2 , .
.
.
, b0 ) = ( bk2  fl ( k1,1 , bk3 , .
.
.
, b0 ) )  ( bk2  fl ( k1,0 , bk3 , .
.
.
, b0 ) ) .
( 33 ) express simplifi four possibl case : case 1 .
l < 2k2 , fl ( 0,1 , bk3 , .
.
.
, b0 ) = 1 , substitut ( 33 ) get fl ( 0 , bk2 , .
.
.
, b0 ) = bk2  fl ( 0,0 , bk3 , .
.
.
, b0 ) .
( 34 ) case 2 .
l  2k2 , fl ( 0,0 , bk3 , .
.
.
, b0 ) = 0 , reduc ( 33 ) fl ( 0 , bk2 , .
.
.
, b0 ) = bk2  fl ( 0,1 , bk3 , .
.
.
, b0 ) .
( 35 ) case 3 .
l < 3  2k2 , fl ( 1,1 , bk3 , .
.
.
, b0 ) = 1 , expans simplifi fl ( 1 , bk2 , .
.
.
, b0 ) = bk2  fl ( 1,0 , bk3 , .
.
.
, b0 ) .
( 36 ) case 4 .
l  3  2k2 , fl ( 1,0 , bk3 , .
.
.
, b0 ) = 0 , substitut ( 33 ) return fl ( 1 , bk2 , .
.
.
, b0 ) = bk2  fl ( 1,1 , bk3 , .
.
.
, b0 ) .
( 37 ) case put togeth follow form : tl = ( bk1 ./ k1 ( bk2 ./ k2 fl ( k1 , k1 , bk3 , .
.
.
, b0 ) ) ) ( 38 ) light ( 31 ) ( 38 ) , easili deduc last shannon  expans follow tl = ( bk1 ./ k1 ( bk2 ./ k2    ( b0 ./ 0 fl ( k1 , k2 , .
.
.
, 0 ) ) ) ) ( 39 ) given fl ( k1 , k2 , .
.
.
, 0 ) = 1 , equat ( 39 ) simplifi least signific bit l set zero .
instanc , z number least signific bit l set zero , z1 = z2 =    = 0 = 0 rightmost part ( 39 ) reduc follow bz1 bz2      1 = 1 .
final , minim sum product state ( 26 ) shown tl = ( bk1 ./ k1 ( bk2 ./ k2    ( bkq+1 ./ kq+1 bkq ) ) ) ( 40 ) q = k  z. acknowledg work support imec flemish fund scientif research ( fwo ) , project tec2016-75976-r , financ spanish ministerio de economa competitividad european region develop fund ( erdf ) 18 andr fras-velazquez et al .
refer 1 .
abbo , a.a. , kleihorst , r.p. , schueler , b. : xetal-ii : low-pow massively-parallel processor video scene analysi .
signal process system 62 ( 1 ) , 1727 ( 2011 ) 2 .
avedillo , m. , quintana , j. , alami , h. , jimenez-calderon , a. : practic parallel architectur stack filter .
journal vlsi signal process system signal , imag video technolog 38 ( 2 ) , 91100 ( 2004 ) 3 .
chakrabarti , c. , luck , l. : vlsi architectur weight order statist ( wos ) filter .
: ieee inter- nation symposium circuit system ( isca ) , vol .
2 , pp .
320323 vol.2 ( 1998 ) 4 .
chen , k. : bit-seri realize class nonlinear filter base posit boolean function .
ieee transact circuit system 36 ( 6 ) , 785794 ( 1989 ) 5 .
droogenbroeck , m. , buckley , m. : morpholog eros open : fast algorithm base anchor .
journal mathemat imag vision 22 ( 2-3 ) , 121142 ( 2005 ) 6 .
fras-velazquez , a. , morro , j. : gray-scal eros algorithm base imag bitwis decomposit : ap- plicat focal plane processor .
: ieee intern confer acoust , speech signal process , icassp , pp .
845848 ( 2009 ) 7 .
fras-velazquez , a. , philip , w. : bit-plan stack filter algorithm focal plane processor .
: ieee intern confer imag process icip , pp .
37413744 .
ieee ( 2010 ) 8 .
gevorkian , d. , egiazarian , k. , agaian , s. , astola , j. , vainio , o. : parallel algorithm vlsi architectur stack filter use fibonacci p-code .
ieee transact signal process , 43 ( 1 ) , 286295 ( 1995 ) 9 .
gonzalez , r.c. , wood , r.e .
: digit imag process .
prentice-hal , inc. ( 2006 ) 10 .
marago , p. , schafer , r. : morpholog filterspart ii : relat median , order-statist , stack filter .
ieee transact acoust , speech signal process 35 ( 8 ) , 11701184 ( 1987 ) 11 .
mertzio , b.g. , tsirikolia , k. : coordin logic filter applic imag process pattern recognit .
circuit , system signal process 17 ( 4 ) , 517538 ( 1998 ) 12 .
rodrguez-vazquez , a. , domnguez-castro , r. , jimenez-garrido , f. , morilla , s. , listan , j. , alba , l. , utrera , c. , espejo , s. , romay , r. : eye-ri cmos vision system .
: analog circuit design , pp .
1532 .
springer netherland ( 2008 ) 13 .
roth jr , c. , kinney , l. : fundament logic design .
cengag learn ( 2013 ) 14 .
shannon , c. , et al .
: synthesi two-termin switch circuit .
bell system tech .
journal 28 ( 1 ) , 5998 ( 1949 ) 15 .
shi , y. : smart camera machin vision .
: smart camera , pp .
283303 .
springer ( 2010 ) 16 .
spilioti , i. , boutali , y. : parameter real-tim moment comput gray imag use block tech- niqu .
journal real-tim imag process 6 ( 2 ) , 8191 ( 2011 ) 17 .
urbach , e. , wilkinson , m.h.f .
: effici 2-d grayscal morpholog transform arbitrari flat structur element .
ieee transact imag process 17 ( 1 ) , 18 ( 2008 ) 18 .
wendt , p. , coyl , e. , gallagh n.c. , j. : stack filter .
ieee transact acoust , speech signal process 34 ( 4 ) , 898911 ( 1986 ) 19 .
wu , c. , aghajan , h. , kleihorst , r. : map vision algorithm simd architectur smart camera .
: first acm/iee intern confer distribut smart camera , pp .
2734 ( 2007 ) 20 .
zarandi , a .
: focal-plan sensor-processor chip .
springer ( 2011 ) 21 .
zivkov , z. : wireless smart camera network real-tim human 3d pose reconstruct .
comput vision imag understand 114 ( 11 ) , 1215  1222 ( 2010 ) 22 .
zivkov , z. , kleihorst , r. : chapter 21 - smart camera wireless camera network : architectur overview .
: h. aghajan , a. cavallaro ( ed . )
multi-camera network , pp .
497  510 .
academ press , oxford ( 2009 ) adpc047.tmp upcommon portal del coneix obert de la upc 11tuhttp : //upcommons.upc.edu/e-print aquesta s una cpia de la versi author  final draft d'un articl publicat la revista journal real-tim imag process .
________________________________________________ articl publicat / publish paper :
