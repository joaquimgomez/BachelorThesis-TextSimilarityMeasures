semi-explicit multi-step method solv incompress navier-stok equat appli scienc articl semi-explicit multi-step method solv incompress navier-stok equat pavel ryzhakov 1,* id julio marti 1,2 1 centr internacion mtode numric en enginyeria (cimne), edifici c1 campu nord upc c/ gran capit, s/n 08034 barcelona, spain; 2 depart civil environment engineering, universitat politcnica catalunya (upc), 08034 barcelona, spain * correspondence: received: 19 decemb 2017; accepted: 14 januari 2018; published: 16 januari 2018 abstract: fraction step method techniqu result computationally-effici implement navierstok solvers. finit element-bas models, appli conjunct implicit time integr schemes. hand, framework finit differ finit volum methods, fraction step method successfulli appli obtain predictor-corrector semi-explicit methods. present work, deriv scheme base fraction step techniqu conjunct explicit multi-step time integr framework galerkin-typ stabil finit element methods. certain assumptions, rungekutta scheme equip fraction step lead effici semi-explicit method, pressur poisson equat solv time step. thus, comput cost implicit step scheme minimized. numer exampl solv valid result scheme provid insight accuraci comput efficiency. keywords: rungekutta; fraction step method, incompress flows; finit element method; comput effici 1. introduct solut incompress flow problem aris real-lif engin applic call develop accurate, effici schemes, associ comput time decis factor use. method available, class techniqu commonli implement well-known fraction step method. method origin introduc work chorin [1] temam [2] incompress navierstok equat (independently, similar methodolog develop thoroughli studi yanenko [3,4]). basically, method allow decoupl primari variabl govern equat (the veloc pressure) replac monolith solut origin coupl seri solut steps, ensur variabl (either veloc pressure) unknown step. first, momentum equat solv intermediate, non-solenoidal, veloc remov depend unknown pressure. afterwards, pressur found, veloc correct fulfil incompress constraint. shown fraction step method view block lu decomposit origin monolith equat [5]. method popular result comput effici (see, e.g., [68]). accuraci method address [9]. error estim pressur stabil issu fraction step method analyz [10]. appl. sci. 2018, 8, 119; doi:10.3390/app8010119 www.mdpi.com/journal/applsci appl. sci. 2018, 8, 119 2 14 exhaust review differ implement version method [11]. method unifi artifici compress approach fraction step method consult [12]. fraction step methodolog appli compress flow model (see, e.g., [13,14]). peculiar appli fraction step method multiphas flow surfac tension effect highlight [15]. major work fraction step method carri consid fixed-grid (eulerian) approaches, recent work analyz implic appli fraction step method move grid (lagrangian) method [16,17]. fraction step method appli model incompress solid [18]. context incompress flow modeling, fraction step method appli conjunct implicit time integr schemes. case above-ment works. pure explicit scheme appli incompress navierstok equat implicit natur pressure. hand, appeal possibl consist develop semi-explicit scheme, veloc integr explicitly, pressur treat implicitly. particularli appeal option reli adopt accur high order methodolog rungekutta time integr family. follow works, e.g., [1926]. context finit volum methods, followed, e.g., [21,22]. [21], accuraci differ version rungekutta scheme analyzed. author deriv predictor-corrector scheme, similar fraction step one; however, spit error commit pressur comput sub-step rungekutta scheme. [22], stabil bound differ fraction step-bas scheme (includ on rungekutta integration) analyz high reynold number flows. author develop semi-explicit rungekutta-bas method context finit differ framework. [22], third-ord rungekutta scheme convect term combin cranknicholson integr viscou term proposed. [23], fourth-ord rungekutta scheme equip solut pressur poisson equat sub-step propos (similar [21]). above-ment semi-explicit finit volum finit differ approach reli solv pressur poisson equat sub-step multi-step scheme, computationally-intens option. idea reduc number implicit step semi-explicit scheme propos [25]. finit differ context, author propos semi-explicit third-ord rungekutta-bas scheme convect term advanc explicitly, treat viscou term implicitly. importantly, suggest assum pressur correspond intermedi rungekutta step equal histor one. thus, computationally-expens pressur poisson equat solv time step. present work, develop similar approach context galerkin finit element methods. work, deriv scheme base combin fraction step techniqu fourth-ord rungekutta scheme, strive minim comput cost correspond implicit steps. certain assumpt intermedi step pressur result effici semi-explicit scheme requir solv pressur poisson equat time step. paper organ follows. defin space-discret problem consid linear velocity-pressur stabil finit elements. afterwards, time-discret equat fourth-ord rungekutta scheme derived. next, assumpt pressur intermedi rungekutta step introduced, fraction split applied. result semi-explicit scheme obtained. paper conclud numer verif example. time accuraci comput effici method estimated. appl. sci. 2018, 8, 119 3 14 2. govern equat navierstok equat incompress flow defin domain boundari written as: u t + (u )u u +p = f, (1) u = 0, (2) u veloc vector, p pressure, t time, f bodi force, densiti kinemat viscosity. ensur well-posed defin equat (1) (2), suitabl boundari condit specified. boundari = d n , d n = , follow condit prescribed: u = upr d, (3) n = prn n , (4) upr prescrib velocity, n outer unit normal n pr n prescrib traction vector. homogen boundari condit consid sake simplicity. defin symbol differenti navierstok oper as: a(u, p) = ( a1(u, p) a2(u, p) ) , (5) where: a1 = (u )u u +p, (6) a2 = u. (7) then, introduc notat f = ( f 0 ) , govern equat written as: ( u t 0 ) +a(u, p) = f . (8) 2.1. space discret galerkin weak form (8) reads:( , u t ) + (,a1) + (q,a2) = , f, (9) q veloc pressur test functions. notat adopted, (, ) , stand bilinear linear forms, respectively. order obtain stabl solut convection-domin flows, equat stabilized. additionally, pressur stabil necessari equal order velocity-pressur interpolations, satisfi compat condit [27]. galerkin/least squar (gls) stabil method allow circumv problem sum n a(, q) (f a(u, p) u t ) origin weak form problem [28]. mean sum product residu navierstok oper a(, q) (thi oper view chang weight function). note linear velocity-pressur elements, gl method coincid recent (and diffus gener case) algebra sub-grid scale (asgs) method [29], defin base adjoint oper weight function residual. appl. sci. 2018, 8, 119 4 14 sum galerkin weak form stabil term result in: (, u t ) + (, u u) + (,p) (, u) + (q, u)+ el el (q + ) (f u t u u + up), (10) stabil coeffici defin (see, e.g., [28]): = 2||u|| h + 4 h2 , (11) h element size. integr viscou term part rearrang term (note equat (10), product contain test function contribut momentum equation, on contain q contribut mass conserv equation), modifi linear momentum mass conserv equat obtained: (, u t ) + (, u u) + (,u) ( , p)+ el el ( ) ( f u t u ) = f, , (12) (q, u) + el el q ( f u t u ) = 0. (13) prior establish space-discret stabil govern system, defin matric vector correspond term galerkin weak form: (, u) mu, (14) ( , p) gp, (15) (,u) lu, (16) (, (u u)) c(u)u, (17) f, f. (18) oper correspond stabil term are: el el ( )( u) s1u, (19) el el ( )(u) s2u, (20) el el ( )(p) s3p, (21) el el ( )( u t ) mst u t , (22) el el ( )(f) fs1, (23) el el (q)(f) fs2, (24) el el (q)(u) s4u, (25) appl. sci. 2018, 8, 119 5 14 el el (q)(( )u) s5u, (26) el el (q)(p) lp. (27) note variabl distinguish over-bar (u p) stand vector nodal quantities. stabil space-discret equat matrix form read: (m + mst) u t + (l + c(u) + s1 + s2)u (g + s3)p = f + fs1, (28) (d + s4 + s5)u + lp = fs2. (29) note dynam viscos = used. scope appli time integr scheme explicit type, lump form mass matrix adopted. sake clarity, shall introduc follow short-hand notation: c = c + l + s1 + s2, (30) g = s3 + g, (31) f = f + fs1 + mstan, (32) d = d + s4 + s5, (33) f = fs2, (34) m = m + mst. (35) notation, govern equat discret space read: m u t + cu gp = f, (36) du + lp = f. (37) next, time integr performed. 2.2. time integr take account implicit natur pressur incompress flows, fully-explicit time integr scheme (strictli speaking, fully-explicit scheme defined, associ critic time step prohibit small, govern acoust pressur scale). however, attract option defin integr momentum equat explicitly, pressur term, treat implicit way. explicit time integr techniqu gener faster implicit counterpart involv non-linear iterations, requir solv linear system (in case mass matrix lump used). however, condition stabl restrict critic time step size, prohibit small. power commonly-us class explicit method famili rungekutta time integr schemes. integr method involv evalu residu govern equat sub-steps. rungekutta scheme n intermedi step character n-th order accuraci n 4. larger valu sub-steps, accuraci order n. make four-step scheme commonly-impl version. moreover, consid restrict critic time step size, version method offer good balanc sub-step number maximum permiss time step size. detail stabil domain rungekutta scheme consult in, e.g., [28] (chapter 5.3). appl. sci. 2018, 8, 119 6 14 consid solut given problem known tn, rungekutta method requir success comput govern equat residu sub-step order obtain solut tn+1. gener cauchi problem type: y t = f (y(t), t), (38) rungekutta scheme fourth order provides: yn+1 yn t = 1 6 [k1 + 2k2 + 2k3 + k4], (39) k1, . . . , k4 intermedi residu right-hand correct obtain as: k1 = f (tn, yn) (40) k2 = f (tn + t 2 , yn + t 2 k1), (41) k3 = f (tn + t 2 , yn + t 2 k2), (42) k4 = f (tn + t, yn + tk3). (43) clearly, comput yn+1, function evalu times, intermedi step. involv updat primari variable. next, momentum equat integr scheme. correspond residu defin as: r = f cu + gp. (44) thus, set veloc residu comput order integr momentum equat time equat (40)(43) read (note pressur term treat implicitly, i.e., correspond end-of-sub-step values): r1 = fn c(un)(un) + gp1, (45) u1 = + 1 2 m1tr1, (46) r2 = f1 c(u1)(u1) + gp2, (47) u2 = + 1 2 m1tr2, (48) r3 = f2 c(u2)(u2) + gp3, (49) u3 = + m 1tr3, (50) r4 = fn+1 c(u3)(u3) + gp4. (51) comput right-hand-sid correct r1 , . . . , r4 exactli requir solv mass balanc equat sub-steps. however, impli perform implicit step times, make method computation expensive. order avoid this, propos assum pressur intermedi step comput linear interpol valu tn tn+1. lead follow approximation: p1 = p(tn) = pn, p2 = p(tn + t 2 ) = 1 2 (pn + pn+1), p3 = p(tn + t 2 ) = 1 2 (pn + pn+1), p4 = p(tn+1) = pn+1. appl. sci. 2018, 8, 119 7 14 follow (39), equat linear momentum conserv discret form written as: m un+1 t = 1 6 [r1 + 2r2 + 2r3 + r4]. (52) assumpt linear variat pressur tn tn+1 permit remov gradient pressur definit residu put overal momentum equat (thi form facilit appli fraction split next): m un+1 t = 1 6 [r1 + 2r2 + 2r3 + r4] + 1 2 g ( pn+1 + pn ) . (53) modifi residu (indic over-bar) defin as: r1 = fn c(un)(un), (54) r2 = f1 c(u1)(u1), (55) r3 = f2 c(u2)(u2), (56) r4 = fn+1 c(u3)(u3), (57) consid r = r + gp. sake brevity, shall us follow notat sum residuals: r = 1 6 [r1 + 2r2 + 2r3 + r4] (58) 2.3. fraction step split govern consist momentum equat (53) mass conserv equat (equat (37)), time-integr form written as: dun+1 + lpn+1 = f. (59) decoupl veloc pressure, shall appli fraction step split introduc auxiliari veloc u, non-solenoidal. fraction split appli equat (53) lead to: m u t = r + gpn, (60) m un+1 u t = 1 2 gpn+1 + 1 2 gpn gpn. (61) = 0 (no pressur gradient fraction momentum equations) = 1 (histor pressur gradient fraction momentum equation). residu defin as: r = 1 6 [r1 + 2r2 + 2r3 + r4], (62) r1 = fn c(un)(un), (63) r2 = f1 c(u1)(u1), (64) r3 = f2 c(u2)(u2), (65) r4 = fn+1 c(u3)(u3). (66) emphas appli fraction step split, residu fraction momentum equat correspond fraction veloc u. reflect tild residu symbol (r r). note sum equat (60) (61), recov origin momentum equat fraction step approximation, consist assum gener appl. sci. 2018, 8, 119 8 14 convect oper comput fraction veloc c(un+1) c(u). mean convect comput auxiliari non-solenoid velocity. follow idea [10], result accuraci estimated. correspond split error depend : o(||un+1 u||) = to(||0.5(pn+1 + pn) pn||). = 0, order approxim t. = 1, order t2 o(||pn+1 pn||) = t. higher accuracy, second option here, choos = 1. appli mass conserv equat (59) equat (61) lead to: tdm1 ( 1 2 gpn+1 1 2 gpn ) = du f lpn+1. (67) introduc commonly-us approxim laplac oper dm1g l, obtains: m u t = r + gpn, (68) t 2 l(pn+1 pn) = du f lpn+1, (69) m un+1 u t 1 2 g(pn+1 pn) = 0. (70) defin discret model. equat (69) known pressur poisson equation. problem solv steps: 1. fraction momentum (equat (68)) solved. fraction veloc u obtain (explicit step). 2. equat pressur (equat (69)) solved. pressur pn+1 obtain (implicit step). 3. veloc correct (equat (70)) give un+1 (explicit step). accuraci effici method propos estim mean numer test. 3. numer exampl method implement krato multi-physics, c++ object-ori fe framework [30]. solut linear equat system, biconjug gradient stabil method (bicgstab) used. 3.1. accuraci scheme benchmark, time accuraci comput effici present model tested. benchmark origin propos [10], compar accuraci stabil differ fraction step methods. example, solv navierstok equat unit squar domain homogen veloc conditions. forc vector prescrib correspond follow analyt solution: ux(x, y, t) = f (x) f (y)g(t), uy(x, y, t) = f (x) f (y)g(t). (71) f g are: f (x) = 100x2(1 x)2, g(t) = cos(4t)et. (72) pressur solut satisfi problem: p = 0 p = 100x2. adopt second initi condit pressure. physic properti fluid follows: kinemat viscos 0.001 m2/s, densiti 1 kg/m3. time interv consid 1 s. structur mesh 80 80 linear triangular appl. sci. 2018, 8, 119 9 14 element mention otherwise. differ time step size tested. method propos compar implicit method obtain appli fraction step equat obtain second order backward differenti formula (bdf2) time integr scheme (the implicit implement valid [31]). method propos priori expect exhibit second order convergence, second order implicit scheme select comparison. note rate converg importance, error (i.e., ordin posit error vs. step size curve). veloc field t = 1.0 shown figur 1. evolut horizont veloc compon ux point (x, y) = (0.75, 0.75) obtain implicit present semi-explicit scheme shown figur 2 3, respectively. time step diminishes, propos method fraction step method tend exact solution. however, larg time step, implicit scheme clearli exhibit larg error, semi-explicit rungekutta scheme result solut nearli coincid analyt one. assess accuraci quantitatively, converg time approxim displai figur 4. order obtain graphs, test perform time step size rang t = 0.05 s t = 0.001 s. error versu time step size plot propos semi-explicit implicit method. logarithm scale used. error comput sum nodal error time t = 1 s: err = n |ufeuexact | |uexact | (n number nodes). scheme exhibit quadrat convergence. however, error introduc propos method consider smaller implicit method given time step. example, semi-explicit rungekutta scheme t = 0.01 lead error implicit scheme t = 0.001. indic provid s lower comput cost (per time step) semi-explicit scheme, consider gain overal comput time expected. figur 1. comput mesh veloc field t = 1 s. solut obtain semi-explicit rungekutta scheme. 3.2. comput effici scheme order highlight comput effici properti propos method, test describ previou sub-sect perform time step size (t = 0.01 s t = 0.001 s) mesh (rough mesh: 6500 node fine mesh: 160,000 nodes). comput cost differ solut step estimated. appl. sci. 2018, 8, 119 10 14 -0.8 -0.6 -0.4 -0.2 0 0.2 0.4 0.6 0 0.2 0.4 0.6 0.8 1 u x ( 0 .7 5 ,0 .7 5 )( m /s ) time (s) analyth solut implicit dt=0.01 implicit dt=0.05 figur 2. tempor evolut horizont veloc (x, y) = (0.75, 0.75). implicit second order backward differenti formula (bdf2) scheme. -0.8 -0.6 -0.4 -0.2 0 0.2 0.4 0.6 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 u x ( 0 .7 5 ,0 .7 5 )( m /s ) time (s) analyth solut rk dt=0.01 rk dt=0.05 figur 3. tempor evolut horizont veloc (x, y) = (0.75, 0.75). semi-explicit rungekutta scheme. -6 -5 -4 -3 -2 -1 0 -3 -2.8 -2.6 -2.4 -2.2 -2 -1.8 -1.6 -1.4 -1.2 l o g e rr log dt implict rk figur 4. error t = 1 s time step, logarithm scale. appl. sci. 2018, 8, 119 11 14 test perform intel i5 desktop computer. execut singl thread order gain insight effici scheme consid gain obtain parallel implementation. poisson equat solv biconjug gradient stabil algorithm diagon precondit fix toler 103. comput time correspond solut fraction momentum equat (first step) pressur poisson equat displayed. comput cost momentum equat correct displayed, negligible. comput time calcul averag time steps. figur 5 show comput time correspond test perform rough mesh. cost solut poisson equat propos implicit scheme nearli ident (around 0.02 s) consid time step sizes. comput cost momentum equat solut equal 0.015 s case semi-explicit scheme 0.035 s case implicit scheme t = 0.001 s. increas time step 0.01 s, comput cost step nearli chang semi-explicit scheme, increas 0.075 s case implicit scheme. occur increas number non-linear iter necessari converg implicit scheme. figur 6 show comput time obtain simul carri fine mesh. similar result shown previou figure, time requir solut poisson equat similar methods, consider differ time requir solut fraction momentum equat (first step). larger time steps, non-linear iter requir case implicit scheme. consid case, t = 0.01 s, overal comput cost implicit method three-tim larger semi-explicit scheme (the cost step five-tim higher case implicit scheme). note figur 4 indic achiev given accuracy, semi-explicit scheme allow larger time steps. instance, rel error approxim 104 requir t < 0.001 s case implicit scheme, semi-explicit scheme lead accuraci t = 0.01 s. thus, overal comput cost correspond time accuraci smaller case semi-explicit scheme. note estim restrict semi-explicit scheme given problem know courant fourier numbers. strongli restrict time step case high viscosities. however, engin fluid air water character low viscosity. thus, present methodolog successfulli wide rang practic applications. figur 5. comput time differ solut steps. semi-explicit vs. implicit method. mesh 6500 nodes. appl. sci. 2018, 8, 119 12 14 figur 6. comput time differ solut steps. semi-explicit vs. implicit method. mesh 160,000 nodes. 4. summari conclus paper shown effici semi-explicit strategi deriv framework stabil galerkin finit element methods. methodolog base combin rungekutta time integr scheme fraction step techniqu presented. shown introduc approxim pressur intermedi step rungekutta method lead scheme implicit step necessari comput pressur perform once. priori estimates, numer test shown time accuraci result scheme reduc second order; however, valu error given time step order magnitud smaller aris appli fraction step second-ord implicit schemes. thus, problem critic time step estim cfl (courant-friedrichs-lewy) criteria favorable, method propos defin advantag option comparison implicit schemes. overal comput cost result method govern cost singl solut pressur poisson equation, equat inhomogen laplac type. thus, import step propos method effici devis scheme minim cost solv poisson equation, level linear solver follow algebra multi-grid deflat techniqu [32]. observ implicit time integr scheme prefer literatur explicit ones, better posit attend present hardwar technology. orient usag parallel comput gener purpos graphic processor unit (gpgpu) [33]. thus, cost associ consider reduced. acknowledgments: work support auspic cometadproject nation rtdplan (ref. mat2014-60435-c2-1-r) ministerio economa y competitividad spain. author contributions: methodolog develop authors. p. ryzhakov implement multi-step method. j. marti implement pressur correction. accuraci analysi j. marti, comput effici estim p. ryzhakov. conflict interest: author declar conflict interest. appl. sci. 2018, 8, 119 13 14 refer 1. chorin, a. numer method solv incompress viscou problems. j. comput. phys. 1967, 2, 1226. 2. temam, r.m. sur lapproxim la solut de equat navier-stok par la method de pase fractionaires. arch. ration. mech. anal. 1969, 32, 135153. 3. yanenko, n. method fraction step solv multidimension problem mathemat physics. novosib. sci. 1967, 196. 4. yanenko, n. method fraction steps. solut problem mathemat physic variables; translat russian cheron, t.; springer: berlin/heidelberg, germany, 1971. 5. blair perot, j. analysi fraction step method. j. comput. phys. 1993, 108, 5158. 6. kim, j.; moin, p. applic fractional-step method incompress navier-stok equations. j. comput. phys. 1985, 59, 308323. 7. donea, j.; giuliani, s.; laval, h.; quartapelle, l. finit element solut unsteadi navier-stok equat fraction step method. comput. method appl. mech. eng. 1982, 30, 5373. 8. turek, s. compar studi time-step techniqu incompress navier-stok equations: fulli implicit nonlinear scheme semi-implicit project methods; iwr: wroclaw, poland, 1995. 9. strikwerda, j.; lee, y. accuraci fraction step method. siam j. numer. anal. 1999, 37, 3747. 10. codina, r. pressur stabil fraction step finit element method incompress flows. j. comput. phys. 2001, 170, 112140. 11. guermond, j.; minev, p.; shen, j. overview project method incompress flows. comput. method appl. mech. eng. 2006, 195, 60116045. 12. knzsy, l.; drikakis, d. unifi fractional-step, artifici compress pressure-project formul solv incompress navierstok equations. commun. computat. phys. 2014, 16, 11351180. 13. codina, r.; vzquez, m.; zienkiewizc, o. gener algorithm compress incompress flows. int. j. numer. method fluid 1998, 27, 1332. 14. ryzhakov, p.; rossi, r.; oate, e. algorithm simul thermal coupl low speed flow problems. int. j. numer. method fluid 2012, 70, 119. 15. ryzhakov, p.b.; jarauta, a. embed approach immisc multi-fluid problems. int. j. numer. method fluid 2016, 81, 357376. 16. ryzhakov, p.; oate, e.; rossi, r.; idelsohn, s.r. improv mass conserv simul incompress flows. int. j. numer. method eng. 2012, 90/12, 14351451. 17. ryzhakov, p. modifi fraction step method fluidstructur interact problems. rev. int. mtodo numr. clc. diseo ing. 2017, 33, 5864. 18. nithiarasu, p. matrix free fraction step method static dynam incompress solid mechanics. int. j. numer. method eng. sci. mech. 2006, 7, 369380. 19. nikitin, n. third-order-accur semi-implicit rungekutta scheme incompress navier-stok equations. int. j. numer. method fluid 2006, 51, 221233. 20. ascher, u.; ruuth, s.; spiteri, r. implicit-explicit runge-kutta method time-depend partial differenti equations. appl. numer. math. 1997, 25, 151167. 21. sanderse, b.; koren, b. accuraci analysi explicit rungekutta method appli incompress navierstok equations. j. comput. phys. 2012, 231, 30413063. 22. fishpool, g.; leschziner, m. stabil bound explicit fractional-step scheme navierstok equat high reynold number. comput. fluid 2009, 38, 12891298. 23. kampanis, n.a.; ekaterinaris, j.a. stagger grid, high-ord accur method incompress navierstok equations. j. comput. phys. 2006, 215, 589613. 24. ha, s.; park, j.; you, d. gpu-acceler semi-implicit fractional-step method numer solut incompress navierstok equations. j. comput. phys. 2018, 352, 246264. 25. le, h.; moin, p. improv fraction step method incompress navierstok equations. j. comput. phys. 1991, 92, 369379. 26. pareschi, l.; russo, g. implicit-explicit rungekutta scheme stiff system differenti equations. recent trend numer. anal. 2000, 3, 269289. 27. bathe, k.j. infsup condit evalu mix finit element methods. comput. struct. 2001, 79, 243252. appl. sci. 2018, 8, 119 14 14 28. donea, j.; huerta, a. finit element method flow problems; wiley: new york, ny, usa, 2003. 29. codina, r. stabil finit element method gener stationari incompress flows. comput. method appl. mech. eng. 2001, 190, 26812706. 30. dadvand, p.; rossi, r.; oate, e. object-ori environ develop finit element code multi-disciplinari applications. arch. comput. method eng. 2010, 17/3, 253297. 31. ryzhakov, p.; cotela, j.; rossi, r.; oate, e. two-step monolith method effici simul incompress flows. int. j. numer. method fluid 2014, 74, 919934. 32. brandt, a.; livne, o. multigrid techniques: 1984 guid applic fluid dynamics, revis edition; siam: philadelphia, pa, usa, 2011. 33. griebel, m.; zaspel, p. multi-gpu acceler solver three-dimension two-phas incompress navier-stok equations. comput. sci. res. dev. 2010, 25, 6573. c 2018 authors. license mdpi, basel, switzerland. articl open access articl distribut term condit creativ common attribut (cc by) licens ( introduct govern equat space discret time integr fraction step split numer exampl accuraci scheme comput effici scheme summari conclus