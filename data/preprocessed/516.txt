intern journal numer method engin int. j. numer. meth. engng 0000; 00:129 publish onlin wilei intersci (www.interscience.wiley.com). doi: 10.1002/nme segreg runge-kutta method incompress navier-stok equat oriol colomes1 santiago badia1,2 1centr internacion metod numer en enginyeria (cimne), parc mediterrani la tecnologia, upc, estev terrada 5, 08860 castelldefels, spain. 2universitat politecnica catalunya (upc), jordi girona 1-3, campu nord upc, edifici c1, 08034 barcelona, spain. summari work, propos runge-kutta time integr scheme incompress navier-stok equat salient properties. first, veloc pressur comput segreg time integr level, need perform addit fraction step techniqu spoil high order accuracy. second, propos method order accuraci veloc pressures. segreg runge-kutta method motiv implicit-explicit runge-kutta time integr project navier-stok discret divergence-fre space, re-stat velocity- pressur set discret pressur poisson equation. analyz preserv discret diverg constraint segreg runge-kutta methods, relat (in fulli explicit version) exist half-explicit methods. perform detail numer experiment wide set scheme (from order), includ implicit imex integr viscou convect terms, incompress laminar turbul flows. further, segreg runge-kutta scheme adapt time step proposed. copyright c 0000 john wilei & sons, ltd. receiv . . . kei words: time integration; runge-kutta; incompress navier-stokes; pressure-segregation; high-order; adapt time step 1. introduct problem scienc engin simul incompress flow solvers, e.g., flow aircraft take-off landing, cars, bridges, wind turbines, etc. incompress flow encount simul liquid metal blanket fusion reactor blood flow bio-mechanics. increas power super-comput motiv high-fidel massiv parallel predict tool unstructur mesh type applications. higher level accuraci space base refin mesh higher-ord approximations, us hp-adapt simul refin approach far. transient incompress navier-stok partial differenti equat nonlinear (due convection) indefinit (due divergence-fre constraint), complic discret linear solver step. fulli implicit time-integr involv nonlinear iter time step, increas comput cost. hand, hard defin scalabl parallel solver non-symmetr indefinit problems. definit correspond to: centr internacion metod numer en enginyeria (cimne), parc mediterrani la tecnologia, upc, estev terrada 5, 08860 castelldefels, spain. e-mail: copyright c 0000 john wilei & sons, ltd. prepar nmeauth.cl [version: 2010/05/13 v3.00] 2 o. colom s. badia scalabl precondition nonlinear equat open problem domain decomposit multigrid techniques. further, nonlinear natur problem requir frequent precondition set-up steps, approach computation intensive. velocity-pressur block-segreg understood solver (introduc addit split error) instead preconditioner, lead popular pressure-correct fractional- step method [1, 2, 3, 4]. approach involv solv decoupl momentum equat veloc pressur poisson equation. popular approach simul turbul incompress flows. time integr momentum equat carri explicit, semi-implicit, fulli implicit methods. fulli implicit method drawback consid above, explicit integr viscou term suitabl wall-bound flows. order captur viscou effect solids, refin anisotrop mesh required, lead stringent viscou cfl conditions. us hp- adapt make hard us explicit methods, intens local refin parts, e.g., tip airfoil, lead global time step zero h 2 p4 stabil purposes, h characterist element size p degre interpolation, local time-step effici exploit parallel platforms. us semi-implicit methods, treat implicitli diffus term explicitli convect one, perfect compromis turbul flow object viscou flows. time step restrict given convect cfl condition, weaker diffus avoid nonlinear iterations. fact, major direct larg eddi simul incompress flow involv semi-implicit methods, viscou term treat implicitly. high-ord time integr aim achieved, popular approach us runge-kutta (rk) schemes, good stabil properties, high-ord accuracy, easi comput time error estim adapt time step (see [5, 6]). rk scheme involv system equat time step. further, us implicit scheme stage coupled, result larg equat solved, impract term cpu cost. drawback bypass explicit scheme, problem relat time step restrict ensur stability. diagon implicit rk method (dirk) avoid stabil problem solv implicitli rk stage uncoupl (see, e..g, [7]). differential-algebra natur ordinari differenti aris spatial discretization, applic rk method navier-stok equat straightforward. typic approach comput veloc time step integr momentum equat rk method (freez pressur gradient term), recov pressur pressur poisson equat (see, e.g., [8]). however, unclear approach affect converg error veloc pressures. alternatively, method perform rk time-integr veloc stage enforc divergence-free, pressur segreg appli stage [2, 9]. result, error time rk discret spoil second-ord pressur split error. common literatur report pressur error time [8, 10] report second-ord accuraci [9]. except situat recent work [11], half-explicit rk (herk) method index-2 algebraic-differenti equat (dae) system (see [12]) appli incompress navier-stok equations. method provid error estim veloc pressures, requir explicit treatment convect diffus terms. approach includ energy-conserv implicit rk method [13] (coupl stage linear system). accur pressur requir applications, especi involv fluid- structur interact high reynold number flows, evalu drag lift coeffici objects. aim develop high-ord semi-implicit methods, propos new time- integr schemes, denot segreg runge-kutta (srk) methods, involv addit split error, pressure-veloc decoupl comput obtain time-integr level. method motiv project momentum equat space divergence-fre functions, allow elimin pressur consid gener rk scheme time integration. way, easili prove order pressur time error attain higher scheme pressur too. benefit copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 3 approach respect herk method flexibl consid implicit implicit-explicit (imex) version methods. order eas effect preconditioning, favour srk scheme treat implicitli viscou term, explicitli convect terms, segreg pressure. us imex-srk method appeal large-scal computations. stage, involv vector- laplacian (or elasticity-type) plu mass matrix solver veloc discret pressur poisson solver. type coerciv symmetr problems, us effici highli scalabl domain decomposit multigrid algorithm (see, e.g., [14]). further, set-up precondition kept fix meshes, reduc comput cost. statement incompress navier-stok equat develop section 2. section 3 time integr rk scheme introduced, give overview herk method develop propos srk schemes. differ test expos section 4, applic srk scheme assess differ manufactur analyt solut laminar turbul flow tests. finally, conclus state section 5. 2. navier-stok equat let bound domain rd , d = 2,3 number space dimensions, = boundari (0,t ] time interval. strong form incompress navier-stok problem consist find veloc field u pressur p tu ((u+ut ))+u u+p = f (0,t ], (1) u = 0 (0,t ], (2) f forc vector kinemat viscosity. hereafter, bold charact denot vector tensors. equat (1) (2) need suppli appropri boundari initi conditions. boundari divid dirichlet (d) neumann (n) part dn = dn = /0. then, boundari initi condit written u = ug d (0,t ], (3) (p i+(u+ut )) n = tn n (0,t ], (4) u(x,0) = u0(x) {0}, (5) n unit outward vector normal . denot l2() space squar integr functions, h1() space function l2() spatial deriv l2(). l20() stand set function l 2() zero mean valu . space function h1() vanish boundari denot h10 (). consid homogen dirichlet boundari conditions, non-homogen case straightforward modif forc term f introduct g (see below). weak form transient incompress navier-stok problem (1)-(5) read follows: [u(t), p(t)] h10 ()l 2 0() (tu,v)+b(u,(u, p),(v,q)) = f,v+(g,q) [v,q] h10 ()l 2 0(), (6) time, satisfi initi condit (5) weak sense, form b(a,(u, p),(v,q)) defin b(a,(u, p),(v,q)) := (u,v)+b(a,u,v) (p, v)+(q, u), (7) b(a,u,v) trilinear weak form convect term. let consid quasi-uniform finit element partit th domain construct finit dimension space veloc pressure. discret copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 4 o. colom s. badia space (6), end index-2 dae equations: mu+(k +c(u))u+gp = f, (8) du = h, (9) m mass matrix, k contribut diffus term, c(u) nonlinear convect term (relat trilinear form b), g pressur gradient oper d diverg matrix (note d =gt ). u p nodal valu discret veloc pressure, f h forc term momentum incompress constraint equations, respectively. focus matrix (8)-(9), deriv respect time equat (9), du = h, assum d constant time. then, multipli equat (8) dm1 invok result, obtain altern equat u p. h+dm1(k +c(u))u+dm1gp = dm1f. (10) assum du(0) = h(0), system (8)-(9) (8)-(10) equivalent. further, matrix dm1g invertible, inf-sup condit satisfi mix finit element space (see [15]). result, pressur express term u (10), get dm1gp = dm1(k +c(u)uf)+ h. (11) replac express (8), obtain equat veloc field only: mu+(k +c(u))u = f+g(dm1g)1h, := (ig(dm1g)1dm1), (12) ident matrix. matrix stand project navier-stok discret divergence-fre space; easili chech dm1 = 0, readili lead du = h. ordinari differenti equat (odes) us rk method straightforward. 3. runge-kutta time integr let consid navier-stok semi-discret problem given equat (8)-(9) (8) (10). consid space discret mix finit element space satisfi inf-sup condition. way, avoid us stabil formul involv extra term coupl pressur veloc field diagon block relat pressure, chang mathemat structur system. follow motiv section 1, aim develop rk scheme incompress navier-stok equat segreg veloc pressur comput keep high order accuracy. split lead us optim solver veloc block pressur block, respectively, need develop effici scalabl algorithm indefinit systems. further, consid explicitli convect term, maintain precondition stage (while mesh change) avoid need deal non-symmetr (and possibl convection-dominant) systems. rk scheme consist multistag integr stage comput combin unknown evalu stages. combin implicit scheme explicit scheme, depend definit butcher tableau. implicit explicit scheme combined, lead imex schemes, i.e., differ butcher tableau implicit explicit term (see appendix a). (8)-(9) compactli written mu = f (u)+g (u,p), du = h, (13) f (u) g (u,p) term treat implicitli explicitly, respectively. implicit integr f , us call dirk method; given stage i, involv stage j 1 j i. explicit integr g , given stage i, method concern contribut stage j 1 j i1. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 5 3.1. half-explicit runge-kutta scheme approach rk time integr properti describ us half-explicit rk (herk) method (see [16, 17, 18] gener definit method [11] recent applic navier-stok equations). so, consid f = 0. herk method combin explicit rk method momentum equat implicit enforc discret diverg constraint. half-explicit integr navier-stok equat read as: 1 t mui = 1 t mun + i1 j=1 ai jg (u j,p j), dui = h(ti), (14) ti := tn + ci t. observ comput ui stage depend p j j = 1, . . . , 1. appli dm1 momentum equat recal discret diverg constraint, obtain equival method 1 t mui = 1 t mun + i1 j=1 ai jg (u j,p j), dun + t i1 j=1 ai jdm 1g (u j,p j) = h(ti). (15) easili check second equat linear pi1 matrix dm1g (see [11] differ implementations). end multi-stag computation, updat veloc field: m t un+1 = m t + s i=1 big (ui,pi), dun+1 = h(tn+1). (16) veloc update, comput stage pressur ps above. pn+1 appear definit method, easili defin pressur poisson equat (see [11] differ alternatives). however, consid implicit terms, implicit treatment constraint spirit herk method affordable. instance, treat diffus term implicitly, involv matrix d(m + tk)1g pressure. so, extens approach implicit imex integr scheme momentum equat feasible. motiv scheme introduc below. 3.2. segreg runge-kutta scheme order implicit imex rk scheme incompress navier-stok equations, consid velocity-onli project (12), od straightforwardli integr rk schemes. let write problem compact form as: mu = f (u)+g (u). (17) particular, defin method viscou term treat implicitli convect pressure-rel term treat explicitly. choic defin oper f g f (u) :=ku (18) g (u) := fc(u)u+g(dm1g)1 ( dm1(k +c(u)uf)+ h ) , (19) i.e., implicit treatment viscou term explicit convect forc term. note evalu pressure-rel term involv discret pressur poisson equat dm1g. however, order segreg rk method, term involv dm1g treat explicitly. alternatively, choos definit f g , e.g., copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 6 o. colom s. badia convect term forc term consid implicitly, lead f (u) :=ku+fc(u)u (20) g (u) := g(dm1g)1 ( dm1(k +c(u)uf)+ h ) . (21) imex-srk method especi turbul flow time step restrict convect cfl situat smaller need captur smallest time scale flow (see instanc [19, 20]). consid rk method s stages, veloc stage i, ui, 1 s comput 1 t mui = 1 t mun + j=1 ai jf (u j)+ i1 j=1 ai jg (u j), (22) ai j ai j coeffici implicit explicit butcher tableau, respectively. manipulation, rewrit (22) 1 t mui = 1 t mun + j=1 ai jf (u j)+ i1 j=1 ai jg (u j,p j), (23a) dm1g(pi) = dm1((k +c(ui))uif(ti))+ h(ti). (23b) choic oper (18), defin g (u,p) := fc(u)ugp, lead imex-srk scheme, choic (20) obtain g (u,p) :=gp correspond fulli implicit srk scheme. end multi-stag computation, updat veloc pressur field shown follow equations: m t un+1 = m t + s i=1 bif (ui)+ s i=1 big (ui,pi), (24a) dm1g(pn+1) = dm1((k +c(un+1))un+1f(tn+1))+ h(tn+1). (24b) fact result method involv segreg comput veloc pressure, coin segreg runge-kutta (srk) method. approach, natur consid viscou and/or convect term implicitly, keep simpl pressur poisson equation. hand, pn+1 defined, differ compar herk methods. remark 3.1 note eq. (23b) (respectively, (24b)) equival solv darcy-typ problem, follow expression: [ m g d 0 ][ u pk ] = [ f(tk) (k +c(uk))uk h(tk) ] , (25) k (respectively, n+ 1), u auxiliar veloc field, satisfi discret incompress constraint. (25) easili precondit spectral equival matrix diag(m, l), l turn optim (and scalable) precondition laplacian matrix [4, 15]. larg scale simulations, l be, e.g., extrem scalabl balanc domain decomposit precondition poisson problem [21, 14, 22]. srk method discret diverg constraint du = h explicitli enforced, differ respect herk methods. however, implicitli enforc pressur poisson equation. let remind equat lead equival system continu level. proposit analyz equival herk method fulli explicit version scheme (23)-(24), i.e., take f = 0. proposit 3.1 let assum h independ time, initi condit satisfi du0 = h, srk scheme (23)-(24) fulli explicit, i.e., f = 0. then, herk scheme (14)-(15) srk scheme (23)-(24) equivalent. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 7 proof let assum dun = h. method start u1 = stage 1, appendix condit exposed. srk method comput pressur p1 solut dm1g (u1,p1) = 0. second stage, herk method comput mu2 = mun + a21 tg (u1,p1), du2 = h. constraint lead pressur equat dm1g (u1,p1) = 0. result, p1 u2 ident methods, differ fact p1 comput stage 1 srk stage 2 herk. next, proce induction. let assum method equival till stage i1, i.e., obtain u j j = 1, . . . , i1 p j j j = 1, . . . , i2. stage i, herk method comput pi1. dun = h, fact dm1g (u j,p j) = 0 j = 1, . . . , 2 (due equival srk method eq. (23)), final dm1g (ui1,pi1) = 0. result, pi1 obtain srk. veloc step (14) (22) ident methods, ui. srk, pressur ps stage comput dm1g (us,ps) = 0. veloc updat case identical. further, veloc updat (15) proceed above, check pressur stage herk satisfi equation. result equivalence, note dun+1 = h hold srk. initi assumpt hold time step, du0 = h. result, du1 = . . .= dun = h holds, prove proposition. result implication. srk method, preserv discret diverg constraint exactli situat interest. now, question aris properti f 6= 0. analyz fulfil discret diverg constraint srk. proposit 3.2 let assum compon h(t) p-th order polynomi time, initi condit satisfi du0 = h(0), rk integr integr exactli polynomi order p1, bi = bi = 1, . . . ,s, s number stage scheme. then, srk method preserv exact discret diverg constraint time steps. proof assum dun = h(tn). equat dm1(f (ui) + g (ui,pi)) = h(ti) hold stage srk method. appli dm1 veloc updat (24a), dun+1 = s j=1 dm 1(bif (ui) + big (ui,pi)). clearly, dun+1 = dun +sj=1 bih(ti) bi = bi. compon h p 1 polynomi time, time integr exact assumption, i.e., sj=1 bih(ti) = h(tn+1)h(tn), dun+1 = h(tn+1). du0 = h(0), prove proposition. result certainli strong. explicitli enforc discret diverg constraint time step, solut desir properti cases. (we note intermedi stage correct hold discret diverg constraint consid f = 0, proposit 3.1.) remark 3.2 assumpt bi = bi = 1, . . . ,s satisfi rk time integrators; particular, scheme (1-1), (1-2), (2-2/1), (2-3), (3-3) (5-3) defin appendix satisfi condition. assumpt p-th order rk scheme integr exactli p1 polynomi standard so-cal simplifi condit rk method [12], state sj=1 b jc q1 j = 1 q , q = 1, . . . , p. remark 3.3 section, work gener case h(t) time-dependent. happen dirichlet boundari condit enforc strongli veloc trace ug(t) enforc d time-dependent. exactli fulfil discret diverg constraint cases, strongli favour weak imposit boundari conditions, i.e., nitsch copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 8 o. colom s. badia method, have du = 0 cases. h(t) p-th polynomial, method show right converg order, discret diverg constraint comput approxim time integr error. remark 3.4 previou result obtain assum linear system solv exact arithmetic. divergence-fre condit enforc increment way, potenti loss accuraci constraint equat accumul error linear long- term simul (see section 4). case, easi correct project veloc field diverg residu larger threshold. given veloc field u, project discret divergence-fre veloc field u comput follows: fu+g = fu, du = 0, f = m (l2-projection) f = m +k (h1-projection). kind techniqu heavili mhd simul order clean induc magnet field non-diverg free component. finally, let analyz error introduc srk methods, straightforward gener rk schemes. proposit 3.3 let consid srk method p-th order scheme. error veloc pressur reduc o( t p). proof let denot time-continu solut (uex(t),pex(t)). converg order veloc unuex(tn)m c t p (where m denot norm endow matrix m) srk method veloc amount standard rk scheme od (17) (see [23]). pressur error straightforward veloc estimate, eq. (24b), fact dm1g invertible. order obtain pressur error, let subtract eq. (11) eq. (24b) time valu tn, getting: dm1g(pnpex(tn)) = dm1((k +c(un))undm1(k +c(uex(tn))uex(tn) = dm1((k +c(un))(unuex(tn)))+dm1c(unuex(tn))uex(tn). dm1g positive-definit matrix (due discret inf-sup condition) easili (pnpex(tn))m cunuex(tn)m c t p, constant c certainli depend spatial mesh modulu comput exact velocity, t. prove proposition. 3.3. order reduct phenomena known rk approxim pde suffer order reduct phenomena scheme order greater two. work devot issue, e.g., [24, 25], prove certain condit order time fulli discret scheme equal convent order rk formula. however, author [24, 25] condit natur and, general, order time scheme convent order greater strictli smaller. particular, [25] state dirk scheme fourth-order, case inhomogen time depend boundari conditions, actual order method 2. boscarino [26] deriv third-ord imex rk method stiff problem suffer order reduct phenomena. state work imex rk scheme order greater suffer order reduct stiff regime. import point copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 9 convection-diffus problem semi-discret stiffer spatial mesh refined. then, order reduct phenomena relev us high-ord time integr fine spatial meshes. scheme includ appendix a, denot (5-3), test section 4. 4. numer experi section aim perform srk method propos previous differ test cases. start analyt manufactur solut belong finit element space, spatial error. test case laminar flow cylinder, wide benchmark laminar flows. finally, test turbul case, wide taylor- green vortex flow. differ scheme implement fempar (finit element multiphys massiv parallel) numer software. fempar open sourc in-hous developed, parallel hybrid openmp/mpi, object-ori (oo) framework which, features, provid basic tool effici parallel distributed-memori implement substructur domain decomposit solver [21, 14]. 4.1. manufactur analyt solut test, want check method propos work achiev desir order converg time butcher tableau defin appendix a. order analyz converg order time, want sure solut pollut spatial error. then, elimin error spatial component, defin analyt solut finit element space. mean captur exactli solut space time. analyt solut 2d domain chosen be: u(x,y, t) = ( x y ) sin ( 10 t ) exp ( t 25 ) , (26) p(x,y) = x+ y. (27) solut belong finit element space, linear elements. us inf-sup stabl element type q2q1 order avoid us stabil introduc non- desir extra terms. test solv unit squar = (0,1)2, discret coars mesh 10 element direction. coars discret expect signific impact order reduct phenomena expos subsect 3.3 small viscos occur stiff regime, i.e., small element size high viscosity. defin differ viscosities, = {1.0,0.1,0.01}. run test time domain (t0,t ) = (0,0.1), time step sizes. particular, start larg time step t = 0.1 reduc half recurs time reach t = 1.25 102. error veloc pressur fields, eu ep, comput `-norm (with respect nodal values) differ comput solut analyt t = t . us explicit imex time integr schemes, care cfl number. diffus cfl number (cfl ), limit method us fulli explicit scheme, convect cfl number (cflu), limit method us imex scheme diffus term integr implicitly, i.e., cfl = t (h/p2)2 , cflu = u t (h/p2) , h characterist element size, p degre interpolation, u characterist velocity. test, h = 0.1, p = 2 u 0.0315. tabl show cfl valu time step viscosity. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 10 o. colom s. badia tabl i. cfl values. t cfl cflu = 1.0 = 0.1 = 0.01 1.0 101 160 16 1.6 0.126 5.0 102 80 8 0.8 0.063 2.5 102 40 4 0.4 0.032 1.25 102 20 2 0.2 0.016 note characterist veloc u small, cflu number small (much lower 1.0), depend linearli mesh size. expect instabl explicit treatment convect term test. cfl number, larger 1.0 case quadrat depend mesh size. test consid differ situations: 1) fulli implicit srk scheme; 2) srk scheme diffus term integr implicitli convect term explicitly; 3) fulli explicit srk scheme. fulli implicit srk. consid srk scheme convect diffus term integr implicitly. set oper f g appear eqs. (23) (24) equal f (u) := f (k +c(u))u, g (u,p) :=gp. import highlight scheme nonlinear, convect veloc left-hand equation. fig. 1 show converg rate veloc pressur field differ viscos choices. look stiffest case, figs. 1(a) 1(b), = 1.0, scheme (2-2/2) (4-3) converg rate lower two, justifi order reduct phenomena. note precis method satisfi incompress constrain time depend boundari condit applied, proposit 3.2. behaviour observ scheme (2-3) order reduct convergence. hand, scheme (3-3) reduct order converg greater two. finally, scheme (5-3) affect order reduct phenomena. reduc viscos = 0.1, scheme start recov prescrib converg rate. figs. 1(c) 1(d) converg rate time plot veloc pressur fields, respectively. seen small time step scheme converg correct rate, larger time step (2-2/1) (4-3) scheme order reduction. finally, figs. 1(e) 1(f), converg rate veloc pressur field = 0.01, scheme consid work perform prescrib converg rate. imex-srk. case srk scheme defin diffus term integr implicitly, convect treat explicitly. then, oper f g f (u) :=ku, g (u,p) := fc(u)ugp. note case, limit hyperbol cflu number, restrict parabol one. seen tabl i, 1.0 chosen time step sizes. fig. 2 depict veloc pressur converg rate differ viscos second case. highest viscos = 1.0 (figs. 2(a) 2(b)), note method perform similar wai fulli implicit srk case, differ scheme (3-3) show order reduct converg rate, 2nd order. case, state (5-3) copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 11 10 2 10 1 10 10 10 9 10 8 10 7 10 6 10 5 10 4 10 3 implicit srk veloc converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (a) veloc convergence, = 1.0 10 2 10 1 10 9 10 8 10 7 10 6 10 5 10 4 10 3 10 2 implicit srk pressur converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (b) pressur convergence, = 1.0 10 2 10 1 10 10 10 9 10 8 10 7 10 6 10 5 10 4 10 3 implicit srk veloc converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (c) veloc convergence, = 0.1 10 2 10 1 10 10 10 9 10 8 10 7 10 6 10 5 10 4 10 3 implicit srk pressur converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (d) pressur convergence, = 0.1 10 2 10 1 10 11 10 10 10 9 10 8 10 7 10 6 10 5 10 4 10 3 implicit srk veloc converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (e) veloc convergence, = 0.01 10 2 10 1 10 11 10 10 10 9 10 8 10 7 10 6 10 5 10 4 implicit srk pressur converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (f) pressur convergence, = 0.01 figur 1. fulli implicit srk. scheme third-ord scheme order reduct time convergence, smallest time steps, veloc converg rate littl bit lower 3. reduc viscos = 0.1 = 0.01, scheme behaviour fulli implicit srk case, figs. 2(c), 2(d), 2(e), 2(f). let note (2-2/1) scheme lower error imex-srk case fulli implicit srk case. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 12 o. colom s. badia 10 2 10 1 10 9 10 8 10 7 10 6 10 5 10 4 10 3 imex srk veloc converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (a) veloc convergence, = 1.0 10 2 10 1 10 8 10 7 10 6 10 5 10 4 10 3 10 2 imex srk pressur converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (b) pressur convergence, = 1.0 10 2 10 1 10 10 10 9 10 8 10 7 10 6 10 5 10 4 10 3 imex srk veloc converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (c) veloc convergence, = 0.1 10 2 10 1 10 10 10 9 10 8 10 7 10 6 10 5 10 4 10 3 imex srk pressur converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (d) pressur convergence, = 0.1 10 2 10 1 10 11 10 10 10 9 10 8 10 7 10 6 10 5 10 4 10 3 imex srk veloc converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (e) veloc convergence, = 0.01 10 2 10 1 10 11 10 10 10 9 10 8 10 7 10 6 10 5 10 4 imex srk pressur converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (f) pressur convergence, = 0.01 figur 2. srk converg convect integr explicitli diffus integr implicitly. fulli explicit srk. final test fulli explicit situation, consist send term right-hand equation. oper f g eqs. (23) (24) read f (u) := 0, g (u,p) := f (k +c(u))ugp. case cfl number limit stabil method given parabol (cfl ). far restrict cflu imex case, set describ copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 13 unstabl results. viscos = 0.01, cfl valu order smaller critic valu 1.0. fig. 3 depict converg rate case, veloc (fig. 3(a)) pressur (fig. 3(b)) field order converg desir schemes, (5-3) scheme converg higher order. appear order reduct phenomena present explicit schemes. 10 2 10 1 10 10 10 9 10 8 10 7 10 6 10 5 10 4 10 3 explicit srk veloc converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (a) veloc convergence, = 0.01 10 2 10 1 10 11 10 10 10 9 10 8 10 7 10 6 10 5 10 4 explicit srk pressur converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (b) pressur convergence, = 0.01 figur 3. fulli explicit srk convergence. discret diverg constraint preservation. state proposit 3.2, discret diverg constraint preserv strongli impos dirichlet data polynomi order p 1 time. order phenomena solv problem given (26)-(27), consid second order polynomi time dependency. analyt solut solv case u(x,y, t) = ( x y ) t2, p(x,y) = x+ y. problem solv fulli implicit srk method t = 0 t = 2.0 time step size t = 1.0 102 viscos = 0.01. linear solver toler set equal 1.0 108, implicit version, nonlinear toler 1.0 106. fig. 4 evolut u depict scheme consid appendix a, implicit explicit version srk method. first-ord (1-1) scheme discret diverg constraint preserv expected. moreover, second-ord scheme accur result evalu discret divergence, time depend solut order 2. (2-2/2) (4-3) schemes, satisfi condit bi = bi = 1, ...,s, worst perform compar method order. error small, observ effect accumul solver error comment remark 3.4, lead increas valu u. case, order scheme prove preserv discret diverg constraint (see proposit 3.2) u 109. 4.2. beltrami flow manufactur analyt solut state (26)-(27) spatial error present solut belong fe space. order check behaviour srk method solv problem spatial error origin discret space, consid analyt copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 14 o. colom s. badia 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 22 20 18 16 14 12 10 8 6 4 2 0 implicit srk veloc diverg norm time lo g (l 2 n o rm ) 11 12 22/1 22/2 23 33 43 53 (a) implicit srk 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 22 20 18 16 14 12 10 8 6 4 2 0 explicit srk veloc diverg norm time lo g (l 2 n o rm ) 11 12 22/1 22/2 23 33 43 53 (b) explicit srk figur 4. u implicit explicit srk schemes. solut belong fe space. 3d beltrami flow like defin [27] subsection, case pressur depend time defined. flow solv cube center (x,y,z) = (0,0,0) edg size l = 2, viscos problem case set = 0.01. u(x,y,z, t) = [eax sin(ay+dz)+ eaz cos(ax+dy)]a [eai sin(az+dx)+ eax cos(ay+dz)] [eaz sin(ax+dy)+ eai cos(az+dx)] ed2t , (28) p(x,y,z) = a2 2 [ e2ax + e2ai + e2ai +2sin(ax+dy)cos(az+dx)ea(y+z) (29) +2sin(ay+dz)cos(ax+dy)ea(z+x)+2sin(az+dx)cos(ay+dz)ea(x+y) ] . analyz effect spatial error solv problem analyt solut (28)- (29) refin time space keep ratio t/h constant. problem solv q2q1 element imex srk method, scheme state appendix a. result obtain set t/h = 0.01, time step size t = {5.0 103,2.5 103,1.25 103,6.25 104} solv t = 0 till t = 5.0 103. second test smaller ratio, t/h = 0.002, time step size t = {1.0 103,5.0 104,2.5 104,1.25 104} t = 0 till t = 1.0 103. fig. 5 error converg veloc pressur field depicted. result case th = 0.01 shown fig. 5(a), clearli converg rate pressur field two, prescrib spatial discret error, scheme result spatial error prevail tempor error. look veloc field result figure, seen third-ord converg given theoret spatial error converg reduced. order scheme (1-1) start loos converg rate given spatial error exhibit converg rate prescrib tempor discretization. scheme converg second order slope, third-ord schemes. order reduct phenomena observ [24] t h refin simultaneously. select smaller ratio t/h, fig. 5(b), tempor error mask spatial error, give third-ord converg veloc field second-ord converg pressur field. littl reduct order observ smallest time step size veloc field fig. 5(b). 4.3. 2d laminar flow cylind studi behaviour differ method propos section 3 manufactur analyt solution, studi wide laminar flow benchmark flow copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 15 10 4 10 3 10 6 10 5 10 4 10 3 10 2 10 1 error converg dt/h=0.01 time step e rr o r error u, 11 error p, 11 error u, 12 error p, 12 error u, 22/1 error p, 22/1 error u, 22/2 error p, 22/2 error u, 23 error p, 23 error u, 33 error p, 33 error u, 43 error p, 43 error u, 53 error p, 53 1st order 2nd order 3rd order (a) error convergence, th = 0.01 10 4 10 3 10 7 10 6 10 5 10 4 10 3 10 2 10 1 error converg dt/h=0.002 time step e rr o r error u, 11 error p, 11 error u, 12 error p, 12 error u, 22/1 error p, 22/1 error u, 22/2 error p, 22/2 error u, 23 error p, 23 error u, 33 error p, 33 error u, 43 error p, 43 error u, 53 error p, 53 1st order 2nd order 3rd order (b) error convergence, th = 0.002 figur 5. beltrami flow error converg (red blue line green line). cylind low reynold number = 100. detail overview benchmark comput laminar flow cylind given [28]. test perform current work call 2d-2 paper defin shown fig. 6. basic consist rectangular channel cylind locat near inflow boundary. non-slip condit impos cylind wall channel wall perpendicular flow direct (x). inflow condit 2.2m inlet outlet u=0 (0,0) (0,h) y x u=0 0.15m 0.15m 0.16m 0.1m u=0 figur 6. flow cylind test geometry. u(0,y, t) = ( ux uy ) = ( 4um y(hy) h2 0 ) , maximum veloc um = 1.5 m/ h = 0.41 channel height. aim order converg time integr scheme proposed, compar result detail benchmark test differ algorithm approaches. then, comput paramet need comparison, drag coeffici cd, lift coeffici cl, pressur differ p function time period [t0, t0 + 1/ f ], f frequenc separation. valu us comparison maximum drag coeffici cdmax , maximum lift coeffici clmax , strouhal number st pressur differ p(t) t = t0 + 0.5/ f . initi time t0 correspond flow state clmax . drag coeffici cd lift coeffici cl given cd = 2fd u2d , cl = 2fl u2d , copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 16 o. colom s. badia = 1.0 fluid density, d = 0.1 cylind diameter, u = 1.0 mean velocity. drag fd lift fl forc defin fd = s ( vt n ny pnx ) ds, fl = s ( vt n nx pny ) ds, s cylind surfac n normal vector s, nx ny x-compon y- component, respectively. vt tangenti veloc s tangent vector t = (ny,nx). surfac integr comput residu weak form boundari nodes, advoc [29] accuraci reasons. order reduc comput cost, comput flow t = 0 t = 8.0 monolith fulli implicit crank-nicolson scheme time step equal t = 0.05. fig. 7 vortic field t = 8.0. seen time flow fulli developed. so, t = 8.0 start comput differ scheme studi work. comput perform t = 8.0 t = 8.4, ensur maximum lift coefficient, complet period data lift coeffici maximum. figur 7. vortic field t = 8.0. expos discuss result [28], us explicit scheme time integr laminar flow effici approach. restrict time step size ensur stabil method critic physic time scale larger. result, focu fulli implicit imex approaches. test consid differ situations: 1) fulli implicit srk scheme; 2) srk scheme diffus term integr implicitli convect term explicitly. test solv mesh 13886 q2q1 elements, scheme defin butcher tableau expos appendix time step sizes. particular, problem solv t = {2.0 102,1.0 102,5.0 103,2.5 103,1.25 103} scheme. furthermore, extra comput (3-3) scheme t = 3.125 104 order accur result compar converg analysis. [28] prescrib correct valu benchmark quantities, rang report valu located. then, expect comput result fit bounds. fulli implicit srk. here, flow laminar, expect nonlinear convect term plai decis role comput cost. so, natur consid implicit treatment term, especi take account explicit treatment term involv time step restrictions. thus, scheme case given defin oper f g eqs. (23) (24) f (u) := f (k +c(u))u, g (u,p) :=gp. let point test (1-2) (2-3) scheme unstabl largest time step sizes, i.e. t 1.25 103 (1-2) scheme t 2.5 103 (2-3) scheme. therefore, scheme taken account result shown case. benchmark quantiti differ comput given tabl ii, copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 17 lower upper bound result [28]. seen comput quantiti fit benchmark bounds; strouhal number littl bit greater upper bound cases. note asid strouhal number, quantiti converg valu insid benchmark range. expected, scheme higher order result correct rang accur result earlier refin time step. tabl ii. benchmark 2d-2 result implicit convection. scheme t cdmax clmax st p (11) 2.000e-02 3.1984 0.8261 0.2941 2.4291 (11) 1.000e-02 3.2024 0.8704 0.2941 2.4398 (11) 5.000e-03 3.2108 0.9158 0.3030 2.4568 (11) 2.500e-03 3.2182 0.9441 0.3030 2.4700 (11) 1.250e-03 3.2230 0.9598 0.3042 2.4780 (22/1) 2.000e-02 3.2423 1.0121 0.3125 2.5082 (22/1) 1.000e-02 3.2329 1.0039 0.3030 2.4867 (22/1) 5.000e-03 3.2304 1.0008 0.3077 2.4852 (22/1) 2.500e-03 3.2298 1.0009 0.3053 2.4884 (22/1) 1.250e-03 3.2296 1.0007 0.3065 2.4883 (22/2) 2.000e-02 3.2418 1.0819 0.3125 2.4954 (22/2) 1.000e-02 3.2323 1.0063 0.3030 2.4835 (22/2) 5.000e-03 3.2301 0.9973 0.3077 2.4845 (22/2) 2.500e-03 3.2297 0.9997 0.3053 2.4883 (22/2) 1.250e-03 3.2296 1.0003 0.3065 2.4883 (33) 2.000e-02 3.2361 1.0138 0.3125 2.5027 (33) 1.000e-02 3.2304 1.0013 0.3030 2.4849 (33) 5.000e-03 3.2298 0.9999 0.3077 2.4848 (33) 2.500e-03 3.2296 1.0007 0.3053 2.4883 (33) 1.250e-03 3.2296 1.0006 0.3065 2.4883 (43) 2.000e-02 3.2321 1.1003 0.3125 2.4788 (43) 1.000e-02 3.2285 0.9948 0.3030 2.4802 (43) 5.000e-03 3.2285 0.9954 0.3077 2.4839 (43) 2.500e-03 3.2294 1.0000 0.3053 2.4881 (43) 1.250e-03 3.2296 1.0005 0.3065 2.4882 (53) 2.000e-02 3.2249 0.9770 0.3125 2.4951 (53) 1.000e-02 3.2290 0.9977 0.3030 2.4843 (53) 5.000e-03 3.2295 0.9995 0.3077 2.4847 (53) 2.500e-03 3.2296 1.0006 0.3053 2.4883 (53) 1.250e-03 3.2296 1.0006 0.3065 2.4883 lower bound 3.2200 0.9900 0.2950 2.4600 upper bound 3.2400 1.0100 0.3050 2.5000 check converg time differ time integr schemes, perform converg analysi comput `-norm veloc pressur errors, eu ep. case, solut compar analyt comput finer time step ( t = 3.125 104) (3-3) scheme. reason choic relat effici scheme, discuss below. fig. 8 converg rate veloc pressur fields, figs. 8(a) 8(b), respectively. conclus largest time step order converg prescrib one, especi order scheme. explain fact largest time step size greater requir stabil purpos fully-explicit scheme used. time step smaller 2.0 102 converg rate expect ones, except (1-1) (4-3) schemes, converg rate lower expect one. fig. 8 show accur scheme (3-3) (5-3). now, let analyz comput cost method base cpu time given target error. fig. 9 clearli seen effici scheme (3-3), rel high error ( 4 102). copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 18 o. colom s. badia 10 3 10 2 10 5 10 4 10 3 10 2 10 1 10 0 10 1 implicit srk veloc converg time step e rr o r 11 22/1 22/2 33 43 53 1st order 2nd order 3rd order (a) veloc converg 10 3 10 2 10 5 10 4 10 3 10 2 10 1 10 0 10 1 implicit srk pressur converg time step e rr o r 11 22/1 22/2 33 43 53 1st order 2nd order 3rd order (b) pressur converg figur 8. fulli implicit srk convergence. 10 2 10 3 10 4 10 4 10 3 10 2 10 1 10 0 10 1 wallclock cpu time cpu time e rr o r 11 22/1 22/2 33 43 53 figur 9. fulli implicit srk cpu time efficiency. larger target errors, (2-2/1) scheme competitive. note order (1-1) scheme competit all, error larg signific gain cpu time. imex-srk. case, consid explicit time integr approach convect term. defin oper f g eqs. (23) (24) f (u) := fku, g (u,p) :=c(u)gp. expos above, explicit treatment convect term impli time step restrict given condit hyperbol cflu number. mesh homogen veloc domain, obtain bound maximum cflu number take maximum valu elements. parameters, maximum cflu depend time step size order shown tabl iii. look tabl iii case time step need smaller previou case want guarante stabl solution. implicit treatment convect term, time step size equal t 1.0 102, method stabl give good converg rates. here, time step cflu 3.4, grater critic 1.0. effect, largest time step size scheme stabl result case t = 3.125 104. scheme stabl t = 6.25 104 t = 1.25 103, stabl t = 2.5 103, order critic time step size. thus, copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 19 tabl iii. cflu values. t cflu 2.0 102 6.81 1.0 102 3.48 5.0 103 1.79 2.5 103 0.91 1.25 103 0.46 6.25 104 0.21 3.125 104 0.11 1.5625 104 0.05 7.8125 105 0.03 clear type problems, explicit time integr convect term impli us smaller time step implicit time integr term. tabl iv benchmark quantiti case attain convergence, till t = 1.5625 104. clearli seen small time step size result similar, show imex-srk scheme give good result consid explicit integr convect term, time step suffici small stabl result. result rang italics. tabl iv. benchmark 2d-2 result explicit convection. scheme t cdmax clmax st p (11) 3.125e-04 3.2272 0.9882 0.3059 2.4862 (11) 1.563e-04 3.2280 0.9944 0.3062 2.4879 (12) 3.125e-04 3.2296 1.0006 0.3068 2.4891 (12) 1.563e-04 3.2296 1.0006 0.3065 2.4893 (22/1) 6.250e-04 3.2296 1.0006 0.3065 2.4891 (22/1) 3.125e-04 3.2296 1.0006 0.3065 2.4895 (22/1) 1.563e-04 3.2296 1.0006 0.3065 2.4893 (22/2) 6.250e-04 3.2296 1.0006 0.3065 2.4892 (22/2) 3.125e-04 3.2296 1.0006 0.3065 2.4896 (22/2) 1.563e-04 3.2296 1.0006 0.3065 2.4893 (23) 3.125e-04 3.2296 1.0006 0.3065 2.4895 (23) 1.563e-04 3.2296 1.0006 0.3065 2.4893 (33) 6.250e-04 3.2296 1.0006 0.3065 2.4891 (33) 3.125e-04 3.2296 1.0006 0.3065 2.4895 (33) 1.563e-04 3.2296 1.0006 0.3065 2.4893 (43) 6.250e-04 3.2296 1.0006 0.3065 2.4891 (43) 3.125e-04 3.2296 1.0006 0.3065 2.4895 (43) 1.563e-04 3.2296 1.0006 0.3065 2.4893 (53) 6.250e-04 3.2296 1.0006 0.3065 2.4891 (53) 3.125e-04 3.2296 1.0006 0.3065 2.4895 (53) 1.563e-04 3.2296 1.0006 0.3065 2.4893 lower bound 3.2200 0.9900 0.2950 2.4600 upper bound 3.2400 1.0100 0.3050 2.5000 order compar effici implicit explicit approach time integr convect term particular test, perform converg analysi method t = 8.01 s. restrict test effici scheme order approximation, (1-1), (2-2/1), (3-3) schemes. result converg time comparison shown fig. 10. unstabl result explicit convect term integr plot figure. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 20 o. colom s. badia fulli implicit version srk scheme consid good agreement prescrib converg rate. furthermore, time step suffici small, explicit version accur results. especi remark (2-2/1) scheme, differ bigger. conclus point veloc pressur fields, signific differ converg rates, figs. 10(a) 10(b). fig. 10 show (3-3) scheme accur one. apart (2-2/1) scheme, 10 4 10 3 10 2 10 8 10 7 10 6 10 5 10 4 10 3 10 2 10 1 10 0 srk veloc converg time step e rr o r 11 impl 11 imex 22/1 impl 22/1 imex 33 impl 33 imex 1st order 2nd order 3rd order (a) veloc converg 10 4 10 3 10 2 10 8 10 7 10 6 10 5 10 4 10 3 10 2 10 1 10 0 srk pressur converg time step e rr o r 11 impl 11 imex 22/1 impl 22/1 imex 33 impl 33 imex 1st order 2nd order 3rd order (b) pressur converg figur 10. fulli implicit imex-srk converg rate comparison. implicit explicit version similar result time step suffici small. next, look overal comput time need approach. shown fig. 11, error eu plot cpu time scheme approach. 10 1 10 2 10 3 10 8 10 7 10 6 10 5 10 4 10 3 10 2 10 1 10 0 wallclock cpu time cpu time e rr o r 11 impl 11 imex 22/1 impl 22/1 imex 33 impl 33 imex figur 11. fulli implicit imex-srk cpu time effici comparison. that, expected, approach explicit time integr convect term effici implicit time step suffici small. larg time steps, us explicit version cflu condit limit stabil method, accuracy. note big differ effici (1-1) (3-3) schemes, gain treat convect term explicitli relev laminar problem types. expos begin subsection, explicit approach involv time step size restrictions, smaller physic time scale. furthermore, expos before, nonlinear convect term integr implicitli increas cost much. despit that, error smaller 104, effici scheme (3-3) explicit time integr convect term, test. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 21 4.3.1. adapt time step techniqu solv gener transient flow problems, us us adapt time step techniqu automat provid (dynamic) valu time step size target accuracy. time step techniqu allow adapt time step size flow conditions, chang time step physic scale flow change, e.g., transit turbulence. adapt time-step techniqu implement satisfi accuraci requir incompress navier-stok equat success test literature, shown [30, 31, 32, 33]. adapt time step techniqu straightforwardli appli srk methods. fact, multi-step multi-stag method like srk schemes, implement adapt time step techniqu wide used, need differ evalu final unknown step differ butcher tableau, instanc [34, 35]. us call pi11 control [36] suggest [35], comput time step size follow tn+1 = ( rn+1 )1/k( rn rn+1 )1/k tn tn+1 tn, = 0.8 tol, tol given toler 1 106 0.8 safeti factor. local error rn+1 = u u error step (eps) control rn+1 = (u u)/ tn error unit step (epus) controlled. case k = p+1 (eps) second (epus) k = p, p order time integr scheme comput estim veloc u. solv problem t = 8.0 t = 8.4 srk (3-3) scheme, consid implicit time integr convect term. compar solut obtain scheme, fix time step size t = 3.125 104, smallest time step consid previou analysis. let note adapt time step techniqu explicit time integr convect term sens case. tabl iii cflu number srk explicit version convect term time step t = 3.125 104 critic valu 1.0. mean increas time step size, stabil problem hyperbol cfl condition. comput u 2nd order butcher tableau refer embed formula order 2 order strongli s-stabl formula defin [37], 3rd order correspond (3-3) scheme defin appendix a. initi time step size set t0 = 1.0 105, small accur solution. fig. 12(a) time step evolut differ case consid subsection. time step size scheme adapt time step increas variabl rate converg optim one. fig. 12(b) depict close view lift coeffici evolution. 8 8.05 8.1 8.15 8.2 8.25 8.3 8.35 8.4 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 x 10 3 time step evolut time t im e s te p impl. conv. dt=3.125e04 impl. conv. adapt dt (a) time step evolut 8.305 8.31 8.315 8.32 8.325 8.33 8.335 8.34 8.345 8.35 8.355 0.9 0.92 0.94 0.96 0.98 1 lift coeffici evolut (close view) time l t c o e ff ic n t impl. conv. dt=3.125e04 impl. conv. adapt dt (b) lift coeffici (close view) figur 12. adapt time stepping. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 22 o. colom s. badia implicit adapt time step case, result close obtain scheme fix time step t = 3.125 104. note adapt time step size twice time larger fix one. total elaps cpu time implicit scheme adapt time step 3615 s, total time implicit scheme fix time step 8453 s, suppos reduct 42.8% time consumpt littl differ result. 4.4. taylor-green vortex flow step work check perform srk method turbul incompress flows. us imex-srk method usual favour turbul flows, time step size requir satisfi cflu condit order physic need accuraci purposes. taylor-green vortex (tgv) problem typic wide problem turbul numer simulations, basic turbul decai mechan rel simpl flow. here, comput domain cube (0,2)3 period boundari conditions. initi analyt condit problem given (see, e.g., [38]) u(x,y,z,0) = uxui uz = u0 cos(x)sin(y)sin(z)u0 sin(x)cos(y)sin(z) 0 (30) p(x,y,z,0) = p0 + 1 16 (cos(2x)+ cos(2y))(cos(2z)+2) , u0 = 2 3 sin ( + 2 3 ) . choos = 0, give mean initi veloc u0 = 1. solv tgv problem reynold number = 1600, literatur test differ reynold number (e.g., = 800 = 3000) (see, e.g., [39, 40]). problem solv 643 q2q1 element mesh, addit sub-grid model used. concern time integration, spatial accuraci crucial role work. anyway, analyz physic quantities, like global kinet energi kinet energi dissip rate, typic test calibr differ methods. us imex-srk method convect treat explicitly, avoid need nonlinear iterations. situat given defin oper f g eqs. (23) (24) f (u) :=ku, g (u,p) := fc(u)ugp. all, perform time step converg analysi begin simulation, flow laminar. converg analysi consist solv problem t = 0.0 t = 0.1 scheme propos appendix time step sizes. particular, solv problem differ time step size ( t = {0.1,0.05,0.025,0.0125}) compar solut obtain (5-3) scheme time step equal t = 6.25 103. l2-norm kinet energi error compar refer kinet energi solut given dn comput [41]. approach comput l-norm solution, compar solut comput finer time step, spatial discretization. approach elimin spatial error restrict error norm. fig. 13 order converg time veloc (fig. 13(a)) pressur (fig. 13(b)) fields. order converg regim follow predict rate schemes; (5-3) scheme converg higher rate expect one, perform especi remark veloc field convergence. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 23 10 2 10 1 10 9 10 8 10 7 10 6 10 5 10 4 10 3 10 2 imex srk veloc converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (a) veloc 10 2 10 1 10 9 10 8 10 7 10 6 10 5 10 4 10 3 imex srk pressur converg time step e rr o r 11 12 22/1 22/2 23 33 43 53 1st order 2nd order 3rd order (b) pressur figur 13. imex-srk converg laminar regime. point highlight fig. 13 (2-2/1) scheme show lower error compar second-ord schemes. perform observ previou test imex-srk (with explicit treatment convection) used. 2d laminar flow cylind test (see subsect 4.3) analyz effici method compar error cpu time. comparison fig. 14, error plot term averag elaps cpu time processor need complet simul t = 0 t = 0.1. 10 2 10 3 10 9 10 8 10 7 10 6 10 5 10 4 10 3 10 2 wallclock cpu time cpu time e rr o r 11 12 22/1 22/2 23 33 43 53 figur 14. imex-srk effici laminar regime. seen fig. 14 effici scheme (2-2/1) (3-3) ones, error greater 106 error-cpu time ratio. natural, threshold, second-ord scheme (2-2/1) start loos effici (3-3) scheme effici error smaller 106. determin effici scheme test (2-2/1) (3- 3) ones, want perform larger time interval. aim solv problem turbul fulli developed, reynold number case take place t 9. follow [38], time interv t = 0.0 t = 10.0, abl compar result dns. computation, select time step size error t = 0.1 fig. 13(a) order 1 106, i.e., t = 5.0 102 (3-3) scheme t = 3.6 102 (2-2/1) scheme. fig. 15 depict total energi evolut (fig. 15(a)) kinet energi dissip rate resolv scale (fig. 15(b)) compar dn provid [38]. result exactli copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 24 o. colom s. badia schemes, despit fact third-ord scheme us larger time step. look fig. 15(a), energi evolut solut far dns, gap t = 6, turbul developed. caus lack turbul model captur small scale proper dissipation. reason big differ solut dn result fig. 15(b) t = 6. 0 1 2 3 4 5 6 7 8 9 10 0.08 0.09 0.1 0.11 0.12 0.13 global energi time e n e rg y 22/1 33 dn (brachet et al) (a) global energy. 0 1 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 0.012 0.014 total kinet energi dissip rate () time d s ip ti o n 22/1 33 dn (brachet et al) (b) kinet energi dissip rate. figur 15. global energi kinet energi dissip rate evolut (blue line red line). look fig. 15(b) clearli error given spatial discret flow turbul larg appreci signific differ time integr schemes. want highlight adapt time step techniqu order effici solv transient problem. however, us adapt time step techniqu accur solut space sense. futur work direct involv introduct le model imex-srk approach propos work. 5. conclus segreg runge-kutta method propos work enjoi nice features, veloc pressur segreg time integr level (without need perform addit fraction step techniqu spoil high order accuracy) provabl order accuraci veloc pressures. method motiv implicit- explicit runge-kutta time integr project navier-stok discret divergence-fre space. term involv invers discret laplacian dm1g treat explicitli cases, order result method numer feasible. viscou convect term treat implicit, combin implicit/explicit, fulli explicit schemes, lead implicit, imex, explicit srk schemes, respectively. pressur recov discret pressur poisson equation, srk scheme final recast velocity-pressur formulation. explicit srk method prove equival exist half-explicit rk methods. further, method exactli satisfi divergence-constraint equat situat interest; case weakli enforc dirichlet boundari conditions, fix point-wis p-th order polynomi variat time (for p-th order method) dirichlet data strong enforcement. further, easi check error pressur order velocity. perform wide set numer experi evalu segreg runge- kutta algorithms; order scheme implement analyzed. includ converg test problem manufactur solut time-depend dirichlet boundari data. way, evalu well-known order reduct effect rk methods. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 25 perform numer test laminar flow cylind (evalu drag lift coefficients) turbul taylor-green vortex flow. differ method compar term cpu cost target error. fulli implicit, implicit viscous/explicit convective, fulli explicit method evaluated, consid respect cfl conditions. fulli implicit srk scheme shown remark strong stabil high accuraci till 100 time explicit cfl condition. further, segreg runge-kutta scheme adapt time step propos analyz numerically. us srk scheme appeal larg scale comput incompress flows, monolith indefinit replac segreg positive-definit veloc pressur blocks. pressur block involv poisson solver, veloc block vector-laplacian elast matrix convect term treat explicitly. massiv parallel solver problem literatur (see, e.g., [14]) user disposal, e.g., fempar scientif comput software. appendix a. butcher tableau defin differ set butcher tableaus, depend stage order accuraci time integr scheme. dirk tableau us follow notation: c b = c1 a11 0 ... 0 c2 a21 a22 ... 0 ... ... ... . . . ... cs as1 as2 ... ass b1 b2 ... bs convent ci = s j=1 ai j. explicit case tabl similar, zero diagonal. r-stage explicit scheme written follows. c b = 0 0 0 0 ... 0 c2 a21 0 0 ... 0 c3 a31 a32 0 ... 0 ... ... ... ... . . . ... cr ar1 ar2 ar3 ... 0 b1 b2 b3 ... br note gener number implicit stage (s) explicit on (r). fact, usual addit stage explicit butcher tableau (r = s+ 1). then, order facilit imex scheme implementation, pad implicit s-stage scheme zeroes, obtain new tableau size explicit one. easili procedur u1 = row explicit implicit tableau fill zeros. given that, comput need stage, imex scheme s stage associ butcher tableau size (s+1). select literatur butcher tabl set imex rk scheme test convection-diffus type problems, [42], [26]. import mind properti describ given od time aris convection-diffus equat preserv index 2 dae like semi-discret incompress navier-stok problem. 1 stage, 1st order (1-1): call forward-backward euler propos ascher et al. [42]. differ version scheme, satisfi b = b satisfi condition. us version, consist follow schemes, requir extra evalu step explicit copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 26 o. colom s. badia counterpart. note scheme stabil problem implicit oper zero. furthermore, choic b = b preserv incompress constraint condit state proposit 3.2. implicit: explicit: 0 0 0 1 0 1 0 1 0 0 0 1 1 0 0 1 1 stage, 2nd order (1-2): scheme propos [42], call implicit-explicit midpoint. second-ord accur state [42] perform compar popular crank-nicolson adams-bashforth method, addit better symmetri properties. import remark attenu stiff limit. implicit: explicit: 0 0 0 1 2 0 1 2 0 1 0 0 0 1 2 1 2 0 0 1 2 stages, 2nd order, case 1 (2-2/1): second-ord imex rk scheme propos [42], case stages. scheme turn l-stabl base stiffli accur two-stage, second-ord dirk scheme. implicit: explicit: 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 = (2 2)/2 =2 2/3. 2 stages, 2nd order, case 2 (2-2/2): altern definit previou scheme propos [42], explicit tabl defin satisfi condit b j = j j = 1, ..., instead satisfi b = b. result scheme l-stabl second- order accur time. note scheme satisfi incompress constrain assumpt expos proposit 3.2. implicit: explicit: 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 1 1 0 1 0 = (2 2)/2 = 11/(2). 2 stages, 3rd order (2-3): two-stag combination, third-ord accur time imex scheme defin [42]. case, implicit tabl base two-stage, third-ord dirk scheme. implicit: explicit: 0 0 0 0 0 0 1 0 12 0 12 1 2 0 0 0 0 0 0 1 1 2(1 ) 0 0 12 1 2 = (3+ 3)/6. 3 stages, 3rd order (3-3): stiffli accur third-order, three-stag dirk scheme combin four-stag third-ord explicit rk scheme propos [42]. result scheme third-ord accur time l-stable. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 27 implicit: 0 0 0 0 0 0.4358665215 0 0.4358665215 0 0 0.7179332608 0 0.2820667392 0.4358665215 0 1 0 1.208496649 0.644363171 0.4358665215 0 1.208496649 0.644363171 0.4358665215 explicit: 0 0 0 0 0 0.4358665215 0.4358665215 0 0 0 0.7179332608 0.3212788860 0.3966543747 0 0 1 0.105858296 0.5529291479 0.5529291479 0 0 1.208496649 0.644363171 0.4358665215 4 stages, 3rd order (4-3): finally, propo [42] four-stag third-ord accur time imex scheme. implicit: explicit: 0 0 0 0 0 0 1/2 0 1/2 0 0 0 2/3 0 1/6 1/2 0 0 1/2 0 1/2 1/2 1/2 0 1 0 3/2 3/2 1/2 1/2 0 3/2 3/2 1/2 1/2 0 0 0 0 0 0 1/2 1/2 0 0 0 0 2/3 11/18 1/18 0 0 0 1/2 5/6 5/6 1/2 0 0 1 1/4 7/4 3/4 7/4 0 1/4 7/4 3/4 7/4 0 5 stages, 3rd order (5-3): boscarino develop [26] third-ord five-stag imex rk scheme suffer order reduct phenomena stiff problem contain non-stiff term stiff term solved. note case method stage column implicit tabl zero, row zero stage u1 = un. implicit: explicit: 0 0 0 0 0 0 c2 0 0 0 c3 a31 a32 0 0 c4 a41 a42 a43 0 1 b1 b2 b3 b4 b1 b2 b3 b4 0 0 0 0 0 0 c2 0 0 0 0 c3 a31 a32 0 0 0 c4 a41 a42 a43 0 0 1 a51 a52 a53 a54 0 b1 b2 b3 b4 paramet valu appendix [26]. acknowledg work partial fund european research council fp7 programm idea start grant no. 258443 - comfus: comput method fusion technology. o. colom gratefulli acknowledg support receiv catalan govern fi fellowship. author acknowledg construct comment anonym referees, help improv exposition. refer 1. kim j, moin p. applic fractional-step method incompress navier-stok equations. journal comput physic 1985; 59(2):308323. 2. le h, moin p. improv fraction step method incompress navier-stok equations. journal comput physic 1991; 92(2):369379. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme 28 o. colom s. badia 3. codina r, badia s. pressur segreg method fractional-step type finit element approxim incompress flow problems. method appli mechan engin 2006; 195(23-24):29002918. 4. badia s, codina r. algebra pressur segreg method incompress navier-stok equations. archiv comput method engin 2008; 15(3):343369. 5. hairer e, lubich c, roch m. numer solut differential-algebra system runge-kutta methods, vol. 1409. springer verlag, 1989. 6. swart jj, soderlind g. construct error estim implicit runge-kutta methods. journal comput appli mathemat 1997; 86(2):347358. 7. marx yp. time integr scheme unsteadi incompress navier-stok equations. journal comput physic 1994; 112(1):182209. 8. nikitin n. third-order-accur semi-implicit runge-kutta scheme incompress navier-stok equations. intern journal numer method fluid 2006; 51(2):221233. 9. knikker r. studi stagger fourth-ord compact scheme unsteadi incompress viscou flows. intern journal numer method fluid 2009; 59(10):10631092. 10. kampani na, ekaterinari ja. stagger grid, high-ord accur method incompress navier-stok equations. journal comput physic 2006; 215(2):589613. 11. sanders b, koren b. accuraci analysi explicit runge-kutta method appli incompress navier- stoke equations. journal comput physic 2012; 231(8):30413063. 12. hairer e, wanner g. solv ordinari differenti equat ii: stiff differential-algebra problems. springer, 1993. 13. sanders b. energy-conserv runge-kutta method incompress navier-stok equations. journal comput physic 2013; 233:100131. 14. badia s, martn af, princip j. highli scalabl parallel implement balanc domain decomposit constraints. siam journal scientif comput 2014; :c190c218. 15. elman hc, silvest dj, wathen aj. finit element fast iter solvers: applic incompress fluid dynamics. oxford univers press, 2005. 16. brasei v, hairer e. half-explicit runge-kutta method differential-algebra system index 2. siam j. numer. anal. 1993; 30(2):538552. 17. arnold m. half-explicit runge-kutta method explicit stage differential-algebra system index 2. bit numer mathemat 1998; 38(3):415438. 18. murua a. partit half-explicit runge-kutta method differential-algebra system index 2. comput 1997; 59(1):4361. 19. verstappen rwcp, veldman aep. symmetry-preserv discret turbul flow. journal comput physic 2003; 187(1):343368. 20. vreman aw, kuerten jgm. comparison direct numer simul databas turbul channel flow = 180. physic fluid (1994-present) 2014; 26(1):015 102. 21. badia s, martn af, princip j. implement scalabl analysi balanc domain decomposit methods. archiv comput method engin 2013; 20(3):239262. 22. badia s, martn af, princip j. overlap coarse/fin implement balanc domain decomposit inexact solvers. submit 2014; . 23. hairer e, nrsett sp, wanner g. solv ordinari differenti equat i: nonstiff problems. springer scienc & busi media, 2008. 24. sanz-serna jm, verwer jg, hundsdorf wh. converg order reduct runge-kutta scheme appli evolutionari problem partial differenti equations. numerisch mathematik 1986; 50(4):405418. 25. verwer jg. converg order reduct diagon implicit runge-kutta scheme method lines. numer analysis: proceed dunde confer numer analysis, 1975, pitman research note mathematics, vol. 140, 1986; 220237. 26. boscarino s. accur order implicit-explicit runge-kutta method stiff problems. appli numer mathemat 2009; 59(7):15151528. 27. ethier cr, steinman da. exact fulli 3d navier-stok solut benchmarking. intern journal numer method fluid 1994; 19(5):369375. 28. schafer m, turek s, durst f, kraus e, rannach r. benchmark comput laminar flow cylinder. flow simul high-perform comput ii, hirschel pdeh (ed.). no. 48 note numer fluid mechan (nnfm), vieweg+teubn verlag, 1996; 547566. 29. brezzi f, hugh tj, suli e. variat approxim flux conform finit element method ellipt partial differenti equations: model problem. atti della accademia nazional dei lincei. class di scienz fisiche, matematich e naturali. rendiconti lincei. matematica e applicazioni 2001; 12(3):159166. 30. feng y, peri d. time-adapt space-tim finit element method incompress lagrangian flow free surfaces: comput issues. method appli mechan engin 2000; 190(5-7):499 518. 31. john v, rang j. adapt time step control incompress navier-stok equations. method appli mechan engin 2010; 199(9-12):514524. 32. kai da, gresho pm, griffith df, silvest dj. adapt time-step incompress flow ii: navier- stoke equations. siam journal scientif comput 2010; 32(1):111128. 33. veneziani a, villa u. aladins: algebra split time adapt solver incompress navier- stoke equations. journal comput physic 2013; 238:359375. 34. gustafsson k. control theoret techniqu stepsiz select explicit runge-kutta methods. acm trans. math. softw. 1991; 17(4):533554. 35. gustafsson k. control-theoret techniqu stepsiz select implicit runge-kutta methods. acm trans. math. softw. 1994; 20(4):496517. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme segreg runge-kutta method incompress flow 29 36. soderlind g. automat control adapt time-stepping. numer algorithm 2002; 31(1-4):281310. 37. cash jr. diagon implicit runge-kutta formula error estimates. ima journal appli mathemat 1979; 24(3):293301. 38. brachet me. direct simul three-dimension turbul taylorgreen vortex. fluid dynam research 1991; 8(1-4):18. 39. gassner gj, beck ad. accuraci high-ord discret underresolv turbul simulations. theoret comput fluid dynam 2013; 27(3-4):221237. 40. hickel s, adam na, domaradzki ja. adapt local deconvolut method implicit les. journal comput physic 2006; 213(1):413436. 41. boom p, zingg d. time-accur flow simul effici newton-krylov-schur approach high-ord tempor spatial discretization. 51st aiaa aerospac scienc meet includ new horizon forum aerospac exposition. american institut aeronaut astronautics, 2013. 42. ascher um, ruuth sj, spiteri rj. implicit-explicit runge-kutta method time-depend partial differenti equations. appli numer mathemat 1997; 25(2-3):151167. copyright c 0000 john wilei & sons, ltd. int. j. numer. meth. engng (0000) prepar nmeauth.cl doi: 10.1002/nme introduct navier-stok equat runge-kutta time integr half-explicit runge-kutta scheme segreg runge-kutta scheme order reduct phenomena numer experi manufactur analyt solut beltrami flow 2d laminar flow cylind adapt time step techniqu taylor-green vortex flow conclus butcher tableau