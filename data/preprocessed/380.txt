semi-explicit multi-step method solv incompress navier-stok equat appli scienc articl semi-explicit multi-step method solv incompress navier-stok equat pavel ryzhakov 1 , * id julio marti 1,2 1 centr internacion de mtode numric en enginyeria ( cimn ) , edifici c1 campus nord upc c/ gran capit , s/n 08034 barcelona , spain ; julio.marti @ cimne.upc.edu 2 depart civil environment engin , universitat politcnica de catalunya ( upc ) , 08034 barcelona , spain * correspond : pryzhakov @ cimne.upc.edu receiv : 19 decemb 2017 ; accept : 14 januari 2018 ; publish : 16 januari 2018 abstract : fraction step method techniqu result computationally-effici implement navierstok solver .
finit element-bas model , often appli conjunct implicit time integr scheme .
hand , framework finit differ finit volum method , fraction step method success appli obtain predictor-corrector semi-explicit method .
present work , deriv scheme base use fraction step techniqu conjunct explicit multi-step time integr within framework galerkin-typ stabil finit element method .
show certain assumpt , rungekutta scheme equip fraction step lead effici semi-explicit method , pressur poisson equat solv per time step .
thus , comput cost implicit step scheme minim .
numer exampl solv valid result scheme provid insight regard accuraci comput effici .
keyword : rungekutta ; fraction step method , incompress flow ; finit element method ; comput effici 1 .
introduct solut incompress flow problem aris real-lif engin applic call develop accur , yet effici scheme , associ comput time becom decis factor use .
among mani method avail , one class techniqu common implement well-known fraction step method .
method origin introduc work chorin [ 1 ] temam [ 2 ] incompress navierstok equat ( independ , similar methodolog develop thorough studi yanenko [ 3,4 ] ) .
basic , method allow one decoupl primari variabl govern equat ( veloc pressur ) replac  monolith  solut origin coupl system seri solut step , ensur one variabl ( either veloc pressur ) unknown step .
first , momentum equat solv intermedi , non-solenoid , veloc remov depend unknown pressur .
afterward , pressur found , veloc correct fulfil incompress constraint .
shown fraction step method view block lu decomposit origin monolith equat system [ 5 ] .
method popular due result comput effici ( see , e.g. , [ 68 ] ) .
accuraci method address [ 9 ] .
error estim pressur stabil issu fraction step method analyz [ 10 ] .
appl .
sci .
2018 , 8 , 119 ; doi:10.3390/app8010119 www.mdpi.com/journal/applsci http : //www.mdpi.com/journal/applsci http : //www.mdpi.com https : //orcid.org/0000-0002-4672-9038 http : //dx.doi.org/10.3390/app8010119 http : //www.mdpi.com/journal/applsci appl .
sci .
2018 , 8 , 119 2 14 exhaust review differ implement version method found [ 11 ] .
method unifi artifici compress approach fraction step method consult [ 12 ] .
fraction step methodolog also appli compress flow model ( see , e.g. , [ 13,14 ] ) .
peculiar appli fraction step method multiphas flow surfac tension effect highlight [ 15 ] .
major work fraction step method carri consid fixed-grid ( eulerian ) approach , recent work analyz implic appli fraction step method move grid ( lagrangian ) method [ 16,17 ] .
fraction step method also appli model incompress solid [ 18 ] .
context incompress flow model , fraction step method often appli conjunct implicit time integr scheme .
case above-ment work .
pure explicit scheme appli incompress navierstok equat due implicit natur pressur .
hand , appeal possibl consist develop semi-explicit scheme , veloc integr explicit , pressur treat implicit .
particular appeal option reli adopt accur high order methodolog rungekutta time integr famili .
follow sever work , e.g. , [ 1926 ] .
context finit volum method , follow , e.g. , [ 21,22 ] .
[ 21 ] , accuraci differ version rungekutta scheme analyz .
author deriv predictor-corrector scheme , similar fraction step one ; howev , spit error commit pressur comput everi sub-step rungekutta scheme .
[ 22 ] , stabil bound differ fraction step-bas scheme ( includ one use rungekutta integr ) analyz high reynold number flow .
sever author develop semi-explicit rungekutta-bas method context finit differ framework .
[ 22 ] , third-ord rungekutta scheme convect term combin cranknicholson integr viscous term propos .
[ 23 ] , fourth-ord rungekutta scheme equip solut pressur poisson equat sub-step propos ( similar [ 21 ] ) .
above-ment semi-explicit finit volum finit differ approach reli solv pressur poisson equat everi sub-step multi-step scheme , computationally-intens option .
idea reduc number implicit step semi-explicit scheme propos [ 25 ] .
finit differ context , author propos semi-explicit third-ord rungekutta-bas scheme convect term advanc explicit , treat viscous term implicit .
import , suggest assum pressur correspond intermedi rungekutta step equal histor one .
thus , computationally-expens pressur poisson equat solv per time step .
present work , develop similar approach context galerkin finit element method .
work , deriv scheme base combin fraction step techniqu fourth-ord rungekutta scheme , strive minim comput cost correspond implicit step .
show certain assumpt regard intermedi step pressur result effici semi-explicit scheme requir solv pressur poisson equat per time step .
paper organ follow .
first defin space-discret problem consid linear velocity-pressur stabil finit element .
afterward , time-discret equat use fourth-ord rungekutta scheme deriv .
next , assumpt pressur intermedi rungekutta step introduc , fraction split appli .
result semi-explicit scheme obtain .
paper conclud numer verif exampl .
time accuraci comput effici method estim .
appl .
sci .
2018 , 8 , 119 3 14 2 .
govern equat navierstok equat incompress flow defin domain  boundari  written :  u t +  ( u   ) u u +p = f , ( 1 )   u = 0 , ( 2 ) u veloc vector , p pressur , time , f bodi forc ,  densiti  kinemat viscos .
ensur well-posed system defin equat ( 1 ) ( 2 ) , suitabl boundari condit must specifi .
boundari  = d  n , d  n =  , follow condit prescrib : u = upr d , ( 3 )   n = prn n , ( 4 ) upr prescrib veloc , n outer unit normal n  pr n prescrib traction vector .
homogen boundari condit consid sake simplic .
defin symbol differenti navierstok oper : ( u , p ) = ( a1 ( u , p ) a2 ( u , p ) ) , ( 5 ) : a1 =  ( u   ) u u +p , ( 6 ) a2 =   u .
( 7 ) , introduc notat f = ( f 0 ) , govern equat written : (  u t 0 ) +a ( u , p ) = f .
( 8 ) 2.1 .
space discret galerkin weak form ( 8 ) read : (  ,  u t ) + (  , a1 ) + ( q , a2 ) =  , f , ( 9 )  q veloc pressur test function .
notat adopt , (  ,  )  ,  stand bilinear linear form , respect .
order obtain stabl solut convection-domin flow , equat must stabil .
addit , pressur stabil necessari equal order velocity-pressur interpol , satisfi compat condit [ 27 ] .
galerkin/least squar ( gls ) stabil method allow one circumv problem sum n  a (  , q )  ( f a ( u , p )  u t ) origin weak form problem [ 28 ] .
mean sum product residu navierstok oper (  , q ) ( oper may view chang weight function ) .
note linear velocity-pressur element , gls method coincid recent ( less diffus general case ) algebra sub-grid scale ( asg ) method [ 29 ] , latter defin base adjoint oper a weight function residu .
appl .
sci .
2018 , 8 , 119 4 14 sum galerkin weak form stabil term result :  (  , u t ) +  (  , u  u ) + (  , p )   (  , u ) + ( q ,   u ) + el   el ( q +     ) ( f  u t  u  u + up ) , ( 10 ) stabil coeffici  defin ( see , e.g. , [ 28 ] ) :  = 2||u|| h + 4 h2 , ( 11 ) h element size .
integr viscous term part rearrang term ( note equat ( 10 ) , product contain test function  contribut momentum equat , one contain q contribut mass conserv equat ) , modifi linear momentum mass conserv equat obtain :  (  , u t ) +  (  , u  u ) +  (  , u )  (   , p ) + el   el (    ) ( f  u t  u  up ) = f ,  , ( 12 ) ( q ,   u ) +  el   el q ( f  u t  u  up ) = 0 .
( 13 ) prior establish space-discret stabil govern system , defin matric vector correspond term galerkin weak form : (  , u ) mu , ( 14 ) (   , p )  gp , ( 15 ) (  , u )  lu , ( 16 ) (  , ( u  u ) )  c ( u ) u , ( 17 ) f ,   f. ( 18 ) oper correspond stabil term :  el   el (    ) (   u )  s1u , ( 19 )  el   el (    ) ( u )  s2u , ( 20 )  el   el (    ) ( p )  s3p , ( 21 )  el   el (    ) ( u t ) mst u t , ( 22 )  el   el (    ) ( f )  fs1 , ( 23 )  el   el ( q ) ( f )  fs2 , ( 24 )  el   el ( q ) ( u )  s4u , ( 25 ) appl .
sci .
2018 , 8 , 119 5 14  el   el ( q ) ( (    ) u )  s5u , ( 26 )  el   el ( q ) ( p )  lp .
( 27 ) note variabl distinguish over-bar ( u p ) stand vector nodal quantiti .
stabil space-discret equat matrix form read : ( + mst ) u t + ( l + c ( u ) + s1 + s2 ) u ( g + s3 ) p = f + fs1 , ( 28 ) ( + s4 + s5 ) u + lp = fs2 .
( 29 ) note dynam viscos  =  use .
scope appli time integr scheme explicit type , lump form mass matrix adopt .
sake clariti , shall introduc follow short-hand notat : c = c + l + s1 + s2 , ( 30 ) g = s3 + g , ( 31 ) f = f + fs1 + mstan , ( 32 ) d = + s4 + s5 , ( 33 ) f = fs2 , ( 34 ) m = + mst .
( 35 ) use notat , govern equat discret space read : m u t + cu gp = f , ( 36 ) du + lp = f .
( 37 ) next , time integr must perform .
2.2 .
time integr take account implicit natur pressur incompress flow , fully-explicit time integr scheme use ( strict speak , fully-explicit scheme defin , associ critic time step would prohibit small , govern acoust pressur scale ) .
howev , one attract option defin integr momentum equat explicit , except pressur term , treat implicit way .
explicit time integr techniqu general faster implicit counterpart involv non-linear iter , requir solv linear system ( case mass matrix lump use ) .
howev , condit stabl restrict critic time step size , may prohibit small .
power commonly-us class explicit method famili rungekutta time integr scheme .
integr method involv evalu residu govern equat sever sub-step .
rungekutta scheme n intermedi step character n-th order accuraci n  4 .
larger valu sub-step , accuraci order less n. make four-step scheme commonly-impl version .
moreov , consid restrict critic time step size , version method offer good balanc sub-step number maximum permiss time step size .
detail regard stabil domain rungekutta scheme consult , e.g. , [ 28 ] ( chapter 5.3 ) .
appl .
sci .
2018 , 8 , 119 6 14 consid solut given problem known tn , rungekutta method requir success comput govern equat residu sever sub-step order obtain solut tn+1 .
general cauchi problem type : y t = f ( ( ) , ) , ( 38 ) rungekutta scheme fourth order provid : yn+1  yn t = 1 6 [ k1 + 2k2 + 2k3 + k4 ] , ( 39 ) k1 , .
.
.
, k4 intermedi residu  right-hand side  correct obtain : k1 = f ( tn , yn ) ( 40 ) k2 = f ( tn + t 2 , yn + t 2 k1 ) , ( 41 ) k3 = f ( tn + t 2 , yn + t 2 k2 ) , ( 42 ) k4 = f ( tn + t , yn + tk3 ) .
( 43 ) clear , comput yn+1 , function must evalu four time , intermedi step .
also involv four updat primari variabl .
next , momentum equat integr use scheme .
correspond residu defin : r = f cu + gp .
( 44 ) thus , set veloc residu comput order integr momentum equat time use equat ( 40 )  ( 43 ) read ( note pressur term treat implicit , i.e. , correspond end-of-sub-step valu ) : r1 = fn  c ( un ) ( un ) + gp1 , ( 45 ) u1 = un + 1 2 m1tr1 , ( 46 ) r2 = f1  c ( u1 ) ( u1 ) + gp2 , ( 47 ) u2 = un + 1 2 m1tr2 , ( 48 ) r3 = f2  c ( u2 ) ( u2 ) + gp3 , ( 49 ) u3 = un + m 1tr3 , ( 50 ) r4 = fn+1  c ( u3 ) ( u3 ) + gp4 .
( 51 ) comput right-hand-sid correct r1 , .
.
.
, r4 exact requir solv mass balanc equat sub-step .
howev , would impli perform implicit step four time , make method comput expens .
order avoid , propos assum pressur intermedi step comput linear interpol valu tn tn+1 .
lead follow approxim :  p1 = p ( tn ) = pn ,  p2 = p ( tn + t 2 ) = 1 2 ( pn + pn+1 ) ,  p3 = p ( tn + t 2 ) = 1 2 ( pn + pn+1 ) ,  p4 = p ( tn+1 ) = pn+1 .
appl .
sci .
2018 , 8 , 119 7 14 follow ( 39 ) , equat linear momentum conserv discret form written : m un+1  un t = 1 6 [ r1 + 2r2 + 2r3 + r4 ] .
( 52 ) assumpt linear variat pressur tn tn+1 permit remov gradient pressur definit residu put overal momentum equat ( form facilit appli fraction split done next ) : m un+1  un t = 1 6 [ r1 + 2r2 + 2r3 + r4 ] + 1 2 g ( pn+1 + pn ) .
( 53 ) modifi residu ( indic over-bar ) defin : r1 = fn  c ( un ) ( un ) , ( 54 ) r2 = f1  c ( u1 ) ( u1 ) , ( 55 ) r3 = f2  c ( u2 ) ( u2 ) , ( 56 ) r4 = fn+1  c ( u3 ) ( u3 ) , ( 57 ) consid r = r + gp .
sake breviti , shall use follow notat sum residu : r = 1 6 [ r1 + 2r2 + 2r3 + r4 ] ( 58 ) 2.3 .
fraction step split govern system consist momentum equat ( 53 ) mass conserv equat ( equat ( 37 ) ) , time-integr form written : dun+1 + lpn+1 = f .
( 59 ) decoupl veloc pressur , shall appli fraction step split introduc auxiliari veloc u , non-solenoid .
fraction split appli equat ( 53 ) lead : u un t = r + gpn , ( 60 ) un+1  u t = 1 2 gpn+1 + 1 2 gpn  gpn .
( 61 )  = 0 ( pressur gradient fraction momentum equat )  = 1 ( histor pressur gradient fraction momentum equat ) .
residu defin : r = 1 6 [ r1 + 2r2 + 2r3 + r4 ] , ( 62 ) r1 = fn  c ( un ) ( un ) , ( 63 ) r2 = f1  c ( u1 ) ( u1 ) , ( 64 ) r3 = f2  c ( u2 ) ( u2 ) , ( 65 ) r4 = fn+1  c ( u3 ) ( u3 ) .
( 66 ) emphas appli fraction step split , residu fraction momentum equat correspond fraction veloc u .
reflect  tild  residu symbol ( r r ) .
note sum equat ( 60 ) ( 61 ) , one recov origin momentum equat fraction step approxim , consist assum general appl .
sci .
2018 , 8 , 119 8 14 convect oper comput use fraction veloc c ( un+1 )  c ( u ) .
mean convect comput use auxiliari non-solenoid veloc .
follow idea [ 10 ] , result accuraci estim .
correspond split error depend  : ( ||un+1  u|| ) = to ( ||0.5 ( pn+1 + pn )  pn|| ) .
 = 0 , order approxim t .
 = 1 , order t2 sinc ( ||pn+1  pn|| ) = t .
higher accuraci , second option use , thus choos  = 1 .
appli mass conserv equat ( 59 ) equat ( 61 ) lead : tdm1 ( 1 2 gpn+1  1 2 gpn ) = du f lpn+1 .
( 67 ) introduc commonly-us approxim laplac oper dm1g  l , one obtain : u un t = r + gpn , ( 68 ) t 2 l ( pn+1  pn ) = du f lpn+1 , ( 69 ) un+1  u t  1 2 g ( pn+1  pn ) = 0 .
( 70 ) defin discret model .
equat ( 69 ) known  pressur poisson equat  .
problem thus solv three step : 1 .
fraction momentum ( equat ( 68 ) ) solv .
fraction veloc u obtain ( explicit step ) .
2 .
equat pressur ( equat ( 69 ) ) solv .
pressur pn+1 obtain ( implicit step ) .
3 .
veloc correct ( equat ( 70 ) ) give un+1 ( explicit step ) .
accuraci effici method propos estim mean numer test .
3 .
numer exampl method implement within krato multi-phys , c++ object-ori fe framework [ 30 ] .
solut linear equat system , biconjug gradient stabil method ( bicgstab ) use .
3.1 .
accuraci scheme benchmark , time accuraci comput effici present model test .
benchmark origin propos [ 10 ] , use compar accuraci stabil differ fraction step method .
exampl , one solv navierstok equat unit squar domain homogen veloc condit .
forc vector prescrib correspond follow analyt solut : ux ( x , , ) = f ( x ) f  ( ) g ( ) , uy ( x , , ) =  f  ( x ) f ( ) g ( ) .
( 71 ) f g : f ( x ) = 100x2 ( 1 x ) 2 , g ( ) = cos ( 4t ) et .
( 72 ) two pressur solut satisfi problem : p = 0 p = 100x2 .
adopt second one initi condit pressur .
physic properti fluid follow : kinemat viscos 0.001 m2/s , densiti 1 kg/m3 .
time interv consid 1 s. structur mesh 80 80 linear triangular appl .
sci .
2018 , 8 , 119 9 14 element use mention otherwis .
differ time step size test .
method propos compar implicit method obtain appli fraction step equat obtain use second order backward differenti formula ( bdf2 ) time integr scheme ( implicit implement valid [ 31 ] ) .
sinc method propos priori expect exhibit second order converg , second order implicit scheme select comparison .
note rate converg import , also error ( i.e. , ordin posit error vs. step size curv ) .
veloc field = 1.0 shown figur 1 .
evolut horizont veloc compon ux point ( x , ) = ( 0.75 , 0.75 ) obtain use implicit present semi-explicit scheme shown figur 2 3 , respect .
one see time step diminish , propos method fraction step method tend exact solut .
howev , larg time step , implicit scheme clear exhibit larg error , semi-explicit rungekutta scheme result solut near coincid analyt one .
assess accuraci quantit , converg time approxim display figur 4 .
order obtain graph , test perform use various time step size rang t = 0.05 t = 0.001 s. error versus time step size plot propos semi-explicit implicit method .
logarithm scale use .
error comput sum nodal error time = 1 : err = n |ufeuexact | |uexact | ( n number node ) .
one see scheme exhibit quadrat converg .
howev , error introduc propos method consider smaller implicit method given time step .
exampl , semi-explicit rungekutta scheme t = 0.01 lead error implicit scheme t = 0.001 .
indic provid lower comput cost ( per time step ) semi-explicit scheme , consider gain overal comput time expect .
figur 1 .
comput mesh veloc field = 1 s. solut obtain use semi-explicit rungekutta scheme .
3.2 .
comput effici scheme order highlight comput effici properti propos method , test describ previous sub-sect perform use two time step size ( t = 0.01 t = 0.001 ) two mesh ( rough mesh : 6500 node fine mesh : 160,000 node ) .
comput cost differ solut step estim .
appl .
sci .
2018 , 8 , 119 10 14 -0.8 -0.6 -0.4 -0.2 0 0.2 0.4 0.6 0 0.2 0.4 0.6 0.8 1 u x ( 0 .7 5 ,0 .7 5 ) ( /s ) time ( ) analyth solut implicit dt=0.01 implicit dt=0.05 figur 2 .
tempor evolut horizont veloc ( x , ) = ( 0.75 , 0.75 ) .
implicit second order backward differenti formula ( bdf2 ) scheme .
-0.8 -0.6 -0.4 -0.2 0 0.2 0.4 0.6 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 u x ( 0 .7 5 ,0 .7 5 ) ( /s ) time ( ) analyth solut rk dt=0.01 rk dt=0.05 figur 3 .
tempor evolut horizont veloc ( x , ) = ( 0.75 , 0.75 ) .
semi-explicit rungekutta scheme .
-6 -5 -4 -3 -2 -1 0 -3 -2.8 -2.6 -2.4 -2.2 -2 -1.8 -1.6 -1.4 -1.2 l g e rr log dt implict rk figur 4 .
error = 1 time step , logarithm scale .
appl .
sci .
2018 , 8 , 119 11 14 test perform intel i5 desktop comput .
execut singl thread order gain insight effici scheme without consid gain obtain parallel implement .
poisson  equat solv use biconjug gradient stabil algorithm diagon precondit fix toler 103 .
comput time correspond solut fraction momentum equat ( first step ) pressur poisson equat display .
comput cost momentum equat correct display , neglig .
comput time calcul averag time step .
figur 5 show comput time correspond test perform rough mesh .
one see cost solut poisson  equat use propos implicit scheme near ident ( around 0.02 ) consid time step size .
comput cost momentum equat solut equal 0.015 case semi-explicit scheme 0.035 case implicit scheme t = 0.001 s. increas time step 0.01 , comput cost first step near chang semi-explicit scheme , increas 0.075 case implicit scheme .
occur due increas number non-linear iter necessari converg implicit scheme .
figur 6 show comput time obtain simul carri fine mesh .
similar result shown previous figur , time requir solut poisson  equat similar method , consider differ time requir solut fraction momentum equat ( first step ) .
one see larger time step , sever non-linear iter requir case implicit scheme .
consid case , t = 0.01 , overal comput cost implicit method three-tim larger semi-explicit scheme ( cost first step five-tim higher case use implicit scheme ) .
also note figur 4 indic achiev given accuraci , semi-explicit scheme allow use much larger time step .
instanc , relat error approxim 104 requir use t < 0.001 case implicit scheme , semi-explicit scheme lead accuraci alreadi t = 0.01 s. thus , overal comput cost correspond time accuraci much smaller case use semi-explicit scheme .
note one estim restrict semi-explicit scheme given problem know courant fourier number .
latter strong restrict time step case high viscos .
howev , engin fluid air water character low viscos .
thus , present methodolog success use wide rang practic applic .
figur 5 .
comput time differ solut step .
semi-explicit vs. implicit method .
mesh 6500 node .
appl .
sci .
2018 , 8 , 119 12 14 figur 6 .
comput time differ solut step .
semi-explicit vs. implicit method .
mesh 160,000 node .
4 .
summari conclus paper shown effici semi-explicit strategi deriv framework stabil galerkin finit element method .
methodolog base combin rungekutta time integr scheme fraction step techniqu present .
shown introduc approxim pressur intermedi step rungekutta method lead scheme implicit step necessari comput pressur perform .
priori estim , well numer test shown time accuraci result scheme reduc second order ; howev , valu error given time step sever order magnitud smaller one aris appli fraction step second-ord implicit scheme .
thus , problem critic time step estim due cfl ( courant-friedrichs-lewi ) criteria favor , method propos defin advantag option comparison implicit scheme .
overal comput cost result method govern cost singl solut pressur poisson equat , equat inhomogen laplac type .
thus , import step make propos method even effici devis scheme minim cost solv poisson  equat , done level linear solver follow algebra multi-grid deflat techniqu [ 32 ] .
anoth observ even though implicit time integr scheme prefer literatur explicit one , latter better posit attend present hardwar technolog .
orient toward usag parallel comput general purpos graphic processor unit ( gpgpu ) [ 33 ] .
thus , cost associ first part may consider reduc .
acknowledg : work support auspic cometadproject nation rtdplan ( ref .
mat2014-60435-c2-1-r ) ministerio de economa competitividad spain .
author contribut : methodolog develop author .
p. ryzhakov implement multi-step method .
j. marti implement pressur correct .
accuraci analysi done j. marti , comput effici estim done p. ryzhakov .
conflict interest : author declar conflict interest .
appl .
sci .
2018 , 8 , 119 13 14 refer 1 .
chorin , .
numer method solv incompress viscous problem .
j. comput .
phys .
1967 , 2 , 1226 .
2 .
temam , r.m .
sur l  approxim de la solut des equat de navier-stok par la method des pase fractionair .
arch .
ration .
mech .
anal .
1969 , 32 , 135153 .
3 .
yanenko , n. method fraction step solv multidimension problem mathemat physic .
novosib .
sci .
1967 , 196 .
4 .
yanenko , n. method fraction step .
solut problem mathemat physic sever variabl ; translat russian cheron , t. ; springer : berlin/heidelberg , germani , 1971 .
5 .
blair perot , j .
analysi fraction step method .
j. comput .
phys .
1993 , 108 , 5158 .
6 .
kim , j. ; moin , p. applic fractional-step method incompress navier-stok equat .
j. comput .
phys .
1985 , 59 , 308323 .
7 .
donea , j. ; giuliani , s. ; laval , h. ; quartapell , l. finit element solut unsteadi navier-stok equat fraction step method .
comput .
method appl .
mech .
eng .
1982 , 30 , 5373 .
8 .
turek , s. compar studi time-step techniqu incompress navier-stok equat : fulli implicit nonlinear scheme semi-implicit project method ; iwr : wroclaw , poland , 1995 .
9 .
strikwerda , j. ; lee , .
accuraci fraction step method .
siam j. numer .
anal .
1999 , 37 , 3747 .
10 .
codina , r. pressur stabil fraction step finit element method incompress flow .
j. comput .
phys .
2001 , 170 , 112140 .
11 .
guermond , j. ; minev , p. ; shen , j .
overview project method incompress flow .
comput .
method appl .
mech .
eng .
2006 , 195 , 60116045 .
12 .
knzsi , l. ; drikaki , d. unifi fractional-step , artifici compress pressure-project formul solv incompress navierstok equat .
commun .
computat .
phys .
2014 , 16 , 11351180 .
13 .
codina , r. ; vzquez , m. ; zienkiewizc , .
general algorithm compress incompress flow .
int .
j. numer .
method fluid 1998 , 27 , 1332 .
14 .
ryzhakov , p. ; rossi , r. ; oat , e. algorithm simul thermal coupl low speed flow problem .
int .
j. numer .
method fluid 2012 , 70 , 119 .
15 .
ryzhakov , p.b .
; jarauta , .
embed approach immisc multi-fluid problem .
int .
j. numer .
method fluid 2016 , 81 , 357376 .
16 .
ryzhakov , p. ; oat , e. ; rossi , r. ; idelsohn , s.r .
improv mass conserv simul incompress flow .
int .
j. numer .
method eng .
2012 , 90/12 , 14351451 .
17 .
ryzhakov , p. modifi fraction step method fluidstructur interact problem .
rev .
int .
mtodo numr .
clc .
diseo ing .
2017 , 33 , 5864 .
18 .
nithiarasu , p. matrix free fraction step method static dynam incompress solid mechan .
int .
j. numer .
method eng .
sci .
mech .
2006 , 7 , 369380 .
19 .
nikitin , n. third-order-accur semi-implicit rungekutta scheme incompress navier-stok equat .
int .
j. numer .
method fluid 2006 , 51 , 221233 .
20 .
ascher , u. ; ruuth , s. ; spiteri , r. implicit-explicit runge-kutta method time-depend partial differenti equat .
appl .
numer .
math .
1997 , 25 , 151167 .
21 .
sanders , b. ; koren , b .
accuraci analysi explicit rungekutta method appli incompress navierstok equat .
j. comput .
phys .
2012 , 231 , 30413063 .
22 .
fishpool , g. ; leschzin , m. stabil bound explicit fractional-step scheme navierstok equat high reynold number .
comput .
fluid 2009 , 38 , 12891298 .
23 .
kampani , n.a .
; ekaterinari , j.a .
stagger grid , high-ord accur method incompress navierstok equat .
j. comput .
phys .
2006 , 215 , 589613 .
24 .
ha , s. ; park , j. ; , d. gpu-acceler semi-implicit fractional-step method numer solut incompress navierstok equat .
j. comput .
phys .
2018 , 352 , 246264 .
25 .
le , h. ; moin , p. improv fraction step method incompress navierstok equat .
j. comput .
phys .
1991 , 92 , 369379 .
26 .
pareschi , l. ; russo , g. implicit-explicit rungekutta scheme stiff system differenti equat .
recent trend numer .
anal .
2000 , 3 , 269289 .
27 .
bath , k.j .
infsup condit evalu mix finit element method .
comput .
struct .
2001 , 79 , 243252 .
appl .
sci .
2018 , 8 , 119 14 14 28 .
donea , j. ; huerta , a. finit element method flow problem ; wiley : new york , ny , usa , 2003 .
29 .
codina , r. stabil finit element method general stationari incompress flow .
comput .
method appl .
mech .
eng .
2001 , 190 , 26812706 .
30 .
dadvand , p. ; rossi , r. ; oat , e. object-ori environ develop finit element code multi-disciplinari applic .
arch .
comput .
method eng .
2010 , 17/3 , 253297 .
31 .
ryzhakov , p. ; cotela , j. ; rossi , r. ; oat , e. two-step monolith method effici simul incompress flow .
int .
j. numer .
method fluid 2014 , 74 , 919934 .
32 .
brandt , a. ; livn , o. multigrid techniqu : 1984 guid applic fluid dynam , revis edit ; siam : philadelphia , pa , usa , 2011 .
33 .
griebel , m. ; zaspel , p. multi-gpu acceler solver three-dimension two-phas incompress navier-stok equat .
comput .
sci .
res .
dev .
2010 , 25 , 6573 .
c 2018 author .
license mdpi , basel , switzerland .
articl open access articl distribut term condit creativ common attribut ( cc ) licens ( http : //creativecommons.org/licenses/by/4.0/ ) .
http : //creativecommons.org/ http : //creativecommons.org/licenses/by/4.0/ .
introduct govern equat space discret time integr fraction step split numer exampl accuraci scheme comput effici scheme summari conclus
