deliber dialogu reason safeti critic action pancho tolchinsky1 sanjay modgil2 kati atkinson3 peter mcburney3 ulis cortes1 knowledg engin & machin learn group , technic univers catalonia , spain1 ; depart informat , king  colleg , london , uk2 depart comput scienc , univers liverpool , liverpool , uk 3 abstract paper present argument-bas model proclaim , in- tend provid set heterogen agent deliber safeti critic action .
achiev purpos proclaim featur me- diator agent three main task : 1 ) guid particip agent valid dialect move stage dialogu ; 2 ) decid whether submit argument accept basi relev ; final , 3 ) evalu accept argument order provid assess whether propos action undertaken .
main focus paper propos set reason patter , repres term argument scheme critic question , intend automatis deliber whether propos action safe perform .
frame within proclaim model , aim motiv import scheme critic question : ) mediat agent  guid task allow high focus deliber ; b ) effect particip heterogen agent ; c ) enabl reus previous similar deliber order evalu argument evidenti basi .
1 introduct safeti critic action transplant organ particular patient spill industri wastewat discharg requir extra oblig ensur undesir side effect caus , side effect may well death patient sever impact effluvi ecosystem .
min- imis harm , choic safety-crit action usual govern guidelin regul direct decis maker .
howev , strict ad- herenc domain consent knowledg may alway conveni .
1 instanc , transplant domain , strict adher convent guidelin , regard criteria donor organ elig transplant , result progress undersuppli avail organ result signific extend wait time increas mortal wait list [ 29 ] .
domain organ transplant wastewat manag high complex rapid evolv ; thus common consent knowledg alway expect date account possibl circumstances1 .
henc , decis maker expert domain , allow deviat guidelin , far decis well justifi support empir evid .
furthermor , safety-crit action requir particip sever agent  expert differ aspect problem  decid whether perform safe .
exampl , organ avail transplant better judg suitabl given recipi , expert donor site joint take decis expert recipi site , may locat differ hospit [ 27 ] .
despit ad valu joint decis make among expert , requir alway met .
without appropri support , deliber among expert whether propos action safe time consum guarante success outcom .
thus , decis support system intend assist expert de- cide whether safety-crit action perform without caus sever undesir side effect , must take account :  decis whether perform safety-crit action well justifi .
 guidelin regul import , strict adher alway warrant safeti determin best decis .
 empir evid play import role safety-crit decis mak- ing .
 decis maker may expert domain .
decis subject guidelin , abl deviat convent guidelin special circumst .
 sever expert may requir particip deliber whether propos action safe .
may complementari knowledg problem hand , also be- caus may repres potentially-divers interest .
situat one take account :  decis maker may disagr whether action safe perform .
1for exampl , transplant organis period publish consent organ accept- abil criteria .
howev , criteria rapid evolv research  effort extend reduc organ discard .
henc , advanc transplant profession deviat consent criteria .
2  decis maker , especi human expert , may abl main- tain long intens deliber .
 particip agent expect heterogen .
agent may human other may artifici .
furthermor , artifici agent may well divers implement given differ- ent agent may implement differ develop .
general , set , uniform under logic assum particip [ 36 ] .
note heterogen agent impli deliber occur open environ .
quit opposit , expect high regul environ .
paper present argumentation-bas model call proclaim provid principl way address introduc problem .
pro- claim therefor propos model intend support expert collab- orat decis whether safety-crit action perform .
central model definit polici agent  overal inter- action , polici defin argu , stage deliber .
main purpos contribut paper propos argument process , base argument scheme critic question , intend drive deliber safety-crit action among human artifici agent manner structur order , elicit inform need make decis joint ratio- nalli , even inform possess particip agent .
second contribut particip dialogu need specialis knowledg argument theori , framework em- bed domain expertis ( e.g .
medic environment ) natur way use application-specif reason pattern .
work present paper build substanti extend work number earlier paper .
key idea sketch [ 55 ] , propos context medic agent-bas organis ( carrel ) [ 58 ] intend facilit offer alloc human organ transplan- tation .
[ 56 ] propos use scenario specif argument scheme critic question , tailor medic applic , defin protocol-bas exchang argument model agent  deliber .
[ 57 ] intro- duce proclaim model focus role case-bas reason compon .
[ 54 ] present matur version mention med- ical applic , [ 53 ] describ prototyp implement main larg scale demonstr system fp6 european project aspic2 .
subsequ work focus generalis proclaim applic domain medic .
key generalis [ 56 ]  scenario-specif scheme critic question , sketch [ 51 ] , use applic proclaim environment domain [ 52 ] .
follow subsect introduc theoret context work .
1.1 introduc basic concept argument , particular focus 2http : //www.argumentation.org/carrel.htm 3 use argument scheme critic question mean defin argument-bas interact among agent .
1.2 briefli describ walton krabb  influenti characteris differ type dialogu , focus deliber dialogu collabor natur .
1.3 introduc notion dialogu game , use defin agent  interact dialogu .
conclud introductori section present paper  organis .
1.1 argument argument scheme recent year wit grow interest use argument techniqu defeas ( non-monoton ) reason conflict resolut autom system [ 44 , 8 , 43 ] .
requir mode reason aris inform incomplet uncertain , differ agent perspec- tive yield choic may ration accept one agent anoth .
situat argument techniqu defin construct argument ( support reason ) possibl conflict conclus .
argu- ment construct basi under knowledg base theori .
, base conflict base relat construct argument ,  win   justifi  evalu , claim latter identifi infer under theori .
model process argument autom reason system , requir method enabl reason agent generat argument propos believ , method enabl reason agent assess relat worth argument pertin particular debat , i.e. , argument convinc .
set main mechan use purpos : argument scheme argument framework .
argument scheme introduc inform logic literatur method argument represent .
particular , associ scheme critic question ( cq ) enabl systemat identif at- tack argument instanti scheme , pioneer walton [ 60 ] .
argument scheme repres stereotyp pattern reason wherebi scheme con- tain premis presumpt licenc conclus .
presumpt need stand context argument deploy , chal- leng pose appropri critic question associ scheme .
order presumpt stand , satisfactori answer must given question pose given situat .
argument scheme cq appli wide varieti work ai .
particular relev work paper , use argument scheme cq definit persuas dialogu game reason action propos [ 4 ] .
comput account scheme cq approach argument action number advantag .
scheme cq effect map relev space argument , sens argument identifi valid attack argument amongst logic possibl .
also provid natur 4 basi structur argument base dialogu protocol .
later work use start point defin proclaim  protocol-bas exchang argument .
discuss 5 present structur set scheme cq tailor deliber safeti critic action .
whilst argument scheme provid us mean generat argument question , also need mechan enabl us automati- calli evalu argument challeng generat order determin one accept .
make use dung  abstract argumenta- tion theori [ 16 ] .
theori proven influenti approach conflict resolut non-monoton reason past decad .
under idea one given direct graph a call abstract argument framework ( af ) - consist abstract argument ( i.e. , commit made intern structur ) relat binari attack defeat relat .
justifi status argument evalu base interact .
evalu turn base notion argument accept respect set argument attack member set , attack attack member set .
numer subsequ work ( [ 2 ] , [ 7 ] , [ 34 ] ) extend basic framework attack argument argument b disregard b reason stronger prefer .
, justifi argument evalu base success attack ( usual refer defeat ) .
allow us exampl resolv local disput mutual ( symmetr ) attack argument , attack b b attack , relat prefer argument determin one asymmetr defeat .
recal follow basic concept introduc dung [ 16 ] : argument framework ( af ) pair af = < ar , attack > , ar set argument attack  ar  ar attack relationship af .
pair < x , > refer  x attack ( attack )   attack x  .
r , , subset ar , say :   attack r r  r < r , >  .
 x  ar accept respect everi  ar attack x , z  attack ( i.e .
z , henc , defend x ) .
 conflict free argument attack argument s.  conflict free set admiss everi argument accept respect s.  complet extens subset ar , admiss , argument defend s. 5  ground extens least ( respect set inclus ) complet extension.3 state , framework depict argument graph .
section 2 demonstr , particular applic , interact argument defin tree , use tree evalu argument attack generat system , thus ultim decid whether action perform .
hereon , say argument justifi assum ground semant .
one advantag ground semant comput extens linear problem extens alway exist , though may empti .
reason ground semant argu skeptic .
skeptic may yield well reason safety-crit action may restrict applic [ 17 ] .
let us suppos < ar , attack > argument framework g ground extens .
, x  ar :  x said justifi x  g.  x defeat exist argument  g ( , x )  attack .
 otherwis , x said defens .
, argument propos safeti critic action evalu justifi , action recommend safe .
evalu defeat , ac- tion deem unsaf .
otherwis , conclus recommend given .
howev , discuss 7 , proclaim propos solut highlight relev issu must resolv take final decis .
approach argument model describ form basi element system use generat evalu argument .
howev , also need specifi model use within context dialogu , discuss next .
1.2 deliber dialogu defin walton krabb influenti classif human dialogu [ 61 ] , deliber dialogu involv particip decid action cours action undertaken given situat .
typic par- ticip dialogu believ share respons decid , provid collabor context dialogu .
wal- ton krabb classif base prior knowledg goal individu particip , includ five major type dialogu .
thus , information-seek dialogu question seek discov answer factual question anoth particip , believ ques- tioner know answer question .
inquiri dialogu particip 3we refer reader [ 16 ] definit extens defin stabl prefer semant 6 joint seek answer factual question whose answer may known beforehand , may requir share partial knowledg particip .
persuas dialogu , particip , typic call propon , seek persuad fellow particip ( ) endors proposit .
particip negoti dialogu seek agre divis scarc resourc ( may particip  time ) potenti conflict claim .
particip seek maximis share resourc , dialogu requir form bargain compromis order reach agreement .
final , erist dialogu , particip seek vent perceiv grievanc one anoth , dialogu may act substitut physic fight .
negoti deliber dialogu in- volv discuss action , information-seek inquiri dialogu involv discuss belief .
persuas dialogu may concern either belief action .
addit focus action , deliber dialogu normal share characterist featur .
first absenc fix posit particip start dialogu .
unlik persuas dialogu , exampl , particip deliber dialogu ( least , initi ) , seek persuad anoth particip endors statement propos action .
inde , focus , govern question , may chang cours deliber dialogu , particip explor space possibl action examin featur consequ action .
cours deliber dialogu , cours , particip may engag persuas dialogu ( inde one walton krabb type ) , may moti- vate model persuas dialogu embed insid deliber dialogu .
second import featur deliber dialogu mutual focus , distinguish dialogu , say , negoti dialogu .
par- ticip deliber dialogu necessarili seek agre cours action accommod reconcil various differ interest .
may particip fact aim , may even succeed , aspect essenti featur delib- erat dialogu .
although deliber dialogu , particip exchang propos express posit done , share goal joint reach agreement best sensibl action decid ( circumst , time , design actor , constraint ) , rather defend particular posit .
fuller discuss characterist featur deliber dialogu , see [ 31 ] .
1.3 dialogu game dialogu game interact two particip  move  utter locut , accord certain rule .
first studi aristotl [ 3 ] argument theorist logician post-war period ( eg , [ 23 , 28 ] ) .
last decad appli various ar- ea comput scienc artifici intellig , particular rule-govern interact softwar agent ; recent review applic , 7 see [ 33 ] .
dialogu game may specifi list legal locut , to- gether rule govern utter locut , open termin dialogu , rule manipul dialog commit incur particip dialogu [ 32 ] .
work inform dialogue-gam framework ideal deliber- ation dialogu propos mcburney , hitchcock parson [ 31 ] .
framework , deliber dialogu may proceed eight success stage : open , inform , propos , consid , revis , recommend , confirm close stage .
goal particip dialogu chang accord stage dialogu .
reason stage mark explicit , better enabl particip know expect stage .
framework , constraint order stage , stage may repeat , iter fashion , dialogu complet .
approach taken start point defin proclaim  dialogu game introduc 4 .
1.4 document organis follow section introduc proclaim model .
3 intro- duce one case studi  human organ transplant  use throughout paper illustr agent  interact ; particular exchang argument .
4 present model  deliber dialogu game defin context agent  overal interact .
sec- tion 5 focus argument , first defin intern structur proclaim  argument 5.1 , 5.2 introduc model  protocol- base exchang argument base scheme cqs tailor deliber safeti critic action .
6 illustr scheme specialis particular applic specialis scheme cq use guid agent deliber facilit interac- tion human artifici agent .
7 briefli discuss model  argument evalu .
8 discuss defin argument scheme cqs facilit reus previous deliber evalu argument evidenti basi .
final , conclud 9 .
2 proclaim model proclaim model intend provid set heterogen agent effici effect deliber whether safety-crit action safe performed.proclaim regard defin centralis medium heterogen agent direct deliber safeti propos action .
medium tailor deliber purpos intend focus discuss relev matter , keep track particip  submit argument evalu propos solut address problem .
centralis medium em- bodi mediat agent ( ) whose role ensur success 8 deliber process , enabl  access number knowledg resourc , introduc .
set proclaim provid particip agent effici delib- erat best describ defin mediat agent  task :  direct particip argument-bas move ( argument scheme critic question ) submit point deliber .
thus , argument particip want repli , given set scheme instanti submit valid attack , far instanti appropri .
particip may also challeng submit argument , turn , particip may answer challeng instanti appropri argument scheme .
 valid incom argument order exclud argument may jeopardis disrupt cours deliber .
agent given scheme instanti , guarante instanti- ation relev discuss .
thus , one  task discern relev non-relev instanti , keep deliber high focus import matter .
valid argument challeng ad tree interact argument whose root argument propos initi action .
 submit addit argument introduc new factor taken account particip either guidelin and/or evi- denc associ previous similar case indic relev .
thus , exampl ,  taken fact , guidelin indic  contraind perform propos action , , reason particip highlight , submit argument action propos indic contraind  perform .
argument ad tree interact ar- gument .
 evalu tree interact argument propos solu- tion whether propos action safe .
solut propos mean assign prefer conflict ( mutual attack- ing ) argument evalu justifi argument defin dung  theori .
order perform introduc task , refer four knowledg resourc , shown diagrammat figur 1 also describ : argument scheme repositori ( asr ) : order direct particip agent submiss exchang argument , refer repositori argument scheme associ critic question .
scheme critic question instanti agent construct 9 argument , effect encod full  space argument  , i.e. , possibl line reason pursu w.r.t given issu .
repositori structur way defin protocol- base exchang argument .
thus , given argument ( instanti scheme asr ) repositori return scheme agent instanti repli former argument ( well critic question use challeng ) .
figur 1 : proclaim  architectur .
domain consent knowledg ( dck ) : compon enabl check whether argument compli establish knowledg , check- ing valid instanti scheme asr ( asr thus regard abstract dck ) .
particular import safeti critic domain 1 ) one extra obli- gation ensur spurious instanti argument scheme bear outcom deliber ; 2 ) guidelin usual exist domain taken account evaluat- ing submit argument .
also refer dck order check whether known factor address partic- ipant ( expert ) spite deem relev view point guidelin .
case , use dck order submit addit argument , account neglect , relev , fac- tor .
last sens , regard particip expert guidelin .
case-bas reason compon ( cbrc ) : compon enabl assign prefer relat mutual attack argument ( i.e .
resolv conflict amongst pair argument ) basi associ evid gather past deliber .
cbrc also pro- vide addit argument deem relev previous similar 10 situat applic current target problem .
, last sens , play role expert , specialist collect evid previous deliber .
argument endors manag ( aem ) : depend endors argument , strength argument may readjust .
thus , compon manag knowledg relat , exampl , agent  role and/or reput .
broad speak , deliber proclaim begin one agents4 submit argument propos action ( e.g .
transplant avail organ particular recipi ) .
guid particip agent submiss argument attack defend justif given propos action .
submit argument ( challeng ) instanti scheme ( critic question ) asr .
henc refer asr order indic scheme critic question particip instanti repli submit argument challeng .
justifi argument defens argumentdef argument ) b ) c ) b argument attack argument b a3 prefer a2 a5 prefer a4 a3 prefer a2 a4 prefer a5 a1 x a2 problem p1 a4 problem p2 a5 solut s2 problem p2 a3 solut s1 problem p1 a1 x a2 problem p1 a4 problem p2 a5 solut s2 problem p2 a3 solut s1 problem p1 a1 x a2 problem p1 a4 problem p2 a5 solut s2 problem p2 a3 solut s1 problem p1 figur 2 : resolv tree interact argument order decid whether perform x .
figur ) solut propos sinc still un- decid whether respect solut address respect problem , indic symmetr attack a2 a3 , a4 a5 .
figur b ) c ) solut , respect , perform action x , depend argument  prefer assign .
submit argument , legal ( instanti appropri scheme ) , eval- uat order determin whether instanti scheme valid one .
done referenc dck , cbrc aem .
argument compliant guidelin , i.e .
valid dck , argument accept ad tree interact argument 4this agent may well action default one .
11 denot t. incom argument valid dck may still accept either cbrc indic argument previous accept aem indic submitt suffici reliabl exception accept argument .
either case argument ad tree argument broadcast new argument particip togeth scheme instanti repli .
argument accept knowledg resourc , inform sub- mitter reason reject .
approach consid relev argument term impact , potenti impact , dialect status accept alreadi pose argument [ 40 , 39 , 30 ] .
broad speak , argument submit littl effect accept status exist argument , may deem irrelev may submitted5 .
approach relev argument could use proclaim exampl stop deliber clear enough argument deem propos action unsaf .
agent  interact describ 4 term set stage in- teract layer .
instanc , exchang argument defin within argument layer deliber stage .
depict figur 1 , be- side exchang argument , within deliber stage defin interact layer , context layer particip submit fact complementari action believ potenti relev deliber .
endors layer , particip indic argument endors .
particip argument exchang , submit fact deem relev inform argument endors , deliber move resolut stage evalu- ate .
depict figur 2a ) may contain argument mutual attack prevent definit solut .
thus , evalu assign prefer relat mutual attack argument , chang symmetr attack asymmetr one .
done , ap- pli dung  evalu justifi argument propos solut ( figur 2 ) .
order assign prefer mutual attack argument refer dck , cbrc aem .
resourc deriv prefer assign .
may agreement ( e.g .
a3 prefer a2 ) , i.e .
prefer one argument anoth knowledg resourc prefer argument .
 task , provid solut account knowledg resourc  prefer assign .
solut resourc agre could type : -while guidelin indic s2 solut problem p2 , trustworthi expert argu s2 solut p2 posit weak back evid .
basi inform , person respons final decis decid whether perform action x .
mani work address cooper environ ( e.g .
product lo- 5also interest work present [ 14 ] , prune argument account made order comput dialect tree effici .
12 gistic [ 18 , 49 ] ) featur agent , set agent , dedic coordin task perform differ work compon agent .
argumen- tation , role mediat agent usual associ negoti dialogu [ 13 , 50 , 38 ] , main object mediat agent help reconcil compet agent  posit , mediat agent usual reli mental model particip .
relev concep- tual framework negoti dialogu sana [ 38 ] , propos number call artifact , social dialogu artifact , act media- tor regul agent dialogu interact social argument artifact regard sophist commit store , agent  submit argument , well argument may public avail , organis social accept status evalu follow differ algorithm .
similar approach , sana framework defin , part social dialogu artifact , argument store ( ) store collect social accept argument .
main differ , central part proclaim definit structur relat scheme asr tailor specif purpos deliber- ate safeti critic action , sana  present placehold argument scheme , , develop given littl guidanc argument scheme encod .
broader view , sana ap- proach similar propos fp6-european project aspic , set generic compon develop : ( infer engin , dialogu man- ager , learn compon , decision-mak compon ) plug agent order add argument capabl .
approach undertaken [ 53 ] implement proclaim transplant scenario .
due critic natur intend scenario , proclaim assum rather regul environ .
particular , proclaim address normat aspect would natur associ safeti critic environ .
also assum issu inform privaci , foreign attack malici agent also resolv .
good exampl context proclaim use transplant scenario introduc , model use extend exist agent-bas organis [ 58 ] agent deliber viabil avail human organ .
3 transplant scenario shortag human organ transplant serious problem , ex- acerb fact current organ select process discard signific number organ deem non-viabl ( suitabl ) transplant .
or- gan viabil assess illustr ubiqu disagr conflict opinion medic domain .
may suffici reason discard- ing organ qualifi profession may other .
differ polici differ hospit region exist , consensus among medi- cal profession alway feasibl .
henc , contradictori conclus may deriv set fact .
exampl , consid donor 13 smoke histori chronic obstruct pulmonari diseas ( copd ) .
medic guidelin indic donor  smoke histori suffici reason deem donor  lung non-viabl .
howev , qualifi physi- cian reason donor  lung viabl given histori copd [ 27 ] .
similar , guidelin suggest discard kidney donor whose caus death streptococcus viridan endocard ( sve ) .
howev , administr penicillin recipi mean kidney safe transplant .
current , decis offer discard organ avail transplan- tation , base sole assess doctor donor site ( donor agent , da ) .
organ select process account fact : 1 ) medic doctor may disagre whether organ viabl non-viabl ; 2 ) differ polici differ hospit region exist , ; 3 ) viabil intrins properti donor  organ , rather , integr concept involv donor recipi characterist well cours action undertaken transplant process [ 27 ] .
particular , cur- rent organ select process allow da discard organ doctor recipi site ( recipi agent , ra ) may claim viabl , given chanc , could provid strong argument support claim .
[ 54 ] novel organ select process propos proclaim use coordin joint deliber donor recipi agent order prevent discard organ due applic inappropri organ accept criteria , help reduc dispar demand suppli organ .
propos frame within agent- base organis call carrel [ 58 ] , intend effici manag data process carri recipi select , organ tissu alloc , ensur adher legisl , follow approv protocol prepar deliveri plan .
proclaim model thus use extend carrel da ra effect deliber viabil avail organ .
short , proclaim instanti follow : particip agent da ra , guidelin knowledg encod donor organ accept criteria consent transplant organis , i.e .
criteria medic doctor refer decid organ  viability.6 aem relat agent  reput .
name , may deem stronger argument endors agent good reput ( e.g .
ra repres prestigi transplant unit ) .
final , cbrc allow evalu submit argument basi past record transplant case .
[ 53 ] prototyp model present [ 57 ] focus cbrc compon .
two work assum first attempt formalis asr [ 56 ] argument scheme formalis construct somewhat ad-hoc fashion , hinder applic proclaim new 6transplant organis period publish consent organ accept criteria .
howev , criteria rapid evolv research  effort extend reduc organ discard .
henc , advanc transplant unit deviat consent criteria .
14 scenario ( environment scenario present [ 52 ] ) .
reason , [ 51 ] propos domain independ approach definit argument scheme ( 5 ) describ much detail correct extens .
furthermor , prototyp present [ 53 ] implement interact protocol persuas dialogu [ 41 ] , , discuss 1.2 , alway appropri collabor decis make .
follow section present proclaim  deliber dialogu .
4 proclaim  deliber dialogu section describ interact protocol govern proclaim  dialogu .
exchang locut distinguish three interact level : 1 ) deepest level content messag , e.g .
submit argument .
2 ) messag wrap appropri deliber locut defin dialogu game ( e.g .
argument wrap argu locut ) ; 3 ) turn , deliber locut wrap either inform request locut .
particip agent ( pas ) alway interact , never pas .
submit request , exampl , enter dialogu , submit new argument add new inform .
decid whether accept reject request .
thus , act proxi pas ( see figur 3a . )
follow subsect describ inform-request interact call proxi dialogu game .
4.2 , introduc proclaim  de- liber dialogu game defin locut submit stage layer deliber .
provid descript dialogu game quiet detail , facilit implement , intend futur work defin dialogu game  axiomat semant defin pre post condit dialogu move .
4.1 proxi dialogu game agent particip deliber via , decid whether in- come messag accept reject .
messag obvious reject syntact ill-form , also content appropri .
exam- ple , submit argument may reject deem non relev deliber .
reason , particip messag wrap request locut repli inform locut , either inform reject ( reject ) act upon request .
ex- ampl , request enter dialogu , inform particip  accept , along extra inform requir appropri par- ticip .
may also send inform locut without prior request , e.g .
inform time-out constraint forc deliber conclud .
request ( pa id , , conv id , msg id , target id , r ) : pa id sender  id ( pa ) , receiv agent ( ) , conv id 15 convers id , msg id messag identifi , target id mes- sage locut direct ( messag direct specif messag , target id set -1 ) .
r variabl denot content communic request locut .
possibl valu r discuss follow subsect .
inform ( , pa , conv id , msg id , target id , ) : , locut may ad- dress singl receiv , case pa pa id , may broad- cast particip , case pa , subgroup pas , e.g .
sender request - { pa id } .
variabl denot content communic inform locut , may repli request pa  request .
follow subsect defin messag  content , i.e. , r .
inform argument ( ) context ( ) c f c endors ( ) e pa pa 1 pa n pa request reject broadcast valid deliberaion ) b ) noitulos timeout open figur 3 : ) illustr proxi dialogu game ; b ) depict proclaim  deliber dialogu game stage interact layer .
4.2 deliber dialogu game subsect introduc proclaim  deliber dialogu game .
, introduc legal locut , togeth rule govern use well commenc termin deliber dialogu .
illustr 3a deliber dialogu game subdivid three stage : open , deliber resolut .
deliber stage turn subdivid three layer : argument , context , endors layer .
move three layer may happen parallel move one layer may effect anoth layer .
depict 3b defin yet anoth interact layer , call inform layer pas request updat ongo deliber .
worth note distinct layer stage conceptu use metaphor better organis dialogu game , i.e .
pas need know distract order effect particip .
16 open deliber resolut enter_dialogu no_more_mov deliberation_moveani deliberation_mov time_out time_out time_out acceptal open_dialogu figur 4 : deliber dialogu , stage transit .
use deliber move indic dialogu move defin deliber stage ( e.g .
assert , argu , endors ... ) .
note move deliber stage res- olut stage pa must submit move move .
similar , conclud deliber pa must submit accept move , un- less time trigger .
pa submit deliber move , resolut stage , dialogu move back deliber stage .
4.2.1 open stage : first stage open propos made , particip introduc basic avail inform provid particip : open dialogu ( propos ) : propos argument propos main ac- tion ( e.g .
transplant avail organ ) .
propos also contain precondit action  perform ( e.g .
avail organ potenti recipi ) .
see 5 , propos instanti argument scheme .
propos made pa ( ) , messag wrap request locut would valid .
re- quest valid , submit open dialogu locut contact potenti particip order enter dialogu .
enter dialogu ( propos , role , basic info ) : agent will partic- ipat deliber propos enter role deliber- ation ( e.g .
donor recipi agent ) inform ( basic info ) deem potenti relev decis make ( e.g .
patient  clinic record ) .
messag wrap request locut .
enter dialogu accept , introduc fact , via basic info , store set fact , denot cf .7 similar , defin second set denot ca contain agent  propos action .
ini- tialli cf contain fact introduc enter dialogu locut precondit introduc argument propos main action .
7we assum fact introduc pas consist , discuss detail 9 .
17 deliber start ca contain initi propos action ( e.g .
transplant avail organ potenti recipi ) .
simplic , let us denot cf ca togeth cfa .
deliber cfa may updat , happen context layer ( 4.2.2 ) .
propos propos made open dialogu ( propos ) argument main action .
thus , first argument ad tree ar- gument t. submit argument argument layer ( 4.2.3 ) updat t. pa may request enter dialogu begin deliber , later , cfa may inform minim inform avail begin .
thus stage agent  request particip accept , repli broadcast follow messag .
enter dialogu ( propos , role , basic info , pas , cfa , , legal repli ) : inform particip agent enact role role enter deliber introduc inform basic info .
also inform , pas alreadi deliber pas , well updat valu cfa t. within messag attach legal repli ( legal repli ) argument t. set legal repli ( argument scheme critic question ) guid pa argument move submit repli t. ( discuss 6.2 ) .
thus , exampl , agent id ag id enact role role id wish enter deliber propos propos send request lo- cution : request ( ag id , , conv id,0 , -1 , enter dialogu ( propos , role id , basic info ) ) accept request broadcast ag id agent play role role id enter dialogu repli agent ag id request accept : inform ( , all- { ag id } , conv id,1 , -1 , enter dialogu ( propos , role id , basic info , pas , cfa , , legal repli ) ) inform ( , ag id , conv id,1,0 , enter dialogu ( propos , role id , basic info , pas , cfa , , legal repli ) ) request reject inform pa id ag id request reject .
inform ( , ag id , conv id , 1 , 0 , reject ( reason ) ) .
pa enter dialogu move deliber stage ant interact three layer : 18 4.2.2 context layer : agent enter dialogu inform fact deem potenti relev decis make , well propos complementari cours action may prevent undesir side effect may caus main action .
assert ( fact ) : pa assert fact fact case .
accept , fact ad cf .
propos ( action ) : pa propos perform action action .
accept , action ad ca .
retract ( fact ) : pa retract assert fact fact case .
accept , fact remov cf .
retract ( action ) : pa retract propos perform action action .
accept , action remov ca .
messag , sent pa , wrap request locut .
accept , broadcast particip .
particip may assert retract fact well propos retract ac- tion , time , long deliber open .
restrict fact action assert propos inconsistent8 .
henc , given consequ relat ` background theori  , cf ca must cf0  ca0  .
instanc , cf contain : ) donor cancer b ) donor malign tumour.9 .
word , state affair defin cfa , though may uncertain may evolv throughout deliber , inconsist .
current state develop , proclaim support conflict resolut among pas disagre describ context fact .
explor scenario ( transplant environment ) learn odd one pa disput anoth pa  state affair descript .
, pa provid inform privileg access .
henc , odd da disput inform potenti recipi given ra ; similar agent repres industri disput inform regard status wastewat treatment plant .
reason , order keep deliber focus , conflict regard whether fact x case either resolv outsid proclaim ( e.g .
facilit persuas dialogu via phone call ) take x uncertain .
nonetheless , see 5.2.3 , pas still challeng argument request evid support fact may highlight weak evid , may motiv retract disagre upon fact ( e.g .
retract 8where inconsist action mean action perform simultan ( e.g .
heat cool , stay go , etc ... ) .
9note howev cf may contain ) clinic record indic donor cancer b ) donor cancer 19 x , leav room submiss x ) .
futur work intend develop intuit , may lead extend proclaim support conflict resolut .
note fact action introduc layer deliber ( i.e .
cfa ) indic whether main propos ac- tion safe .
cfa context main action intend perform .
particip thus decid whether propos action safe given context , cfa may chang cours delib- erat .
decis make occur argument layer .
although clear , main propos action precondit action retract , deliber conclud .
4.2.3 argument layer : argument layer two locut : argu challeng .
pa use locut request submit argument challeng .
challeng made argument question valid argument .
perspect argument framework challeng repres regular argument attack argument challeng .
pa  request submit argument challeng accept , broadcast move particip use version argu challeng locut .
request reject ,  repli occur proxi layer .
let us mark locut made pas r request ,  broadcast messag inform : r : argu ( argument , target ) : argument argument submit pa repli ( attack ) argument challeng , whose id target .
argument accept broadcast partici- pant .
: argu ( id , argument , target , legal repli ) : argument argument submit repli ( attack ) argument challeng whose id target , accept broadcast particip , indic argument  id id .
within messag , attach legal repli ( legal repli ) argument .
set legal repli ( argument scheme critic question ) guid pa argument move submit point deliber ( discuss 6.2 ) .
argument also ad , attack argument challeng id target .
r : challeng ( challeng , target ) : challeng challeng made pa argument id target .
repli challeng particip submit argument meet challeng ( see 5.2.3 ) .
: challeng ( id , challeng , target , legal repli ) : challeng challeng made argument id target accept 20 broadcast particip , indic challeng  id id .
within messag , attach legal repli ( legal repli ) challeng .
challeng ad argument attack argument id target .
particip , includ , submit argument challeng time long deliber open target argument challeng t. howev , reject submit argument challeng relev move .
,  valid task introduc 2 perform proxi layer .
fact particip submit argument impli endors .
particip may attack submit argument move .
collabor set , oppos competit one .
particip introduc knowledg problem form argument .
thus , exampl , agent highlight contraind perform main action ( attack initi argument ) propos complementari action mitig undesir side effect thus reinstat main action propos .
spirit , challeng argument ad particip retract , i.e .
delet t. discuss 2 , argument ad deem argument relev deliber .
argument may cours defeat , remain tree argument .
4.2.4 endors layer : argument ad tree argument , particip decid argument endors .
endors affect  argument evalua- tion .
exampl , argument endors particip good reput deem stronger .
nonetheless , argument may still weak , instanc , strong empir evid .
locut endors layer : endors ( pa id , arg id ) : particip pa id endors argument chal- leng id arg id .
retract endors ( pa id , arg id ) : particip pa id retract en- dorsement argument challeng id arg id .
move submit time dialogu open argument challeng t. agent endors two conflict argument , later endors prevail earlier automat retract .
endors ( resp .
retract ) argument challeng made pa ( via request locut ) , add ( resp .
subtract ) endors ( repres predic endors ( pa id , arg id ) ) endors set , denot e. 21 4.2.5 resolut stage : particip construct context fact action cfa , tree argument , inform endors , proceed evalu t. deliber move resolut stage either particip inform move submit may chang either cfa , , e ; timeout trigger .
either case , propos solut deliber , base evalu t. timeout trigger , pas chanc revis propos solut .
7 briefli discuss natur argument evalu recommend solut mere yes/no answer .
move ( ) : particip inform move submit ( move may chang either cfa , , e ) , consist via request move .
particip submit move , proceed evalu t. move , howev , prevent particip submit move , overrid move move .
import allow new relev inform may avail time includ deliber .
move move overridden , deliber move deliber stage .
leav dialogu ( reason ) : particip request leav deliber- ation may provid reason reason .
move ac- cept pas inform particip left deliber .
cours , particip leav deliber deliber conclud propos solut ( via close deliber locut ) basi avail knowledg cfa , , e. time ( reason ) : inform timeout trigger .
general term mean much time spent de- liber new resolut polici appli .
instanc , picking-up telephon .
proceed timeout applic depend .
provision formalis trigger eval- uat avail knowledg ( cfa , , e ) propos solut disabl move particip .
may provid reason reason timeout .
solut ( solut , sol id ) : particip submit move ( overrid move ) propos solut solut whose id sol id .
propos solut may motiv particip submit move simpli accept solut .
particip submit move deliber stage , submit move locut propos new solut .
howev , timeout trigger , deliber 22 conclud given solut provid chanc particip submit moves10 .
accept ( sol id ) : solut id sol id given , agent accept , deliber conclud .
close deliber ( solut , sol id ) : deliber close propos solut solut .
locut submit either particip submit accept ( sol id ) move timeout trigger propos solut .
work assumpt cbrc ( case base reason compon ) time consum requir full argument evalu .
howev , manag develop cbrc whose perform adjust real-tim deliber , propos resolut alway visibl particip cycl solut ( solut , id sol ) , accept ( id sol ) necessari .
would enough submit move locut .
4.2.6 inform layer : throughout deliber dialogu , particip request updat argument tree , fact introduc , request legal repli given argument challeng t. thus , what- ever reason particip miss piec inform recov upon request .
r : get arg tree ( ) : pa request updat t. : arg tree ( ) : inform pa updat t. r : get context ( ) : pa request updat cfa .
: context ( cf , ca ) : inform pa updat cfa .
r : get endors ( ) : pa request updat e. : endors ( e ) : inform pa updat e. r : get legal repli ( arg id ) : pa request legal repli argument challeng id arg id .
: legal repli ( arg id , legal repli ) : inform pa legal repli argument challeng id arg id .
describ dialogu game rather liber .
pas submit almost locut time deliber .
curs restrict proxi level oblig repli 10in case , decis make process may inde continu , follow differ polici .
23 pa  request .
also , deliber dialogu open , pas request enter dialogu alreadi particip deliber either close left ( via leav dialogu locut ) .
long timeout trigger , pas submit move deliber stage turn restrict .
pas submit fact ( resp .
complementari action ) time deliber , long fact ( resp .
action ) alreadi assert ( resp .
propos ) inconsist cf ( resp .
ca ) .
similar , pas retract fact action cfa .
pas submit argu challeng locut time deliber , long open timeout trigger .
target argument challeng must element , particular , attack argument oblig defend argument argument challeng .
stake right wrong , whether main action safe perform .
argument layer deliber kept high focus subject matter , definit argument challeng pas submit throughout deliber .
, set legal repli ( ar- gument scheme cqs ) made avail particip .
follow section describ detail argument layer .
5 proclaim argument layer one pillar proclaim definit deliber dialogu  argument layer , name , type argument particip ex- chang follow rule .
way keep deliber focus well reduc particip  overhead term argument construct , proclaim quit specif argu .
end , model defin protocol-bas exchang argument regard argument process elicit knowledg particip , oppos defin strateg dialogu better choic argument may better serv agent  individu goal .
argumentation-protocol defin term structur set ( circuit ) scheme associ cqs ( scheme associ set cqs defin term scheme associ cqs , ... ) .
proclaim defin application-independ protocol-bas exchang argument specialis argu safeti critic action .
, target applic ( e.g .
transplant environment scenario ) application-independ protocol specialis order construct scenario-specif asr11 .
discuss 6.1 .
section present application-independ circuit cqs .
start introduc follow subsect intern structur proclaim  argument 5.2 , present protocol-bas exchang argument .
11argument scheme repositori 24 5.1 structur argument action propos typic motiv goal agent wish realis .
mani formal account ( [ 48 , 19 , 60 , 59 ] ) action propos assum , though some- time implicit , follow three dimens : r : domain fact circumst action propos .
: domain action .
g : domain goal .
base domain follow argument construct  action propos circumst r ( set fact ) expect realis desir goal g  .
problem argument structur notion goal ambigu , potenti refer indiffer direct result action , consequ result reason consequ desir [ 4 ] .
account distinct , atkinson et al .
consid two addit domain : : domain fact arriv perform action .
v : domain valu valu repres social interest promot achiev goal .
order propos follow argument scheme action propos : atksch : circumst r perform action achiev new circumst realis goal g12 promot valu v argument scheme present along sixteen associ cqs classifi three categori : true ( e.g .
question descrip- tion current circumst ) , best ( e.g .
question whether consequ realis altern action ) represent inconsist ( e.g .
question whether desir featur realis ) .
[ 4 ] atksch along sixteen cqs use defin persuas dialogu game reason action propos .
atkinson  persuas dialogu primarili address resolv choic amongst compet action propos , choos action best , i.e .
action bring best situat ,  best  relat agent consider given subject value-bas judgement , well object one .
argu action propos , particip 12where goal particular subset action intend realis order promot desir valu .
25 may undermin action propos question whether action bring undesir effects13 .
one possibl persuas dialogu ; one also argu goal desir .
short , particip argu whatev reason decid general term .
general inde desir featur atkinson  persuas dialogu reason work taken start point definit proclaim  argument layer .
howev , precis open , inoper intend applic .
proclaim , desir undesir goal assum share particip .
furthermor , main propos action ( e.g .
trans- plant organ spill industri wastewat ) , default circumst , taken right thing , requir motiv propos .
moreov , decis proclaim taken respect singl social valu safeti ( patient  qualiti life , transplant scenario ) .
therefor , valu dimens ignored14 .
particular consequ defin con- text pa  individu goal valu , may affect argument submit endors , constitut reason propos action .
becom matter debat , whether cur- rent circumst propos action safe perform .
name , whether context fact cf , construct context layer , main action bring sever undesir side effect .
deliber thus regard argument process elicit particip ( expert ) relev fact ( f0 , .. , fn  cf ) assess action  safeti , account complementari cours action ( action ad ca ) .
formal definit relev set fact given later section ( definit 5.1 ) .
illustr relev fact medic scenario , let us suppos donor lung infect hepat c virus ( hcv ) .
, argu transplant unsaf ( argument a2 fig .
5 ) recipi transplant lung result hcv , sever infect .
thus , donor infect hcv relev fact , given , fact transplant caus undesir side effect .
suppos potenti recipi also hcv .
, claim , recipi , hcv undesir side effect lung transplant ( argument a3 fig .
5 ) .
therefor , potenti recipi  hcv relev fact .
fact hold action caus undesir side effect .
note howev , donor would hcv , whether recipi hcv , irrelev .
, relev context depend .
attack argument a3 assum context donor recipi hcv .
let us suppos 13we assum effect undesir must side effect action .
may actual state affair , perspect one particip , desir outcom action , particip .
14it may interest bring deliber cost valu .
propos action although deem safe , taken system afford expens incur action .
leav extens futur work .
26 contraind transplant , least priori , independ donor recipi  hcv .
exampl , avail lung big recipi  thorac caviti .
argument direct attack argument a1 , context , precis , local context , avail organ propos transplant given patient .
captur notion , explicit associ argument local context fact action .
... donor male donor hcv ... . recipi 45 year old recipi hcv ... . transplant donor hcv recipi hcv ... donor male donor hcv ... . recipi 45 year old recipi hcv ... . transplant donor hcv ar gu en ta tio n co nt ex a1 : a2 : a1 : a2 : a3 : figur 5 : argument submit fact highlight relev .
note exampl , deem relev recipi 45 year old donor male .
moreov , donor would hcv ( hepat c virus ) , recipi  hcv may highlight either .
denot local context action argument , local context fact c. upon submiss first argument , c empti .
updat subsequ submit argument contain propos action ( e.g .
transplant propos ) c minimum set fact propos action perform ( e.g .
avail organ potenti recipi ) .
general , submit argument updat c account particular case ( e.g .
donor  recipi  particular ) .
previous exampl saw argument a2 extend c includ donor  hcv .
argument a3 extend c ad recipi  hcv .
note fact alreadi ( global ) context cf ,  use argument highlight relev .
thus , set fact ( resp .
action ) ad c ( resp .
) must relev .
mean , within local context fact complementari action make main action safe unsaf .
continu identif element relat pro- claim  argument , let us recal proclaim argument express re- lation among four domain : current state ( r ) , action ( ) , arriv state ( ) goal ( g ) .
constrain g contain side effect action , g contain undesir goal side effect may realis .
let us also recal , intend effect main propos action assum desir , beyond question .
27 let us formalis domain term finit set ground predic written teletyp , e.g .
av org ( , )  r mean organ donor avail .
proclaim argument express relat element domain .
specif , follow element : c : local context fact assum case , c  r. : local context propos action ,  a. r : set fact , r  r. one set fact write r1 , r2 , ... denot rp set fact introduc precondit perform propos action .
: set action ,  .
write denot main set action ac complementari cours action argu prevent achiev undesir side effect .
one set complementari action write ac1 , ac2 , ... : set side effect caus propos action ,  s. one set side effect write s1 , s2 , ... g : undesir goal realis , g  g. one goal write g1 , g2 , ...
differ argument scheme defin proclaim correspond differ relat amongst element , relat express term special predic , defeas consequ relat | con- clusion follow defeas non-monoton set premis .
thus assum :  defeas consequ relat | ;  background theori  ;  special predic side effect subset side effect ( ) ,  , denot side effect given background context fact c action .
 special predic intended15 subset intend ( ac ) , ac  , denot set action ac intend .
given set fact action , assum conjunct case , respec- tive propos .
, b two set either fact action , say element b hold , respect intend , write b .
15in deliber present work distinguish intend propos perform action .
discuss 5.2.5 .
28 thus , exampl , write : rcintend ( ) | side effect ( ) .
mean r c case , propos action result set side effect s. rational caus background theori  .
agent knowledg resourc defin version  , may contain differ rule reason techniqu .
exampl , basic artifici agent may contain fix tabl precodifi 4-tupl relat four dimens r    g. slight sophist artifici agent defin intern structur four dimens number transit rule .
human agent , hand , use reason ( version  | ; ) reason exchang argument .
howev , heterogen agent agre syntax semant exchang proclaim argument .
typic background theori written subscript conse- quenc relat : | .
emphasis c assum case , i.e .
contextu inform , also written sub- script consequ relat : |ca .
notat effect consequ relat , allow us singl particular element relat : e.g .
highlight set fact r consequ relat r|ca side effect ( ) .
also take liberti omit intend predic wrap action .
element relat relev set fact action ( w.r.t .
realis undesir goal ) defin follow : definit 5.1 within context fact c propos action set fact r  r said relev one follow two situat hold :  circumst c , r hold action caus undesir side effect .
otherwis , r hold , undesir side effect longer expect caus ( circumst c ) :  r|ca side effect ( ) ;  side effect ( ) |rc g  |ca side effect ( ) .
 circumst c action caus undesir side effect .
r hold , either side effect expect caus , side effect deem undesir ( i.e .
degre side effect realis undesir goal weak ) :  |ca side effect ( )  side effect ( ) |c g either : 29  r|ca side effect ( ) ;  r  side effect ( ) |ca g note said undesir side effect expect strict local context defin c .
undesir side effect may well occur reason , e.g. , due fact c cf .
definit relev complementari cours action follow : definit 5.2 within context fact c propos action set action ac  said relev precondit rp perform hold ( rp cf ) ac either prevent undesir side effect caus one .
:  |ca side effect ( )  side effect ( ) |c g  rp  intend ( ac ) |ca side effect ( ) ;  rp  intend ( ac ) |ca side effect ( )  side effect ( ) |c g  |ca side effect ( ) .
follow use introduc concept defin argument scheme associ critic question use argument layer .
use scheme critic question particip submit argument , highlight argument relev fact complementari cours action .
relev factor ( fact action ) one ad argument  local context .
pas submit argument , relev fact action introduc , tree argument evalu resolv whether main action safe perform .
5.2 protocol-bas exchang argument section introduc argument scheme associ critic question tailor deliber safeti critic action .
argument scheme encod particular relat among element r , , g. argument instanti scheme repres instanc re- lation , associ cqs question .
thus , exchang argument , particip build subspac r    g tailor particular problem hand .
henc , deliber process regard mechan explor relev fact r , account comple- mentari cours action , guid ( undesir ) side effect 30 highlight g .
relev element r impact g .
scheme critic question introduc modular fashion .
start introduc set assumpt help construct basic circuit six scheme associ cqs :  assum 1 : r , , g intern structur ( e.g .
taxonomi ) .
assum 1a , assum 1b , assum 1c assum 1d respect .
 assum 2 : introduc fact r cf .
argument must use fact context fact cf .
 assum 3 : ) propos action ca , b ) perform ( rp  cf ) , c ) conflict propos action ( i.e .
two action joint perform caus undesir side effect ) .
 assum 4 : g  g main action realis g action deem unsaf .
relax assumpt extend circuit cqs .
5.2.2 enrich r taxonomi introduc specif relat .
5.2.3 add defeas entail r allow uncertainti .
5.2.4 permit use fact cf , order account incom- plete inform .
final , 5.2.5 discuss extens formalis .
5.2.1 basic argument scheme subsect present basic protocol-bas exchang argument consist six argument scheme associ critic question player particip deliber , introduc new relev fact complementari cours action .
scheme present four part composit : set precondit , scheme  bodi , associ critic question scheme  context up- date rule argument  local context ( c ) updat .
bodi scheme present three complementari representa- tion : narrat version written natur languag ; formal version ; deliber  dialogu locut , i.e .
content argu challeng locut introduc 4.2 .
let us start introduc first argument scheme , as1 , set deliber  topic .
fact , scheme instanti- ate deliber  open stage ( 4.2 ) propos .
first argument root t. let us introduc notat , scheme as1 propos main ac- tion assumpt caus undesir side effect :  undsideeffect ( ) ,  denot weak negat .
subsequ argu- ment attack assumpt highlight undesir goal defend assumpt argu realis highlight undesir 31 goal .
as1 precondit : rp  cf ,  ca , c = { } = { } bodi : circumst rp propos cours action safe perform .
rp  undsideeffect ( ) |propos ( ) argu ( c , , propos ( rp , ) ) ; critic question : cq1 : circumst undesir side effect achiev ?
context updat rule : c : = rp ; : = .
illustr use scheme , let us introduc exampl transplant scenario , develop throughout paper .
let us sup- pose lung donor avail ( av org ( , lung ) ) potenti recipi r ( p recip ( r , lung ) ) .
intent transplant lung recip- ient ( transp ( r , lung ) ) .
henc , av org ( , lung ) , p recip ( r , lung )  cf transp ( r , lung )  ca .
therefor initi argument , say , submit instanti as1 follow : : argu ( { } , { } , propos ( { av org ( , lung ) , p recip ( r , lung ) } , { transp ( r , lung ) } ) ) 16 argument instanti as1 propos main action make as- sumption undesir goal realis .
attack argument involv argu assumpt fals , undesir goal realis .
typic , critic question associ scheme enabl agent attack valid various element scheme connect .
also , may altern possibl action side effect propos action [ 4 ] .
particular case argument instanti as1 question whether fact , set fact r , current circumst ( r  cf ) make propos action unsaf .
henc , question assumpt contraind perform propos action .
, critic question cq1 , denot as1 cq1 , use .
16it worth note artifici agent may repres intern argu- ment mani form , instanc standard support-claim argument struc- ture like < { av org ( , lung )  p recip ( r , lung )   undsideeffect ( transp ( r , lung ) )  propos ( transp ( r , lung ) ) , av org ( , lung ) , p recip ( r , lung ) } , propos ( transp ( r , lung ) ) > 32 answer   question , implicit encod assumpt initi argument , would impli littl progress deliber .
answer  yes  question constitut attack argument .
thus , deliber- ation effect progress , as1 cq1 address introduc contraind , i.e .
set fact r result action caus undesir side effect .
use as1 cq1 effect argument instan- tiat scheme as2 , attack argument instanti as1 .
final , illustr scheme  context updat rule , note repli argument assum contextu inform avail lung donor , potenti recipi r organ trans- plant intend .
, c = { av org ( , lung ) , p recip ( r , lung ) } = { transp ( r , lung ) } .
needless say , assert fact action retract context layer , deliber conclud .
as2 precondit : r  cf ,  , 6=  , g  g , c context fact action target argument .
bodi : circumst c r hold , action caus side effect realis undesir goal g.  r |ca side effect ( ) ;  side effect ( ) |cr g ; argu ( c , , contra ( r , , g ) ) ; critic question : cq1 : circumst state side effect occur ?
cq2 : circumst side effect realis state goal ?
cq3 : complementari cours action prevent achiev state effect ?
context updat rule : c : = c r ; : = .
argument instanti as2 identifi contraind r perform propos action , circumst c. continu exampl , let us suppos donor offer lung smoke histori ( p ( , h ) : donor properti h ) .
let us suppos , well , donor agent , da , offer lung transplan- tation , believ h contraind lung may reject 33 recipi , thus realis undesir goal grft fail ( r ) .
henc , da believ as1 cq1 case , may want attack argument .
done submit argument b1 ( see fig .
6 ) , instanti as2 follow : b1 : argu ( c , , contra ( { p ( , h ) } , { reject ( r , lung ) } , grft fail ( r ) ) ) ; let us identifi as2  critic question .
, line attack pursu order , exampl , attack argument b1 .
pur- pose , let us highlight assert argument instanti as2 , take account c updat ( e.g .
argument b1 , c = { av org ( , lung ) , p recip ( r , lung ) , p ( , h ) } ) remain proclaim argument assert relat among set r , , g : 1 .
c  | side effect ( ) ; 2. side effect ( ) c | g ; first , whether two relat hold evalu first proxi level ( 4.1 ) valid incom argument latter resolu- tion stage ( 4.2 ) relat strength accept argument assign .
second , assumpt present begin subsect , local context c cf ca ( assum 2 assum 3a resp ) thus taken case ( e.g .
argument b1 p ( , h ) hold ) .
assum 4 g hold consequ ac- tion deem unsaf .
done attack argument instanti scheme as2 updat either c either two relat hold ( | side effect ( ) | g ) .
sinc fact c action cf ca respect , cf ca allow inconsist , updat local context truth preserv .
retract negat element cf ca done context layer effect move discuss 5.2.4 .
sinc neither r intern structur ( discuss relax assim 1 5.2.2 ) , truth preserv updat c done ad new set ( relev ) fact r c complementari cours action ac a. there- fore , question argument instanti scheme as2 whether exist set r cf new context c  r side effect longer expect ( as2 cq1 ) ; undesir goal g would realis ( as2 cq2 ) 17 .
note appear first assert .
thus , chang (  ac ) propos order argu complementari cours action ac prevent side effect ( as2 cq3 ) .
three critic question practic use appropri rele- vant r ac provid .
critic question as2 cq1 , as2 cq2 as2 cq3 therefor address attack argument respect instan- 17that , given new context c r degre realis g weak .
34 tiat scheme as3 , as4 as5 , introduc relev rs ac .
as3 precondit : r  cf , side effect target argument c updat context fact action target argument .
bodi : circumst c r hold , side effect expect caus a. r|ca side effect ( ) argu ( c , , side effect ( r , ) ) ; critic question : cq1 : circumst undesir side effect occur ?
context updat rule : c : = c r ; : = a. as4 precondit : r  cf , g target argument repli c updat context fact action target argument .
bodi : circumst c assum perform r hold , realis g side effect ( ) r|cg argu ( c , , realis goal ( r , , g ) ) ; critic question : cq1 : circumst side effect realis undesir goal ?
context updat rule : c : = c r ; : = .
35 as5 precondit : ac  ca , rp  cf precondit perform ac , target argument ; c updat context fact action repli argument .
bodi : circumst c rp complementari cours action ac prevent action caus side effect s. ac rp|ca side effect ( ) argu ( c , , prevent action ( ac , rp , ) ) ; critic question : cq1 : circumst undesir side effect achiev ?
context updat rule : c : = c rp ; : = ac .
figur 6 illustr use three argument scheme .
argument b2 , instanti as3 , attack b1 , indic donor chronic obstruct pulmonari diseas ( r = { p ( , copd ) } ) donor  smoke histori longer contraind .
argument c2 , instanti as4 , attack argument c1 , indic potenti recipi al- readi hiv ( p r p ( r , hiv ) ) , infect deem sever infect caus lung transplant18 .
final , argument d2 illustr instanti scheme as5 propos administr penicillin recip- ient ( treat ( r , penicillin ) ) lung donor whose caus death streptococcus viridan endocard ( p ( , sve ) ) prevent infect bacteria ( r p ( r , svi ) ) .
set precondit rp argument d2 empty.it assum scenario avail penicillin mean administr antibiot .
otherwis fact ad set precondit .
note attack made argument b1 , c1 d1 asymmet- ric ( one way attack ) , wherea attack b1 , c1 d1 made respect b2 , c2 d2 symmetr .
reason differ attack rela- tion former case , argument favour propos action alway base assumpt contraind exist ; assump- tion undermin attack argument .
( e.g. , d1 undermin  default assumpt contraind identifi contraind ( p ( , svi ) ) .
second case , complementari cours action propos 18given p r p ( r , hiv ) , degre side effect ( r p ( r , hiv ) ) realis sev inf ( r ) weak .
36 id type argument as1 argu ( { } , { } , propos ( { av_org ( , lung ) , p_recip ( r , lung ) } , { transp ( r , lung ) } ) ) b1 as2 ) b ) argu ( c , , contra ( { d_p ( , s_h ) } , { reject ( r , lung ) } , graft_failur ) ) b2 as3 argu ( c , , no_side_effect ( { d_p ( , copd ) } , { reject ( r , lung ) } ) ) c1 as2 argu ( c , , contra ( { d_p ( , hiv ) } , { r_p ( r , hiv ) } , sever_infect ) ) c2 as4 argu ( c , , not_realised_go ( { p_r_p ( r , hiv ) } , { r_p ( r , hiv ) } , sever_infect ) ) c3 as6 argu ( c , , contra ( { r_p ( r , superinf ) } , sever_infect ) ) d1 as2 argu ( c , , contra ( { d_p ( , sve ) } , { r_p ( r , svi ) } , sever_infect ) ) d2 as5 argu ( c , , preventive_act ( { treat ( r , penicillin ) } , { r_p ( r , svi ) } ) ) d3 as2 argu ( c , , contra ( { p_r_p ( r , pen_allergi ) } , { r_p ( r , anaphylaxi ) } , sever_infect ) ) b1 attack relat : c1 d1 c2 c3 b2 d2 d3 figur 6 : exampl three line argument structur reason : b argument address donor  smoke histori ( p ( , h ) ) , c ar- gument address donor  hiv ( p ( , hiv ) ) ; argument address fact donor  caus death streptococcus viridan en- docrditi ( p ( , sve ) ) may result recipi lung contract streptococcus viridan infect ( r p ( r , svi ) ) .
argument  c updat accord scheme  context updat rule .
prevent undesir side effect , whether prevent realis may still matter debat .
henc , d2 attack d1 propos treat ( r , penicillin ) prevent reject ( r , lung ) , efficaci preven- tativ measur may still debat ( implicit , d2 d1 disagre whether p ( , svi ) contraind ) .
disagr made explicit symmetr attack .
resolv whether transplant safe requir decis whether p ( , svi ) contraind , , whether d2 prefer d1 vice versa ( discuss 7 ) .
note howev , fourth argument d3 submit attack ar- gument d2 , indic instanc potenti recipi allerg penicillin , attack asymmetr direct assump- tion argument d2 contraind exist .
argument d2 defend ( i.e attack ) d3 would case symmetr attack .
let us return scheme as3 , as4 as5 order identifi cqs .
argument instanti scheme as3 as4 introduc new set relev fact r. argument instanti as5 introduc complementari cours action ac possibl empti set precondit rp .
stage r , rp ac taken case ( resp .
intend ) , assumpt assum 2 assum 3a .
argument instanti as2 , whether r ac rel- evant decid first proxi level ( e.g .
argument b2 accept , 37 figur 7 : argument scheme connect via associ critic question i.e. , { p ( , copd ) } |ca side effect ( { reject ( r , lung ) } ) make sens ) latter resolut stage ( e.g .
argument b2 defeat argu- ment b1 , i.e. , would { reject ( r , lung ) } prevent ) .
argument , say arg , instanti scheme as3 , as4 as5 , assum ( case first submit argument ) ( ) contraindica- tion exist perform main action .
assumpt question as3 cq1 , as4 cq1 as5 cq1 .
as1 , critic question address attack identifi contraind associ- ate undesir side effect .
attack thus embodi argument instanti scheme scheme as2 , analog attack first submit argument argument instanti as2 .
howev , time , way defend main action  safeti , arg introduc new set factor ( fact action ) may warrant , respect caus , undesir side effect .
, time , attack made via as3 cq1 , as4 cq1 as5 cq1 without introduc new set fact .
attack embodi argument scheme as6 differ as2 requir introduc addit set relev fact r : 38 as6 precondit :  , non-empti differ repli argument  state effect , g  g ; c updat context fact action repli argument .
bodi : circumst c action caus side effect realis undesir goal g.  |ca side effect ( ) ;  side effect ( ) |ca g ; argu ( c , , contra ( , g ) ) ; critic question : cq1 : circumst state side effect achiev ?
cq2 : circumst achiev side effect realis state goal ?
cq3 : complementari cours action prevent achiev state effect ?
context updat rule : c : = c ; : = .
continu medic exampl illustr use scheme as2 as6 order attack argument instanti scheme as3 , as4 as5 ( see fig .
6 ) .
suppos , instanc , recipi lung intend allerg penicillin .
thus , way prevent recipi  bacteri infect penicillin administ ( d2 ) , allerg reaction may quit sever , ( anaphylaxi ) .
argument action  safeti em- bodi d3 instanti scheme as2 .
illustr use scheme as6 , let us continu argument line , c1 c2 , argu lung may safe transplant despit donor hiv potenti recipi alreadi viral infect .
current believ case transplant caus superinfec- tion [ 63 ] , uncontrol , sever infect .
note new factor introduc order attack argument c2 .
thus , attack embodi argument c3 instanti as6 .
basic circuit scheme critic question , as6  critic question as2 .
figur 7 depict circuit argument scheme connect via asso- ciat critic question present section .
follow subsect 39 relax assumpt introduc subsect address requir extens basic circuit .
5.2.2 account specif let us suppos da offer transplant lung donor histori cancer ( p ( , h cancer ) ) .
da may argu histori recipi result side effect cancer .
depict figur 8 argument ( e1 ) instanti use scheme as2 .
let us sup- pose well da ad cf fact p ( , h nonmel skin c ) mean donor nonmelanoma skin cancer .
histori cancer general exclud criteria donor .
howev , kind past malign , nonmelanoma skin cancer , risk transmit- ting malign recipi believ margin [ 25 ] .
let us suppos ra believ case would wish argu particular type cancer transplant safe .
first sight may seem argument could construct instanti scheme as3 r = { p ( h nonmel skin c ) } new relev set fact .
updat local context fact : c = { av org ( , lung ) , p recip ( r , lung ) , p ( , h cancer ) , p ( , h nonmel skin c ) } although clear c hold ( c  cf ) , bit inform despit import captur as3 use .
, p ( , h cancer ) p ( , h nonmel skin c ) independ fact , latter subclass former .
furthermor , implicit assumpt donor histori nonmelanoma skin cancer type cancer .
order account need first relax assum 1a associ r relat specif  account fact , instanc , { p ( , h nonmel skin c ) }  { p ( , h cancer ) } .
defin taxonomi r circuit scheme cqs ex- tend .
cqs kind  current circumst ... ?
 ( i.e .
as2 cq1 , as2 cq2 , as3 cq1 , as4 cq1 , as5 cq1 , as6 cq1 as6 cq2 ) embodi attack scheme as2 , as3 as4 also specif version as2 , as3 as4 .
introduc scheme as3 , scheme as2 as4 defin analog : 40 as3 precondit : rg  c , rs cf , repli argument c context fact action repli argument .
bodi : rs , particular case rg , hold circumst ( c rg ) side effect expect caus .
 rs  rg  rs| ( crg ) a side effect ( ) argu ( c , , side effect ( replac ( rg , rs ) , ) ) ; critic question : as3 context updat rule : c : = ( c rg ) rs ; : = .
main chang new scheme way local context fact c updat .
instead introduc addit set fact r ( case as2 , as3 as4 ) subset rg  c replac specif set fact rs ( rs  rg ) .
way , made explicit rg hold , independ rs .
rather , rg case rs hold , sinc rs entail rg .
thus , exampl , p ( , h cancer ) would hold p ( , h nonmel skin c ) case .
figur 8 : exampl illustr use argument scheme as3 chal- leng .
41 continu exampl , argument e1 attack argument e2 instanti scheme as3 follow : e2 : argu ( { av org ( , lung ) , p recip ( r , lung ) , p ( , h cancer ) } , { transp ( r , lung ) } , side effect ( replac ( { p ( , h cancer ) } , { p ( , h nonmel skin c ) } ) , { r p ( r , cancer ) } ) ) ; updat local context fact : c = { av org ( , lung ) , p recip ( r , lung ) , p ( , h nonmel skin c ) } 5.2.3 account uncertainti argu 4.2 , proclaim support disput regard whether fact cf hold , still import decis make account evid support fact assert argumen- tation layer .
thus particip abl request provid evid .
exampl , ra may want know evid support fact donor hiv .
enabl assum 1a relax associ r defeas consequ relat |ev ev|evfact indic set fact ev  r evid support fact fact  r .
exampl { clin rec ( , hiv ) } |evd p ( , hiv ) indic donor  clinic record support fact donor hiv .
second , circuit scheme cqs extend argu- ment scheme introduc relev set fact r19 , assert fact ri  r , associ cq form  evid believ ri case ?
 .
, cq inde intend question ri particip provid evid support .
howev , intend partic- ipant argu ri fals , resolv outsid proclaim .
thus , cqs formalis challeng locut : challeng ( evid ( ri ) ) replay expect argument provid evid , set fact ( ev  cf ) , support ri ( ev|evri ) .
, challeng direct argument c1 challeng ( evid ( p ( , hiv ) ) ) may repli provid set fact { clin rec ( , hiv ) } .
purpos cqs allow bring evid introduc fact base .
inher uncertainti fact conform circumst decis make take place made explicit .
way , decis made account uncertainti , may , cours , motiv enquiri order make inform decis .
exampl , doctor may proceed perform serolog ( blood ) 19these scheme as2 , as2 , as3 , as3 , as4 as4 .
42 test donor order conclus evid whether donor actual hiv .
howev , result enquiri fed proclaim  deliber updat cf , actual enquiri formalis proclaim .
state cqs associ argument scheme de- fine introduct new set fact , i.e .
scheme as2 , as2 , as3 , as3 , as4 as4 .
present scheme as2ev instanti construct argument repli challeng made ar- gument instanti as2 as2 .
scheme ( as3ev link as3 as3 scheme as4ev link as4 as4 ) defin analog : as2ev precondit : ri question fact , rev  cf , g argument challeng , c updat context fact action .
bodi : rev evid ri case , circumst ( c  { ri } ) rev action caus side effect realis undesir goal g.  rev |ev ri  rev | ( c  { ri } ) a side effect ( ) ;  side effect ( ) |revci g argu ( c , , contra ( replac ev ( ri , rev ) , , g ) ) ; critic question : as2 as2 add cqs cq4i : evid believ ri case ?
( ri  r , r new introduc set fact ) context updat rule : c : = ( c  { ri } ) rev ; : = .
note argument instanti scheme as2ev provid evid ( rev ) support challeng fact , claim assert fact replac evid base undesir side effect caus ( see figur 8 . ) .
analog argument instanti scheme as3ev claim side effect expect ; argument instanti scheme as4ev claim side effect undesir updat circumst .
lack evid support challeng fact may motiv particip get evid within deliber ( e.g .
perform serolog test 43 donor : test ( , blood , hiv ) ) .
howev , may well case evid acquir , leav challeng weak repli , even unrepli .
may lead pas retract challeng fact subtract cf , bring us next extens circuit , account incomplet inform .
whether left uncertain unknown fact , decis maker still decid .
resolv prefer argument , safeti action amount decid whether uncertain and/or unknown fact case , resolut would plausibl aim assess likelihood fact case , account risk involv case .
proclaim aim identifi relev fact risk involv case , intend address resolut process weight likelihood versus risk .
discuss 7 .
5.2.4 account incomplet inform player may start deliber set fact believ case , cf , argument process realis potenti relev inform , say r , miss .
, r , r / cf .
still , even fact unknown , decis need made whether perform propos action .
decis maker made awar potenti relev inform miss .
account situat , argument circuit extend particip submit argument introduc set fact r relev , despit r *cf .20 , argu r relev , unknown whether hold .
way , particip make explicit data , presum relev , miss .
, submit hypothet argument .
argument form if r case , ...  .
hypothet argument formalis exact manner present , differ relax precondit fact use argument must cf .
, relax assumpt assum 2 .
general , updat argument layer made independ context layer , vice versa .
independ result definit three type argument : definit 5.3 suppos c updat local context fact argument arg , :  c cf , arg factual argument .
 r  c s.t .
r cf , arg overrul argument .
 otherwis , arg hypothet argument .
20assum , later see , r  c 0  44 illustr practic use hypothet argument , let us introduc new organ accept criterion [ 27 ] :  pancrea transplant , guidelin suggest donor age less 45 yr ; nonetheless , use pancrea good appear inspect retriev donor age 45-62 yr ; achiev graft surviv pancrea donor age 45 ys.  .
henc , donor elder ( 45 year , pancrea case ) pancrea transplant like reject , realis graft failur .
unless , pancrea good appear .
howev , order check pancrea  appear , organ must first retriev .
henc , transplant deem safe , least provision .
let us suppos pancrea 60 year old donor avail donor hcv .
suppos da offer pancrea ( argument , see figur 9 ) argu : 1 ) donor elder , recipi reject organ ( argument g1 , instanti scheme as2 ) , 2 ) donor  hcv contraind ( argument h1 , instanti as2 ) , unless recip- ient alreadi infect ( hypothet argument h2 , instanti as4 ) .
suppos , respons da  submit argument ra add cf fact p r p ( r , hcv ) ( recipi hcv ) make argument h2 factual .
also , let us suppos ra submit hypothet argument g2 instanti as3 follow : g2 = argu ( c , , side effect ( { p ( , pancrea , good app ) } , { reject ( r , pancrea ) } ) ) p ( , pancrea , good app ) indic donor  pancrea good appear .
argument g2 becom factual organ retriev .
take account , suppos argument g2 h2 deem prefer g1 h1 respect ( fig .
9 c. ) , pancrea deem suitabl recipi , subject organ  appear retriev .
, retriev p ( , pancrea , good app ) hold , organ transplant , otherwis transplant perform , argument g2 would becom overrul .
note , potenti recipi hcv ( p r p ( r , hcv ) cf ) , transplant deem unsaf , irrespect pancrea  appear- anc ( fig .
9 d. ) .
similar , h1 would submit hypothet ( unknown whether donor hcv ) h2 factual , be- come irrelev , decid action  safeti , whether donor hcv .
name , hypothet factual argument togeth indic unknown fact worth check see whether hold .
independ element cf c make argument potenti factual , overrul hypothet .
allow independ relax precondit addit set fact r must cf .
defin cf consist set fact ( cf0  ) precondit enforc argument  context , turn , consist .
preserv properti hypothet argu- ment , must ensur addit set fact r consist 45 figur 9 : exampl illustr use hypothet argument .
element argument  local context c. , scheme as2 , as2 , as2ev , as3 , as3 , as3ev , as4 , as4 , as4ev , add precondit : introduc set relev fact r must r  c 0  5.2.5 discuss extens number extens propos circuit scheme cqs .
extens involv 1 ) identifi motiv set exampl need address ; 2 ) relax appropri assumpt final ; 3 ) defin procedur scheme cqs captur right relat among set r , , g appropri updat set c .
procedur , argument scheme , must motiv chang assess main action  safeti ( within local context fact action ) .
subsect describ extens current formalis .
first requir extens intend allow pas point action incompat across differ local context action .
take exampl two complementari action ac1 ac2 propos mitig prevent differ side effect highlight differ branch t. action correspond differ local context : say < c1 , a1 > < c2 , a2 > .
suppos ac1 ac2 perform togeth caus undesir side effect .
first address exampl assumpt assum 3c relax , complementari action deem conflict .
second procedur must defin undesir side effect caus ac1 ac2 joint perform .
suggest 46 updat local context < c1 , a1 > < c2 , a2 > merg ( i.e .
< c1  lfd2 , a1  a2 > ) , captur fact local context longer independ .
anoth extens relat action involv make distinct intend mere proposing/suggest action .
exampl , may seam reason ra argu intend treat recipi antibiot prevent certain infect , da suggest treatment recipi .
formalis similar fashion 5.2.4 address problem incomplet inform .
relax assum 3a , argument instanti scheme as5 use complementari action ca , redefin as5  precondit identifi factual , hypothet overrul argument .
last extens discuss intend allow address fact circumst altern perform main propos action deriv undesir consequ side effect caus propos action .
thus , pas abl question degre undesir goal .
question , exampl , whether cancer undesir- abl enough side effect organ transplant altern organ transplant result death potenti recipi .
address exampl assum 1d must relax associ g relat un- desir , next assum 4 need relax realis g  g reason enough abort propos action .
final appropri procedur defin .
6 use asr deliber circuit scheme cqs defin , tailor encod stereo- typic reason pattern deliber safety-crit action , specialis circuit particular applic , e.g .
transplant environment scenario .
illustr , let us consid argument scheme as1 , given precondit rp , action propos .
transplant scenario pro- pose action alway : transplant organ , precondit : avail organ potenti recipi .
cours , instanc donor , recipi organ differ .
thus , tailor as1 transplant scenario involv captur recurr pattern allow differ donor , organ recipi instanti .
done un- ground predic av org ( donor , organ ) , p recip ( recipi , organ ) transp ( recipi , organ ) .
denot variabl upper-cas letter defin tailor version as1 : as1t : argu ( { } , { } , propos ( { av org ( , ) , p recip ( r , ) } , { transp ( r , ) } ) ) scenario-specif scheme cqs encod asr .
refer repositori order provid legal repli argument .
47 , proclaim facilit high focus deliber , paramount intend applic .
particip direct argument submiss degre need fill blank ( as1t ) , also , referenc asr easili identifi argument though logic valid , make littl sens applic scenario .
furthermor , specialis asr play import role cbrc retriev process , help identifi potenti similar case ( broad speak , case reason pattern  specialis scheme  use ) , discuss 8 .
6.1 construct asr given new scenario applic , one import task instan- tiat proclaim framework , construct asr , defin argu .
section describ procedur construct , way illustr transplant scenario .
first , asr developers21 must identifi type inform use deliber .
inform encod set r , , g , respect denot unground version r , , g. , exampl , av org ( , lung )  r , av org ( , )  r. next step choos ( type ) safety-crit action argu ( e.g .
{ transp ( r , ) }  ) identifi set precondit requir ac- tion  perform ( e.g .
{ av org ( , ) , p recip ( r , ) }  r ) .
chosen set action ai  set precondit rp  r develop defin specialis version as1 : as1i : argu ( { } , { } , propos ( rp , ai ) ) as1i associ cq as1i cq1 : is con- traindic perform action ai ?  , embodi attack specialis version as2 .
thus , given specialis as1 develop must produc specialis version as2 .
specialis version as2 repli argument instanti as1t form : as2t : argu ( { av org ( , ) , p recip ( r , ) } , { transp ( r , ) } , contra ( r , , g ) ) 22 , undesir goal action bring , ( e.g .
sev inf , cancer , grft fail , death , ... ) partial specialis version as2 , e.g .
: as2t gf : argu ( { av org ( , ) , p recip ( r , ) } , { transp ( r , ) } , contra ( r , , grft fail ( r ) ) ) 21most natur , construct asr carri main comput scienc develop supervis domain expert .
22note r set fact r variabl bound p recip ( r , ) transp ( r , ) .
48 develop must identifi type side effect realis undesir goal , turn , identifi type contraindica- tion r may lead main action caus side effect .
thus , ex- ampl , graft failur occur recipi reject organ ( { reject ( r , ) } ) may donor properti ( { p ( , p ) } , e.g .
p ( , h ) ) , due blood mismatch ( e.g .
{ blood ( , btype ) , blood ( r , btyper ) } ) combin organ properti recipi properti ( { p ( , po ) , p r p ( r , pr ) } e.g .
lung big recipi  thorac caviti ) , etc .
combin constitut specialis version as2 : as2t gf1 : argu ( { av org ( , ) , p recip ( r , ) } , { transp ( r , ) } , contra ( { p ( , p ) } , { reject ( r , ) } , grft fail ( r ) ) ) as2t gf2 : argu ( { av org ( , ) , p recip ( r , ) } , { transp ( r , ) } , contra ( { blood ( , btype ) , blood ( r , btyper ) } , { reject ( r , ) } , grft fail ( r ) ) ) as2t gf3 : argu ( { av org ( , ) , p recip ( r , ) } , { transp ( r , ) } , contra ( { p ( , po ) , p r p ( r , pr ) } , { reject ( r , ) } , grft fail ( r ) ) ) figur 10 : asr builder .
, specialis scheme associ cqs scheme as2 , direct develop construct asr .
exampl , respect embodi critic question as2t gf1 cq1 , as2t gf1 cq2 as2t gf1 cq3 specialis scheme : 49 as3t gf1 1 : argu ( { av org ( , ) , p recip ( r , ) , p ( , p ) } , { transp ( r , ) } , side effect ( { p ( , p2 ) } , { reject ( r , ) } ) ) as4t gf1 1 : argu ( { av org ( , ) , p recip ( r , ) , p ( , p ) } , { transp ( r , ) } , realis goal ( { p r p ( r , pr ) } , { reject ( r , ) } , grft fail ( r ) ) ) as5t gf1 1 : argu ( { av org ( , ) , p recip ( r , ) , p ( , p ) } , { transp ( r , ) } , prevent action ( { treat ( r , ) } , { } , { reject ( r , ) } ) ) ) process continu similar way specialis scheme .
develop thus direct construct asr circuit scheme cqs describ 5 .
furthermor , describ 5 , scheme also repres natur languag form , specialis scheme associ natur languag version e.g .
: as5t gf1 1 : organ reject prevent treat recipi t. figur 11 : asr browser .
note earlier , asr construct key activ instanti proclaim use given domain .
requir effort comput scienc develop domain expert , none may familiar argument .
facilit task develop two onlin tool develop php mysql : first one intend assist develop step step asr construction23 ( see figur 10 ) anoth tool24 allow domain expert navig natur languag form asr  scheme cq ( see figur 11 ) .
tool current prototyp phase develop provid use proof concept illustr potenti valu approach .
current also use tool applic proclaim environment domain [ 52 ] .
altern scenario , decis maker must 23http : //www.lsi.upc.edu/tolchinsky/newasr 24http : //www.lsi.upc.edu/tolchinsky/asr 50 decid whether industri wastewat safe discharg wastew- ater treatment plant .
henc , case , potenti relev fact decid action safeti includ industri spill  content , treatment plant  condit characterist well extern factor weather condit .
undesir side effect spill may bring relat prob- lem occur treatment plant , turn may caus ecolog imbal fluvial ecosystem .
action may prevent mitig undesir side effect includ use differ organ chemic product wastewat .
factor combin follow proce- dure introduc , build asr environment scenario ( see [ 52 ] ) .
subsect illustr full space argument codifi asr form use artifici human agent .
follow subsect show effort enabl high focus deliber process among heterogen agent .
6.2  guid task deliber begin argument propos main action , instanti specialis version as1 asr .
basic idea action ( e.g .
{ transp ( r , ) } ) propos precondit ( e.g .
{ av org ( , ) , p recip ( r , ) } ) met .
transplant scenario , soon avail- abl organ ( e.g .
kidney ) donor ( e.g .
) potenti recipi ( e.g .
r ) as1t instanti automat deliber trigger : inform ( , , conv id,0 , -1 open dialogu ( propos ( { av org ( , kidney ) , p recip ( r , kidney ) } , { transp ( r , kidney ) } ) da offer organ ra respons potenti recipi may enter dialogu , first submit request : request ( da id , , conv id,1,0 , enter dialogu ( propos , da , basic info ) ) request ( ra id , , conv id,2,0 , enter dialogu ( propos , ra , basic info ) ) , accept repli inform messag broadcast particip : inform ( , , conv id,3,1 , enter dialogu ( propos , da , basic info , { } , cfa , , legal repli ) ) inform ( , , conv id,4,2 , enter dialogu ( propos , ra , r basic info , { , da } , cfa , , legal repli ) ) , exampl : basic info = { p ( , sve ) , p ( , young ) , loctn ( , hosp1 ) , blood ( , ab+ ) ... } ; r basic info= { loctn ( r , hosp2 ) , blood ( r , ab+ ) ... } .
51 two messag cf updat contain basic info r basic info .
ca contain action transp ( r , kidney ) contain initi propos , say a1 .
note broadcast messag alreadi inform par- ticip possibl line attack argument t. exampl repli argument a1 .
among legal repli spe- cialis scheme : as2t inf1 : argu ( c , , contra ( { p ( , pd ) } , { r p ( r , pr ) } , sev inf ( r ) ) ) as2t gf3 : argu ( c , , contra ( { p ( lung , po ) , p r p ( r , pr ) } , { reject ( r , lung ) } , grft fail ( r ) ) ) as2t cncr3 : argu ( c , , contra ( { p ( lung , po ) } , { r p ( r , cancer ) } , cancer ( r ) ) ) c = { av org ( , kidney ) , p recip ( r , kidney ) } = { transp ( r , kidney ) } .
henc , ra argu donor  sve25 may caus streptococcus viridan infect ( svi ) recipi , ra would select scheme as2t inf1 among legal repli would requir replac pd sve pr svi order construct desir argument .
request ( ra id , , conv id,5,4 , argu ( argu ( c , , contra ( { p ( , sve ) } , { r p ( r , svi ) } , sev inf ( r ) ) ) ) .
argument accept broadcast submit argument provid particip list legal repli : as3t inf1 : argu ( c , , side effect ( { p ( , pd ) } , { r p ( r , svi ) } ) ) as4t inf1 : argu ( c , , realis goal ( { p r p ( , pd ) } , { r p ( r , svi ) } , sev inf ( r ) ) ) as5t inf1 : argu ( c , , prevent action ( { treat ( r , ) } , { } , { r p ( r , svi ) } ) as2 inf1 cq41 : challeng ( p ( , sve ) ) c = { av org ( , kidney ) , p recip ( r , kidney ) , p ( , sve ) } thus , new argument challeng ad , provid particip challeng readi submit tailor scheme partial instanti requir fill .
exampl , scheme as5t inf1 requir identifi action ( e.g .
penicillin teicoplanin ) would prevent recipi infect .
scheme as3t inf1 guid par- ticip consid whether donor properti pd would make transplant safe spite p ( , sve ) 26 .
25note p ( , sve ) cf .
26to knowledg , properti known .
nonetheless , may futur .
52 figur 12 : argument editor applic present [ 53 ] .
panel provid human user legal repli ( as5t inf1 ) argument .
infer engin button valid argument accord knowledg base artifici agent aid user deliber .
next button provid user anoth legal repli ( anoth scheme , e.g .
as4t inf1 ) button suggest propos scheme instanti suggest artifici agent  knowledg base .
note 6.1 , asr encod scheme  code  format use artifici agent natur languag represent form hu- man user .
general applic instanti proclaim featur number visualis mode .
exampl , content deliber display tree interact node , node label relev fact action argument highlight .
upon click node , full natur languag represent display , well legal repli present natur languag templat instanti user .
[ 53 ] , artifici agent guid user argument submiss possibl scheme instanti ( see fig.12 ) , valid altern instanti propos user .
user ultim decid argument submit , engag deliber artifici agent interact sole scheme  for- mat prolog code .
applic implement use two softwar compon develop fp6 european project aspic27 : argumenta- tion engin use agent  reason dialogu manag extens act .
applic main implement java , use jade28 agent  implement argument engin partial implement java prolog ( see [ 53 ] ) .
submit argument , pas may submit move ( ) move .
pas , submit time ( reason ) locut , resolut stage initi may proceed evalu t. 7 argument evalu resolut stage , evalu status argument t. involv appli dung  theori order identifi 27http : //www.argumentation.org/ 28http : //jade.tilab.com/ 53 defens , defeat justifi argument t. argument root evalu justifi , action deem safe , wherea defeat , line argument lead reject , identifi contraind warrant deem action unsaf .
prior comput argument  status : 1 ) refer dck cbrc compon may submit addit argument ; 2 ) assign prefer relat argument mutual attack , sinc symmetr attack may prevent definit status evalu main propos argument ; final 3 ) appropri deal argument hypothet well defend challeng made .
discuss 2 , may submit addit argument referenc dck cbrc .
first knowledg resourc help identifi fact cf altern complementari cours action though relev decis make , accord domain consent knowledg , taken account pas .
relev factor ad mean submit argument instanti appropri legal repli .
second knowledg resourc propos submiss argument submit previous similar case current ( see 8 ) .
thus , task , play role two addit pas : expert specialist domain consent knowledg , anoth specialist reus evid collect past deliber .
consid instanc argument line , d1 , d2 d3 5.2.1 illustr figur 13c , , order prevent streptococcus infect recipi ( argument d1 ) pa propos administr patient penicillin ( d2 ) .
howev , patient allerg penicillin ( d3 ) .
use dck cbrc suggest altern antibiot ( e.g .
teicoplanin ) prevent infect recipi .
pose argument ( d4 fig .
13 ) instanti scheme as5t inf1 .
way regular pas endors argument support endors layer , dck cbrc assign prefer relat mutual attack argument .
second task .
let us suppos , , contain hypothet argument challeng success repli .
problem symmetr attack may prevent evalu root argument  main action propos either justifi defeat ( , may defens ) .
solv impass prefer relat assign mutual attack argument decid asymmetr attack .
consid argument framework argument , b1 b2 5.2.1 , debat whether avail lung viabl donor smoke histori copd ( see fig .
13a . ) .
exampl decid whether transplant safe amount decid whether argument b1 prefer b2 ( asym- metric attack b2 ) b2 prefer b1 ( asymmetr attack b1 ) .
first case root argument would reject ground semant , transplant would deem unsaf ( graft failur expect donor  smoke histori , even though donor copd ) .
later case root argument would justifi 54 ground semant , transplant deem safe believ { p ( , copd ) } hold { p ( , h ) } contraind .
prefer relat mutual attack argument deter- mine proclaim  three knowledg resourc dck , cbrc aem .
knowledg resourc provid perspect argument  relat strength .
dck deriv prefer assign standard guidelin regul domain ( e.g .
donor organ accept criteria ) .
instanc , lung donor smoke histori copd deem viabl transplant accord current agreed-upon transplant guidelin dck deem b2 prefer b1 .
cbrc de- rive assign previous similar case .
broad speak , argument similar b2 success deem prefer argument similar b1 previous similar case cbrc also deem b2 prefer b1 ( discuss 8 ) .
final aem take pas  endors move ( e ) assign weight base measur trust specif applica- tion scenario ( e.g .
base role pas prestig transplant unit pas repres ) .
thus , trust agent endors b2 rather b1 , aem deem b2 prefer b1 .
simpl exampl , b2 deem prefer b1 may broadcast solut kind : the transplant safe .
howev , may differ knowledg resourc yield conflict prefer ( dck may deem b1 prefer b2 cbrc may deem opposit ) , prefer assign may vari degre confid .
furthermor : novel propos pas may lead situat dck littl knowledg ; depend case cbrc may less evid prefer one argument anoth ; final , equal trust pas may endors compet argument prevent aem deem one argument stronger .
address issu , maintain independ prefer assign final decis maker account differ perspect  recommend .
let us defin prefer assign map : pref : aa 7 [ 1 , 1 ]  [ 1 , 1 ]  [ 1 , 1 ] thus , pref ( a1 , a2 ) = ( , b , c ) , prefer assign dck , b cbrc c aem , posit valu express prefer first argument later ( a1 prefer a2 ) negat valu opposit .
zero mean prefer .
bigger absolut valu number , confid prefer assign .
thus pref ( a1 , a2 ) = ( 1 , 1 , 1 ) a2 deem prefer a1 full confid .
prefer assign agreement , say instanc pref ( a1 , a2 ) = ( 0.2 , 0.6 , 0.5 ) , decis maker must decid whether overrid guidelin ( a1 prefer a2 confid 0.2 ) , trust pa  assess know reliabl expert ( a2 prefer a1 confid 0.5 ) opinion back evid ( a2 prefer 55 a1 confid 0.6 ) .
cours symmetr attack import resolv preclud definit evalu status root argument propos main action .
exampl , figur 13c .
determin direct asymmetr attack ( base prefer ) d1 d2 relev , irrespect determin , d2 defeat argument d3 .
id argument argu ( { } , { } , propos ( { av_org ( , lung ) , p_recip ( r , lung ) } , { transp ( r , lung ) } ) ) b1 b ) argu ( c , , contra ( { d_p ( , s_h ) } , { reject ( r , lung ) } , graft_failur ) ) b2 argu ( c , , no_side_effect ( { d_p ( , copd ) } , { reject ( r , lung ) } ) ) h1 argu ( c , , contra ( { d_p ( , hcv ) } , { r_p ( r , hcv ) } , sever_infect ) ) h2 argu ( c , , not_realised_go ( { p_r_p ( r , hcv ) } , { r_p ( r , hcv ) } , sever_infect ) ) h3 challeng ( evid ( d_p ( , hcv ) ) ) d1 argu ( c , , contra ( { d_p ( , sve ) } , { r_p ( r , svi ) } , sever_infect ) ) d2 argu ( c , , preventive_act ( { treat ( r , penicillin ) } , { r_p ( r , svi ) } ) ) d3 argu ( c , , contra ( { p_r_p ( r , pen_allergi ) } , { r_p ( r , anaphylaxi ) } , sever_infect ) ) h1d1 h2 h3d2 d3 b1 b2 b1 b2 arg1 no_copd-unknown b1 h4 no_copd -depend no_copd-depend no_copd-unknown b2 d4 ( -0.1 , -0.4 , -0.5 ) ( 0 , -0.6,0 ) ) c ) h4 argu ( c , , contra ( replace_ev ( d_p ( , hcv ) , { clin_rec ( , hcv ) } , { r_p ( r , hcv ) } ) , sever_infect ) ) d4 argu ( c , , preventive_act ( { treat ( r , teicoplanin ) } , { r_p ( r , svi ) } ) ) figur 13 : argument tree evalu address  third evalu task involv account hypothet argument challeng either weak repli even unrepli .
discuss 5.2.3 5.2.4 , purpos proclaim  deliber decid whether uncertain unknown fact case , whether relev action  safeti , , risk involv fact case .
risk involv fact case highlight argument indic undesir side effect may may expect , let us discus proclaim identifi uncertain unknown fact decis maker ware .
prefer assign process taken place , hypothet argument weak repli challeng taken regular element , follow label process take place :  argument whose updat local context fact contain unknown fact , 56 f ( i.e .
f , f /cf ) label f -unknown ;  argument whose updat local context fact contain uncertain fact f , i.e .
f cf , f challeng well defend .
argument label f -uncertain ;  argument challeng accept status ( defeat justi- fie ) depend argument label either f-unknown f -uncertain label f -depend .
let us continu argument , b1 b2 , suppos argument b2 deem prefer b1 fact p ( , copd ) unknown , b2 p ( , copd ) -unknown argument b1 p ( , copd ) -depend .
, p ( , copd ) taken case , b1 becom defeat justifi , wherea taken fals , b2 would overrul , b1 would justifi defeat .
name , b1  accept status depend p ( , copd ) .
note exampl , decis whether transplant lung must first address problem know whether p ( , copd ) case .
argument p ( , copd ) -depend .
figur 13b argument b1 attack defeat argument arg1 .
case , whether p ( , copd ) hold , argument justifi .
general , argument propos main action label f -depend fact f , uncertainti fact f ad- dress decis maker , sinc case final decis actual depend whether f believ case .
figur 13c .
illustr could propos solut delibera- tion .
rather provid safe/unsaf solut return new version 1 ) possibl new argument ( e.g .
d4 ) , 2 ) mutual attack resolv one way attack enough confid ( e.g .
b2 prefer b1 , h1 prefer h1 ) enough confid , decis maker given actual valu prefer assign ultim decid argument prefer ( e.g .
pref ( d1 , d2 ) = ( -0.1 , - 0.4 , -0.5 ) pref ( d1 , d4 ) = ( 0 , -0.6,0 ) ) .
final 3 ) main propos argument label fact need resolv order decid upon main action  safeti ( e.g .
argument p ( , copd ) -depend ) .
exampl depict figur 13c transplant deem safe de- cision maker believ p ( , copd ) case reli teicoplanin prevent recipi  infect .
timeout locut trig- gere yet , decis taken , new version return pas may accept solut submit locut accept ( sol id ) may continu ad inform , e.g .
endors argument d4 sub- mit argument d5 indic recipi also allerg teicoplanin .
latter case , pas inform addi- tional move timeout trigger comput new solut .
particip submit accept ( sol id ) locut timeout 57 trigger , deliber conclud submiss locut close deliber ( solut , sol id ) last given solut .
8 use tree argument evid deliber conclud , tree argument contain fact action deem relev assess main propos action  safeti , view point domain expert , guidelin , regul past collect evid .
main action deem safe eventu perform , updat appropri pas record actual outcom action  perform .
instanc , recipi lung donor smoke histori copd reject transplant organ , ra updat b1 prefer b2 ( e.g .
chang figur 13 attack relat b1 b2 b1 asymmetr attack b2 ) .note updat argument longer presumpt explanatori natur .
describ actual outcom perform action .
, updat reus evid resolv futur similar deliber , cbrc  role .
section outlin circuit argument scheme defin facilit reus evid encod previous deliber .
refer reader [ 57 ] comprehens descript four reason cycl  retriev , revis , reus retain [ 1 ]  implement .
two aspect scheme defin facilit cbrc task : 1 ) specif scheme asr ( describ 6 ) 2 ) relev fact complementari cours action introduc structur fashion , singl introduc step step .
scheme  specif allow identifi potenti similar case littl comput cost .
idea case specialis scheme ( reason pattern ) use , may similar .
thus , organis case-bas term argument scheme , set broad similar case effect retriev .
latter aspect scheme facilit detail comparison case basi similar case  introduc relev fact action .
illustr simpl exampl medic scenario .
suppos deliber consist argument , d1 d2 , lung donor whose caus death streptococcus viridan en- docard ( p ( , sve ) ) offer transplant , donor  sve believ contraind ( d1 ) recipi may infect bacteria .
argument d2 indic infect prevent administr penicillin recipi .
argument , d1 d2 respec- tive instanti scheme as1t , as2t inf1 as5t inf1 ( see 6.2 ) encod follow reason pattern : an organ intend transplant .
donor condi- tion p would bring sever infect recipi .
treatment 58 recipi propos prevent infect thus retriev case-bas deliber consist three scheme obtain case alreadi quit similar target case .
, take past case organ lung , condit p similar sve ( e.g .
streptococcus bovi endocard ) treatment similar penicillin , obtain desir set case evalu target case evidenti basi .
thus , argument scheme use heurist first , broad case retriev , similar case ultim deriv similar fact action highlight relev decis make .
similar fact action deriv distanc measur term ontolog .
, instanc , distanc medic ontolog term penicillin teicoplanin given threshold , deriv treatment two antibiot similar .
thus , two argument instanti scheme asr , use term instanti similar , say two argument similar ( see [ 57 ] detail ) .29 retriev set similar case , repres argument tree , cbrc deriv prefer assign mutual attack argument .
retriev ts repres case action alreadi perform , thus contain asymmetr attack .
exampl result two type retriev argument tree : t+ , argument similar d2 asymmetr attack defeat similar d1 , i.e .
action success ; t- , argument similar d1 defeat similar d2 , i.e .
treatment prevent recipi  infect .
incid t+ case signific outnumb t- case argument d2 would deem prefer d1 , otherwis either argument d1 would deem prefer d2 , enough evid prefer one argument , conflict remain unresolv .
target accord edit proclaim  knowl- edg resourc , final evalu indic action safe , target case retain case-bas reus evid futur similar case .
describ detail [ 57 ] .
9 conclus , futur relat work paper present argumentation-bas model proclaim deliber safety-crit action .
model aim provid set effect effici deliber : 1 ) facilit particip 29other work ( e.g [ 37 ] ) address issu equival argument framework ( framework equival show result differ se- mantic ) .
cbrc use associ case heurist identifi similar case , similar determin similar fact highlight relev .
word , retriev  may equival argument frame- work .
59 exchang argument among heterogen agent 2 ) focus deliber- ation relev matter discuss .
central realis key featur use argument scheme critic question .
5 defin circuit scheme cqs defin protocol-bas exchang argument , specialis deliber safeti critic action .
6 illustr circuit specialis particular scenario scenario-specif scheme facilit argument construct human artifici agent .
particular illustr , direct mediat agent , use dialogu game introduc 4 , particip guid stage deliber argu .
way , deliber effect model argument process elicit knowledg particip .
primari contribut proclaim enabl autom deliber dialogu agent ( human softwar ) organ transplant decis ( environment decis see [ 52 ] ) , manner structur order , elicit inform need make decis joint ration , even inform possess particip agent .
secondari contribut dialogu requir particip specialis knowledg argument theori , framework emb medic domain expertis natur way use scenario-specif argument scheme .
last year grow number propos appeal use argument scheme argumentation-bas dialogu [ 42 , 38 , 47 , 21 , 5 , 10 ] .
work general assum scheme propos walton [ 60 ] propos atkinson et al .
[ 4 ] .
scheme undoubt great valu , believ abstract mani real life applic .
possibl cover possibl line reason cours appeal , may requir circumst ( e.g .
legal applic [ 22 , 6 , 62 ] e-democraci [ 21 , 12 ] ) .
howev , decision-mak applic benefit narrow line reason essenti problem hand , thus make better use decis make context .
specialis scheme cq reduc comput cost reason also focus dialogu essenti , increas chanc success deliber process .
best knowledg know work propos explor ad valu scenario-specif scheme cqs .
one main contribut work show provis scenario specif scheme cqs facilit relat sophist deliber sensit domain human organ transplant in- dustrial wastewat manag [ 52 ] , reduc complex argu- ment construct fill simpl templat ( shown 6.2 ) .
main focus work facilit agent  exchang argu- ment , anoth contribut proclaim  approach argument valid evalu .
former requir flexibl prevent spurious argument disrupt deliber .
latter requir provid decis support whether propos action safe , achiev 60 incorpor relev fact action tree argument evalu basi guidelin regul , expert opinion past collect evid .
knowledg resourc agreement , action  safeti depend uncertainti fact , propos solut provid reason deem action safe unsaf .
otherwis , propos solut highlight relev issu must resolv .
taken togeth , contribut provid foundat practi- cal realis deliber involv artifici human agents30 .
thus believ proclaim help bridg gap theoret model argumen- tation agent system ( embodi work [ 4 ] ) practic realis .
contribut paper includ proclaim  decoupl res- olut case deliber action  safeti .
first , give prioriti main question : is action safe current circum- stanc ?
-so , exampl , question current circumst ( i.e .
fact cf ) licens challeng action  safeti ( least local context ) .
second allow one address , relat simpl fashion , problem incomplet uncertain inform , time construct- ing argument , updat new avail inform evalu arguments.anoth contribut way relev fact action explicit singl argument construct .
, togeth argument scheme repositori , great import cbrc task reus past deliber evid .
worth recal point proclaim intend regul environ pas ( human artifici ) expect fulli coop- erat domain expert .
also assum share agreement rule purpos deliber .
particular assum propos action desir default circumst may disagr circumst action safe perform , agreement side effect , believ caus , suffici undesir prevent perform propos action deem unsaf ( e.g .
cancer , graft failur death recipi organ ) .
particular , pas individu goal valu part argumentation.31 believ made import progress develop reason pattern deliber safeti critic action , make number assumpt address futur work .
no- tabli assumpt prefer undesir goal complementari propos action compat .
former disabl possibl argu favour action although may caus un- desir side effect ( e.g .
cancer recipi ) altern result wors outcom ( e.g .
death recipi ) .
later assumpt disregard 30as illustr [ 53 ]  implement prototyp use scheme cqs similar describ paper facilit deliber human artifici agent viabil human organ transplant 31they may influenc argument submit endors , constitut reason within proclaim  deliber deem action safe .
61 possibl two cours action caus undesir side effect joint perform .
briefli discus limit 5.2.5 .
futur work also add express action dimens least incorpor notion order action perform .
proclaim  definit make assumpt pas would dis- pute other  descript state affair .
rational as- sumption lie intuit pa provid inform privileg access .
, da privileg access infor- mation donor , ra recipi .
similar environment scenario , agent repres infrastructur would disput inform give infrastructur .
assump- tion motiv limit possibl argu strict case allow request evid support assert f cf .
in- tuition develop explicit integr proclaim  definit .
note howev , decoupl deliber cf , conflict resolut procedur decid case easili plug proclaim outcom updat set fact cf turn may affect  argument shift type factual , hypothet overrul .
nonetheless , also investig generalis cf includ , exampl , rule well fact .
involv techniqu belief revis contract requir ( recal current assum negat retract fact cf .
futur work also address reformul case-bas reason cycl present [ 57 ] order accommod formalis argument scheme critic question paper .
anoth import requir implement proclaim realist situat expand corpus scheme cqs transplant environment scenario asr .
also import perform rigour evalu scope limit elabor scheme .
anoth requir futur work better formalis dialogu game present 4.2 order facilit implement , particular intend describ axiomat semant , defin pre post condit dialogu move .
regard relat work , number work ( e.g .
[ 26 ] , [ 11 ] ) propos deliber , persuas negoti model argument agent systems32 .
howev , best knowledg , none work address practic aspect enabl actual implement propos model scenario elabor simpl illustr exampl .
also number work appli multi-ag system safeti critic domain ; particular medic ( see [ 24 ] ) environment domain ( see [ 15 ] ) .
relev awar [ 35 ] , specif logic argument propos aid medic doctor decis make multi-ag set .
howev work primarili conceptu address agent  dialog interact role scheme criti- 32see proceed argument multi-ag system ( argma ) workshop se- rie ( http : //www.mit.edu/irahwan/argmas/ ) .
62 cal question guid argument construct .
work , [ 45 ] [ 20 ] relat sens repositori argument scheme critic question play central role .
former intend assist user argument diagram , latter intend help ( human ) user construct wide varieti argument , improv abil protect interest ( poten- tial ) dialogu , especi legal domain .
anoth interest approach taken magtalo system [ 46 ] , repositori fulli instanti ar- gument use help user express posit regard subject public debat .
user direct dialogu among differ artifici agent allow explor system  knowledg base follow natur flow dialogu .
user may agre differ expos argument , may select argument direct argument store last resourc , type argument natur languag ( addit support ) .
interact present non intrus mode elicit knowledg user .
claim base term maieutic function dialogu [ 61 ] , i.e .
user immers dialogu feel interrog .
sens believ go beyond meiautic function place import under structur argument ( note [ 9 ] valu purpos ) exploit context applic : 1 ) pas need concern argument construct , fill blank templat present domain expertis jargon ; 2 ) elicit knowledg readili avail comput use , oppos embed free text paragraph .
refer [ 1 ] a. aamodt e. plaza .
case-bas reason : foundat issu , methodolog variat , system approach .
ai commun. , 7 ( 1 ) :39 59 , 1994 .
[ 2 ] l. amgoud c. cayrol .
accept argument preference- base argument .
procced fourteenth confer un- certainti artifici intellig ( uai 1998 ) , page 17 , 1998 .
[ 3 ] aristotl .
topic .
clarendon press , oxford , uk , 1928 .
[ 4 ] k. atkinson , t. bench-capon , p. mcburney .
comput represen- tation practic argument .
synthes , 152 ( 2 ) :157206 .
[ 5 ] k. atkinson , t. bench-capon , s. modgil .
argument decis support .
databas expert system applic , page 822831 .
springer , 2006 .
[ 6 ] t. bench-capon h. prakken .
use argument scheme hypothet reason law .
artifici intellig law , page 122 , 2010 .
63 [ 7 ] t.j.m .
bench-capon .
persuas practic argument use valu base argument framework .
journal logic comput , 13 ( 3 ) :429 48 , 2003 .
[ 8 ] t.j.m .
bench-capon p. e. dunn .
argument artifici intelli- genc .
artifici intellig , 171 ( 10-15 ) :619641 , 2007 .
[ 9 ] j. bentahar , b. moulin , m. belang .
taxonomi argument model use knowledg represent .
artifici intellig review , 33 ( 3 ) :211259 , 2010 .
[ 10 ] e. black k. atkinson .
dialogu account differ perspec- tive collabor argument .
proceed 8th interna- tional confer autonom agent multiag systems-volum 2 , page 867874 .
intern foundat autonom agent multiag system , 2009 .
[ 11 ] e. black k. atkinson .
agre .
argma 2010 , page 1 , 2010 .
[ 12 ] d. cartwright k. atkinson .
use comput argument support e-particip .
intellig system , ieee , 24 ( 5 ) :4252 , 2009 .
[ 13 ] m. chalamish s. kraus .
autom : autom mediat bilater negoti time constraint .
proceed 6th intern joint confer autonom agent multiag system , page 248 .
acm , 2007 .
[ 14 ] c.i .
chesnevar , g.r .
simari , l. godo .
comput dialect tree effici possibilist defeas logic program .
logic program nonmonoton reason , page 158171 , 2005 .
[ 15 ] u. cort m. poch , editor .
advanc agent-bas environment manag system , whitestein seri softwar agent technolog autonom comput .
birkhus basel book , springer , 2009 .
[ 16 ] p. m. dung .
accept argument fundament role nonmonoton reason , logic program n-person game .
artifici intellig , 77:321357 , 1995 .
[ 17 ] p.m. dung , p. mancarella , f. toni .
comput ideal sceptic argu- mentat .
artifici intellig , 171 ( 10-15 ) :642674 , 2007 .
[ 18 ] br gain , dh norri , az lapsley .
mediat : intellig infor- mation system support virtual manufactur enterpris .
sys- tem , man cybernet , 1995 .
intellig system 21st cen- tury. , ieee intern confer , volum 1 , page 964969 .
ieee , 2002 .
64 [ 19 ] m. p. georgeff a. l. lanski .
reactiv reason plan .
aaai , page 677682 , 1987 .
[ 20 ] t. f. gordon , h. prakken , d. walton .
carnead model argu- ment burden proof .
artif .
intell. , 171 ( 10-15 ) :875896 , 2007 .
[ 21 ] t.f .
gordon , h. prakken , d. walton .
carnead model ar- gument burden proof .
artifici intellig , 171 ( 10-15 ) :875896 , 2007 .
[ 22 ] t.f .
gordon d. walton .
legal reason argument scheme .
12th intern confer artifici intellig law , page 137146 .
acm , 2009 .
[ 23 ] c. l. hamblin .
fallaci .
methuen co ltd , london , uk , 1970 .
[ 24 ] d. isern , d. sanchez , a. moreno .
agent appli health care : review .
intern journal medic informat , 2010 .
[ 25 ] h.m. kauffman , m.a .
mcbride , f.l .
delmonico .
first report unit network organ share transplant tumor registri : donor histori cancer1 .
transplant , 70 ( 12 ) :1747 , 2000 .
[ 26 ] e.m. kok , j.j.c .
meyer , h. prakken , g.a.w .
vreeswijk .
for- mal argument framework deliber dialogu .
argma 2010 , page 73 , 2010 .
[ 27 ] a. lopez-navidad f. caballero .
extend criteria organ accep- tanc .
strategi achiev organ safeti increas organ pool .
clinic transplant , 17 ( 4 ) :308324 , 2003 .
[ 28 ] p. lorenzen k. lorenz .
dialogisch logik .
wissenschaftlich buchge- sellschaft darmstadt , germani , 1978 .
[ 29 ] d. marelli , h. lak , s. bresson , a. ardehali , j. bresson , f. esmailian , m. plunkett , j. moriguchi , j. kobashigawa .
result transplan- tation use donor heart preexist coronari arteri diseas .
journal thorac cardiovascular surgeri , 126 ( 3 ) :821825 , 2003 .
[ 30 ] m. mbarki , j. bentahar , b. moulin .
specif complex strategic-bas reason use argument .
argument multi- agent system , page 142160 , 2007 .
[ 31 ] p. mcburney , d. hitchcock , s. parson .
eightfold way deliber- ation dialogu .
intern journal intellig system , 22 ( 1 ) :95132 , 2007 .
[ 32 ] p. mcburney s. parson .
game agent play : formal framework dialogu autonom agent .
journal logic , languag inform , 13:315343 , 2002 .
65 [ 33 ] p. mcburney s. parson .
dialogu game agent argument .
i. rahwan g. simari , editor , argument artifici intellig , chapter 13 , page 261280 .
springer , berlin , germani , 2009 .
[ 34 ] s. modgil .
reason prefer argument framework .
ar- tifici intellig , 173 ( 9-10 ) :901934 , 2009 .
[ 35 ] s. modgil j .
fox .
guardian agent approach safeti medic multi-ag system .
safeti secur multiag system , page 6779 , 2009 .
[ 36 ] p. s. munindar .
agent communic languag : rethink princi- ples .
ieee comput , 31 ( 12 ) :4047 , 1998 .
[ 37 ] e. oikarinen s. woltran .
character strong equival argu- mentat framework .
proceed 12th intern confer- enc principl knowledg represent reason ( kr 2010 ) .
aaai press , 2010 .
[ 38 ] e. oliva , p. mcburney , a. omicini , m. viroli .
argument artifact negoti support .
intern journal artifici in- tellig , 4 ( s10 ) :90 , 2010 .
[ 39 ] s. parson , p. mcburney , e. sklar , m. wooldridg .
relev utter formal inter-ag dialogu .
proceed 4th intern confer argument multi-ag system , page 4762 .
springer-verlag , 2007 .
[ 40 ] h. prakken .
coher flexibl dialogu game argument .
journal logic comput , 15 ( 6 ) :1009 , 2005 .
[ 41 ] h. prakken .
formal system persuas dialogu .
knowledg eng .
review , 21 ( 2 ) :163188 , 2006 .
[ 42 ] i. rahwan , b. banihashemi , c. reed , d. walton , s. abdallah .
rep- resent classifi argument semant web .
knowledg engin review ( appear ) .
[ 43 ] i. rahwan g.r .
simari .
argument artifici intellig .
springer publish compani , incorpor , 2009 .
[ 44 ] c. reed t. j. norman , editor .
argument machin : new fron- tier argument comput .
kluwer academ publish , 2004 .
[ 45 ] c. reed g. row .
araucaria : softwar argument analysi , diagram- ming represent .
intern journal artifici intellig tool , 13 ( 4 ) :983 , 2004 .
[ 46 ] c. reed s. well .
dialog argument interfac complex debat .
ieee intellig system , page 6065 , 2007 .
66 [ 47 ] c. reed , s. well , j. devereux , g. row .
aif+ : dialogu argument interchang format .
proceed 2008 confer comput model argument : proceed comma 2008 , page 311323 .
io press , 2008 .
[ 48 ] j.r. searl .
ration action .
mit press , 2003 .
[ 49 ] w. shen , f. maturana , d. h. norri .
metamorph ii : agent-bas architectur distribut intellig design manufactur .
journal intellig manufactur , 11 ( 3 ) :237251. , 2000 .
[ 50 ] s. simoff , c. sierra , r.l .
de mantara .
requir toward auto- mate mediat agent .
pre-proceed kr2008-workshop knowledg represent agent multi-ag system , sydney , septemb 2008 , page 171 .
cites , 2008 .
[ 51 ] p. tolchinski , k. atkinson , p. mcburney , s. modgil , u. cort .
agent deliber action propos use proclaim model .
ceema , page 3241 , 2007 .
[ 52 ] p. tolchinski , m. aulin , u. cort , m. poch .
deliber safeti industri wastewat discharg wastewat treatment plant .
advanc agent-bas environment manag system , whitestein seri softwar agent technolog autonom com- pute , chapter 2 , page 3760 .
birkhus basel .
springer , 2009 .
[ 53 ] p. tolchinski , u. cort , d. grecu .
argumentation-bas agent increas human organ avail transplant .
agent technolog e-health , whitestein seri softwar agent technolog au- tonom comput , chapter 3 , page 6593 .
birkhus basel .
springer , 2008 .
[ 54 ] p. tolchinski , u. cort , s. modgil , f. caballero , a. lopez- navidad .
increas human-organ transplant avail : argumentation- base agent deliber .
ieee intellig system , 21 ( 6 ) :3037 , 2006 .
[ 55 ] p. tolchinski , u. cort , j. c. niev , f. caballero , a. lopez-navidad .
use argu agent increas human organ pool transplant .
3rd workshop agent appli health care ( ijcai-05 ) , 2005 .
[ 56 ] p. tolchinski , s. modgil , u. cort .
argument scheme critic question heterogen agent argu viabil human organ .
aaai 2006 ss seri ; argument consum health- care , page 105-111 , aaai press , 2006 .
[ 57 ] p. tolchinski , s. modgil , u. cort , m. sanchez-marr .
cbr ar- gument scheme collabor decis make .
comma , volum 144 frontier artifici intellig aplic , page 7182 .
io press , 2006 .
67 [ 58 ] j. vazquez-salceda , u. cort , j. padget , a. lopez-navidad , f. ca- ballero .
organ alloc process : natur extens carrel agent-medi electron institut .
aicommunications. , 3 ( 16 ) , 2003 .
[ 59 ] b. verheij .
dialect argument argument scheme : approach legal logic .
artif .
intel .
law , 11 ( 2-3 ) :167195 , 2003 .
[ 60 ] d. n. walton .
argument scheme presumpt reason .
lawrenc erlbaum associ , mahwah , nj , usa , 1996 .
[ 61 ] d. n. walton e. c. w. krabb .
commit dialogu : basic concept interperson reason .
suni seri logic languag .
state univers new york press , albani , ny , usa , 1995 .
[ 62 ] a. wyner t. bench-capon .
argument scheme legal case-bas reason .
legal knowledg inform system .
jurix , page 139 149 , 2007 .
[ 63 ] s. zink , h. smolen , j. catalano , v. marwin , s. wertlieb .
natco , organ transplant profession public polici statement .
hiv- to-hiv transplant .
progress transplant ( aliso viejo , calif. ) , 15 ( 1 ) :86 , 2005 .
68
