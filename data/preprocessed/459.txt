scalabl inexact balanc domain decomposit constraint overlap coarse/fin correct santiago badiaa , b , alberto f. martna , b , javier principea , b acentr internacion de metod numer en enginyeria ( cimn ) , parc mediterrani de la tecnologia , upc , estev terrada 5 , 08860 castelldefel , spain ( { sbadia , amartin , princip } @ cimne.upc.edu ) buniversitat politecnica de catalunya , jordi girona 1-3 , edifici c1 , 08034 barcelona , spain abstract work , analyz scalabl inexact two-level balanc domain decomposit constraint ( bddc ) precondition krylov subspac it- erat solver , use high scalabl asynchron parallel implementa- tion fine coars correct comput overlap time .
way , coarse-grid problem fulli overlap fine-grid comput ( embarrass parallel ) wide rang case .
, con- sider inexact solver reduc comput cost/complex memori consumpt coars local problem boost scalabl solver .
numer experiment , conclud bddc precondi- tioner quit insensit inexact solver .
particular , one cycl algebra multigrid ( amg ) enough attain algorithm scalabl .
, clear reduct comput time memori requir inexact solver com- pare spars direct one make possibl scale far beyond state-of-the-art bddc implement .
excel weak scalabl result obtain propos inexact/overlap implement two-level bddc precondition , 93,312 core 20 billion unknown juqueen .
fur- ther , also appli propos set unstructur mesh partit pressur poisson solver backward-fac step bench- mark domain .
keyword : domain decomposit , inexact solver , bddc , parallel , overlap , scalabl 1 .
introduct order deal increas level complex simul phe- nomena govern partial differenti equat ( pdes ) , comput engi- neer scienc must advanc develop numer algorithm implement effici exploit ever-increas amount preprint submit parallel comput septemb 24 , 2015 comput resourc .
growth comput power result moor  law pass increas number core chip , instead make core faster .
result , next generat supercom- puter , abl reach 1 exaflop/ , expect reach billion core .
effici exploit billion-fold level concurr big challeng .
advanc larg scale scientif comput strong relat abil effici exploit extrem core count [ 1 ] .
time spent implicit simul linear solver relat overal execut time grow size problem number core [ 2 ] .
extrem scale implicit simul , massiv parallel linear solver key compon .
scenario exacerb need high scal- abl algorithm implement .
numer algorithm compon scalabl effici run extrem scale supercomput .
ex- treme scale solver develop assumpt local flop cheap communic expens .
extrem core count , must reduc communic synchron among processor , overlap communic comput .
largest scale , linear solver base precondit krylov subspac method .
algorithm scalabl precondition includ ( algebra ) multigrid ( mg ) [ 3 ] domain decom- posit ( dd ) algorithm [ 4 ] .
howev , theoret properti enough practic weak scalabl , sinc precondition must allow massiv scalabl implement .
today  scalabl algorithms/imple- mentat present practic limit parallel , e.g. , due small , coars problem solv hierarch process dd/amg , loss sparsiti denser communic pattern coarser level amg .
dd precondition make explicit use partit global mesh , e.g. , finit element ( fe ) integr , sub-mesh ( subdomain ) pro- vide natur framework develop fast parallel solver tailor distributed-memori machin .
one-level dd algorithm involv solut local problem nearest-neighbor communic .
( second level ) coars correct ( coupl subdomain ) requir algorithm scalabl , also harm practic ( cpu time ) weak scalabl .
two-level dd al- gorithm includ balanc neumann-neumann precondition ( bnn ) [ 5 ] , balanc dd constraint precondition ( bddc ) [ 6 ] , feti-dp precondition [ 7 ] .
case , positive-definit matric , poly- logarithm express condit number precondit system  = 1 + log2 ( h h ) prove , h h mesh subdomain characterist size , respect , space dimens ; ( h h ) local problem size .
consequ , weak scale scenario , i.e. , increas linear system size number processor keep h h fix , number itera- tion precondit conjug gradient ( pcg ) solver ( asymptot ) independ number processor .
practic scalabl limit two-level dd implement deter- mine coars solver comput , whose size increas ( best ) linear respect number subdomain .
coars problem rapid be- 2 come bottleneck algorithm increas number processor , reduc weak scalabl [ 8 ] .
coars problem sever order magni- tude smaller origin global system , small portion comput core effici exploit ( assum parallel coars solver ) .
typic dd implement , produc unaccept parallel effici loss , sinc core involv coars solver comput idl ( see figur 1 ) .
one obvious strategi improv scalabl reduc wall-clock time spent coars solver use , e.g. , mpi-distribut spars direct solver like mump [ 9 ] ( see [ 10 ] bddc [ 11 ] feti-dp ) .
howev , approach mitig problem .
2 .
motiv bddc precondition salient properti permit over- come parallel overhead , make excel candid extrem scale solver design : ( p1 ) allow mathemat support extrem aggress coarsen .
ratio size global coars problem order local problem size , i.e. , ( h h ) d. memory-constrain supercom- puter , order 105 spars direct method [ 12 ] 106 inexact solver ( see section 6 ) .
( p2 ) coars matrix similar sparsiti pattern origin system matrix .
( p3 ) constrain neumann dirichlet local problem , well coars problem , comput inexact way , e.g. , use one amg cycl without affect algorithm scalabl method [ 13 ] .
( p4 ) due fact coars matrix similar structur origin system matrix , multilevel extens algorithm possibl [ 14 , 15 ] .
( p5 ) coars fine compon comput parallel [ 6 ] , sinc basi coars space construct way orthogon fine compon space respect inner product induc unassembl system matrix [ 6 , 16 ] .
properti ( p1 ) ( p2 ) readili exploit bddc implement .
properti ( p3 ) , i.e. , algorithm scalabl bddc inexact solver , prove dohrmann [ 13 ] .
similar inexact precondition present [ 17 ] .
inexact bddc method easili increas parallel effici , due linear complex coars solver , especi larg core count .
howev , far know , practic weak scalabl analysi inexact bddc method ( larg scale ) carri far .
besid , feti-dp , one cycl mpi-distribut amg solver boomeramg [ 18 ] use inexact coars solver [ 19 , 20 ] 2d elast problem .
regard ( p4 ) , multilevel bddc algorithm propos [ 15 ] , coars problem next bddc level approxim bddc 3 approxim .
way , cpu cost coars problem reduc , condit number bound increas number level [ 15 ] .
high- perform implement multilevel bddc method found [ 10 ] .
effici exploit ( p5 ) , i.e. , orthogon coars fine space , trivial .
howev , properti make possibl parallel comput coars fine correct , i.e. , overlap time .
[ 12 ] , classifi duti exact ( i.e. , use spars direct solver ) bddc-pcg algorithm fine coars duti .
duti re- schedul achiev maximum degre overlap preserv data depend .
actual implement idea requir signific code refactor , sinc involv switch data parallel task paral- lelism paradigm , divid processor fine grid duti coars grid duti .
clear , approach reduc synchron among processor , overlap communications/comput , follow exascal solver paradigm [ 1 ] .
exploit [ 12 ] , perform scalabl analys 3d poisson linear elast problem pair state-of-the-art multicore-bas distributed-memori machin ( helio curi ) .
excel weak scalabl attain 27k core rea- sonabl high local problem size , e.g. , ( h h ) = 30 mean 27k elements/cor 3d poisson problem ; local coars problem solv use multi-thread spars direct solver pardiso [ 21 ] .
hardwar front , current trend hpc increas core count per node reduc memori avail per core .
one hand , reduc synchron , overlap bddc implement [ 12 ] , crucial extrem core count .
, overlap implementa- tion allevi memori requir , sinc fine ( resp. , coars ) processor perform/stor coars ( resp. , fine ) solver duties/matric .
direct , linear complex inexact solver , much less memori intens spars di- rect method , certain favor .
also favor larg core count , sinc potenti loss scalabl due coars solver much less dramat .
current state-of-the-art dd implement supercomput trend reach exascal motiv combin overlapped/inexact bddc implement propos work .
articl , extend overlap implement [ 12 ] exact solver inexact bddc method propos [ 13 ] ( slight modifica- tion ) .
first , analyz effect perturb isol everi problem bddc precondition .
next , propos differ inexact method , combin differ number amg cycl intern problem .
comprehens weak scalabl analysi result overlapped/inexact bddc implemen- tation perform 93,312 core 20 billion unknown juqueen , julich supercomput center ( jsc ) .
test perform structur mesh partit constant physic coeffi- cient .
far know , largest scale scalabl analys simul perform far dd method .
4 propos implement inexact bddc method code fempar , massiv parallel finit element solver devot les simu- lation incompress turbul flow mhd unstructur mesh ( see [ 22 , 23 , 24 , 25 ] ) .
problem , typic approach consid pres- sure segreg techniqu ( see [ 26 , 27 ] ) , lead momentum equat usual integr explicit pressur poisson solver , bottle- neck simul .
effici scalabl pressur poisson solver must .
result , also appli propos set unstructur mesh partit pressur poisson problem backward-fac step benchmark domain .
note free flow solver lead poisson prob- lem constant coeffici , main differ respect flow high heterogen porous media .
last situat , aris , e.g. , subsurfac model , advanc implement base adapt bddc coars space [ 10 ] need ( see also [ 28 ] effici techniqu problem ) .
, use inexact solver problem would requir local amg solver suitabl high vari coeffici .
work structur follow .
section 3 devot non-overlap dd bddc precondition wherea section 4 devot intro- duction inexact variant .
section 5 , extend high scalabl paral- lel distributed-memori implement bddc algorithm [ 12 ] , overlap fine coars comput , inexact variant .
section 6 , report comprehens set numer experi structur mesh includ studi influenc approxim solv intern problem isol weak scalabl analysi .
numer exampl unstruc- ture mesh partit also provid .
final , section 7 , draw conclus defin futur line work .
3 .
balanc domain decomposit 3.1 .
problem set let us consid bound polyhedr domain   rd = 2 , 3 quasi-uniform fe partit ( mesh ) characterist size h. model problem , studi poisson problem  , arbitrari forc term boundari condit ( soon problem well-pos ) .
let v  h1 (  ) c0- continu fe space .
galerkin approxim poisson problem respect v lead linear system equat : ax = f. ( 1 ) , consid quasi-uniform partit global mesh nsbd local mesh , induc non-overlap domain decomposit  subdomain i , = 1 , .
.
.
, nsbd ( characterist size h ) .
interfac i defin i : = i \  whole interfac ( skeleton ) domain decomposit  : = nsbd i=1 i .
everi subdomain i , introduc local fe space function vi .
v : = v1  .
.
.
 vnsbd denot global fe space 5 function discontinu  ; clear , v  v. obvious , fe space isomorph real vector space .
let us defin restrict oper ri : v  vi , appli vector v provid restrict i , r : = r1  .
.
.rnsbd : v v. let us also defin oper ei : = r idi : vi  v , di : vi  vi weight oper .
weight oper repres partit uniti , sens rtdr = , : = d1  .
.
.dnsbd : v v. , let e : = r td .
subdomain fe matrix correspond vi denot k ( ) , size denot ni .
k : = diag ( k ( 1 ) , .
.
.
, k ( nsbd ) ) global sub-assembl fe matrix v. ( along paper , denot letter k ( partial ) sub- assembl matric fulli assembl one . )
analog , defin local sub-assembl right-hand side g ( ) global counterpart g. system matrix right-hand side f obtain assembl k = rtkr g f = rtg .
non-overlap partit induc reorder fe vector inte- rior interfac node , i.e. , u = [ ui , u ] t. also defin interior restrict oper riu : = ui .
lead follow block reorder structur global assembl , global sub-assembl local matric : = [ aii ai ai a ] , k = [ aii ki ki k ] , k ( ) = [ ( ) ii ( ) i ( ) i k ( )  ] , respect .
matric aii , ai , ai andk present block diagon structur ( amen parallel ) , e.g. , aii = diag ( ( 1 ) ii , ( 2 ) ii , .
.
.
, ( nsbd ) ii ) .
matric ki ki simpli extens zero ai ai , re- spectiv .
3.2 .
bddc precondition bddc precondition two-level domain decomposit method local fine-grid correct global coarse-grid correct ( coupl subdomain make precondition scalabl optim ) combin .
idea behind bddc precondition approxim origin fe problem anoth one relax continu condit , drastic reduc size modifi schur complement , combin initi final interior correct .
construct bddc precondition requir partit degre freedom ( dof )  object , corner , edg face .
next , associ ( ) object coars dof .
coars dof valu function corner , mean valu function edges/fac .
defin bddc fe space v subspac function v continu coars dof ; clear , v  v  v. three common variant bddc method refer bddc ( c ) , bddc ( ce ) bddc ( cef ) , enforc continu corner coars dof , corner edg coars dof , corner , edg face coars dof , respect .
denot k fe matrix relat v .
6 formal obtain partial assembl ( coars dof ) global sub-assembl matrix k , even though never implement way .
invert matrix depend definit coars dof .
let us defin : pi : = r ia 1 ii ri , pfc : = ek 1et , h : = ipia = [ 0 a1ii ai 0 i ] .
( fc denot fine/coars correct h so-cal discret harmon extens oper . )
bddc precondition consist multipl combin pi , pfc , pi .
use fact piapi = pi , obtain : = pi +hpfch t. practic implement bddc correct pfc requir elab- orat .
let us consid decomposit bddc space v fine space vf vector vanish coars dof k-orthogon complement vc , denot coars space .
result , bddc fe problem de- compos fine coars compon , i.e. , x = k1etr = xf + xc .
sinc fine coars space k-orthogon definit , comput parallel .
fine space function vf vanish coars dof ( dof involv continu among subdomain ) .
due k-orthogon , fine compon defin xf : = efk 1 f e f , kf galerkin project k onto vf , i.e. , function vanish coars dof , ef restrict e vf .
order comput fine correct practic , defin local matrix constraint ci , given local vector unknown , provid local coars dof valu .
refer [ 29 ] detail implement ci .
result , fine correct xf comput involv constrain neumann problem : [ k ( ) cti ci 0 ] [ x ( ) f  ] = [ etir 0 ] .
( 2 ) describ detail [ 29 ] , solut constrain neumann prob- lem perform appli permut separ coars corner dof ( denot c ) rest dof ( denot r ) , i.e. , x ( ) = [ x ( ) c , x ( ) r ]  vi .
, defin restrict rr , rr , ix ( ) = x ( ) r .
corner dof explicit elimin ( fact x ( ) c = 0 fine correct ) , lead system [ k ( ) rr c r , cr , 0 ] [ x ( ) r r , ] = [ rr , ie ir 0 ] .
( 3 ) system solv comput schur complement edge/fac lagrang multipli cr , ( k ( ) rr ) 1ctr , i ( ) r = cr , ( k ( ) rr ) 1rr , ie ir .
( 4 ) 7 result , fine correct involv comput invers global matrix krr : = diag ( k ( 1 ) rr , .
.
.
, k ( nsbd ) rr ) .
exist mechan modifi definit object order enforc krr invert ( see [ 30 , 6 ] ) .
coars space vc  v built vc = span { 1 , 2 , .
.
.
, ncts } , everi coars function associ coars dof .
denot  matrix column i .
coars basi  ( matrix column i ) solut multipl right-hand side global system .
sinc valu coars dof prescrib rest dof local , coars space also comput via ( parallel ) local constrain neumann problem , i.e. , [ k ( ) cti ci 0 ] [  ( )  ( ) ] = [ 0 ] .
( 5 ) system ( 5 ) solv way system ( 2 ) , get :  ( ) = [  ( ) c  ( ) r ] ,  ( ) c = [ 0 ] ,  ( ) r =  ( k ( ) rr ) 1ctr , i r  [ k ( ) rc 0 ] , ( 6 ) cr , ( k ( ) rr ) 1ctr , i ( ) r = cr , ( k ( ) rr ) 1 [ k ( ) rc ] .
( 7 ) let us note function i associ object support set subdomain share object .
thus , everi subdomain comput non-zero restrict , i.e. , coars space basi function relat local coars dof .
comput coars matrix kc kc =  tk = nsbd i=1 rtc , i ( ) tk ( )  ( ) rc , .
rc , coars matrix assembl oper , i.e. , local-to-glob cor- respond coars dof .
subdomain contribut  ( ) k ( )  ( ) readili comput ( parallel ) assembl , e.g. , one processor .
coars residu rc =  tetr comput analog ( see [ 29 ] ) .
kc rc assembl , coars correct obtain xc = k 1 c rc .
bddc precondition final state : = pi +h ( ek 1 c  tet + efk 1 f e f ) h t. remark 3.1 .
consid exact dirichlet solver , initi pre- correct , easili check ri = 0 krylov iter .
case , pi h comput elimin without modifi method , i.e. , mr = h ( ek1c  tet + efk 1 f e f ) r , lead one interior ( dirichlet ) correct per iter , instead two .
8 refer [ 31 ] proof follow theorem , condit number bddc-precondit system matrix .
theorem 3.1 .
maximum minimum eigenvalu bddc precon- dition system matrix : min ( )  1 , max ( )   ,  : = ( 1 + log2 ( h h ) ) , bddc ( c ) bddc ( ce ) 2d , bddc ( ce ) bddc ( cef ) 3d ,  > 0 depend ( h , h ) .
bddc ( c ) precondition 3d , min ( )  1 , max ( )   h h  ,  > 0 also independ ( h , h ) .
remark 3.2 .
bddc precondition quasi-optim algorithm scalabl , sinc condit number precondit system matrix depend local system size , fix weak scale scenario .
fur- ther , condit number poly-logarithm function h h , except bddc ( c ) 3d .
last case , condit number affect addit h h factor , larg ( e.g. , 60 numer ex- periment section 6 ) .
justifi larg iter count method ( compar bddc ( ce ) bddc ( cef ) ) .
4 .
inexact bddc exact bddc precondition involv linear system solv .
action k1rr , i.e. , local constrain ( coars corner dof ) neumann problem , requir comput coars basi  fine correct , action a1ii , i.e. , local dirichlet problem , requir interior correct , action k1c , i.e. , coars problem , must solv comput coars correct .
problem tradit solv via spars direct method [ 6 ] .
howev , motiv introduc- tion , use inexact solver appeal large-scal simul supercomput , due increas memori restrict higher core count .
dohrmann propos analyz [ 13 ] inexact version bddc method , local/coars problem replac precondition .
let us assum dispos approxim krr krr : fx tkrrx  xtkrrx  fxtkrrx , x .
( 8 ) ( along section , assum  (  )  (  ) posit constant independ ( h , h ) vector space x infer matric inequ . )
, let us also introduc approxim krr aii krr aii , respect , follow global matric : k : = [ krr krc kcr kcc ] , k : = [ aii ki ki k ] .
( 9 ) 9 assum x tkx  xtkx  xtkx , ixtkx  xtkx  ixtkx , x .
( 10 ) ( omit reorder oper breviti . )
order matric ( 9 ) semi-posit definit , also assum xtkrrx  xtkrrx , xtaiix  xtaiix , x .
note [ 13 ] , sinc k singular , kernel k , k , k must ident satisfi ( 10 ) .
let w ker ( k )  rang ( w ) , wi = riw .
given arbitrari approxim aii , build aii solv exact rang ( wi ) ( see [ 13 ] ) , i.e. , a1ii : = wi ( w a 1 ii wi ) 1w ti+eia 1 ii e , ei : = iaiiwi ( w a 1 ii wi ) 1w ti .
due block-diagon natur k , correct local .
definit kernel-correct krr defin analog .
final , approx- imat coars matrix kc studi two differ option .
differ respect previous problem fact kc avail use inexact solver .
( involv exact comput  . )
one option assembl galerkin project k onto inexact coars basi  , i.e. , tk , consid approxim matrix : cx ( tk ) x  xtkcx  cxt ( tk ) x , x .
( 11 ) anoth approach , one use [ 13 ] , consid approxim coars matrix tk : cx ( tk ) x  xtkcx  cxt ( tk ) x , x .
( 12 ) remark 4.1 .
general , inexact matric krr , krr , aii ex- plicit built , action invers approxim algo- rithm , e.g. , use one/sever amg cycl .
, krr , aii dens matric , due kernel correct .
howev , use coars problem approxim ( 12 ) , krr seem explicit need .
fortun , use inexact version ( 5 ) ( equat ( 15 ) - ( 16 ) ) easili check k ( ) rr  ( ) = ct , make possibl comput tk tct .
case , k1rr stand precondit krylov solver toler , approach lead general nonsymmetr indefinit matrix .
sit- uation , better use ( 11 ) .
besid , use ( 11 ) section 6 due slight better perform .
final , inexact bddc precondition read : m = pd + h ( ek 1 c  tet + ef k 1 f e f ) h , ( 13 ) 10 h : = [ 0 a1ii ai 0 i ] , pi = r ia 1 ii ri , ( 14 ) inexact coars basi comput  ( ) = [  ( ) c  ( ) r ] ,  ( ) c = [ 0 ] ,  ( ) r =  ( k ( ) rr ) 1ctr , i r  [ k ( ) rc 0 ] , ( 15 ) cr , ( k ( ) rr ) 1ctr , i ( ) r = cr , ( k ( ) rr ) 1 [ k ( ) rc ] .
( 16 ) theorem 4.1 .
let us assum ( 8 ) - ( 10 ) hold .
kc satisfi ( 11 ) , : min ( ma )  i min ( 1 ,  1 f ,  1 c ) i , max ( ma ) max ( )  2i max ( 1 ,  1 f ,  1 c )  2 .
altern , kc satisfi ( 12 ) , get : min ( ma )  i min ( 1 ,  1 f ,  1 c ) i , max ( ma ) max ( )  2i max ( 1 ,  1 f ,  1 c )  2 .
proof .
proof result readili follow analysi [ 13 ] , differ fact fine correct  general comput use differ precondition .
easili handl use fact kf galerkin project k result like ( 11 ) matrix .
, coars precondition built tk , result readili obtain use fact c  xttkx  xtkcx  c  xttkx , obtain combin ( 10 ) - ( 11 ) .
remark 4.2 .
inexact precondition m replac local/coars problem optim approxim .
due block-diagon structur , ( possibl differ ) precondition k1rr k 1 rr local built k ( ) rr , obtain , e.g. , one amg cycl matrix .
analog , a1ii built local approxim ( ) ii .
remark 4.3 .
precondition comput  dirichlet problem , i.e. , krr kii , must includ kernel correct ( see [ 13 ] ) .
hand , need fine coars correct precondition krr kc .
11 remark 4.4 .
comput  , must comput ( k ( ) rr ) 1ctr , .
impli ap- pli everi subdomain local precondition mani vector local coars corner .
comput reus build schur complement matrix edge/fac constrain neumann problem ( 4 ) , soon krr = krr .
otherwis , must comput ( k ( ) rr ) 1ctr , .
make suitabl consid precondition ( kernel correct )  fine correct .
5 .
high scalabl distributed-memori implement section adapt high scalabl distributed-memori implemen- tation method propos [ 12 ] consid inexact solver .
global linear system ( 1 ) solv mean krylov subspac method , inexact bddc precondition m use global system matrix precondi- tioner ( see section 4 ) .
implement consid differ krylov subspac method ( e.g .
pcg , ipcg [ 32 ] , fgmres [ 33 ] ) use solut global problem bddc precondition solut local problem amg precondition [ 34 , 3 , 35 ] .
featur exploit test combin report , e.g. , pcg- amg method local problem ( coars toler ) , ipcg [ 32 ] global system .
howev , inexact variant base krylov method turn less effici fix number amg cycl case .
result report sake breviti .
distributed-memori implement bddc precondit krylov subspac solver , data structur ( i.e. , matric vector ) comput split distribut among mpi task concord under non-overlap partit domain .
refer reader [ 29 ] com- prehens coverag implement aspect .
rest section , identifi briefli describ comput communic requir implement bddc precondition inexact solver .
initi set-up bddc precondition turn split symbol numer phase algorithm 1 2 , respect , applic residu depict algorithm 3 .
communic stage label  gc   lc  depend whether global ( i.e. , mpi task involv ) local ( i.e. , mpi task communic within subset task ) natur , respect .
algorithm 1 , 2 , 3 requir global gather/scatt communic , local exchang among nearest neighbor .
symbol set-up bddc precondition present al- gorithm 1 , adjac graph ( denot g ) matric ( ) ii k ( ) rr requir dirichlet constrain neumann problem comput line 12 13 .
coars solver task line 1- 11 ident exact bddc method [ 12 ] .
numer set-up bddc precondition present algo- rithm 2 .
oper requir phase depend inexact solver use .
e.g. , solver set-up incomplet numer factoriza- tion ilu method , wherea involv construct hierarchi 12 algorithm 1 : m set-up ( symbol ) 1 : identifi count ( nict ) local coars dof 2 : gather nict gc 3 : gather global identifi geometr entiti correspond coars dof gc 4 : comput global order coars dof ( defin rc , transpos ) 5 : scatter global order coars dof gc 6 : fetch nict of/from neighbor lc 7 : fetch global identifi coars dof neighbor lc 8 : comput row count gkc correspond local coars dof 9 : gather row count gkc gc 10 : comput adjac list gkc correspond local coars dof 11 : gather adjac list gkc gc 12 : construct g k ( ) rr gk ( ) 13 : construct g ( ) ii gk ( ) amg .
task algorithm 2 subdivid fine task ( line 1-6 ) coars task ( line 7-9 ) .
fine mpi task includ extract ( ) ii k ( ) rr line 1 2 set-up approxim , e.g. , amg hierarchi ( possibl ) kernel-correct set-up , line 3 4 , respec- tive .
fine duti also involv comput coars space matrix  line 5 coars matrix coeffici line 6 .
mpi task ( task ) charg coars problem gather contribut perform matrix assembl correspond rc , order build kc line 7 8 , respect .
final , mpi task charg coars problem perform coars precondition , e.g. , amg hierarchi set-up inexact coars matrix ( see line 9 ) .
algorithm 2 : m set-up ( numer ) 1 : extract ( ) ii ( ) i k ( ) 2 : extract k ( ) rr k ( ) rc k ( ) 3 : set-up a ( ) ii 4 : set-up k ( ) rr ( possibl ) k ( ) rr 5 : comput  ( ) use ( 15 ) - ( 16 ) 6 : comput k ( ) c  (  ( ) ) tk ( )  ( ) ( altern , k ( ) c   (  ( ) ) tc ( ) i ) 7 : gather k ( ) c gc 8 : comput kc  nsbd i=1 r c , ik ( ) c rc , 9 : set-up kc 13 algorithm 3 describ algorithm appli bddc precondition residu .
first , comput interior precorrect , corre- spond residu updat perform line 1 2 , respect .
, updat residu extend bddc space via et ( see line 3 ) .
one hand , fine-grid task includ comput fine correct mean constrain local neumann problem ( see line 6 ) .
contribu- tion subdomain coarse-grid residu comput line 4 , mpi task charg coars problem gather contribut perform vector assembl associ rc , order build rc line 5 7 , respect .
next , coars problem solv inexact way , e.g. , one/sever amg cycl ( ) .
final , solut scatter task subdomain , subdomain get coarse-grid correct local coars dof .
final , correct inject v via project e , correct interior line 12 .
algorithm 3 : z : = mr 1 : comput  ( )  ( a ( ) ii ) 1r ( ) 2 : comput r ( )   r ( )  a ( ) i ( ) 3 : comput r ( )  etr lc 4 : comput r ( ) c  (  ( ) ) tr ( ) 5 : gather r ( ) c gc 6 : comput x ( ) f use ( 3 ) - ( 4 ) 7 : comput rc  nsbd i=1 r c , ir ( ) c 8 : solv zc = k 1 c rc 9 : scatter zc z ( ) c , = 1 , 2 , .
.
.
, nsbd 10 : comput ( ) c   ( ) z ( ) c 11 : comput z ( )  e ( ( ) f + ( ) c ) lc 12 : comput z ( ) =  ( a ( ) ii ) 1a ( ) iz ( )  +  ( ) typic implement bddc precondition [ 36 , 37 ] illus- trate figur 1 ( ) , one-to-on map subdomain , mpi task , comput core use .
fine coars duti serial .
vast major core fine duti , core fine coars duti .
due dramat reduct size origin coars matrix .
consequ , tremend amount parallel overhead caus idl , i.e. , wall-clock time requir solv coars problem tc time number core fine duti .
, core coars fine duti requir memori resourc .
problem current multicore-bas distributed-memori architectur ( rang 1-4 gbyte per core ) ; memori limit expect restrict futur exascal supercomput [ 1 ] .
altern , propos [ 12 ] high scalabl implementa- 14 tion exact bddc method solv aforement problem exploit algorithm properti make possibl comput coars fine duti parallel .
techniqu illustr figur 1 ( b ) .
global set mpi task ( i.e. , global mpi communic ) split fine coars mpi task , i.e. , fine duti ( fine mpi communic ) , coars duti ( coars mpi communic ) , compu- tation fine coars correct overlap time .
two possibl approach parallel solut coarse-grid problem propos [ 12 ] : use openmp coarse-grid solver within dedic node , shown figur 1 ( b ) , general mpi-bas solut distribut coarse-grid problem .
global communic fine-grid correct coarse-grid correct c 1 c 2 c 3 c 4 c p tc tf time idl main mpi communic c 1 c 2 c 3 c 4 c p f global communic fine-grid mpi communic c 1 c 2 c p c coarse-grid mpi communic tf tc pc openmp-bas coarse-grid solut ( ) ( b ) figur 1 : comparison ( ) typic parallel distributed-memori implement algo- rithm 1 , 2 3 ( b ) high scalabl one propos [ 12 ] implement multi- thread .
effici exploit idea requir import remap re-schedul communic comput well code refactor , comprehens describ [ 12 ] .
final result de- pict tabl 1 , similar one [ 12 ] includ modi- ficat need use inexact solver .
tabl 1 clear evid two area region ( three exact version [ 12 ] , due symbol factor ) , separ global communic stage , overlap among fine coars du- tie possibl : first one gather k ( ) c line 7 algorithm 2 last one gather r ( ) c line 5 algorithm 3 .
stress fact coars duti , produc sever idl , result , loss parallel effici , overlap fine duti .
tabl 1 whole consid m set-up stage header krylov phase .
krylov loop , overlap among fine-grid/coarse-grid duti present within ap- plicat precondition , depict region tabl 1 dash horizont line .
15 fine-grid mpi task coarse-grid mpi task identifi count ( nict ) local coars dof gather nict gather global identifi geometr entiti correspond coars dof comput global order coars dof ( defin rc , transpos ) scatter global order coars dof fetch nict of/from neighbor fetch global identifi coars dof neighbor comput row count gkc correspond local coars dof gather row count gkc comput adjac list gkc correspond local coars dof gather adjac list gkc construct g ( ) ii g k ( ) construct g k ( ) rr g k ( ) construct k ( ) rr k ( ) rc k ( ) set-up ( k ( ) rr ) ( possibl ) k ( ) rr comput  ( ) use ( 15 ) - ( 16 ) comput k ( ) c  (  ( ) ) tk ( )  ( ) ( k ( ) c   (  ( ) ) tc ( ) i ) gather k ( ) c construct ( ) ii ( ) i k ( ) comput kc  nsbd i=1 ( rc , ) tk ( ) c rc , set-up a ( ) ii set-up kc r0 : = f ax0 x0 : = x0 a1ii r0 r0 : = f ax0 comput  ( )  ( a ( ) ii ) 1r ( ) comput r ( )   r ( )  a ( ) i  ( ) comput r ( )  etr comput r ( ) c   ( ) tr ( ) gather r ( ) c comput x ( ) f use ( 3 ) - ( 4 ) comput rc  nsbd i=1 r c , r ( ) c solv kczc = rc scatter zc z ( ) c , = 1 , 2 , .
.
.
, nsbd comput ( ) c   ( ) z ( ) c comput z ( )  e ( ( ) f + ( ) c ) solv ( ) ii z ( ) = a ( ) i z ( )  z ( ) : = z ( ) +  ( ) tabl 1 : map pcg-bddc algorithm fine-grid coarse-grid mpi task achiev maximum degre overlap time .
16 6 .
numer experi main goal under numer experi section paper comprehens assess , state-of-the-art supercomput , weak scala- biliti overlap implement two-level bddc precondition equip machineri allow inexact solv intern problem ( i.e. , comput coarse-grid space basi , local dirichlet , constrain neumann problem , global coarse-grid problem ) still preserv pre- condition optim ( see [ 13 ] section 4 ) .
benefit techniqu view light futur parallel architectur : trend scalabl architectur ( e.g. , ibm bluegen ) limit memori per core .
studi present paper complement mathemat- ical analysi [ 13 ] answer far overlapped/inexact bddc code go number core scale problem still within reason rang effici .
section structur follow .
section 6.1 briefli introduc paral- lel code , software/hardwar stack supercomput test .
section 6.2 comprehens analyz perform scal- abil juqueen overlap implement inexact bddc precondit code appli discret 3d poisson problem uni- form mesh partit , constant physic coeffici .
section 6.2.1 particular describ target problem , map parallel code under supercomput .
prior actual raw weak scalabl studi , section 6.2.2 , evalu effect inexact solut intern problem isol precondit effici ( i.e. , number pcg it- erat ) .
view result evalu , section 6.2.3 , defin set inexact bddc variant differ particular solver use intern problem , lead differ trade-off among total comput time versus precondition effici .
, weak scalabl variant comprehens studi order meet object section .
final , section 6.3 evalu applic platform marenostrum iii al- gorithms/cod 2d 3d ( pressur ) poisson equat aris pressur segreg solut backward-fac step benchmark discret unstructur mesh split mean automat partition .
6.1 .
code parallel framework inexact/overlap implement bddc precondition studi paper implement fempar ( finit element multiphys massiv parallel ) numer softwar .
fempar in- hous develop , parallel hybrid openmp/mpi , object-ori ( oo ) frame- work , among featur , provid basic tool effici parallel distributed-memori implement substructur dd solver [ 29 ] .
parallel code fempar heavili use standard comput kernel pro- vide ( highly-effici vendor implement ) blas lapack .
besid , proper interfac sever third parti librari , local fine-grid global coarse-grid problem two-level dd method 17 solv either spars direct approxim solver .
work , explor hsl mi20 [ 38 ] softwar packag approxim solut prob- lem .
hsl mi20 serial implement classic ruge-stuben amg precondition ( describ , e.g. , [ 39 ] [ 40 ] ) use converg acceler krylov subspac solver .
amg precondition , less robust spars direct method general , particular well-suit system aris discret poisson problem .
inde , amg precondit lead optim converg rate ( i.e. , independ mesh characterist size ) linear arithmetic/memori complex number applic .
experi report section obtain pair prace tier-0 supercomput , name marenostrum iii ( mn-iii ) , locat barcelona ( spain ) , barcelona supercomput center ( bsc ) , juqueen , lo- cate julich ( germani ) julich supercomput center ( jsc ) .
mn-iii compos 3,056 ibm dx360 m4 comput node interconnect fdr10 infiniband high perform network .
comput node equip pair 8-core intel e5-2670 sandybridge-ep cpus ( i.e. , 16 cores/nod ) , run- ning 2.6ghz , 32 gbyte ddr3 memori .
comput node run standard linux suse distribut ( v11 , sp3 ) .
hand , juqueen belong last generat ibm blue gene famili supercomput , so-cal bg/q supercomput .
juqueen configur 28-rack sys- tem , featur total 28,672 comput node interconnect extrem low-lat five-dimension ( 5d ) torus interconnect network .
comput node equip 16-core , 64-way thread , ibm power pc a2 proces- sor , 16 gbyte sdram-ddr3 memori ( i.e. , 1gbyte/cor ) , run lightweight proprietari cnk linux kernel .
code compil either use intel fortran compil ( 14.0.2 ) ibm xlf fortran compil bg/q ( v14.1 ) mn-iii juqueen , respect , recommend optim flag .
openmpi ( 1.8.1 ) custom mpich2 use message-pass mn-iii juqueen , respect .
code link blas/lapack avail single-thread intel mkl ( 11.1.2 ) ibm essl librari bg/q ( v5.1 ) , respect , hsl mi20 ( v1.5.1 ) , hsl ma87 ( v2.1.1 ) .
6.2 .
inexact bddc 3d poisson structur mesh juqueen 6.2.1 .
problem parallel set-up consid benchmark solut poisson problem rect- angular prism  = [ 0 , 2 ]  [ 0 , 1 ]  [ 0 , 1 ] homogen dirichlet boundari condit constant forc term whole domain .
global conform uniform mesh ( partit )  hexahedra use trilinear fe dis- cretize ( i.e. , q1 fes ) continu equat .
3d mesh partit cubic grid p = 4m  2m  2m cubic subdomain .
subdomain handl mani mpi task subdomain , distribut m3 = 23 , 33 , .
.
.
, 183 comput node ( 128 , 432 , .
.
.
, 93 , 312 core ) , 4 2 2 subdomains/mpi task per comput node one mpi task per physic core .
18 addit special mpi task spawn order perform coarse-grid relat comput .
task map addit comput node , al- though access one core 1 gbyte memori .
due limit hardware/softwar stack juqueen , al- low mix differ execut mode differ comput node ( e.g. , 16 mpi tasks/1 thread per task fine-grid node 1 mpi task/16 thread per task coarse-grid node ) .
despit , first glanc , sever restrict , demonstr resourc alreadi suffici solv large-scal problems.1 quotient among subdomain mesh characterist size , i.e. , h h , pro- vide measur local problem size .
number fes ( i.e. , hexahedra ) local cubic subdomain inde h h  h h  h h , global mesh given 4mh h 2mh h 2mh h .
experi perform section select order evalu rate comput time evolv fix h h increas number core ( within aforement rang ) .
trade-off among factor determin scalabl code depend h h , perform studi pair valu fix problem size h h = 40 60 .
point , worth note effort done set hsl mi20 paramet reach fastest solut time .
particular , subset valu paramet consid [ 38 ] test ,  = 0.67 , rs1 coarsen , damp jacobi smooth winner combin intern problem .
besid , parameter- valu combin , mesh independ converg rate achiev .
6.2.2 .
impact approxim solv intern problem section evalu effect inexact solut in- ternal problem isol effici bddc precondition .
object section two-fold .
first , confirm experiment result mathemat analysi present [ 13 ] section 4 .
special attent paid whether precondition optim preserv ( i.e. , number pcg iter asymptot constant fix local problem size increas number subdomain ) matter intern problem perturb .
second , determin extent margin improve- ment ( term number pcg iter ) usag accur solver intern problem .
case , might possibl practic scenario reach trade-off among total comput time precondition effici lead faster solut problem .
figur 2 , 3 , 4 compar number pcg iter exact bddc precondition inexact variant , bddc ( c ) , bddc ( ce ) bddc ( cef ) , respect .
figur provid impact perturba- 1one way deal restrict would distribut coarse-grid problem among sever mpi coarse-grid task , possibl span multipl comput node .
explor , left futur work .
19 tion intern problem isol number pcg iter .
exampl , figur 2 ( ) , 3 ( ) , 4 ( ) focus impact inexact solut coarse-grid problem , rest intern problem solv exact .
appli ( b ) , ( c ) , ( ) , solu- tion dirichlet problem , comput coarse-grid basi , solut constrain neumann problem , respect .
experi , three differ inexact solver consid , name  amg ( 1 )  ,  amg ( 2 )  ,  amg ( 4 )  , stand singl , two four amg cycl , respect .
amg cycl , accur solut correspond in- ternal problem expect , result benefici impact number inexact bddc-pcg iter .
figur 2 , 3 , 4 , global prob- lem size scale linear number subdomain keep local problem size h/h = 40 , i.e. , 64k fes per core ; largest local problem size solv provid exact bddc precondition implement base spars direct solver , 1gbyte/cor memori constrain juqueen .
result obtain smaller local problem size ( h/h = 10 , 20 , 30 ) omit breviti ; similar conclus one h/h = 40 rais .
0 50 100 150 200 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( c ) ( h/h ) 3=403 ( 64k ) fes/cor amg ( 1 ) amg ( 2 ) amg ( 4 ) 0 50 100 150 200 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( c ) ( h/h ) 3=403 ( 64k ) fes/cor bddc inexact coars exact bddc 0 50 100 150 200 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( c ) ( h/h ) 3=403 ( 64k ) fes/cor amg ( 1 ) amg ( 2 ) amg ( 4 ) 0 50 100 150 200 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( c ) ( h/h ) 3=403 ( 64k ) fes/cor bddc inexact dirichlet exact bddc ( ) ( b ) 0 50 100 150 200 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( c ) ( h/h ) 3=403 ( 64k ) fes/cor amg ( 1 ) amg ( 2 ) amg ( 4 ) 0 50 100 150 200 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( c ) ( h/h ) 3=403 ( 64k ) fes/cor bddc inexact coars basi exact bddc 0 50 100 150 200 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( c ) ( h/h ) 3=403 ( 64k ) fes/cor amg ( 1 ) amg ( 2 ) amg ( 4 ) 0 50 100 150 200 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( c ) ( h/h ) 3=403 ( 64k ) fes/cor bddc inexact neumann exact bddc ( c ) ( ) figur 2 : sensit number outer bddc ( c ) -pcg iter presenc per- turbat solut ( ) coars , ( b ) dirichlet , ( c ) coarse-grid basi , ( ) neu- mann problem .
three differ intern solver , amg ( 1 ) , amg ( 2 ) amg ( 4 ) , test solut problem .
20 0 5 10 15 20 25 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( ce ) ( h/h ) 3=403 ( 64k ) fes/cor amg ( 1 ) amg ( 2 ) amg ( 4 ) 0 5 10 15 20 25 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( ce ) ( h/h ) 3=403 ( 64k ) fes/cor bddc inexact coars exact bddc 0 5 10 15 20 25 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( ce ) ( h/h ) 3=403 ( 64k ) fes/cor amg ( 1 ) amg ( 2 ) amg ( 4 ) 0 5 10 15 20 25 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( ce ) ( h/h ) 3=403 ( 64k ) fes/cor bddc inexact dirichlet exact bddc ( ) ( b ) 0 5 10 15 20 25 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( ce ) ( h/h ) 3=403 ( 64k ) fes/cor amg ( 1 ) amg ( 2 ) amg ( 4 ) 0 5 10 15 20 25 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( ce ) ( h/h ) 3=403 ( 64k ) fes/cor bddc inexact coars basi exact bddc 0 5 10 15 20 25 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( ce ) ( h/h ) 3=403 ( 64k ) fes/cor amg ( 1 ) amg ( 2 ) amg ( 4 ) 0 5 10 15 20 25 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( ce ) ( h/h ) 3=403 ( 64k ) fes/cor bddc inexact neumann exact bddc ( c ) ( ) figur 3 : sensit number outer bddc ( ce ) -pcg iter presenc per- turbat solut ( ) coars , ( b ) dirichlet , ( c ) coarse-grid basi , ( ) neu- mann problem .
three differ intern solver , amg ( 1 ) , amg ( 2 ) amg ( 4 ) , test solut problem .
figur 2 , 3 , 4 overal confirm mathemat analysi [ 13 ] section 4 .
particular , provid inexact bddc precondition equip spectral equival approxim neumann coars problem , spectral equival kernel preserv approxim dirichlet problem constrain neumann problem comput coars basi function , precondition optim preserv .
observ figur 2 , 3 , 4 number pcg iter asymptot constant matter intern problem perturb , extent perturb .
true , also worth note impact inexact solut intern problem number pcg iter high depend constraint consid coars space , intern problem perturb .
see , y-axi four plot figur 2 , 3 , 4 scale accord one correspond intern problem whose perturb largest impact number pcg iter .
focus figur 2 ( ) ( c ) , observ inexact solution/comput coarse-grid problem/coarse-grid basi mild impact number pcg iter .
inde , number pcg 21 0 5 10 15 20 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( cef ) ( h/h ) 3=403 ( 64k ) fes/cor amg ( 1 ) amg ( 2 ) amg ( 4 ) 0 5 10 15 20 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( cef ) ( h/h ) 3=403 ( 64k ) fes/cor bddc inexact coars exact bddc 0 5 10 15 20 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( cef ) ( h/h ) 3=403 ( 64k ) fes/cor amg ( 1 ) amg ( 2 ) amg ( 4 ) 0 5 10 15 20 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( cef ) ( h/h ) 3=403 ( 64k ) fes/cor bddc inexact dirichlet exact bddc ( ) ( b ) 0 5 10 15 20 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( cef ) ( h/h ) 3=403 ( 64k ) fes/cor amg ( 1 ) amg ( 2 ) amg ( 4 ) 0 5 10 15 20 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( cef ) ( h/h ) 3=403 ( 64k ) fes/cor bddc inexact coars basi exact bddc 0 5 10 15 20 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( cef ) ( h/h ) 3=403 ( 64k ) fes/cor amg ( 1 ) amg ( 2 ) amg ( 4 ) 0 5 10 15 20 128 1k 2k 3.5k 5.5k 8k n u b e r f p c g e ra tio n # core weak scale bddc ( cef ) ( h/h ) 3=403 ( 64k ) fes/cor bddc inexact neumann exact bddc ( c ) ( ) figur 4 : sensit number outer bddc ( cef ) -pcg iter presenc perturb solut ( ) coars , ( b ) dirichlet , ( c ) coarse-grid basi , ( ) neumann problem .
three differ intern solver , amg ( 1 ) , amg ( 2 ) amg ( 4 ) , test solut problem .
iter inexact bddc ( c ) precondition singl amg cycl close exact bddc ( c ) .
increas number amg cycl lead , expect , reduct number pcg iter , almost neglig case .
consid nice properti bddc precondit approach provid coarse-grid problem main scalabl bottleneck , overal solut approach immedi benefit save memory/tim achiev part algorithm .
howev , figur 2 ( b ) ( ) , reveal high impact inexact solut dirichlet neumann problem , respect , higher impact latter case .
exampl , amg ( 1 ) , rough 50 % 100 % increas number pcg iter respect exact bddc ( c ) precondition observ , respect .
addit amg cycl approxim dirichlet problem , precondition effici exact bddc ( c ) precondition rapid recov .
howev , case neumann problem , still 50 % increas observ amg ( 4 ) .
pictur quit differ case bddc ( ce ) precondition .
inexact solut coarse-grid problem mild impact number pcg iter ( see figur 3 ( ) ) , inexact comput 22 coarse-grid basi highest impact ( rough 80 % increas number pcg iter amg ( 1 ) ) among intern problem .
impact inexact solut dirichlet neumann problem milder inexact comput coarse-grid basi , similar , 50 % increas amg ( 1 ) ( compar figur 3 ( b ) ( c ) ) .
figur 4 ( b ) ( c ) reveal close respons bddc ( cef ) precondi- tioner bddc ( ce ) precondition presenc perturb dirichlet problem comput coarse-grid basi , respect .
howev , figur 4 ( ) reveal higher sensit bddc ( cef ) precondi- tioner perturb solut coarse-grid problem.1 inde , amg ( 1 ) , 60 % increas number pcg iter observ respect exact bddc ( cef ) precondition .
hand , fig- ure 4 ( ) reveal mild impact inexact solut neumann problem , amg ( 1 ) alreadi almost recov precondition effici exact bddc ( cef ) precondition .
6.2.3 .
scalabl overlap implement inexact solver previous section shown margin improve- ment ( least term number pcg iter ) usag accur solver amg ( 1 ) intern problem .
light observa- tion , tabl 2 present set four select inexact variant bddc precon- dition .
column label    ,  dirichlet  ,  neumann  ,  coars  refer comput coarse-grid basi vector , dirichlet , neumann , coarse-grid intern problem , respect .
 amg ( 1 )  ,  amg ( 2 )  stand singl , pair amg cycl , respect .
 dirichlet neumann coars var .
1 amg ( 1 ) amg ( 1 ) amg ( 1 ) amg ( 1 ) var .
2 amg ( 1 ) amg ( 2 ) amg ( 1 ) amg ( 1 ) var .
3 amg ( 2 ) amg ( 1 ) amg ( 2 ) amg ( 1 ) var .
4 amg ( 2 ) amg ( 2 ) amg ( 2 ) amg ( 1 ) tabl 2 : set four select inexact variant two-level bddc method .
stress inner solver combin shown tabl 2 one possibl , one select much wider set comprehens experiment .
first , observ pay accur solver coarse-grid problem ( e.g. , amg ( 2 ) even intern pcg-amg iter ) , reduct number outer pcg iter compens decreas scalabl larg core count caus cost solut coarse-grid problem .
second , 1we remind bddc ( cef ) coars matrix denser one bddc ( ce ) .
amg approxim seem less effect due fact .
23 also consid variant krr 6= krr , e.g. , amg ( 2 ) neumann prob- lem , amg ( 1 ) comput coarse-grid vector vice versa .
state remark 4.4 , scenario one must comput ( k ( ) rr ) 1ctr , preserv symmetri , instead re-us ( k ( ) rr ) 1ctr , constrain neu- mann problem requir comput coarse-grid basi vector .
involv solut extra linear system multipl right-hand side , mani local coars constraint , precondition set-up .
ex- periment observ extra comput signific outweigh gain deriv usag variant .
pair detail under inexact variant tabl 2 worth note .
first , coarse-grid problem built use galerkin project k onto inexact coars basi  ( see ( 11 ) ) instead approach use [ 13 ] , build coarse-grid problem tk ( see ( 12 ) ) .
consist observ former approach lead number pcg iter latter , 25 % reduct case ( particular , inexact bddc ( cef ) precondition largest local problem size h/h = 60 ) .
second , although var 3. 4 put effort var .
1 2 , respect , ( accur ) comput coarse-grid basi vector neumann problem , note var .
3 4 potenti overlap fine-grid coarse-grid comput , particular precon- dition applic bottom-most overlap area tabl 1 .
next studi extent properti var .
3 4 lead increas scalabl reduc comput time compar var .
1 2 .
figur 5 ( ) , ( b ) , ( c ) provid compar view weak scalabil- iti total comput time ( second ) inexact variant bddc ( c ) , bddc ( ce ) bddc ( cef ) solver , respect .
local problem size went 403=64k ( left side ) 603=216k fes per core ( right side ) , number core 168 93,312 ( see section 6.2.1 ) .
variant , local problem size combin  high  degrad weak scalabl alreadi observ 43.9k core , run code beyond limit consumpt under parallel resourc .
hand , figur 6 ( ) , ( b ) , ( c ) report number pcg ( outer solver ) iter variant , local problem size combin figur 5 .
set initi solut vector guess x0 = 0 outer iter , stop whenev residu rk given iter k satisfi rk2  106r02 .
shape differ scalabl curv shown figur 5 depend particular balanc among fine-grid coarse-grid comput achiev , inexact variant , three overlap area shown tabl 1 , togeth precondition effici achiev variant , de- termin number extern outer solver iter .
exampl , inexact bddc ( ce ) , bddc ( cef ) variant , load per core 64k fes/- core , total comput time becom domin coarse-grid solver beyond 16k 8k core , respect , render overlap techniqu less success ( i.e. , given load per core limit potenti overlap- 24 0 50 100 150 200 250 1k 16k 27.6k 43.9k 65.5k 93.3k ta l w cl ck im e ( se cs . )
# core approxim bddc ( c ) ( h/h ) 3=403 ( 64k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 50 100 150 200 250 1k 16k 27.6k 43.9k 65.5k 93.3k ta l w cl ck im e ( se cs . )
# core approxim bddc ( c ) ( h/h ) 3=403 ( 64k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 200 400 600 800 1000 1200 1k 16k 27.6k 43.9k 65.5k 93.3k ta l w cl ck im e ( se cs . )
# core approxim bddc ( c ) ( h/h ) 3=603 ( 216k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 200 400 600 800 1000 1200 1k 16k 27.6k 43.9k 65.5k 93.3k ta l w cl ck im e ( se cs . )
# core approxim bddc ( c ) ( h/h ) 3=603 ( 216k ) fes/cor var .
1 var .
2 var .
3 var .
4 ( ) 0 10 20 30 40 50 60 1k 16k 27.6k 43.9k 65.5k 93.3k ta l w cl ck im e ( se cs . )
# core approxim bddc ( ce ) ( h/h ) 3=403 ( 64k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 10 20 30 40 50 60 1k 16k 27.6k 43.9k 65.5k 93.3k ta l w cl ck im e ( se cs . )
# core approxim bddc ( ce ) ( h/h ) 3=403 ( 64k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 20 40 60 80 100 120 140 160 1k 16k 27.6k 43.9k 65.5k 93.3k ta l w cl ck im e ( se cs . )
# core approxim bddc ( ce ) ( h/h ) 3=603 ( 216k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 20 40 60 80 100 120 140 160 1k 16k 27.6k 43.9k 65.5k 93.3k ta l w cl ck im e ( se cs . )
# core approxim bddc ( ce ) ( h/h ) 3=603 ( 216k ) fes/cor var .
1 var .
2 var .
3 var .
4 ( b ) 0 10 20 30 40 50 60 70 80 1k 16k 27.6k 43.9k 65.5k 93.3k ta l w cl ck im e ( se cs . )
# core approxim bddc ( cef ) ( h/h ) 3=403 ( 64k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 10 20 30 40 50 60 70 80 1k 16k 27.6k 43.9k 65.5k 93.3k ta l w cl ck im e ( se cs . )
# core approxim bddc ( cef ) ( h/h ) 3=403 ( 64k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 20 40 60 80 100 120 140 160 1k 16k 27.6k 43.9k 65.5k 93.3k ta l w cl ck im e ( se cs . )
# core approxim bddc ( cef ) ( h/h ) 3=603 ( 216k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 20 40 60 80 100 120 140 160 1k 16k 27.6k 43.9k 65.5k 93.3k ta l w cl ck im e ( se cs . )
# core approxim bddc ( cef ) ( h/h ) 3=603 ( 216k ) fes/cor var .
1 var .
2 var .
3 var .
4 ( c ) figur 5 : weak scalabl total comput time inexact variant ( ) bddc ( c ) , ( b ) bddc ( ce ) , ( c ) bddc ( cef ) solver 3d poisson problem juqueen .
left : h h = 40 .
right : h h = 60 .
solut coarse-grid linear system map addit blade .
25 0 50 100 150 200 250 300 1k 16k 27.6k 43.9k 65.5k 93.3k n u b e r f p c g e ra tio n # core approxim bddc ( c ) ( h/h ) 3=403 ( 64k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 50 100 150 200 250 300 1k 16k 27.6k 43.9k 65.5k 93.3k n u b e r f p c g e ra tio n # core approxim bddc ( c ) ( h/h ) 3=403 ( 64k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 50 100 150 200 250 300 350 400 450 1k 16k 27.6k 43.9k 65.5k 93.3k n u b e r f p c g e ra tio n # core approxim bddc ( c ) ( h/h ) 3=603 ( 216k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 50 100 150 200 250 300 350 400 450 1k 16k 27.6k 43.9k 65.5k 93.3k n u b e r f p c g e ra tio n # core approxim bddc ( c ) ( h/h ) 3=603 ( 216k ) fes/cor var .
1 var .
2 var .
3 var .
4 ( ) 0 5 10 15 20 25 30 35 40 1k 16k 27.6k 43.9k 65.5k 93.3k n u b e r f p c g e ra tio n # core approxim bddc ( ce ) ( h/h ) 3=403 ( 64k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 5 10 15 20 25 30 35 40 1k 16k 27.6k 43.9k 65.5k 93.3k n u b e r f p c g e ra tio n # core approxim bddc ( ce ) ( h/h ) 3=403 ( 64k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 5 10 15 20 25 30 35 40 45 50 1k 16k 27.6k 43.9k 65.5k 93.3k n u b e r f p c g e ra tio n # core approxim bddc ( ce ) ( h/h ) 3=603 ( 216k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 5 10 15 20 25 30 35 40 45 50 1k 16k 27.6k 43.9k 65.5k 93.3k n u b e r f p c g e ra tio n # core approxim bddc ( ce ) ( h/h ) 3=603 ( 216k ) fes/cor var .
1 var .
2 var .
3 var .
4 ( b ) 0 5 10 15 20 25 1k 16k 27.6k 43.9k 65.5k 93.3k n u b e r f p c g e ra tio n # core approxim bddc ( cef ) ( h/h ) 3=403 ( 64k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 5 10 15 20 25 1k 16k 27.6k 43.9k 65.5k 93.3k n u b e r f p c g e ra tio n # core approxim bddc ( cef ) ( h/h ) 3=403 ( 64k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 5 10 15 20 25 30 1k 16k 27.6k 43.9k 65.5k 93.3k n u b e r f p c g e ra tio n # core approxim bddc ( cef ) ( h/h ) 3=603 ( 216k ) fes/cor var .
1 var .
2 var .
3 var .
4 0 5 10 15 20 25 30 1k 16k 27.6k 43.9k 65.5k 93.3k n u b e r f p c g e ra tio n # core approxim bddc ( cef ) ( h/h ) 3=603 ( 216k ) fes/cor var .
1 var .
2 var .
3 var .
4 ( c ) figur 6 : weak scalabl number pcg iter inexact variant ( ) bddc ( c ) , ( b ) bddc ( ce ) , ( c ) bddc ( cef ) solver 3d poisson problem juqueen .
left : h h = 40 .
right : h h = 60 .
26 ping ) .
observ left-hand side figur 5 ( b ) , ( c ) total comput time variant increas number core .
expect , degrad weak scalabl linear ( higher slope case inexact bddc ( cef ) due larger , denser stencil , coarse-grid problem ) number subdomain , given linear arithmet complex- iti amg precondit .
howev , local problem size increas , overlap fine-grid/coarse- grid duti becom progress success tackl bottleneck as- sociat coarse-grid problem .
exampl , inexact bddc ( c ) , var .
3 , load per core 64k fes per core , variant case largest load per core 216k fes/cor , weak scalabl sole determin fast outer precondition solver achiev asymptot constant converg rate fix problem size increas number core , mean overlap techniqu success complet overlap coarse-grid relat comput 128-93.3k core rang ; see right- hand side figur 5 ( ) , 6 ( ) .
shown right-hand side figur 5 ( b ) , hold inexact bddc ( ce ) , 128-43.9k core rang ; similar observ made inexact bddc ( cef ) tighter core rang figur 5 ( c ) , due larger , denser stencil , coarse-grid problem latter algorithm .
beyond 43.9k core , comput time coarse-grid problem relat comput overlap area # 1 # 2 ( see tabl 1 ) start exceed fine-grid relat comput inexact bddc ( ce ) variant , justifi ( ) mild degrad rough 20 % 50 % observ var .
3 1 , respect , 43.9k-93.3k core rang , render third level hierarchi necessari .
turn attent figur 6 ( ) , ( b ) , ( c ) , observ var .
4 consist one lead smaller number iter , follow var .
3 , 2 1 .
certain make sens given var .
4 one solv accur intern problem .
howev , term comput time , provid total comput time domin fine-grid relat comput , relat rank variant subject studi chang , var .
1 3 faster , var .
4 slowest ; see figur 5 ( ) , ( b ) , ( c ) .
interest observ made , e.g. , left hand side figur 5 ( ) figur 5 ( b ) , var .
3 becom faster var .
1  suffici larg  core count , even extra comput time incur amg ( 2 ) comput coarse-grid basi solut neumann problem .
mention , var .
3 put comput effort solut neumann problem .
increas potenti implement fulli overlap solut coarse-problem precondition applic pcg phase , result increas scalabl .
, import note overal effect accur comput coars system matrix scalabl .
coars basi comput amg ( 2 ) ( var .
3 4 ) instead amg ( 1 ) ( var .
1 2 ) , scalabl loss much less sever .
expect , degrad linear , 27 due linear complex amg .
howev , slope notic wors var .
1 2 var .
3 4 .
conclus , larg core count , reduc number pcg iter , increas scalabl , lower degrad make var .
3 win choic larg core count .
conclud studi , report tabl 3 , exact inexact vari- ant bddc precondition , increas valu local problem size h h , memori consumpt figur fine-grid precondit level ; tabl 4 report coarse-grid precondit level .
1 exact vari- ant suppli hsl ma87 [ 41 ] , highly-effici parallel multi-thread dag-bas code implement supernod spars direct choleski solver .
note figur report tabl 3 4 correspond amount ( perman ) memori consum precondition com- pute , ( temporari ) memori use comput .
h h solver var .
10 20 30 40 60 bddc ( c ) inexact 20.8m 38.2m 81.2m 157.1m 516.5m exact 21.9m 64.2m 218.4m 613.6m o.m .
bddc ( ce ) inexact 22.6m 42.3m 86.7m 158.9m 522.2m exact 21.7m 64.0m 219.9m 618.8m o.m .
bddc ( cef ) inexact 22.6m 42.3m 86.7m 160.6m 527.5m exact 21.7m 64.3m 219.6m 625.2m o.m .
tabl 3 : memori consumpt highest memori consum fine-grid task exact inexact variant 2-level bddc precondition .
o.m .
: memori .
( # subdomains=16m3 ) solver 6 8 10 12 14 16 18 inexact bddc ( c ) 17.1m 23.1m 33.9m 51.5m 63.5m 94.2m 133.9m inexact bddc ( ce ) 30.3m 56.2m 100.3m 167.8m 263.5m 392.7m 582.7m inexact bddc ( cef ) 54.9m 118.9m 228.5m 396.6m 604.0m o.m .
o.m .
tabl 4 : memori consumpt coarse-grid task inexact variant 2-level bddc precondition .
o.m .
: memori .
expect , inexact variant bddc precondition less memori demand exact one .
clear justifi linear order memori complex amg solver inexact variant fulli exploit .
absolut term , consum moder amount memori , rough half gbyte largest local problem size .
50 % memori avail juqueen , mean larger problem size still solv machin ( i.e. , still reach memori limit propos solver machineri ) , enabl improv scalabl result .
( mild ) increas 1memori consumpt obtain juqueen call malloc stat right precondition set-up .
28 memori consumpt addit constraint easili explain fact extra number coarse-grid basi vector store memori .
hand , take look memori consumpt coarse- grid solver tabl 4 observ , expect , moder ( linear ) increas number subdomain , higher number constraint , higher slope .
absolut term , observ largest number subdomain test ( i.e. , 93.3k ) , inexact bddc ( ce ) precondition consum rough 58 % ( i.e. , 582.7mbyte ) memori avail , mean solver machineri propos still solv larger problem larger number subdomain .
6.3 .
inexact bddc complex domain unstructur mesh mn-iii section appli overlap implement inexact bddc precondition solut poisson problem unstructur mesh , requir numer simul ( turbul ) incompress- ibl flow use typic pressur segreg techniqu [ 26 , 27 ] .
particular , analyz applic inexact bddc method solut pressur poisson equat classic benchmark incompress flow backward face step .
unstructur fe mesh split mean automat mesh ( actual dual graph ) partition .
combin factor , extent increas degre irregular address ( e.g. , automat partition typic lead irregular decomposit domain subdomain ) , poss challeng techniqu use precon- dition local dirichlet/neumann problem , global coarse-grid one ( case , classic ruge-stuben amg ) , therefor inexact bddc precondit approach whole .
stress , howev , purpos section comprehens assess weak scalabl code structur test case section 6.2 , grasp expect algorithm machineri subject studi appli complex test case .
comprehens assess would requir , one hand , consid wider rang test case .
hand , would also requir explor wider rang number subdomain scale problem one consid .
nevertheless , abl compar per- formanc exact inexact variant provid exact bddc precondition fit avail memori number core scale problem consid ( contrast experi section 6.2 ) .
6.3.1 .
2d experi code subject studi appli linear fe discret ( i.e. , p1-element ) 2d poisson problem backward-fac step domain depict figur 7 .
boundari condit set homogen dirichlet whole boundari except left-most ( perpendicular x-axi ) edg boundari , unknown constrain equal constant function gd = 1 ( i.e. , non-homogen dirichlet boundari condit ) .
final , set f = 1 ( i.e. , constant forc term ) whole domain .
29 consid four local problem size l1  20.9k , l2  39.2k , l3  80k , l4  157.8k triangl per subdomain , respect .
everi local problem size , consid four mesh , correspond 64 , 256 , 1024 subdomain .
mesh partit shared-memori multipro- cessor 256gbyte main memori use multilevel graph partit algorithm avail meti 5.1.0 [ 42 ] .
( irregular ) partit ( result meti ) mesh depict figur 7 ( b ) 64 part shown figur 7 ( ) use color repres subdomain load per core l1 l2 l3 l4 # core # node # fes # node # fes # node # fes # node # fes 16 168k 334k 316k 628k 643k 1.28m 1.26m 2.52m 64 671k 1.34m 1.26m 2.51m 2.56m 5.12m 5.07 10.1m 256 2.68m 5.35m 5.03m 10.0m 10.3m 20.5m 20.2m 40.4m 1024 10.7m 21.4m 20.1m 40.2m 41m 82.0m 80.7m 161m tabl 5 : number node triangl ( # fes ) unstructur comput mesh use scale studi .
mesh partit 16 , 64 , 256 , 1024 subdo- main use meti 5.1.0 [ 42 ] , four differ comput load per subdomain l1  20.9k , l2  39.2k , l3  80k , l4  157.8k triangl per subdomain consid studi .
( ) ( b ) figur 7 : ( ) 2d backward face step domain partit 64 subdomain use meti .
( b ) zoom view unstructur mesh area delimit grey colour contour figur 7 ( ) .
tabl 6 compar number pcg iter ( exact ) 2-level bddc precondition four variant inexact precondi- tioner sketch tabl 2 .
number core size problem 30 scale describ tabl 5 .
effort done set hsl mi20 pa- ramet reach best memory/tim trade-off particular problem ,  = 0.25 , rs1 coarsen , damp jacobi smooth winner combin intern problem ( see [ 38 ] detail ) .
comparison tabl 6 reflect , one hand , exact 2-level bddc precondition reach faster ( number core ) asymptot- ical constant number iter compar four inexact variant .
hand , one may observ , expect , asymp- totic constant number iter reach smaller bddc inexact bddc .
case , stress differ among number iter exact inexact bddc precondition depend number core , provid method subject evalu final reach asymptot constant number iter .
besid , consid remark properti inexact variant moder loss precon- dition robust came benefit reduc order arithmet memori complex ( particular , ( n1.5 ) order arithmet complex spars direct solver versus ( n ) amg precondition set-up , ( nlogn ) versus ( n ) precondition applic ) .
turn attent relat merit inexact variant tabl 6 , first observ var 1. var 3. converg ( almost ) number iter .
observ reveal accur comput coarse-grid basi vector , solut neumann problem iter ( amg ( 2 ) var .
3 versus amg ( 1 ) var .
1 ) , littl impact precondition robust particular problem .
also confirm compar number iter var .
2 4 , also ( almost ) coincid .
howev , compar number iter var .
1. 3 , var .
2. 4 , observ signific reduct number iter latter two variant , reveal , problem subject studi , margin improv ( term number iter ) accur solut dirichlet problem ( amg ( 2 ) var .
2 3 versus amg ( 1 ) var .
1 4 ) .
higher load per core , number core , larger improv .
figur 8 report weak scalabl comput time over- lap implement ( exact ) 2-level bddc precondition ( see [ 12 ] ) inexact variant , l1 l2 ( figur 8 ( ) ) , l3 l4 fix load per core ( figur 8 ( b ) ) .
y-axi plot right part fig .
8 ( ) ( b ) scale match correspond one left part simplifi comparison among bddc ( c ) bddc ( ce ) -base variant .
point , import stress , precondition subject studi , load per core explor , time spent coarse-grid problem could fulli overlap full 16-1024 core rang .
observ justifi exact inexact variant equip corner edg constraint alway faster counterpart equip corner constraint ( com- pare left right part figur 7 , complement comparison number iter bddc ( c ) versus bddc ( ce ) tabl 7 ) .
overal , figur 7 , remark time scalabl observ 16-1024 core rang 31 solver var .
load per core l1 l2 l3 l4 # core # core # core # core 16 64 256 1k 16 64 256 1k 16 64 256 1k 16 64 256 1k bddc ( c ) exact * 10 14 16 17 10 14 16 17 11 15 18 18 12 16 18 19 inexact 1 20 34 40 41 23 41 49 50 28 48 60 60 31 58 75 76 2 13 21 23 24 15 24 26 26 17 25 28 29 17 28 31 30 3 21 33 38 40 25 41 48 49 30 50 61 61 35 62 75 77 4 12 18 21 24 13 21 22 23 16 22 25 26 16 24 26 27 bddc ( ce ) exact * 8 8 8 8 9 8 8 8 9 8 9 9 9 9 9 9 inexact 1 21 25 26 27 24 29 31 32 30 36 38 39 34 45 46 48 2 13 14 15 16 14 14 15 15 16 15 16 16 16 16 16 17 3 21 25 25 27 24 30 32 33 30 37 39 40 34 46 48 49 4 12 13 15 15 14 14 15 16 15 14 15 16 15 15 16 17 tabl 6 : weak scalabl number pcg iter exact four inexact variant ( see tabl 2 ) bddc ( c ) , bddc ( ce ) precondition 2d poisson problem backward face step domain ( see figur 7 ) .
despit high irregular problem hand .
0 0.1 0.2 0.3 0.4 0.5 16 64 256 1024t ta l w cl ck im e ( se cs . )
# subdomain var .
1 var .
2 var .
3 var .
4 exact 0.5 0.6 0.7 0.8 0.9 1 16 64 256 1024t ta l w cl ck im e ( se cs . )
weak scale bddc ( c ) l1 l2 0 0.1 0.2 0.3 0.4 0.5 16 64 256 1024t ta l w cl ck im e ( se cs . )
# subdomain var .
1 var .
2 var .
3 var .
4 exact 0.5 0.6 0.7 0.8 0.9 1 16 64 256 1024t ta l w cl ck im e ( se cs . )
weak scale bddc ( ce ) l1 l2 ( ) load per core l1 l2 .
0.0 0.5 1.0 1.5 2.0 2.5 3.0 16 64 256 1024t ta l w cl ck im e ( se cs . )
# subdomain var .
1 var .
2 var .
3 var .
4 exact 3.0 4.0 5.0 6.0 7.0 8.0 16 64 256 1024t ta l w cl ck im e ( se cs . )
weak scale bddc ( c ) l3 l4 0.0 0.5 1.0 1.5 2.0 2.5 3.0 16 64 256 1024t ta l w cl ck im e ( se cs . )
# subdomain var .
1 var .
2 var .
3 var .
4 exact 3.0 4.0 5.0 6.0 7.0 8.0 16 64 256 1024t ta l w cl ck im e ( se cs . )
weak scale bddc ( ce ) l3 l4 ( b ) load per core l3 l4 .
figur 8 : weak scalabl mn-iii total comput time exact four inexact variant ( see tabl 2 ) bddc ( c ) ( left ) bddc ( ce ) ( right ) precondition 2d poisson problem backward face step domain ( see figur 7 ) .
32 compar time four inexact variant figur 8 , recurr observ var .
2 fastest variant , ( close ) follow var .
4 , ( ) var .
1 , , final , ( ) var .
3 .
surpris first glanc provid : ( 1 ) var .
2 4 took signific less iter converg var .
1 3 ( see tabl 6 ) ; ( 2 ) var .
4 3 perform extra amg cycl comput coarse-grid basi vector solut neumann problem pcg iter ( compar var .
2 1 , respect ) .
howev , note despit var .
2 converg less iter var .
1 , var .
2 involv applic extra amg cycl solut ( pre post ) dirichlet correct pcg iter .
therefor , conclud ( remark ) trade-off reach reduct number iter incur extra pair amg cycl ( iter ) compens extra time requir applic ( iter ) .
compar comput time fastest inexact variant , i.e. , var .
4 , exact bddc precondition , observ , case , method achiev similar trade-off among number iter time spent solut intern problem .
reflect , rang local problem subject studi , gain deriv less cost set inner solver inexact variant outweigh extra number outer iter result lost robust .
( expect , howev , signific gain inexact solver far local problem size scale . )
case , inexact variant save signific memori compar exact counterpart , due reduc order memori complex amg solver spars direct solver .
exampl , l4 1k core , exact bddc ( ce ) precondition consum 411 mbyte highest memori demand fine-grid task , inexact variant , 309 mbyte .
6.3.2 .
3d experi section appli inexact bddc precondition solut three-dimension extens problem target section 6.3.1 .
comput domain problem shown figur 9 , togeth one unstructur comput mesh tetrahedra use scale studi , partit 64 subdomain .
nine mesh generat keep ratio total number fes number subdomain approxim equal 20k , 128 , 256 , 512 , 1024 , 2048 subdomain , respect .
tabl 7 show minimum , maximum , averag number node per subdomain .
observ maximum number node slight increas , reach asymptot regim .
also appli factor ( signific ) impact perfor- manc , averag number coars dof per subdomain .
hand , limit moder load per core consid section 6.3.1 , given constraint inher ( mesh partit ) code , limit memory/disk capac avail under shared-memori com- puter ( recal code use mesh partit reli meti , i.e. , distributed-memori parallel ) .
load per core consid 33 figur 9 : 3d backward face step domain , unstructur comput mesh tetrahedra partit 64 subdomain use meti .
largest one section 6.3.1 code abl partit mesh requir perform scalabl studi 4k core .
tabl 7 compar number pcg iter ( exact ) 2-level bddc precondition four inexact bddc variant subject studi .
set valu hsl mi20 paramet consid sec- tion 6.3.1 consid .
keep present shorter , omit result correspond bddc ( c ) -base precondition .
similar observ alreadi made section 6.2 made case , bddc ( c ) - base precondition ( signific ) less robust bddc ( ce/cef ) -base one .
solver var .
# core 16 32 64 128 256 512 1k 2k 4k bddc ( ce ) exact * 13 16 16 14 16 18 20 21 23 inexact 1 19 22 24 23 27 35 45 49 52 2 16 20 21 19 23 28 35 37 39 3 20 22 24 24 28 35 46 51 53 4 16 18 19 18 21 27 34 37 39 bddc ( cef ) exact * 13 16 16 13 16 17 19 21 23 inexact 1 19 22 24 23 27 35 44 49 52 2 16 20 22 21 25 31 37 41 40 3 20 22 24 24 28 35 45 50 53 4 16 19 22 20 23 31 36 40 41 tabl 7 : weak scalabl number pcg iter exact four inexact variant ( see tabl 2 ) bddc ( ce ) bddc ( cef ) precondition 3d poisson problem backward face step domain ( see figur 9 ) .
overal , close observ made tabl 6 deriv tabl 7 .
exact 2-level bddc precondition reach faster ( number 34 core ) asymptot constant number iter compar four inexact variant , besid , constant reach smaller former .
stress differ becom asymptot constant number core ( confirm precondition optim inexact variant ) .
load per core explor , maximum increas factor 2.3 1.7 seen var .
1 3 , 2 4 , respect .
compar inexact variant , also see accur solut dirichlet problem signific posit impact precondition qualiti ( compar var .
2 1 , 4 3 ) , comput coarse-grid basi vector constrain neumann problem iter ( compar var .
3 1 , 4 2 ) .
final , result tabl 7 also confirm , exact inexact variant , gain deriv addit face constraint coarse-grid space , number iter bddc ( cef ) -base precondition ( ) bddc ( ce ) -base counterpart .
figur 10 report weak scalabl comput time over- lap implement ( exact ) 2-level bddc ( ce ) ( left ) bddc ( cef ) ( right ) precondition ( see [ 12 ] ) inexact variant , mod- erat load 20k fes/cor .
y-axi plot right part fig .
10 scale match correspond one left part simplifi com- parison among bddc ( ce ) bddc ( cef ) -base variant .
0 5 10 15 20 25 30 16 256 512 1k 2k 4k ta l w cl ck im e ( se cs . )
# subdomain weak scale bddc ( ce ) var .
1 var .
2 var .
3 var .
4 exact 0 5 10 15 20 25 30 16 256 512 1k 2k 4k ta l w cl ck im e ( se cs . )
# subdomain weak scale bddc ( cef ) var .
1 var .
2 var .
3 var .
4 exact figur 10 : weak scalabl mn-iii total comput time exact four inexact variant ( see tabl 2 ) bddc ( ce ) ( left ) , bddc ( cef ) ( right ) precondition 3d poisson problem backward face step domain ( see figur 9 ) moder load 20k fes/cor .
first ( remark ) observ made figur 10 time scalabl exact variant start degrad much higher pace beyond 512 256 subdomain bddc ( ce ) bddc ( cef ) , respec- tive , compar four inexact variant .
factor also caus exact variant slower inexact variant beyond point .
ta- ble 8 complement figur 10 provid size ( n ) number nonzero ( nnz ) coarse-grid matrix ( column label  ac  ) , min- imum , maximum , averag local degre freedom among subdomain 35 ( column label  # local dof  ) .
compar number global coars dof ( n ) , number local dof , see beyond aforement number subdomain , former alreadi ( larg ) exceed latter .
therefor surpris beyond point time spent coarse-grid comput becom larger fine-grid one ( render fine/- grid overlap longer fulli effect ) , domin number subdomain , scalabl curv final reflect order complex under coarse-grid solver ( i.e. , ( n2 ) versus ( n ) spars direct solver compar amg precondition ) .
slope curv higher bddc ( cef ) bddc ( ce ) , provid former requir addit coars degre freedom ( see tabl 8 ) .
solver # core ac # local dof # local coars dof n nnz min .
max .
avg .
min .
max .
avg .
bddc ( ce ) 16 39 487 3.04k 3.45k 3.32k 1.0 9.0 6.3 32 89 1437 3.18k 3.78k 3.52k 1.0 13.0 7.6 64 308 12734 3.27k 4.08k 3.63k 4.0 36.0 15.5 128 968 66268 3.22k 4.29k 3.71k 8.0 52.0 24.9 256 8213 180074 2.97k 4.74k 3.84k 7.0 66.0 28.7 512 5578 621522 3.07k 4.70k 3.85k 4.0 88.0 36.1 1024 12579 1612669 2.89k 4.86k 3.91k 6.0 102.0 40.8 2048 28272 4021436 2.91k 4.93k 4.00k 4.0 98.0 46.0 4096 61177 9299555 2.93k 4.86k 3.97k 6.0 96.0 49.8 bddc ( cef ) 16 66 1236 3.04k 3.45k 3.32k 2.0 13.0 9.7 32 151 3533 3.18k 3.78k 3.52k 2.0 18.0 11.4 64 511 27323 3.27k 4.08k 3.63k 6.0 46.0 21.9 128 1485 123815 3.22k 4.29k 3.71k 12.0 66.0 33.0 256 3368 326426 2.97k 4.74k 3.84k 11.0 81.0 37.6 512 8213 1059719 3.07k 4.70k 3.85k 7.0 108.0 46.4 1024 18229 2676749 2.89k 4.86k 3.91k 10.0 125.0 51.8 2048 40374 6538298 2.91k 4.93k 4.00k 7.0 118.0 57.8 4096 86592 14954200 2.93k 4.86k 3.97k 10.0 118.0 62.2 tabl 8 : number coarse-grid dof ( n ) number nonzero element ( nnz ) spars coarse-grid matrix , minimum , maximum , averag number local degre freedom ( among subdomain ) , minimum , maximum , averag number local coars degre freedom ( among subdomain ) , bddc ( ce ) bddc ( cef ) precondition .
7 .
conclus futur work work , analyz scalabl inexact bddc precondi- tioner .
inexact amg solver consid , due linear complex low memori requir .
, high scalabl implement fine/coars duti time use , extens work [ 12 ] inexact solver .
allow us fulli overlap coars problem task harm scalabl embarrass parallel fine task reduc check-point idl .
choic motiv futur exascal scenario , larg core count reduc memori per core .
36 numer test overlapped/inexact implement algorithm [ 13 ] ( slight modif coars solver approxima- tion ) complement mathemat analysi .
work show far implement propos herein scale respect number core size global problem use serial amg softwar packag like hsl mi20 [ 38 ] .
inexact solver , consid fix ( one two ) number amg cycl .
( use pcg-amg local/coars solver consid , turn less effici fix number amg cycl case . )
first , carri sensit analysi , analyz effect inexact solver iter counts/condit number .
next , perform comprehens weak scalabl analysi 93,312 core 20 billion unknown juqueen , julich supercomput center ( jsc ) .
far know , largest scale scalabl analys simul perform far dd method .
even use singl core 1 gbyte memori coarse-grid problem , scalabl inexact variant repres dramat improv compar largest scale scalabl analys exact bddc method far ( see [ 12 ] ) , justifi approach consid herein .
analysi , conclud moder core count , less 35k , best option use one amg cycl local coars prob- lem .
howev , run larger set processor , comput slight accur coars basi neumann problem ( use two amg cycl ) certain pay price ; result coars problem easier approxim amg , number iter reduc , fine work load fulli overlap coars task .
respect three variant bddc method , name bddc ( c ) , bddc ( ce ) , bddc ( cef ) , increas number iter bddc ( c ) precondition three dimens compens smaller coars problem scale consid herein , sinc coars problem cpu cost ( least part ) overlap fine du- tie .
general , bddc ( ce ) precondition best compromis number iter comput cost .
scalabl poisson solver unstructur mesh great import deal les simul turbul flow general geometri .
pressur segreg techniqu use , lead pressur poisson problem [ 26 , 27 ] .
analyz effect inexact bddc set typic backward-fac step benchmark unstructur mesh , two three dimens .
next step effort push forward balanc dd scalabl till extrem core count distribut coarse-grid problem among sever mpi coarse-grid task , possibl span multipl comput node .
ac- complish link inexact/overlap bddc implement mpi-distribut amg solver like boomeramg [ 18 ] , altern , extend overlap bddc techniqu describ multilevel set , use recurs use implement fempar .
base current ex- perienc ( overlap two-level implement scale sever ten thousand processor ) exist mathemat analys , natur 37 expect three-level overlap implement bddc perfect scale largest hpc system today .
explor , left excit futur line research .
acknowledg work fund european research council fp7 program idea start grant .
258443 - comfus : computa- tional method fusion technolog fp7 numexa project grant agreement 611636 .
a. f. martn also partial fund generali- tat de catalunya program  ajut per la incorporacio , amb caract tempor , de person investigador junior les universitat publiqu del sis- tema universitari catala pdj 2013  .
acknowledg prace award us access resourc juqueen base germani julich supercomput centr ( jsc ) , gauss centr supercomput ( gcs ) provid- ing comput time john von neumann institut comput ( nic ) gcs share also juqueen .
gcs allianc three nation supercomput centr hlrs ( universitat stuttgart ) , jsc , lrz ( bayerisch akademi der wissenschaften ) , fund german feder min- istri educ research ( bmbf ) german state ministri research baden-wurttemberg ( mwk ) , bayern ( stmwfk ) nordrhein- westfalen ( miwf ) .
grate acknowledg jsc  staff general , dirk broemmel particular , support porting/debug fempar depend to/on juqueen .
final , author thank acknowledg comput resourc , technic expertis assist provid red espanola de supercomputacion .
refer [ 1 ] report workshop extreme-scal solver : transit futur architectur , tech .
rep. , u.s. depart energi ( 2012 ) .
[ 2 ] p. t. lin , j. n. shadid , m. sala , r. s. tuminaro , g. l. hennigan , r. j. hoekstra , perform parallel algebra multilevel precondi- tioner stabil finit element semiconductor devic model , jour- nal comput physic 228 ( 17 ) ( 2009 ) 62506267 .
doi : http : //dx.doi.org/10.1016/j.jcp.2009.05.024 .
[ 3 ] k. stuben , review algebra multigrid , journal com- putat appli mathemat 128 ( 12 ) ( 2001 ) 281  309. doi:10.1016/s0377-0427 ( 00 ) 00516-1 .
url http : //www.sciencedirect.com/science/article/pii/ s0377042700005161 [ 4 ] a. toselli , o. widlund , domain decomposit method - algorithm theori , springer-verlag , 2005 .
38 http : //dx.doi.org/http : //dx.doi.org/10.1016/j.jcp.2009.05.024 http : //dx.doi.org/http : //dx.doi.org/10.1016/j.jcp.2009.05.024 http : //www.sciencedirect.com/science/article/pii/s0377042700005161 http : //dx.doi.org/10.1016/s0377-0427 ( 00 ) 00516-1 http : //www.sciencedirect.com/science/article/pii/s0377042700005161 http : //www.sciencedirect.com/science/article/pii/s0377042700005161 [ 5 ] j. mandel , balanc domain decomposit , communic numeri- cal method engin 9 ( 3 ) ( 1993 ) 233241 .
url http : //dx.doi.org/10.1002/cnm.1640090307 [ 6 ] c. r. dohrmann , precondition substructur base constrain energi minim , siam journal scientif comput 25 ( 1 ) ( 2003 ) 246258 .
doi:10.1137/s1064827502412887 .
url http : //link.aip.org/link/ ? sce/25/246/1 [ 7 ] c. farhat , k. pierson , m. lesoinn , second generat feti method applic parallel solut large-scal linear geometr non-linear structur analysi problem , comput meth- od appli mechan engin 184 ( 24 ) ( 2000 ) 333374 .
doi:10.1016/s0045-7825 ( 99 ) 00234-0 .
url http : //www.sciencedirect.com/science/article/pii/ s0045782599002340 [ 8 ] s. badia , a. f. martn , j. princip , enhanc balanc neumann- neumann precondit comput fluid solid mechan , in- ternat journal numer method engin 96 ( 4 ) ( 2013 ) 203230 .
[ 9 ] p. amestoy , i. duff , j.-i .
l  excel , multifront parallel dis- tribut symmetr unsymmetr solver , comput method appli mechan engin 184 ( 24 ) ( 2000 ) 501520 .
doi:10.1016/s0045-7825 ( 99 ) 00242-x .
url http : //www.sciencedirect.com/science/article/pii/ s004578259900242x [ 10 ] b. sousedk , j. sstek , j. mandel , adaptive-multilevel bddc parallel implement , comput 95 ( 12 ) ( 2013 ) 10871119 .
doi:10.1007/s00607-013-0293-5 .
url http : //link.springer.com/article/10.1007/ s00607-013-0293-5 [ 11 ] v. hapla , d. horak , m. merta , use direct solver tfeti massiv parallel implement , : appli parallel scientif comput , .
7782 lectur note comput scienc , springer berlin heidelberg , 2013 , pp .
192205 .
url http : //link.springer.com/chapter/10.1007/ 978-3-642-36803-5_14 [ 12 ] s. badia , a. f. martn , j. princip , high scalabl parallel implementa- tion balanc domain decomposit constraint , siam journal scientif comput ( 2014 ) c190c218doi:10.1137/130931989 .
url http : //epubs.siam.org/doi/abs/10.1137/130931989 [ 13 ] c. r. dohrmann , approxim bddc precondition , numer linear algebra applic 14 ( 2 ) ( 2007 ) 149168. doi:10.1002/nla.514 .
39 http : //dx.doi.org/10.1002/cnm.1640090307 http : //dx.doi.org/10.1002/cnm.1640090307 http : //link.aip.org/link/ ? sce/25/246/1 http : //link.aip.org/link/ ? sce/25/246/1 http : //dx.doi.org/10.1137/s1064827502412887 http : //link.aip.org/link/ ? sce/25/246/1 http : //www.sciencedirect.com/science/article/pii/s0045782599002340 http : //www.sciencedirect.com/science/article/pii/s0045782599002340 http : //www.sciencedirect.com/science/article/pii/s0045782599002340 http : //dx.doi.org/10.1016/s0045-7825 ( 99 ) 00234-0 http : //www.sciencedirect.com/science/article/pii/s0045782599002340 http : //www.sciencedirect.com/science/article/pii/s0045782599002340 http : //www.sciencedirect.com/science/article/pii/s004578259900242x http : //www.sciencedirect.com/science/article/pii/s004578259900242x http : //dx.doi.org/10.1016/s0045-7825 ( 99 ) 00242-x http : //www.sciencedirect.com/science/article/pii/s004578259900242x http : //www.sciencedirect.com/science/article/pii/s004578259900242x http : //link.springer.com/article/10.1007/s00607-013-0293-5 http : //link.springer.com/article/10.1007/s00607-013-0293-5 http : //dx.doi.org/10.1007/s00607-013-0293-5 http : //link.springer.com/article/10.1007/s00607-013-0293-5 http : //link.springer.com/article/10.1007/s00607-013-0293-5 http : //link.springer.com/chapter/10.1007/978-3-642-36803-5_14 http : //link.springer.com/chapter/10.1007/978-3-642-36803-5_14 http : //link.springer.com/chapter/10.1007/978-3-642-36803-5_14 http : //link.springer.com/chapter/10.1007/978-3-642-36803-5_14 http : //epubs.siam.org/doi/abs/10.1137/130931989 http : //epubs.siam.org/doi/abs/10.1137/130931989 http : //dx.doi.org/10.1137/130931989 http : //epubs.siam.org/doi/abs/10.1137/130931989 http : //onlinelibrary.wiley.com/doi/10.1002/nla.514/abstract http : //dx.doi.org/10.1002/nla.514 url http : //onlinelibrary.wiley.com/doi/10.1002/nla.514/ abstract [ 14 ] x. tu , three-level bddc three dimens , siam journal scientif comput 29 ( 4 ) ( 2007 ) 17591780 .
doi:10.1137/050629902 .
url http : //epubs.siam.org/doi/abs/10.1137/050629902 [ 15 ] j. mandel , b. sousedk , c. dohrmann , multispac multilevel bddc , comput 83 ( 2 ) ( 2008 ) 5585 .
doi:10.1007/s00607-008-0014-7 .
url http : //www.springerlink.com/content/112v4w1821r584u0/ abstract/ [ 16 ] j. mandel , c. r. dohrmann , r. tezaur , algebra theori primal dual substructur method constraint , appli numer mathemat- ic 54 ( 2 ) ( 2005 ) 167193 .
[ 17 ] j. li , .
b. widlund , use inexact subdomain solver bddc algorithm , comput method appli mechan engin 196 ( 8 ) ( 2007 ) 14151428 .
doi:10.1016/j.cma.2006.03.011 .
url http : //www.sciencedirect.com/science/article/pii/ s0045782506002611 [ 18 ] v. e. henson , u. m. yang , boomeramg : parallel algebra multigrid solver precondition , appli numer mathemat 41 ( 1 ) ( 2002 ) 155177 .
doi:10.1016/s0168-9274 ( 01 ) 00115-5 .
url http : //www.sciencedirect.com/science/article/pii/ s0168927401001155 [ 19 ] o. rheinbach , parallel iter substructur structur mechan , archiv comput method engin 16 ( 4 ) ( 2009 ) 425463 .
doi:10.1007/s11831-009-9035-4 .
url http : //link.springer.com/article/10.1007/ s11831-009-9035-4 [ 20 ] a. klawonn , o. rheinbach , high scalabl parallel domain decom- posit method applic biomechan , zamm - journal appli mathemat mechan 90 ( 1 ) ( 2010 ) 532. doi:10.1002/zamm.200900329 .
url http : //onlinelibrary.wiley.com/doi/10.1002/zamm .
200900329/abstract [ 21 ] o. schenk , k. gartner , fast factor pivot method spars symmetr indefinit system , electron transact numer anal- ysis 23 ( 2006 ) 158179 .
[ 22 ] o. colom , s. badia , r. codina , j. princip , assess variat multiscal model larg eddi simul turbul incompress- ibl flow , comput method appli mechan engin 285 ( 2015 ) 3263 .
40 http : //onlinelibrary.wiley.com/doi/10.1002/nla.514/abstract http : //onlinelibrary.wiley.com/doi/10.1002/nla.514/abstract http : //epubs.siam.org/doi/abs/10.1137/050629902 http : //dx.doi.org/10.1137/050629902 http : //epubs.siam.org/doi/abs/10.1137/050629902 http : //www.springerlink.com/content/112v4w1821r584u0/abstract/ http : //dx.doi.org/10.1007/s00607-008-0014-7 http : //www.springerlink.com/content/112v4w1821r584u0/abstract/ http : //www.springerlink.com/content/112v4w1821r584u0/abstract/ http : //www.sciencedirect.com/science/article/pii/s0045782506002611 http : //www.sciencedirect.com/science/article/pii/s0045782506002611 http : //dx.doi.org/10.1016/j.cma.2006.03.011 http : //www.sciencedirect.com/science/article/pii/s0045782506002611 http : //www.sciencedirect.com/science/article/pii/s0045782506002611 http : //www.sciencedirect.com/science/article/pii/s0168927401001155 http : //www.sciencedirect.com/science/article/pii/s0168927401001155 http : //dx.doi.org/10.1016/s0168-9274 ( 01 ) 00115-5 http : //www.sciencedirect.com/science/article/pii/s0168927401001155 http : //www.sciencedirect.com/science/article/pii/s0168927401001155 http : //link.springer.com/article/10.1007/s11831-009-9035-4 http : //dx.doi.org/10.1007/s11831-009-9035-4 http : //link.springer.com/article/10.1007/s11831-009-9035-4 http : //link.springer.com/article/10.1007/s11831-009-9035-4 http : //onlinelibrary.wiley.com/doi/10.1002/zamm.200900329/abstract http : //onlinelibrary.wiley.com/doi/10.1002/zamm.200900329/abstract http : //dx.doi.org/10.1002/zamm.200900329 http : //onlinelibrary.wiley.com/doi/10.1002/zamm.200900329/abstract http : //onlinelibrary.wiley.com/doi/10.1002/zamm.200900329/abstract [ 23 ] o. colom , s. badia , segreg runge-kutta method incompress- ibl navier-stok equat , press .
[ 24 ] s. badia , a. f. martn , r. plana , block recurs lu precondi- tioner thermal coupl incompress inductionless mhd problem , journal comput physic 274 ( 2014 ) 562591 .
doi:10.1016/j.jcp.2014.06.028 .
url http : //www.sciencedirect.com/science/article/pii/ s0021999114004355 [ 25 ] s. badia , r. plana , j. v. gutirrez-santacreu , uncondit stabl op- erat split algorithm incompress magnetohydrodynam system discret stabil finit element formul base project , intern journal numer method engin 93 ( 3 ) ( 2013 ) 302328 .
doi:10.1002/nme.4392 .
url http : //onlinelibrary.wiley.com/doi/10.1002/nme.4392/ abstract [ 26 ] h. c. elman , d. j. silvest , a. j. wathen , finit element fast iter- ativ solver : applic incompress fluid dynam , oxford univers press , 2005 .
[ 27 ] s. badia , r. codina , algebra pressur segreg method in- compress navier-stok equat , archiv comput method engin 15 ( 3 ) ( 2008 ) 343369 .
[ 28 ] p. jolivet , v. dolean , f. hecht , f. nataf , c. prud  homm , n. spillan , high perform domain decomposit method massiv parallel architectur freefem++ , j. numer .
math .
20 ( 3-4 ) ( 2012 ) 287302 .
[ 29 ] s. badia , a. f. martn , j. princip , implement scalabl anal- ysis balanc domain decomposit method , archiv compu- tation method engin 20 ( 3 ) ( 2013 ) 239262 .
doi:10.1007/ s11831-013-9086-4 .
[ 30 ] j. sstek , m. certkova , p. burda , j. novotni , face-bas select corner 3d substructur , mathemat comput simul 82 ( 10 ) ( 2012 ) 17991811 .
doi:10.1016/j.matcom.2011.06.007 .
url http : //www.sciencedirect.com/science/article/pii/ s0378475411001820 [ 31 ] j. mandel , c. r. dohrmann , converg balanc domain decompo- sition constraint energi minim , numer linear algebra applic 10 ( 7 ) ( 2003 ) 639659 .
doi:10.1002/nla.341 .
url http : //dx.doi.org/10.1002/nla.341 [ 32 ] g. golub , q. ye , inexact precondit conjug gradient method inner-out iter , siam journal scientif comput 21 ( 4 ) ( 1999 ) 13051320 .
doi:10.1137/s1064827597323415 .
url http : //epubs.siam.org/doi/abs/10.1137/s1064827597323415 41 http : //www.sciencedirect.com/science/article/pii/s0021999114004355 http : //www.sciencedirect.com/science/article/pii/s0021999114004355 http : //www.sciencedirect.com/science/article/pii/s0021999114004355 http : //dx.doi.org/10.1016/j.jcp.2014.06.028 http : //www.sciencedirect.com/science/article/pii/s0021999114004355 http : //www.sciencedirect.com/science/article/pii/s0021999114004355 http : //onlinelibrary.wiley.com/doi/10.1002/nme.4392/abstract http : //onlinelibrary.wiley.com/doi/10.1002/nme.4392/abstract http : //onlinelibrary.wiley.com/doi/10.1002/nme.4392/abstract http : //onlinelibrary.wiley.com/doi/10.1002/nme.4392/abstract http : //dx.doi.org/10.1002/nme.4392 http : //onlinelibrary.wiley.com/doi/10.1002/nme.4392/abstract http : //onlinelibrary.wiley.com/doi/10.1002/nme.4392/abstract http : //dx.doi.org/10.1007/s11831-013-9086-4 http : //dx.doi.org/10.1007/s11831-013-9086-4 http : //www.sciencedirect.com/science/article/pii/s0378475411001820 http : //www.sciencedirect.com/science/article/pii/s0378475411001820 http : //dx.doi.org/10.1016/j.matcom.2011.06.007 http : //www.sciencedirect.com/science/article/pii/s0378475411001820 http : //www.sciencedirect.com/science/article/pii/s0378475411001820 http : //dx.doi.org/10.1002/nla.341 http : //dx.doi.org/10.1002/nla.341 http : //dx.doi.org/10.1002/nla.341 http : //dx.doi.org/10.1002/nla.341 http : //epubs.siam.org/doi/abs/10.1137/s1064827597323415 http : //epubs.siam.org/doi/abs/10.1137/s1064827597323415 http : //dx.doi.org/10.1137/s1064827597323415 http : //epubs.siam.org/doi/abs/10.1137/s1064827597323415 [ 33 ] y. saad , flexibl inner-out precondit gmres algorithm , siam journal scientif comput 14 ( 12 ) ( 1993 ) 461469 .
[ 34 ] p. vanek , j. mandel , m. brezina , algebra multigrid smooth aggre- gation second fourth order ellipt problem , comput 56 ( 1996 ) 179196 .
url http : //dx.doi.org/10.1007/bf02238511 [ 35 ] m. sala , r. tuminaro , new petrov-galerkin smooth aggreg pre- condition nonsymmetr linear system , siam journal scientif comput 31 ( 1 ) ( 2008 ) 143166 .
doi:10.1137/060659545 .
[ 36 ] s. balay , j .
brown , k. buschelman , w. d. gropp , d. kaushik , m. g. knepley , l. c. mcinn , b. f. smith , h. zhang , petsc web page , http : //www.mcs.anl.gov/petsc ( 2012 ) .
[ 37 ] f. hecht , freefem++ user  manual .
3rd edit , version 3.22 , avail http : //www.freefem.org/ff++/ftp/freefem++doc.pdf ( 2013 ) .
url http : //www.freefem.org/ff++/ftp/freefem++doc.pdf [ 38 ] j. boyl , m. mihajlov , j. scott , hsl mi20 : effici amg precondi- tioner finit element problem 3d , intern journal numeri- cal method engin 82 ( 1 ) ( 2010 ) 6498 .
doi:10.1002/nme.2758 .
url http : //onlinelibrary.wiley.com/doi/10.1002/nme.2758/ abstract [ 39 ] j. w. ruge , k. stuben , algebra multigrid ( amg ) , : multigrid meth- od , s. f. mccormick edit , vol .
3 frontier appli mathemat , siam , philadelphia , pa , 1987 , pp .
73130 .
[ 40 ] u. trottenberg , c. c. w. oosterle , a. schuller , multigrid , academ press , 2001 .
[ 41 ] j. hogg , j. reid , j. scott , design multicor spars choleski factor- izat use dag , siam journal scientif comput 32 ( 6 ) ( 2010 ) 36273649 .
doi:10.1137/090757216 .
url http : //epubs.siam.org/doi/abs/10.1137/090757216 [ 42 ] g. karypi , softwar packag partit unstructur graph , partit mesh , comput fill-reduc order spars matric .
version 5.1.0 , tech .
rep. , univers minnesota , depart comput scienc engin , minneapoli , mn , avail http : //glaros.dtc.umn.edu/gkhome/fetch/sw/metis/manual.pdf ( 2013 ) .
url http : //glaros.dtc.umn.edu/gkhome/fetch/sw/metis/manu .
pdf 42 http : //dx.doi.org/10.1007/bf02238511 http : //dx.doi.org/10.1007/bf02238511 http : //dx.doi.org/10.1007/bf02238511 http : //dx.doi.org/10.1137/060659545 http : //www.mcs.anl.gov/petsc http : //www.mcs.anl.gov/petsc http : //www.freefem.org/ff++/ftp/freefem++doc.pdf http : //www.freefem.org/ff++/ftp/freefem++doc.pdf http : //www.freefem.org/ff++/ftp/freefem++doc.pdf http : //onlinelibrary.wiley.com/doi/10.1002/nme.2758/abstract http : //onlinelibrary.wiley.com/doi/10.1002/nme.2758/abstract http : //dx.doi.org/10.1002/nme.2758 http : //onlinelibrary.wiley.com/doi/10.1002/nme.2758/abstract http : //onlinelibrary.wiley.com/doi/10.1002/nme.2758/abstract http : //epubs.siam.org/doi/abs/10.1137/090757216 http : //epubs.siam.org/doi/abs/10.1137/090757216 http : //dx.doi.org/10.1137/090757216 http : //epubs.siam.org/doi/abs/10.1137/090757216 http : //glaros.dtc.umn.edu/gkhome/fetch/sw/metis/manual.pdf http : //glaros.dtc.umn.edu/gkhome/fetch/sw/metis/manual.pdf http : //glaros.dtc.umn.edu/gkhome/fetch/sw/metis/manual.pdf http : //glaros.dtc.umn.edu/gkhome/fetch/sw/metis/manual.pdf http : //glaros.dtc.umn.edu/gkhome/fetch/sw/metis/manual.pdf http : //glaros.dtc.umn.edu/gkhome/fetch/sw/metis/manual.pdf introduct motiv balanc domain decomposit problem set bddc precondition inexact bddc high scalabl distributed-memori implement numer experi code parallel framework inexact bddc 3d poisson structur mesh juqueen problem parallel set-up impact approxim solv intern problem scalabl overlap implement inexact solver inexact bddc complex domain unstructur mesh mn-iii 2d experi 3d experi conclus futur work
